// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace go2cs.Templates
{
    using go2cs.Metadata;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class InheritedTypeTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 1 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
 // This template creates an inherited type, e.g., type MyFloat float64 in a <PackageName>_<StructName>StructOf(<GoTypeName>).cs file 
            
            #line default
            #line hidden
            this.Write(@"//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on ");
            
            #line 11 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedTime));
            
            #line default
            #line hidden
            this.Write("\r\n// </auto-generated>\r\n//-------------------------------------------------------" +
                    "--\r\n");
            
            #line 14 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespaceHeader));
            
            #line default
            #line hidden
            this.Write("\r\nusing System;\r\nusing System.CodeDom.Compiler;\r\nusing System.Collections;\r\nusing" +
                    " System.Runtime.CompilerServices;\r\n");
            
            #line 19 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
if (!NamespacePrefix.Equals("go")) {
            
            #line default
            #line hidden
            this.Write("using go;\r\n");
            
            #line 21 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#nullable enable\r\n\r\npublic static partial class ");
            
            #line 25 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package\r\n{\r\n    [");
            
            #line 27 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write("]\r\n    ");
            
            #line 28 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Scope));
            
            #line default
            #line hidden
            this.Write(" partial struct ");
            
            #line 28 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            
            #line 28 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ImplementedInterface));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        // Value of the ");
            
            #line 30 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" struct\r\n        private readonly ");
            
            #line 31 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TypeName));
            
            #line default
            #line hidden
            this.Write(" m_value;\r\n        ");
            
            #line 32 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceImplementation));
            
            #line default
            #line hidden
            this.Write("\r\n        public ");
            
            #line 33 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 33 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TypeName));
            
            #line default
            #line hidden
            this.Write(" value) => m_value = value;\r\n\r\n        // Enable implicit conversions between ");
            
            #line 35 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TypeName));
            
            #line default
            #line hidden
            this.Write(" and ");
            
            #line 35 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" struct\r\n        public static implicit operator ");
            
            #line 36 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 36 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TypeName));
            
            #line default
            #line hidden
            this.Write(" value) => new ");
            
            #line 36 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write("(value);\r\n            \r\n        public static implicit operator ");
            
            #line 38 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TypeName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 38 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" value) => value.m_value;\r\n            \r\n        // Enable comparisons between ni" +
                    "l and ");
            
            #line 40 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" struct\r\n        public static bool operator ==(");
            
            #line 41 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" value, NilType nil) => value.Equals(default(");
            
            #line 41 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write("));\r\n\r\n        public static bool operator !=(");
            
            #line 43 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" value, NilType nil) => !(value == nil);\r\n\r\n        public static bool operator =" +
                    "=(NilType nil, ");
            
            #line 45 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" value) => value == nil;\r\n\r\n        public static bool operator !=(NilType nil, ");
            
            #line 47 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(" value) => value != nil;\r\n\r\n        public static implicit operator ");
            
            #line 49 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write("(NilType nil) => default(");
            
            #line 49 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(StructName));
            
            #line default
            #line hidden
            this.Write(");\r\n    }\r\n}\r\n");
            
            #line 52 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespaceFooter));
            
            #line default
            #line hidden
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 53 "H:\Projects\go2cs\src\go2cs.Templates\InheritedTypeTemplate.tt"

// Template Parameters
public string NamespacePrefix;
public string NamespaceHeader;
public string NamespaceFooter = "";
public string PackageName;
public string StructName;
public string Scope;
public TypeInfo TypeInfo;

public string TypeName => TypeInfo.TypeName;

public string ImplementedInterface
{
    get
    {
        switch (TypeInfo.TypeClass)
        {
            case TypeClass.Array:
                return " : IArray";
            case TypeClass.Slice:
                return $" : ISlice<{TypeInfo.Name}>";
            case TypeClass.Map:
                return " : IMap";
            case TypeClass.Channel:
                return " : IChannel";
            default:
                return "";
        }
    }
}

public string InterfaceImplementation
{
    get
    {
        switch (TypeInfo.TypeClass)
        {
            case TypeClass.Array:
                return new IArrayImplementation { TypeName = Common.RemoveSurrounding(TypeName, "array<", ">") }.TransformText();
            case TypeClass.Slice:
                return new ISliceImplementation { TypeName = Common.RemoveSurrounding(TypeName, "slice<", ">") }.TransformText();
            case TypeClass.Map:
                string[] mapType = Common.RemoveSurrounding(TypeName, "map<", ">").Split(',');
                return new IMapImplementation { KeyName = mapType[0].Trim(), TypeName = mapType[1].Trim() }.TransformText();
            case TypeClass.Channel:
                return "";
            default:
                return "";
        }
    }
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
