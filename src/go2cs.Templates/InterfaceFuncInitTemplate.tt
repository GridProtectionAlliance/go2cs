<# // This template creates the function initializations in a <PackageName>_<InterfaceName>Interface.cs file #>
<#@ template debug="false" hostspecific="false" language="C#" #>


               extensionMethod = targetTypeByPtr.GetExtensionMethod("<#=FunctionName#>");

                if (!(extensionMethod is null))
                    s_<#=FunctionName#>ByPtr = extensionMethod.CreateStaticDelegate(typeof(<#=FunctionName#>ByPtr)) as <#=FunctionName#>ByPtr;

                extensionMethod = targetType.GetExtensionMethod("<#=FunctionName#>");

                if (!(extensionMethod is null))
                    s_<#=FunctionName#>ByVal = extensionMethod.CreateStaticDelegate(typeof(<#=FunctionName#>ByVal)) as <#=FunctionName#>ByVal;

                if (s_<#=FunctionName#>ByPtr is null && s_<#=FunctionName#>ByVal is null)
                    throw new NotImplementedException($"{targetType.FullName} does not implement <#=InterfaceName#>.<#=FunctionName#> method", new Exception("<#=FunctionName#>"));<#+
// Template Parameters
public string FunctionName;
public string InterfaceName;
#>
