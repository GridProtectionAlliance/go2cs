// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace go2cs.Templates
{
    using System.Collections.Generic;
    using System.Linq;
    using go2cs.Metadata;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class InterfaceTypeTemplate : TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 1 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
 // This template creates a <PackageName>_<InterfaceName>Interface.cs file 
            
            #line default
            #line hidden
            this.Write(@"//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on ");
            
            #line 13 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedTime));
            
            #line default
            #line hidden
            this.Write(@"
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections.Concurrent;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
");
            
            #line 22 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(Environment.NewLine, UsingStatements)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 23 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
if (!NamespacePrefix.Equals("go")) {
            
            #line default
            #line hidden
            this.Write("using go;\r\n");
            
            #line 25 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n#pragma warning disable CS0660, CS0661\r\n\r\n");
            
            #line 29 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespaceHeader));
            
            #line default
            #line hidden
            this.Write("\r\n    public static partial class ");
            
            #line 30 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package\r\n    {\r\n        [");
            
            #line 32 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write("]\r\n        ");
            
            #line 33 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Scope));
            
            #line default
            #line hidden
            this.Write(" partial interface ");
            
            #line 33 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining), Debug" +
                    "gerNonUserCode]\r\n            public static ");
            
            #line 36 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" As<T>(in T target) => (");
            
            #line 36 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>)target!;\r\n\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining), De" +
                    "buggerNonUserCode]\r\n            public static ");
            
            #line 39 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" As<T>(ptr<T> target_ptr) => (");
            
            #line 39 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>)target_ptr;\r\n\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining)," +
                    " DebuggerNonUserCode]\r\n            public static ");
            
            #line 42 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("? As(object target) =>\r\n                typeof(");
            
            #line 43 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<>).CreateInterfaceHandler<");
            
            #line 43 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(">(target);\r\n        }\r\n\r\n        [");
            
            #line 46 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write("]\r\n        ");
            
            #line 47 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Scope));
            
            #line default
            #line hidden
            this.Write(" class ");
            
            #line 47 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> : ");
            
            #line 47 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(@"
        {
            private T m_target;
            private readonly ptr<T>? m_target_ptr;
            private readonly bool m_target_is_ptr;

            public ref T Target
            {
                get
                {
                    if (m_target_is_ptr && !(m_target_ptr is null))
                        return ref m_target_ptr.val;

                    return ref m_target;
                }
            }

            public ");
            
            #line 64 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("(in T target) => m_target = target;\r\n\r\n            public ");
            
            #line 66 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("(ptr<T> target_ptr)\r\n            {\r\n                m_target_ptr = target_ptr;\r\n " +
                    "               m_target_is_ptr = true;\r\n            }");
            
            #line 70 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"

        
            foreach (var decl in Functions)
            {
                
            
            #line default
            #line hidden
            
            #line 74 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceFuncDeclTemplate
                {
                    FunctionName = decl.Name,
                    Scope = "public",
                    ParameterSignature = decl.Signature.GenerateParametersSignature(),
                    ParameterNames = GetParameterNames(decl),
                    ParameterTypes = GetParameterTypeNames(decl),
                    ResultType = decl.Signature.GenerateResultSignature()
                }
                .TransformText()));
            
            #line default
            #line hidden
            
            #line 83 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"

            }
            
            #line default
            #line hidden
            this.Write("\r\n            \r\n            public string ToString(string format, IFormatProvider" +
                    " formatProvider) => format;\r\n\r\n            [DebuggerStepperBoundary]\r\n          " +
                    "  static ");
            
            #line 90 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("()\r\n            {\r\n                Type targetType = typeof(T);\r\n                " +
                    "Type targetTypeByPtr = typeof(ptr<T>);\r\n                MethodInfo extensionMeth" +
                    "od;");
            
            #line 94 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"

                
                foreach (var decl in Functions)
                {
                    
            
            #line default
            #line hidden
            
            #line 98 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(new InterfaceFuncInitTemplate
                    {
                        FunctionName = decl.Name,
                        InterfaceName = InterfaceName
                    }
                    .TransformText()));
            
            #line default
            #line hidden
            
            #line 103 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"

                }
            
            #line default
            #line hidden
            this.Write("\r\n            }\r\n\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining)," +
                    " DebuggerNonUserCode]\r\n            public static explicit operator ");
            
            #line 109 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>(in ptr<T> target_ptr) => new ");
            
            #line 109 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>(target_ptr);\r\n\r\n            [MethodImpl(MethodImplOptions.AggressiveInlining)" +
                    ", DebuggerNonUserCode]\r\n            public static explicit operator ");
            
            #line 112 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>(in T target) => new ");
            
            #line 112 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>(target);\r\n\r\n            // Enable comparisons between nil and ");
            
            #line 114 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> interface instance\r\n            [MethodImpl(MethodImplOptions.AggressiveInlin" +
                    "ing)]\r\n            public static bool operator ==(");
            
            #line 116 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value, NilType nil) => Activator.CreateInstance<");
            
            #line 116 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T>>().Equals(value);\r\n\r\n            [MethodImpl(MethodImplOptions.AggressiveInli" +
                    "ning)]\r\n            public static bool operator !=(");
            
            #line 119 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value, NilType nil) => !(value == nil);\r\n\r\n            [MethodImpl(MethodImpl" +
                    "Options.AggressiveInlining)]\r\n            public static bool operator ==(NilType" +
                    " nil, ");
            
            #line 122 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value) => value == nil;\r\n\r\n            [MethodImpl(MethodImplOptions.Aggressi" +
                    "veInlining)]\r\n            public static bool operator !=(NilType nil, ");
            
            #line 125 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("<T> value) => value != nil;\r\n        }\r\n    }\r\n");
            
            #line 128 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespaceFooter));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nnamespace go\r\n{\r\n    public static class ");
            
            #line 132 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_");
            
            #line 132 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write("Extensions\r\n    {\r\n        private static readonly ConcurrentDictionary<Type, Met" +
                    "hodInfo> s_conversionOperators = new ConcurrentDictionary<Type, MethodInfo>();\r\n" +
                    "\r\n        [");
            
            #line 136 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write(", MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerNonUserCode]\r\n       " +
                    " public static T _<T>(this ");
            
            #line 137 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 137 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 137 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" target)\r\n        {\r\n            try\r\n            {\r\n                return ((");
            
            #line 141 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 141 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 141 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(@"<T>)target).Target;
            }
            catch (NotImplementedException ex)
            {
                throw new PanicException($""interface conversion: {GetGoTypeName(target.GetType())} is not {GetGoTypeName(typeof(T))}: missing method {ex.InnerException?.Message}"");
            }
        }

        [");
            
            #line 149 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write(", MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerNonUserCode]\r\n       " +
                    " public static bool _<T>(this ");
            
            #line 150 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 150 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 150 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(@" target, out T result)
        {
            try
            {
                result = target._<T>();
                return true;
            }
            catch (PanicException)
            {
                result = default!;
                return false;
            }
        }

        [");
            
            #line 164 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write(", MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerNonUserCode]\r\n       " +
                    " public static object? _(this ");
            
            #line 165 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 165 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 165 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(" target, Type type)\r\n        {\r\n            try\r\n            {\r\n                M" +
                    "ethodInfo? conversionOperator = s_conversionOperators.GetOrAdd(type, _ => typeof" +
                    "(");
            
            #line 169 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 169 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 169 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(@"<>).GetExplicitGenericConversionOperator(type));

                if (conversionOperator is null)
                    throw new PanicException($""interface conversion: failed to create converter for {GetGoTypeName(target.GetType())} to {GetGoTypeName(type)}"");

                dynamic? result = conversionOperator.Invoke(null, new object[] { target });
                return result?.Target;
            }
            catch (NotImplementedException ex)
            {
                throw new PanicException($""interface conversion: {GetGoTypeName(target.GetType())} is not {GetGoTypeName(type)}: missing method {ex.InnerException?.Message}"");
            }
        }

        [");
            
            #line 183 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GeneratedCodeAttribute));
            
            #line default
            #line hidden
            this.Write(", MethodImpl(MethodImplOptions.AggressiveInlining), DebuggerNonUserCode]\r\n       " +
                    " public static bool _(this ");
            
            #line 184 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NamespacePrefix));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 184 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PackageName));
            
            #line default
            #line hidden
            this.Write("_package.");
            
            #line 184 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(InterfaceName));
            
            #line default
            #line hidden
            this.Write(@" target, Type type, out object? result)
        {
            try
            {
                result = target._(type);
                return true;
            }
            catch (PanicException)
            {
                result = type.IsValueType ? Activator.CreateInstance(type) : null;
                return false;
            }
        }
    }
}");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 198 "C:\Projects\go2cs\src\go2cs.Templates\InterfaceTypeTemplate.tt"

// Template Parameters
public string NamespacePrefix;
public string NamespaceHeader;
public string NamespaceFooter;
public string PackageName;
public string InterfaceName;
public string Scope;
public InterfaceInfo Interface;
public IEnumerable<FunctionSignature> Functions;
public IEnumerable<string> UsingStatements;

private string GetParameterNames(FunctionSignature function)
{
    string parameterNames = function.GetParameterNames();

    if (parameterNames.Length > 0)
        parameterNames = ", " + parameterNames;

    return parameterNames;
}

private string GetParameterTypeNames(FunctionSignature function)
{
    string parameterTypes = function.GetParameterTypeNames();

    if (parameterTypes.Length > 0)
        parameterTypes = ", " + parameterTypes;

    return parameterTypes;
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
