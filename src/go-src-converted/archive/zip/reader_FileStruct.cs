//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:42:35 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using binary = go.encoding.binary_package;
using errors = go.errors_package;
using hash = go.hash_package;
using crc32 = go.hash.crc32_package;
using io = go.io_package;
using fs = go.io.fs_package;
using os = go.os_package;
using path = go.path_package;
using sort = go.sort_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace archive
{
    public static partial class zip_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct File
        {
            // Constructors
            public File(NilType _)
            {
                this.FileHeader = default;
                this.zip = default;
                this.zipr = default;
                this.headerOffset = default;
                this.zip64 = default;
                this.descErr = default;
            }

            public File(FileHeader FileHeader = default, ref ptr<Reader> zip = default, io.ReaderAt zipr = default, long headerOffset = default, bool zip64 = default, error descErr = default)
            {
                this.FileHeader = FileHeader;
                this.zip = zip;
                this.zipr = zipr;
                this.headerOffset = headerOffset;
                this.zip64 = zip64;
                this.descErr = descErr;
            }

            // Enable comparisons between nil and File struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(File value, NilType nil) => value.Equals(default(File));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(File value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, File value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, File value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator File(NilType nil) => default(File);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static File File_cast(dynamic value)
        {
            return new File(value.FileHeader, ref value.zip, value.zipr, value.headerOffset, value.zip64, value.descErr);
        }
    }
}}