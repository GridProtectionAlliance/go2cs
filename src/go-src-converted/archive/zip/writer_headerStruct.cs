//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:42:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using binary = go.encoding.binary_package;
using errors = go.errors_package;
using hash = go.hash_package;
using crc32 = go.hash.crc32_package;
using io = go.io_package;
using strings = go.strings_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace archive
{
    public static partial class zip_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct header
        {
            // Constructors
            public header(NilType _)
            {
                this.ptr<FileHeader> = default;
                this.offset = default;
                this.raw = default;
            }

            public header(ref ptr<FileHeader> ptr<FileHeader> = default, ulong offset = default, bool raw = default)
            {
                this.ptr<FileHeader> = ptr<FileHeader>;
                this.offset = offset;
                this.raw = raw;
            }

            // Enable comparisons between nil and header struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(header value, NilType nil) => value.Equals(default(header));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(header value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, header value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, header value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator header(NilType nil) => default(header);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static header header_cast(dynamic value)
        {
            return new header(ref value.ptr<FileHeader>, value.offset, value.raw);
        }
    }
}}