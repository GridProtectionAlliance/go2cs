//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:49:31 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using binary = go.encoding.binary_package;
using errors = go.errors_package;
using hash = go.hash_package;
using crc32 = go.hash.crc32_package;
using io = go.io_package;
using strings = go.strings_package;
using utf8 = go.unicode.utf8_package;
using go;

namespace go {
namespace archive
{
    public static partial class zip_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct nopCloser
        {
            // Writer.Write function promotion
            private delegate (long, error) WriteByVal(T value, slice<byte> p);
            private delegate (long, error) WriteByRef(ref T value, slice<byte> p);

            private static readonly WriteByVal s_WriteByVal;
            private static readonly WriteByRef s_WriteByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) Write(slice<byte> p) => s_WriteByRef?.Invoke(ref this, p) ?? s_WriteByVal?.Invoke(this, p) ?? Writer?.Write(p) ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);
            
            [DebuggerStepperBoundary]
            static nopCloser()
            {
                Type targetType = typeof(nopCloser);
                MethodInfo extensionMethod;
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Write");

                if ((object)extensionMethod != null)
                {
                    s_WriteByRef = extensionMethod.CreateStaticDelegate(typeof(WriteByRef)) as WriteByRef;

                    if ((object)s_WriteByRef == null)
                        s_WriteByVal = extensionMethod.CreateStaticDelegate(typeof(WriteByVal)) as WriteByVal;
                }
            }

            // Constructors
            public nopCloser(NilType _)
            {
                this.Writer = default;
            }

            public nopCloser(io.Writer Writer = default)
            {
                this.Writer = Writer;
            }

            // Enable comparisons between nil and nopCloser struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(nopCloser value, NilType nil) => value.Equals(default(nopCloser));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(nopCloser value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, nopCloser value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, nopCloser value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator nopCloser(NilType nil) => default(nopCloser);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static nopCloser nopCloser_cast(dynamic value)
        {
            return new nopCloser(value.Writer);
        }
    }
}}