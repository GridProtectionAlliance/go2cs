//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:01:31 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using json = go.encoding.json_package;
using fmt = go.fmt_package;
using path = go.path_package;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace @internal
{
    public static partial class span_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct point
        {
            // Constructors
            public point(NilType _)
            {
                this.Line = default;
                this.Column = default;
                this.Offset = default;
            }

            public point(long Line = default, long Column = default, long Offset = default)
            {
                this.Line = Line;
                this.Column = Column;
                this.Offset = Offset;
            }

            // Enable comparisons between nil and point struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(point value, NilType nil) => value.Equals(default(point));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(point value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, point value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, point value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator point(NilType nil) => default(point);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static point point_cast(dynamic value)
        {
            return new point(value.Line, value.Column, value.Offset);
        }
    }
}}}}}