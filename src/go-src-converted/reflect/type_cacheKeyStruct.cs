//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:41:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using unsafeheader = go.@internal.unsafeheader_package;
using strconv = go.strconv_package;
using sync = go.sync_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class reflect_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct cacheKey
        {
            // Constructors
            public cacheKey(NilType _)
            {
                this.kind = default;
                this.t1 = default;
                this.t2 = default;
                this.extra = default;
            }

            public cacheKey(Kind kind = default, ref ptr<rtype> t1 = default, ref ptr<rtype> t2 = default, System.UIntPtr extra = default)
            {
                this.kind = kind;
                this.t1 = t1;
                this.t2 = t2;
                this.extra = extra;
            }

            // Enable comparisons between nil and cacheKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(cacheKey value, NilType nil) => value.Equals(default(cacheKey));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(cacheKey value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, cacheKey value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, cacheKey value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator cacheKey(NilType nil) => default(cacheKey);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static cacheKey cacheKey_cast(dynamic value)
        {
            return new cacheKey(value.kind, ref value.t1, ref value.t2, value.extra);
        }
    }
}