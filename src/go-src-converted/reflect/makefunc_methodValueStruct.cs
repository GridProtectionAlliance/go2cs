//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:41:27 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using abi = go.@internal.abi_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class reflect_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        [PromotedStruct(typeof(makeFuncCtxt))]
        private partial struct methodValue
        {
            // makeFuncCtxt structure promotion - sourced from value copy
            private readonly ptr<makeFuncCtxt> m_makeFuncCtxtRef;

            private ref makeFuncCtxt makeFuncCtxt_val => ref m_makeFuncCtxtRef.Value;

            public ref System.UIntPtr fn => ref m_makeFuncCtxtRef.Value.fn;

            public ref ptr<bitVector> stack => ref m_makeFuncCtxtRef.Value.stack;

            public ref System.UIntPtr argLen => ref m_makeFuncCtxtRef.Value.argLen;

            public ref abi.IntArgRegBitmap regPtrs => ref m_makeFuncCtxtRef.Value.regPtrs;

            // Constructors
            public methodValue(NilType _)
            {
                this.m_makeFuncCtxtRef = new ptr<makeFuncCtxt>(new makeFuncCtxt(nil));
                this.method = default;
                this.rcvr = default;
            }

            public methodValue(makeFuncCtxt makeFuncCtxt = default, nint method = default, Value rcvr = default)
            {
                this.m_makeFuncCtxtRef = new ptr<makeFuncCtxt>(makeFuncCtxt);
                this.method = method;
                this.rcvr = rcvr;
            }

            // Enable comparisons between nil and methodValue struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(methodValue value, NilType nil) => value.Equals(default(methodValue));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(methodValue value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, methodValue value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, methodValue value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator methodValue(NilType nil) => default(methodValue);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static methodValue methodValue_cast(dynamic value)
        {
            return new methodValue(value.makeFuncCtxt, value.method, value.rcvr);
        }
    }
}