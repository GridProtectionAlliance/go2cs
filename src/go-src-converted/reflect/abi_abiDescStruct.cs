//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:23:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using abi = go.@internal.abi_package;
using goexperiment = go.@internal.goexperiment_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class reflect_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct abiDesc
        {
            // Constructors
            public abiDesc(NilType _)
            {
                this.call = default;
                this.ret = default;
                this.stackCallArgsSize = default;
                this.retOffset = default;
                this.spill = default;
                this.stackPtrs = default;
                this.inRegPtrs = default;
                this.outRegPtrs = default;
            }

            public abiDesc(abiSeq call = default, abiSeq ret = default, System.UIntPtr stackCallArgsSize = default, System.UIntPtr retOffset = default, System.UIntPtr spill = default, ref ptr<bitVector> stackPtrs = default, abi.IntArgRegBitmap inRegPtrs = default, abi.IntArgRegBitmap outRegPtrs = default)
            {
                this.call = call;
                this.ret = ret;
                this.stackCallArgsSize = stackCallArgsSize;
                this.retOffset = retOffset;
                this.spill = spill;
                this.stackPtrs = stackPtrs;
                this.inRegPtrs = inRegPtrs;
                this.outRegPtrs = outRegPtrs;
            }

            // Enable comparisons between nil and abiDesc struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(abiDesc value, NilType nil) => value.Equals(default(abiDesc));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(abiDesc value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, abiDesc value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, abiDesc value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator abiDesc(NilType nil) => default(abiDesc);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static abiDesc abiDesc_cast(dynamic value)
        {
            return new abiDesc(value.call, value.ret, value.stackCallArgsSize, value.retOffset, value.spill, ref value.stackPtrs, value.inRegPtrs, value.outRegPtrs);
        }
    }
}