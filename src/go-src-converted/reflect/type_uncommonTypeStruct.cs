//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:30:47 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using unsafeheader = go.@internal.unsafeheader_package;
using strconv = go.strconv_package;
using sync = go.sync_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class reflect_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct uncommonType
        {
            // Constructors
            public uncommonType(NilType _)
            {
                this.pkgPath = default;
                this.mcount = default;
                this.xcount = default;
                this.moff = default;
                this._ = default;
            }

            public uncommonType(nameOff pkgPath = default, ushort mcount = default, ushort xcount = default, uint moff = default, uint _ = default)
            {
                this.pkgPath = pkgPath;
                this.mcount = mcount;
                this.xcount = xcount;
                this.moff = moff;
                this._ = _;
            }

            // Enable comparisons between nil and uncommonType struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(uncommonType value, NilType nil) => value.Equals(default(uncommonType));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(uncommonType value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, uncommonType value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, uncommonType value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator uncommonType(NilType nil) => default(uncommonType);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static uncommonType uncommonType_cast(dynamic value)
        {
            return new uncommonType(value.pkgPath, value.mcount, value.xcount, value.moff, value._);
        }
    }
}