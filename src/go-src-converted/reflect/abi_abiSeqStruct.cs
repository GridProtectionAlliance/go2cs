//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:23:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using abi = go.@internal.abi_package;
using goexperiment = go.@internal.goexperiment_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class reflect_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct abiSeq
        {
            // Constructors
            public abiSeq(NilType _)
            {
                this.steps = default;
                this.valueStart = default;
                this.stackBytes = default;
                this.iregs = default;
                this.fregs = default;
            }

            public abiSeq(slice<abiStep> steps = default, slice<nint> valueStart = default, System.UIntPtr stackBytes = default, nint iregs = default, nint fregs = default)
            {
                this.steps = steps;
                this.valueStart = valueStart;
                this.stackBytes = stackBytes;
                this.iregs = iregs;
                this.fregs = fregs;
            }

            // Enable comparisons between nil and abiSeq struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(abiSeq value, NilType nil) => value.Equals(default(abiSeq));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(abiSeq value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, abiSeq value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, abiSeq value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator abiSeq(NilType nil) => default(abiSeq);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static abiSeq abiSeq_cast(dynamic value)
        {
            return new abiSeq(value.steps, value.valueStart, value.stackBytes, value.iregs, value.fregs);
        }
    }
}