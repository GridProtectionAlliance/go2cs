//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:06:47 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using unsafeheader = go.@internal.unsafeheader_package;
using strconv = go.strconv_package;
using sync = go.sync_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class reflect_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct layoutKey
        {
            // Constructors
            public layoutKey(NilType _)
            {
                this.ftyp = default;
                this.rcvr = default;
            }

            public layoutKey(ref ptr<funcType> ftyp = default, ref ptr<rtype> rcvr = default)
            {
                this.ftyp = ftyp;
                this.rcvr = rcvr;
            }

            // Enable comparisons between nil and layoutKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(layoutKey value, NilType nil) => value.Equals(default(layoutKey));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(layoutKey value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, layoutKey value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, layoutKey value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator layoutKey(NilType nil) => default(layoutKey);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static layoutKey layoutKey_cast(dynamic value)
        {
            return new layoutKey(ref value.ftyp, ref value.rcvr);
        }
    }
}