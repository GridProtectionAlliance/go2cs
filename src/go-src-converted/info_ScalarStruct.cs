//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:01:49 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using keys = go.golang.org.x.tools.@internal.@event.keys_package;
using label = go.golang.org.x.tools.@internal.@event.label_package;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace @internal {
namespace @event {
namespace export
{
    public static partial class metric_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Scalar
        {
            // Constructors
            public Scalar(NilType _)
            {
                this.Name = default;
                this.Description = default;
                this.Keys = default;
            }

            public Scalar(@string Name = default, @string Description = default, slice<label.Key> Keys = default)
            {
                this.Name = Name;
                this.Description = Description;
                this.Keys = Keys;
            }

            // Enable comparisons between nil and Scalar struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Scalar value, NilType nil) => value.Equals(default(Scalar));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Scalar value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Scalar value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Scalar value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Scalar(NilType nil) => default(Scalar);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Scalar Scalar_cast(dynamic value)
        {
            return new Scalar(value.Name, value.Description, value.Keys);
        }
    }
}}}}}}}