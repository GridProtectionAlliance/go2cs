//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:45:48 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct exceptionstate64
        {
            // Constructors
            public exceptionstate64(NilType _)
            {
                this.trapno = default;
                this.cpu = default;
                this.err = default;
                this.faultvaddr = default;
            }

            public exceptionstate64(ushort trapno = default, ushort cpu = default, uint err = default, ulong faultvaddr = default)
            {
                this.trapno = trapno;
                this.cpu = cpu;
                this.err = err;
                this.faultvaddr = faultvaddr;
            }

            // Enable comparisons between nil and exceptionstate64 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(exceptionstate64 value, NilType nil) => value.Equals(default(exceptionstate64));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(exceptionstate64 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, exceptionstate64 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, exceptionstate64 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator exceptionstate64(NilType nil) => default(exceptionstate64);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static exceptionstate64 exceptionstate64_cast(dynamic value)
        {
            return new exceptionstate64(value.trapno, value.cpu, value.err, value.faultvaddr);
        }
    }
}