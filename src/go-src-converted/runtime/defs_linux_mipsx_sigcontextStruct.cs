//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:24:24 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;


#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct sigcontext
        {
            // Constructors
            public sigcontext(NilType _)
            {
                this.sc_regmask = default;
                this.sc_status = default;
                this.sc_pc = default;
                this.sc_regs = default;
                this.sc_fpregs = default;
                this.sc_acx = default;
                this.sc_fpc_csr = default;
                this.sc_fpc_eir = default;
                this.sc_used_math = default;
                this.sc_dsp = default;
                this.sc_mdhi = default;
                this.sc_mdlo = default;
                this.sc_hi1 = default;
                this.sc_lo1 = default;
                this.sc_hi2 = default;
                this.sc_lo2 = default;
                this.sc_hi3 = default;
                this.sc_lo3 = default;
            }

            public sigcontext(uint sc_regmask = default, uint sc_status = default, ulong sc_pc = default, array<ulong> sc_regs = default, array<ulong> sc_fpregs = default, uint sc_acx = default, uint sc_fpc_csr = default, uint sc_fpc_eir = default, uint sc_used_math = default, uint sc_dsp = default, ulong sc_mdhi = default, ulong sc_mdlo = default, uint sc_hi1 = default, uint sc_lo1 = default, uint sc_hi2 = default, uint sc_lo2 = default, uint sc_hi3 = default, uint sc_lo3 = default)
            {
                this.sc_regmask = sc_regmask;
                this.sc_status = sc_status;
                this.sc_pc = sc_pc;
                this.sc_regs = sc_regs;
                this.sc_fpregs = sc_fpregs;
                this.sc_acx = sc_acx;
                this.sc_fpc_csr = sc_fpc_csr;
                this.sc_fpc_eir = sc_fpc_eir;
                this.sc_used_math = sc_used_math;
                this.sc_dsp = sc_dsp;
                this.sc_mdhi = sc_mdhi;
                this.sc_mdlo = sc_mdlo;
                this.sc_hi1 = sc_hi1;
                this.sc_lo1 = sc_lo1;
                this.sc_hi2 = sc_hi2;
                this.sc_lo2 = sc_lo2;
                this.sc_hi3 = sc_hi3;
                this.sc_lo3 = sc_lo3;
            }

            // Enable comparisons between nil and sigcontext struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sigcontext value, NilType nil) => value.Equals(default(sigcontext));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sigcontext value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sigcontext value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sigcontext value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sigcontext(NilType nil) => default(sigcontext);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static sigcontext sigcontext_cast(dynamic value)
        {
            return new sigcontext(value.sc_regmask, value.sc_status, value.sc_pc, value.sc_regs, value.sc_fpregs, value.sc_acx, value.sc_fpc_csr, value.sc_fpc_eir, value.sc_used_math, value.sc_dsp, value.sc_mdhi, value.sc_mdlo, value.sc_hi1, value.sc_lo1, value.sc_hi2, value.sc_lo2, value.sc_hi3, value.sc_lo3);
        }
    }
}