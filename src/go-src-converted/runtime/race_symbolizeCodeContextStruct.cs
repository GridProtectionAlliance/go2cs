//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:22:47 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct symbolizeCodeContext
        {
            // Constructors
            public symbolizeCodeContext(NilType _)
            {
                this.pc = default;
                this.fn = default;
                this.file = default;
                this.line = default;
                this.off = default;
                this.res = default;
            }

            public symbolizeCodeContext(System.UIntPtr pc = default, ref ptr<byte> fn = default, ref ptr<byte> file = default, System.UIntPtr line = default, System.UIntPtr off = default, System.UIntPtr res = default)
            {
                this.pc = pc;
                this.fn = fn;
                this.file = file;
                this.line = line;
                this.off = off;
                this.res = res;
            }

            // Enable comparisons between nil and symbolizeCodeContext struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(symbolizeCodeContext value, NilType nil) => value.Equals(default(symbolizeCodeContext));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(symbolizeCodeContext value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, symbolizeCodeContext value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, symbolizeCodeContext value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator symbolizeCodeContext(NilType nil) => default(symbolizeCodeContext);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static symbolizeCodeContext symbolizeCodeContext_cast(dynamic value)
        {
            return new symbolizeCodeContext(value.pc, ref value.fn, ref value.file, value.line, value.off, value.res);
        }
    }
}