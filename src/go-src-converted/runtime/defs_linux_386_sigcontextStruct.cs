//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:08:34 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;


#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct sigcontext
        {
            // Constructors
            public sigcontext(NilType _)
            {
                this.gs = default;
                this.__gsh = default;
                this.fs = default;
                this.__fsh = default;
                this.es = default;
                this.__esh = default;
                this.ds = default;
                this.__dsh = default;
                this.edi = default;
                this.esi = default;
                this.ebp = default;
                this.esp = default;
                this.ebx = default;
                this.edx = default;
                this.ecx = default;
                this.eax = default;
                this.trapno = default;
                this.err = default;
                this.eip = default;
                this.cs = default;
                this.__csh = default;
                this.eflags = default;
                this.esp_at_signal = default;
                this.ss = default;
                this.__ssh = default;
                this.fpstate = default;
                this.oldmask = default;
                this.cr2 = default;
            }

            public sigcontext(ushort gs = default, ushort __gsh = default, ushort fs = default, ushort __fsh = default, ushort es = default, ushort __esh = default, ushort ds = default, ushort __dsh = default, uint edi = default, uint esi = default, uint ebp = default, uint esp = default, uint ebx = default, uint edx = default, uint ecx = default, uint eax = default, uint trapno = default, uint err = default, uint eip = default, ushort cs = default, ushort __csh = default, uint eflags = default, uint esp_at_signal = default, ushort ss = default, ushort __ssh = default, ref ptr<fpstate> fpstate = default, uint oldmask = default, uint cr2 = default)
            {
                this.gs = gs;
                this.__gsh = __gsh;
                this.fs = fs;
                this.__fsh = __fsh;
                this.es = es;
                this.__esh = __esh;
                this.ds = ds;
                this.__dsh = __dsh;
                this.edi = edi;
                this.esi = esi;
                this.ebp = ebp;
                this.esp = esp;
                this.ebx = ebx;
                this.edx = edx;
                this.ecx = ecx;
                this.eax = eax;
                this.trapno = trapno;
                this.err = err;
                this.eip = eip;
                this.cs = cs;
                this.__csh = __csh;
                this.eflags = eflags;
                this.esp_at_signal = esp_at_signal;
                this.ss = ss;
                this.__ssh = __ssh;
                this.fpstate = fpstate;
                this.oldmask = oldmask;
                this.cr2 = cr2;
            }

            // Enable comparisons between nil and sigcontext struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sigcontext value, NilType nil) => value.Equals(default(sigcontext));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sigcontext value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sigcontext value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sigcontext value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sigcontext(NilType nil) => default(sigcontext);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static sigcontext sigcontext_cast(dynamic value)
        {
            return new sigcontext(value.gs, value.__gsh, value.fs, value.__fsh, value.es, value.__esh, value.ds, value.__dsh, value.edi, value.esi, value.ebp, value.esp, value.ebx, value.edx, value.ecx, value.eax, value.trapno, value.err, value.eip, value.cs, value.__csh, value.eflags, value.esp_at_signal, value.ss, value.__ssh, ref value.fpstate, value.oldmask, value.cr2);
        }
    }
}