//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:08:21 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct argset
        {
            // Constructors
            public argset(NilType _)
            {
                this.args = default;
                this.retval = default;
            }

            public argset(unsafe.Pointer args = default, System.UIntPtr retval = default)
            {
                this.args = args;
                this.retval = retval;
            }

            // Enable comparisons between nil and argset struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(argset value, NilType nil) => value.Equals(default(argset));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(argset value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, argset value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, argset value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator argset(NilType nil) => default(argset);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static argset argset_cast(dynamic value)
        {
            return new argset(value.args, value.retval);
        }
    }
}