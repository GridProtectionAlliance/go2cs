//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:19:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct sigcontext
        {
            // Constructors
            public sigcontext(NilType _)
            {
                this.__sc_unused = default;
                this.sc_mask = default;
                this.sc_sp = default;
                this.sc_lr = default;
                this.sc_elr = default;
                this.sc_spsr = default;
                this.sc_x = default;
                this.sc_cookie = default;
            }

            public sigcontext(int __sc_unused = default, int sc_mask = default, System.UIntPtr sc_sp = default, System.UIntPtr sc_lr = default, System.UIntPtr sc_elr = default, System.UIntPtr sc_spsr = default, array<System.UIntPtr> sc_x = default, long sc_cookie = default)
            {
                this.__sc_unused = __sc_unused;
                this.sc_mask = sc_mask;
                this.sc_sp = sc_sp;
                this.sc_lr = sc_lr;
                this.sc_elr = sc_elr;
                this.sc_spsr = sc_spsr;
                this.sc_x = sc_x;
                this.sc_cookie = sc_cookie;
            }

            // Enable comparisons between nil and sigcontext struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sigcontext value, NilType nil) => value.Equals(default(sigcontext));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sigcontext value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sigcontext value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sigcontext value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sigcontext(NilType nil) => default(sigcontext);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static sigcontext sigcontext_cast(dynamic value)
        {
            return new sigcontext(value.__sc_unused, value.sc_mask, value.sc_sp, value.sc_lr, value.sc_elr, value.sc_spsr, value.sc_x, value.sc_cookie);
        }
    }
}