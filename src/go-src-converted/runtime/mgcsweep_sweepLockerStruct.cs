//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:25:37 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using atomic = go.runtime.@internal.atomic_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct sweepLocker
        {
            // Constructors
            public sweepLocker(NilType _)
            {
                this.sweepGen = default;
                this.blocking = default;
            }

            public sweepLocker(uint sweepGen = default, bool blocking = default)
            {
                this.sweepGen = sweepGen;
                this.blocking = blocking;
            }

            // Enable comparisons between nil and sweepLocker struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sweepLocker value, NilType nil) => value.Equals(default(sweepLocker));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sweepLocker value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sweepLocker value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sweepLocker value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sweepLocker(NilType nil) => default(sweepLocker);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static sweepLocker sweepLocker_cast(dynamic value)
        {
            return new sweepLocker(value.sweepGen, value.blocking);
        }
    }
}