//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:45:46 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using atomic = go.runtime.@internal.atomic_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(debugLogReader))]
        private partial struct readState
        {
            // debugLogReader structure promotion - sourced from value copy
            private readonly ptr<debugLogReader> m_debugLogReaderRef;

            private ref debugLogReader debugLogReader_val => ref m_debugLogReaderRef.Value;

            public ref ptr<debugLogBuf> data => ref m_debugLogReaderRef.Value.data;

            public ref ulong begin => ref m_debugLogReaderRef.Value.begin;

            public ref ulong end => ref m_debugLogReaderRef.Value.end;

            public ref ulong tick => ref m_debugLogReaderRef.Value.tick;

            public ref ulong nano => ref m_debugLogReaderRef.Value.nano;

            // Constructors
            public readState(NilType _)
            {
                this.m_debugLogReaderRef = new ptr<debugLogReader>(new debugLogReader(nil));
                this.first = default;
                this.lost = default;
                this.nextTick = default;
            }

            public readState(debugLogReader debugLogReader = default, bool first = default, ulong lost = default, ulong nextTick = default)
            {
                this.m_debugLogReaderRef = new ptr<debugLogReader>(debugLogReader);
                this.first = first;
                this.lost = lost;
                this.nextTick = nextTick;
            }

            // Enable comparisons between nil and readState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(readState value, NilType nil) => value.Equals(default(readState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(readState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, readState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, readState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator readState(NilType nil) => default(readState);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static readState readState_cast(dynamic value)
        {
            return new readState(value.debugLogReader, value.first, value.lost, value.nextTick);
        }
    }
}