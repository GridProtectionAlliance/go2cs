//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:12:20 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct traceStackTable
        {
            // Constructors
            public traceStackTable(NilType _)
            {
                this.@lock = default;
                this.seq = default;
                this.mem = default;
                this.tab = default;
            }

            public traceStackTable(mutex @lock = default, uint seq = default, traceAlloc mem = default, array<traceStackPtr> tab = default)
            {
                this.@lock = @lock;
                this.seq = seq;
                this.mem = mem;
                this.tab = tab;
            }

            // Enable comparisons between nil and traceStackTable struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(traceStackTable value, NilType nil) => value.Equals(default(traceStackTable));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(traceStackTable value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, traceStackTable value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, traceStackTable value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator traceStackTable(NilType nil) => default(traceStackTable);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static traceStackTable traceStackTable_cast(dynamic value)
        {
            return new traceStackTable(value.@lock, value.seq, value.mem, value.tab);
        }
    }
}