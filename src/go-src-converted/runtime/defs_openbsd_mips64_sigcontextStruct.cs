//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:08:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct sigcontext
        {
            // Constructors
            public sigcontext(NilType _)
            {
                this.sc_cookie = default;
                this.sc_mask = default;
                this.sc_pc = default;
                this.sc_regs = default;
                this.mullo = default;
                this.mulhi = default;
                this.sc_fpregs = default;
                this.sc_fpused = default;
                this.sc_fpc_eir = default;
                this._xxx = default;
            }

            public sigcontext(ulong sc_cookie = default, ulong sc_mask = default, ulong sc_pc = default, array<ulong> sc_regs = default, ulong mullo = default, ulong mulhi = default, array<ulong> sc_fpregs = default, ulong sc_fpused = default, ulong sc_fpc_eir = default, array<long> _xxx = default)
            {
                this.sc_cookie = sc_cookie;
                this.sc_mask = sc_mask;
                this.sc_pc = sc_pc;
                this.sc_regs = sc_regs;
                this.mullo = mullo;
                this.mulhi = mulhi;
                this.sc_fpregs = sc_fpregs;
                this.sc_fpused = sc_fpused;
                this.sc_fpc_eir = sc_fpc_eir;
                this._xxx = _xxx;
            }

            // Enable comparisons between nil and sigcontext struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sigcontext value, NilType nil) => value.Equals(default(sigcontext));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sigcontext value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sigcontext value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sigcontext value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sigcontext(NilType nil) => default(sigcontext);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static sigcontext sigcontext_cast(dynamic value)
        {
            return new sigcontext(value.sc_cookie, value.sc_mask, value.sc_pc, value.sc_regs, value.mullo, value.mulhi, value.sc_fpregs, value.sc_fpused, value.sc_fpc_eir, value._xxx);
        }
    }
}