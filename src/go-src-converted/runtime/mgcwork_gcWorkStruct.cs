//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:21:08 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct gcWork
        {
            // Constructors
            public gcWork(NilType _)
            {
                this.wbuf1 = default;
                this.wbuf2 = default;
                this.bytesMarked = default;
                this.scanWork = default;
                this.flushedWork = default;
                this.pauseGen = default;
                this.putGen = default;
                this.pauseStack = default;
            }

            public gcWork(ref ptr<workbuf> wbuf1 = default, ref ptr<workbuf> wbuf2 = default, ulong bytesMarked = default, long scanWork = default, bool flushedWork = default, uint pauseGen = default, uint putGen = default, array<System.UIntPtr> pauseStack = default)
            {
                this.wbuf1 = wbuf1;
                this.wbuf2 = wbuf2;
                this.bytesMarked = bytesMarked;
                this.scanWork = scanWork;
                this.flushedWork = flushedWork;
                this.pauseGen = pauseGen;
                this.putGen = putGen;
                this.pauseStack = pauseStack;
            }

            // Enable comparisons between nil and gcWork struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(gcWork value, NilType nil) => value.Equals(default(gcWork));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(gcWork value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, gcWork value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, gcWork value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator gcWork(NilType nil) => default(gcWork);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static gcWork gcWork_cast(dynamic value)
        {
            return new gcWork(ref value.wbuf1, ref value.wbuf2, value.bytesMarked, value.scanWork, value.flushedWork, value.pauseGen, value.putGen, value.pauseStack);
        }
    }
}