//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:21:00 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct stackObject
        {
            // Constructors
            public stackObject(NilType _)
            {
                this.off = default;
                this.size = default;
                this.typ = default;
                this.left = default;
                this.right = default;
            }

            public stackObject(uint off = default, uint size = default, ref ptr<_type> typ = default, ref ptr<stackObject> left = default, ref ptr<stackObject> right = default)
            {
                this.off = off;
                this.size = size;
                this.typ = typ;
                this.left = left;
                this.right = right;
            }

            // Enable comparisons between nil and stackObject struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(stackObject value, NilType nil) => value.Equals(default(stackObject));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(stackObject value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, stackObject value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, stackObject value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator stackObject(NilType nil) => default(stackObject);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static stackObject stackObject_cast(dynamic value)
        {
            return new stackObject(value.off, value.size, ref value.typ, ref value.left, ref value.right);
        }
    }
}