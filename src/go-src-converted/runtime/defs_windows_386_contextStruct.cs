//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:19:37 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;


namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct context
        {
            // Constructors
            public context(NilType _)
            {
                this.contextflags = default;
                this.dr0 = default;
                this.dr1 = default;
                this.dr2 = default;
                this.dr3 = default;
                this.dr6 = default;
                this.dr7 = default;
                this.floatsave = default;
                this.seggs = default;
                this.segfs = default;
                this.seges = default;
                this.segds = default;
                this.edi = default;
                this.esi = default;
                this.ebx = default;
                this.edx = default;
                this.ecx = default;
                this.eax = default;
                this.ebp = default;
                this.eip = default;
                this.segcs = default;
                this.eflags = default;
                this.esp = default;
                this.segss = default;
                this.extendedregisters = default;
            }

            public context(uint contextflags = default, uint dr0 = default, uint dr1 = default, uint dr2 = default, uint dr3 = default, uint dr6 = default, uint dr7 = default, floatingsavearea floatsave = default, uint seggs = default, uint segfs = default, uint seges = default, uint segds = default, uint edi = default, uint esi = default, uint ebx = default, uint edx = default, uint ecx = default, uint eax = default, uint ebp = default, uint eip = default, uint segcs = default, uint eflags = default, uint esp = default, uint segss = default, array<byte> extendedregisters = default)
            {
                this.contextflags = contextflags;
                this.dr0 = dr0;
                this.dr1 = dr1;
                this.dr2 = dr2;
                this.dr3 = dr3;
                this.dr6 = dr6;
                this.dr7 = dr7;
                this.floatsave = floatsave;
                this.seggs = seggs;
                this.segfs = segfs;
                this.seges = seges;
                this.segds = segds;
                this.edi = edi;
                this.esi = esi;
                this.ebx = ebx;
                this.edx = edx;
                this.ecx = ecx;
                this.eax = eax;
                this.ebp = ebp;
                this.eip = eip;
                this.segcs = segcs;
                this.eflags = eflags;
                this.esp = esp;
                this.segss = segss;
                this.extendedregisters = extendedregisters;
            }

            // Enable comparisons between nil and context struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(context value, NilType nil) => value.Equals(default(context));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(context value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, context value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, context value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator context(NilType nil) => default(context);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static context context_cast(dynamic value)
        {
            return new context(value.contextflags, value.dr0, value.dr1, value.dr2, value.dr3, value.dr6, value.dr7, value.floatsave, value.seggs, value.segfs, value.seges, value.segds, value.edi, value.esi, value.ebx, value.edx, value.ecx, value.eax, value.ebp, value.eip, value.segcs, value.eflags, value.esp, value.segss, value.extendedregisters);
        }
    }
}