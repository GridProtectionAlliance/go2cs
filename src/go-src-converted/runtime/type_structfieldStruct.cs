//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:24:19 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct structfield
        {
            // Constructors
            public structfield(NilType _)
            {
                this.name = default;
                this.typ = default;
                this.offsetAnon = default;
            }

            public structfield(name name = default, ref ptr<_type> typ = default, System.UIntPtr offsetAnon = default)
            {
                this.name = name;
                this.typ = typ;
                this.offsetAnon = offsetAnon;
            }

            // Enable comparisons between nil and structfield struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(structfield value, NilType nil) => value.Equals(default(structfield));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(structfield value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, structfield value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, structfield value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator structfield(NilType nil) => default(structfield);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static structfield structfield_cast(dynamic value)
        {
            return new structfield(value.name, ref value.typ, value.offsetAnon);
        }
    }
}