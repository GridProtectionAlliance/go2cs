//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:20:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using cpu = go.@internal.cpu_package;
using atomic = go.runtime.@internal.atomic_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct gcControllerState
        {
            // Constructors
            public gcControllerState(NilType _)
            {
                this.scanWork = default;
                this.bgScanCredit = default;
                this.assistTime = default;
                this.dedicatedMarkTime = default;
                this.fractionalMarkTime = default;
                this.idleMarkTime = default;
                this.markStartTime = default;
                this.dedicatedMarkWorkersNeeded = default;
                this.assistWorkPerByte = default;
                this.assistBytesPerWork = default;
                this.fractionalUtilizationGoal = default;
                this._ = default;
            }

            public gcControllerState(long scanWork = default, long bgScanCredit = default, long assistTime = default, long dedicatedMarkTime = default, long fractionalMarkTime = default, long idleMarkTime = default, long markStartTime = default, long dedicatedMarkWorkersNeeded = default, double assistWorkPerByte = default, double assistBytesPerWork = default, double fractionalUtilizationGoal = default, cpu.CacheLinePad _ = default)
            {
                this.scanWork = scanWork;
                this.bgScanCredit = bgScanCredit;
                this.assistTime = assistTime;
                this.dedicatedMarkTime = dedicatedMarkTime;
                this.fractionalMarkTime = fractionalMarkTime;
                this.idleMarkTime = idleMarkTime;
                this.markStartTime = markStartTime;
                this.dedicatedMarkWorkersNeeded = dedicatedMarkWorkersNeeded;
                this.assistWorkPerByte = assistWorkPerByte;
                this.assistBytesPerWork = assistBytesPerWork;
                this.fractionalUtilizationGoal = fractionalUtilizationGoal;
                this._ = _;
            }

            // Enable comparisons between nil and gcControllerState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(gcControllerState value, NilType nil) => value.Equals(default(gcControllerState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(gcControllerState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, gcControllerState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, gcControllerState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator gcControllerState(NilType nil) => default(gcControllerState);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static gcControllerState gcControllerState_cast(dynamic value)
        {
            return new gcControllerState(value.scanWork, value.bgScanCredit, value.assistTime, value.dedicatedMarkTime, value.fractionalMarkTime, value.idleMarkTime, value.markStartTime, value.dedicatedMarkWorkersNeeded, value.assistWorkPerByte, value.assistBytesPerWork, value.fractionalUtilizationGoal, value._);
        }
    }
}