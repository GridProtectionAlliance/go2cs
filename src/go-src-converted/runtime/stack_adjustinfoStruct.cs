//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:23:43 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using cpu = go.@internal.cpu_package;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct adjustinfo
        {
            // Constructors
            public adjustinfo(NilType _)
            {
                this.old = default;
                this.delta = default;
                this.cache = default;
                this.sghi = default;
            }

            public adjustinfo(stack old = default, System.UIntPtr delta = default, pcvalueCache cache = default, System.UIntPtr sghi = default)
            {
                this.old = old;
                this.delta = delta;
                this.cache = cache;
                this.sghi = sghi;
            }

            // Enable comparisons between nil and adjustinfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(adjustinfo value, NilType nil) => value.Equals(default(adjustinfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(adjustinfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, adjustinfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, adjustinfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator adjustinfo(NilType nil) => default(adjustinfo);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static adjustinfo adjustinfo_cast(dynamic value)
        {
            return new adjustinfo(value.old, value.delta, value.cache, value.sghi);
        }
    }
}