//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:21:26 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using atomic = go.runtime.@internal.atomic_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct bucket
        {
            // Constructors
            public bucket(NilType _)
            {
                this.next = default;
                this.allnext = default;
                this.typ = default;
                this.hash = default;
                this.size = default;
                this.nstk = default;
            }

            public bucket(ref ptr<bucket> next = default, ref ptr<bucket> allnext = default, bucketType typ = default, System.UIntPtr hash = default, System.UIntPtr size = default, System.UIntPtr nstk = default)
            {
                this.next = next;
                this.allnext = allnext;
                this.typ = typ;
                this.hash = hash;
                this.size = size;
                this.nstk = nstk;
            }

            // Enable comparisons between nil and bucket struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(bucket value, NilType nil) => value.Equals(default(bucket));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(bucket value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, bucket value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, bucket value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator bucket(NilType nil) => default(bucket);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static bucket bucket_cast(dynamic value)
        {
            return new bucket(ref value.next, ref value.allnext, value.typ, value.hash, value.size, value.nstk);
        }
    }
}