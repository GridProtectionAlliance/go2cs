//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:24:11 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct traceStack
        {
            // Constructors
            public traceStack(NilType _)
            {
                this.link = default;
                this.hash = default;
                this.id = default;
                this.n = default;
                this.stk = default;
            }

            public traceStack(traceStackPtr link = default, System.UIntPtr hash = default, uint id = default, long n = default, array<System.UIntPtr> stk = default)
            {
                this.link = link;
                this.hash = hash;
                this.id = id;
                this.n = n;
                this.stk = stk;
            }

            // Enable comparisons between nil and traceStack struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(traceStack value, NilType nil) => value.Equals(default(traceStack));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(traceStack value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, traceStack value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, traceStack value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator traceStack(NilType nil) => default(traceStack);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static traceStack traceStack_cast(dynamic value)
        {
            return new traceStack(value.link, value.hash, value.id, value.n, value.stk);
        }
    }
}