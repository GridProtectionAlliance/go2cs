//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:46:16 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using atomic = go.runtime.@internal.atomic_package;
using math = go.runtime.@internal.math_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct hmap
        {
            // Constructors
            public hmap(NilType _)
            {
                this.count = default;
                this.flags = default;
                this.B = default;
                this.noverflow = default;
                this.hash0 = default;
                this.buckets = default;
                this.oldbuckets = default;
                this.nevacuate = default;
                this.extra = default;
            }

            public hmap(long count = default, byte flags = default, byte B = default, ushort noverflow = default, uint hash0 = default, unsafe.Pointer buckets = default, unsafe.Pointer oldbuckets = default, System.UIntPtr nevacuate = default, ref ptr<mapextra> extra = default)
            {
                this.count = count;
                this.flags = flags;
                this.B = B;
                this.noverflow = noverflow;
                this.hash0 = hash0;
                this.buckets = buckets;
                this.oldbuckets = oldbuckets;
                this.nevacuate = nevacuate;
                this.extra = extra;
            }

            // Enable comparisons between nil and hmap struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(hmap value, NilType nil) => value.Equals(default(hmap));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(hmap value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, hmap value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, hmap value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator hmap(NilType nil) => default(hmap);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static hmap hmap_cast(dynamic value)
        {
            return new hmap(value.count, value.flags, value.B, value.noverflow, value.hash0, value.buckets, value.oldbuckets, value.nevacuate, ref value.extra);
        }
    }
}