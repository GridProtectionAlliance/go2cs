{"Files":{"C:\\Program Files\\Go\\src\\runtime\\metrics\\description.go":{"Package":"metrics","PackageImport":"runtime/metrics","SourceFileName":"C:\\Program Files\\Go\\src\\runtime\\metrics\\description.go","TargetFileName":"D:\\Projects\\go2cs\\src\\go-src-converted\\runtime\\metrics\\description.cs","ImportAliases":{},"Interfaces":{},"Structs":{"Description":{"Name":"Description","Fields":[{"Name":"Name","Type":{"Name":"string","TypeName":"@string","FullTypeName":"@string","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":" \r\n\r\n// Description is an English language sentence describing the metric.\r\n","IsPromoted":false},{"Name":"Description","Type":{"Name":"string","TypeName":"@string","FullTypeName":"@string","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":" \r\n\r\n// Kind is the kind of value for this metric.\r\n//\r\n// The purpose of this field is to allow users to filter out metrics whose values are\r\n// types which their application may not understand.\r\n","IsPromoted":false},{"Name":"Kind","Type":{"Name":"ValueKind","TypeName":"ValueKind","FullTypeName":"ValueKind","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":" \r\n\r\n// Cumulative is whether or not the metric is cumulative. If a cumulative metric is just\r\n// a single number, then it increases monotonically. If the metric is a distribution,\r\n// then each bucket count increases monotonically.\r\n//\r\n// This flag thus indicates whether or not it\u0027s useful to compute a rate from this value.\r\n","IsPromoted":false},{"Name":"Cumulative","Type":{"Name":"bool","TypeName":"bool","FullTypeName":"bool","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":"\r\n","IsPromoted":false}]}},"Functions":{"All()":{"Signature":{"Name":"All","Signature":{"Parameters":[],"Result":[{"Name":"","Type":{"Name":"Description","TypeName":"slice\u003CDescription\u003E","FullTypeName":"go.slice\u003CDescription\u003E","TypeClass":2,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}]},"Comments":"","IsPromoted":false},"Variables":{},"HasDefer":false,"HasPanic":false,"HasRecover":false}},"LastUpdate":"2022-03-13T03:58:55.2059426Z"},"C:\\Program Files\\Go\\src\\runtime\\metrics\\doc.go":{"Package":"metrics","PackageImport":"runtime/metrics","SourceFileName":"C:\\Program Files\\Go\\src\\runtime\\metrics\\doc.go","TargetFileName":"D:\\Projects\\go2cs\\src\\go-src-converted\\runtime\\metrics\\doc.cs","ImportAliases":{},"Interfaces":{},"Structs":{},"Functions":{},"LastUpdate":"2022-03-13T03:58:55.2306062Z"},"C:\\Program Files\\Go\\src\\runtime\\metrics\\histogram.go":{"Package":"metrics","PackageImport":"runtime/metrics","SourceFileName":"C:\\Program Files\\Go\\src\\runtime\\metrics\\histogram.go","TargetFileName":"D:\\Projects\\go2cs\\src\\go-src-converted\\runtime\\metrics\\histogram.cs","ImportAliases":{},"Interfaces":{},"Structs":{"Float64Histogram":{"Name":"Float64Histogram","Fields":[{"Name":"Counts","Type":{"Name":"uint64","TypeName":"slice\u003Culong\u003E","FullTypeName":"go.slice\u003Culong\u003E","TypeClass":2,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":" \r\n\r\n// Buckets contains the boundaries of the histogram buckets, in increasing order.\r\n//\r\n// Buckets[0] is the inclusive lower bound of the minimum bucket while\r\n// Buckets[len(Buckets)-1] is the exclusive upper bound of the maximum bucket.\r\n// Hence, there are len(Buckets)-1 counts. Furthermore, len(Buckets) != 1, always,\r\n// since at least two boundaries are required to describe one bucket (and 0\r\n// boundaries are used to describe 0 buckets).\r\n//\r\n// Buckets[0] is permitted to have value -Inf and Buckets[len(Buckets)-1] is\r\n// permitted to have value Inf.\r\n//\r\n// For a given metric name, the value of Buckets is guaranteed not to change\r\n// between calls until program exit.\r\n//\r\n// This slice value is permitted to alias with other Float64Histograms\u0027 Buckets\r\n// fields, so the values within should only ever be read. If they need to be\r\n// modified, the user must make a copy.\r\n","IsPromoted":false},{"Name":"Buckets","Type":{"Name":"float64","TypeName":"slice\u003Cdouble\u003E","FullTypeName":"go.slice\u003Cdouble\u003E","TypeClass":2,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":"\r\n","IsPromoted":false}]}},"Functions":{},"LastUpdate":"2022-03-13T03:58:55.2459507Z"},"C:\\Program Files\\Go\\src\\runtime\\metrics\\sample.go":{"Package":"metrics","PackageImport":"runtime/metrics","SourceFileName":"C:\\Program Files\\Go\\src\\runtime\\metrics\\sample.go","TargetFileName":"D:\\Projects\\go2cs\\src\\go-src-converted\\runtime\\metrics\\sample.cs","ImportAliases":{"_runtime_":{"Item1":"runtime","Item2":"go.runtime_package"},"@unsafe":{"Item1":"unsafe","Item2":"go.@unsafe_package"}},"Interfaces":{},"Structs":{"Sample":{"Name":"Sample","Fields":[{"Name":"Name","Type":{"Name":"string","TypeName":"@string","FullTypeName":"@string","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":" \r\n\r\n// Value is the value of the metric sample.\r\n","IsPromoted":false},{"Name":"Value","Type":{"Name":"Value","TypeName":"Value","FullTypeName":"Value","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":"\r\n","IsPromoted":false}]}},"Functions":{"runtime_readMetrics()":{"Signature":{"Name":"runtime_readMetrics","Signature":{"Parameters":[{"Name":"_p0","Type":{"Name":"unsafe.Pointer","TypeName":"unsafe.Pointer","FullTypeName":"unsafe.Pointer","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false},{"Name":"_p0","Type":{"Name":"int","TypeName":"nint","FullTypeName":"nint","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false},{"Name":"_p0","Type":{"Name":"int","TypeName":"nint","FullTypeName":"nint","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}],"Result":[{"Name":"","Type":{"Name":"void","TypeName":"void","FullTypeName":"void","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}]},"Comments":"\r\n\r\n// Read populates each Value field in the given slice of metric samples.\r\n//\r\n// Desired metrics should be present in the slice with the appropriate name.\r\n// The user of this API is encouraged to re-use the same slice between calls for\r\n// efficiency, but is not required to do so.\r\n//\r\n// Note that re-use has some caveats. Notably, Values should not be read or\r\n// manipulated while a Read with that value is outstanding; that is a data race.\r\n// This property includes pointer-typed Values (for example, Float64Histogram)\r\n// whose underlying storage will be reused by Read when possible. To safely use\r\n// such values in a concurrent setting, all data must be deep-copied.\r\n//\r\n// It is safe to execute multiple Read calls concurrently, but their arguments\r\n// must share no underlying memory. When in doubt, create a new []Sample from\r\n// scratch, which is always safe, though may be inefficient.\r\n//\r\n// Sample values with names not appearing in All will have their Value populated\r\n// as KindBad to indicate that the name is unknown.\r\n","IsPromoted":false},"Variables":{},"HasDefer":false,"HasPanic":false,"HasRecover":false},"Read()":{"Signature":{"Name":"Read","Signature":{"Parameters":[{"Name":"m","Type":{"Name":"Sample","TypeName":"slice\u003CSample\u003E","FullTypeName":"go.slice\u003CSample\u003E","TypeClass":2,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}],"Result":[{"Name":"","Type":{"Name":"void","TypeName":"void","FullTypeName":"void","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}]},"Comments":"","IsPromoted":false},"Variables":{},"HasDefer":false,"HasPanic":false,"HasRecover":false}},"LastUpdate":"2022-03-13T03:58:55.2712897Z"},"C:\\Program Files\\Go\\src\\runtime\\metrics\\value.go":{"Package":"metrics","PackageImport":"runtime/metrics","SourceFileName":"C:\\Program Files\\Go\\src\\runtime\\metrics\\value.go","TargetFileName":"D:\\Projects\\go2cs\\src\\go-src-converted\\runtime\\metrics\\value.cs","ImportAliases":{"math":{"Item1":"math","Item2":"go.math_package"},"@unsafe":{"Item1":"unsafe","Item2":"go.@unsafe_package"}},"Interfaces":{},"Structs":{"Value":{"Name":"Value","Fields":[{"Name":"kind","Type":{"Name":"ValueKind","TypeName":"ValueKind","FullTypeName":"ValueKind","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":"\r\n","IsPromoted":false},{"Name":"scalar","Type":{"Name":"uint64","TypeName":"ulong","FullTypeName":"ulong","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":" // contains scalar values for scalar Kinds.\r\n","IsPromoted":false},{"Name":"pointer","Type":{"Name":"unsafe.Pointer","TypeName":"unsafe.Pointer","FullTypeName":"unsafe.Pointer","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Description":"","Comments":" // contains non-scalar values.\r\n","IsPromoted":false}]}},"Functions":{"Kind(Value)":{"Signature":{"DerivedFunctionSignature":0,"ReceiverParameters":[{"Name":"v","Type":{"Name":"Value","TypeName":"Value","FullTypeName":"Value","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}],"Name":"Kind","Signature":{"Parameters":[],"Result":[{"Name":"","Type":{"Name":"ValueKind","TypeName":"ValueKind","FullTypeName":"ValueKind","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}]},"Comments":"","IsPromoted":false},"Variables":{},"HasDefer":false,"HasPanic":false,"HasRecover":false},"Uint64(Value)":{"Signature":{"DerivedFunctionSignature":0,"ReceiverParameters":[{"Name":"v","Type":{"Name":"Value","TypeName":"Value","FullTypeName":"Value","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}],"Name":"Uint64","Signature":{"Parameters":[],"Result":[{"Name":"","Type":{"Name":"uint64","TypeName":"ulong","FullTypeName":"ulong","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}]},"Comments":"","IsPromoted":false},"Variables":{},"HasDefer":false,"HasPanic":true,"HasRecover":false},"Float64(Value)":{"Signature":{"DerivedFunctionSignature":0,"ReceiverParameters":[{"Name":"v","Type":{"Name":"Value","TypeName":"Value","FullTypeName":"Value","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}],"Name":"Float64","Signature":{"Parameters":[],"Result":[{"Name":"","Type":{"Name":"float64","TypeName":"double","FullTypeName":"double","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}]},"Comments":"","IsPromoted":false},"Variables":{},"HasDefer":false,"HasPanic":true,"HasRecover":false},"Float64Histogram(Value)":{"Signature":{"DerivedFunctionSignature":0,"ReceiverParameters":[{"Name":"v","Type":{"Name":"Value","TypeName":"Value","FullTypeName":"Value","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}],"Name":"Float64Histogram","Signature":{"Parameters":[],"Result":[{"Name":"","Type":{"DerivedTypeInfo":0,"TargetTypeInfo":{"Name":"Float64Histogram","TypeName":"Float64Histogram","FullTypeName":"Float64Histogram","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"Name":"*Float64Histogram","TypeName":"ptr\u003CFloat64Histogram\u003E","FullTypeName":"ptr\u003CFloat64Histogram\u003E","TypeClass":0,"IsDerefPointer":false,"IsByRefPointer":false,"IsConst":false},"IsVariadic":false}]},"Comments":"","IsPromoted":false},"Variables":{},"HasDefer":false,"HasPanic":true,"HasRecover":false}},"LastUpdate":"2022-03-13T03:58:55.4291863Z"}}}