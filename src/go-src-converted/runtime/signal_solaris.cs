// Copyright 2014 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// package runtime -- go2cs converted at 2022 March 06 22:11:44 UTC
// import "runtime" ==> using runtime = go.runtime_package
// Original source: C:\Program Files\Go\src\runtime\signal_solaris.go


namespace go;

public static partial class runtime_package {

private static array<sigTabT> sigtable = new array<sigTabT>(new sigTabT[] { {0,"SIGNONE: no trap"}, {_SigNotify+_SigKill,"SIGHUP: hangup"}, {_SigNotify+_SigKill,"SIGINT: interrupt (rubout)"}, {_SigNotify+_SigThrow,"SIGQUIT: quit (ASCII FS)"}, {_SigThrow+_SigUnblock,"SIGILL: illegal instruction (not reset when caught)"}, {_SigThrow+_SigUnblock,"SIGTRAP: trace trap (not reset when caught)"}, {_SigNotify+_SigThrow,"SIGABRT: used by abort, replace SIGIOT in the future"}, {_SigThrow,"SIGEMT: EMT instruction"}, {_SigPanic+_SigUnblock,"SIGFPE: floating point exception"}, {0,"SIGKILL: kill (cannot be caught or ignored)"}, {_SigPanic+_SigUnblock,"SIGBUS: bus error"}, {_SigPanic+_SigUnblock,"SIGSEGV: segmentation violation"}, {_SigThrow,"SIGSYS: bad argument to system call"}, {_SigNotify,"SIGPIPE: write on a pipe with no one to read it"}, {_SigNotify,"SIGALRM: alarm clock"}, {_SigNotify+_SigKill,"SIGTERM: software termination signal from kill"}, {_SigNotify,"SIGUSR1: user defined signal 1"}, {_SigNotify,"SIGUSR2: user defined signal 2"}, {_SigNotify+_SigUnblock+_SigIgn,"SIGCHLD: child status change alias (POSIX)"}, {_SigNotify,"SIGPWR: power-fail restart"}, {_SigNotify+_SigIgn,"SIGWINCH: window size change"}, {_SigNotify+_SigIgn,"SIGURG: urgent socket condition"}, {_SigNotify,"SIGPOLL: pollable event occurred"}, {0,"SIGSTOP: stop (cannot be caught or ignored)"}, {_SigNotify+_SigDefault+_SigIgn,"SIGTSTP: user stop requested from tty"}, {_SigNotify+_SigDefault+_SigIgn,"SIGCONT: stopped process has been continued"}, {_SigNotify+_SigDefault+_SigIgn,"SIGTTIN: background tty read attempted"}, {_SigNotify+_SigDefault+_SigIgn,"SIGTTOU: background tty write attempted"}, {_SigNotify,"SIGVTALRM: virtual timer expired"}, {_SigNotify+_SigUnblock,"SIGPROF: profiling timer expired"}, {_SigNotify,"SIGXCPU: exceeded cpu limit"}, {_SigNotify,"SIGXFSZ: exceeded file size limit"}, {_SigNotify,"SIGWAITING: reserved signal no longer used by"}, {_SigNotify,"SIGLWP: reserved signal no longer used by"}, {_SigNotify,"SIGFREEZE: special signal used by CPR"}, {_SigNotify,"SIGTHAW: special signal used by CPR"}, {_SigSetStack+_SigUnblock,"SIGCANCEL: reserved signal for thread cancellation"}, {_SigNotify,"SIGLOST: resource lost (eg, record-lock lost)"}, {_SigNotify,"SIGXRES: resource control exceeded"}, {_SigNotify,"SIGJVM1: reserved signal for Java Virtual Machine"}, {_SigNotify,"SIGJVM2: reserved signal for Java Virtual Machine"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"}, {_SigNotify,"real time signal"} });

} // end runtime_package
