//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:10:11 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct heapStatsDelta
        {
            // Constructors
            public heapStatsDelta(NilType _)
            {
                this.committed = default;
                this.released = default;
                this.inHeap = default;
                this.inStacks = default;
                this.inWorkBufs = default;
                this.inPtrScalarBits = default;
                this.tinyAllocCount = default;
                this.largeAlloc = default;
                this.largeAllocCount = default;
                this.smallAllocCount = default;
                this.largeFree = default;
                this.largeFreeCount = default;
                this.smallFreeCount = default;
                this._ = default;
            }

            public heapStatsDelta(long committed = default, long released = default, long inHeap = default, long inStacks = default, long inWorkBufs = default, long inPtrScalarBits = default, System.UIntPtr tinyAllocCount = default, System.UIntPtr largeAlloc = default, System.UIntPtr largeAllocCount = default, array<System.UIntPtr> smallAllocCount = default, System.UIntPtr largeFree = default, System.UIntPtr largeFreeCount = default, array<System.UIntPtr> smallFreeCount = default, array<uint> _ = default)
            {
                this.committed = committed;
                this.released = released;
                this.inHeap = inHeap;
                this.inStacks = inStacks;
                this.inWorkBufs = inWorkBufs;
                this.inPtrScalarBits = inPtrScalarBits;
                this.tinyAllocCount = tinyAllocCount;
                this.largeAlloc = largeAlloc;
                this.largeAllocCount = largeAllocCount;
                this.smallAllocCount = smallAllocCount;
                this.largeFree = largeFree;
                this.largeFreeCount = largeFreeCount;
                this.smallFreeCount = smallFreeCount;
                this._ = _;
            }

            // Enable comparisons between nil and heapStatsDelta struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(heapStatsDelta value, NilType nil) => value.Equals(default(heapStatsDelta));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(heapStatsDelta value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, heapStatsDelta value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, heapStatsDelta value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator heapStatsDelta(NilType nil) => default(heapStatsDelta);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static heapStatsDelta heapStatsDelta_cast(dynamic value)
        {
            return new heapStatsDelta(value.committed, value.released, value.inHeap, value.inStacks, value.inWorkBufs, value.inPtrScalarBits, value.tinyAllocCount, value.largeAlloc, value.largeAllocCount, value.smallAllocCount, value.largeFree, value.largeFreeCount, value.smallFreeCount, value._);
        }
    }
}