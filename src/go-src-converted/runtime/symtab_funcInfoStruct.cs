//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:27:14 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct funcInfo
        {
            // Constructors
            public funcInfo(NilType _)
            {
                this.ptr<_func> = default;
                this.datap = default;
            }

            public funcInfo(ref ptr<_func> ptr<_func> = default, ref ptr<moduledata> datap = default)
            {
                this.ptr<_func> = ptr<_func>;
                this.datap = datap;
            }

            // Enable comparisons between nil and funcInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(funcInfo value, NilType nil) => value.Equals(default(funcInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(funcInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, funcInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, funcInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator funcInfo(NilType nil) => default(funcInfo);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static funcInfo funcInfo_cast(dynamic value)
        {
            return new funcInfo(ref value.ptr<_func>, ref value.datap);
        }
    }
}