//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:11:11 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using abi = go.@internal.abi_package;
using cpu = go.@internal.cpu_package;
using goexperiment = go.@internal.goexperiment_package;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct sysmontick
        {
            // Constructors
            public sysmontick(NilType _)
            {
                this.schedtick = default;
                this.schedwhen = default;
                this.syscalltick = default;
                this.syscallwhen = default;
            }

            public sysmontick(uint schedtick = default, long schedwhen = default, uint syscalltick = default, long syscallwhen = default)
            {
                this.schedtick = schedtick;
                this.schedwhen = schedwhen;
                this.syscalltick = syscalltick;
                this.syscallwhen = syscallwhen;
            }

            // Enable comparisons between nil and sysmontick struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sysmontick value, NilType nil) => value.Equals(default(sysmontick));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sysmontick value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sysmontick value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sysmontick value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sysmontick(NilType nil) => default(sysmontick);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static sysmontick sysmontick_cast(dynamic value)
        {
            return new sysmontick(value.schedtick, value.schedwhen, value.syscalltick, value.syscallwhen);
        }
    }
}