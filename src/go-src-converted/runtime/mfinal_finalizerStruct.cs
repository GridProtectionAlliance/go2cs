//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:25:14 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using abi = go.@internal.abi_package;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct finalizer
        {
            // Constructors
            public finalizer(NilType _)
            {
                this.fn = default;
                this.arg = default;
                this.nret = default;
                this.fint = default;
                this.ot = default;
            }

            public finalizer(ref ptr<funcval> fn = default, unsafe.Pointer arg = default, System.UIntPtr nret = default, ref ptr<_type> fint = default, ref ptr<ptrtype> ot = default)
            {
                this.fn = fn;
                this.arg = arg;
                this.nret = nret;
                this.fint = fint;
                this.ot = ot;
            }

            // Enable comparisons between nil and finalizer struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(finalizer value, NilType nil) => value.Equals(default(finalizer));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(finalizer value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, finalizer value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, finalizer value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator finalizer(NilType nil) => default(finalizer);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static finalizer finalizer_cast(dynamic value)
        {
            return new finalizer(ref value.fn, value.arg, value.nret, ref value.fint, ref value.ot);
        }
    }
}