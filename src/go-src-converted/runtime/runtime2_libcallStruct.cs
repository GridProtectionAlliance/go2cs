//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:11:17 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using atomic = go.runtime.@internal.atomic_package;
using sys = go.runtime.@internal.sys_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct libcall
        {
            // Constructors
            public libcall(NilType _)
            {
                this.fn = default;
                this.n = default;
                this.args = default;
                this.r1 = default;
                this.r2 = default;
                this.err = default;
            }

            public libcall(System.UIntPtr fn = default, System.UIntPtr n = default, System.UIntPtr args = default, System.UIntPtr r1 = default, System.UIntPtr r2 = default, System.UIntPtr err = default)
            {
                this.fn = fn;
                this.n = n;
                this.args = args;
                this.r1 = r1;
                this.r2 = r2;
                this.err = err;
            }

            // Enable comparisons between nil and libcall struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(libcall value, NilType nil) => value.Equals(default(libcall));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(libcall value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, libcall value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, libcall value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator libcall(NilType nil) => default(libcall);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static libcall libcall_cast(dynamic value)
        {
            return new libcall(value.fn, value.n, value.args, value.r1, value.r2, value.err);
        }
    }
}