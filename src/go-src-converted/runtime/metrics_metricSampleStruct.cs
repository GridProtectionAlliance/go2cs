//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:09:28 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using atomic = go.runtime.@internal.atomic_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct metricSample
        {
            // Constructors
            public metricSample(NilType _)
            {
                this.name = default;
                this.value = default;
            }

            public metricSample(@string name = default, metricValue value = default)
            {
                this.name = name;
                this.value = value;
            }

            // Enable comparisons between nil and metricSample struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(metricSample value, NilType nil) => value.Equals(default(metricSample));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(metricSample value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, metricSample value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, metricSample value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator metricSample(NilType nil) => default(metricSample);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static metricSample metricSample_cast(dynamic value)
        {
            return new metricSample(value.name, value.value);
        }
    }
}