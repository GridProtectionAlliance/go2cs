//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:24:19 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class runtime_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct uncommontype
        {
            // Constructors
            public uncommontype(NilType _)
            {
                this.pkgpath = default;
                this.mcount = default;
                this.xcount = default;
                this.moff = default;
                this._ = default;
            }

            public uncommontype(nameOff pkgpath = default, ushort mcount = default, ushort xcount = default, uint moff = default, uint _ = default)
            {
                this.pkgpath = pkgpath;
                this.mcount = mcount;
                this.xcount = xcount;
                this.moff = moff;
                this._ = _;
            }

            // Enable comparisons between nil and uncommontype struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(uncommontype value, NilType nil) => value.Equals(default(uncommontype));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(uncommontype value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, uncommontype value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, uncommontype value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator uncommontype(NilType nil) => default(uncommontype);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static uncommontype uncommontype_cast(dynamic value)
        {
            return new uncommontype(value.pkgpath, value.mcount, value.xcount, value.moff, value._);
        }
    }
}