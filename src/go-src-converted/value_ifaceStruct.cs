//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:33:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using types = go.go.types_package;
using io = go.io_package;
using reflect = go.reflect_package;
using strings = go.strings_package;
using sync = go.sync_package;
using @unsafe = go.@unsafe_package;
using ssa = go.golang.org.x.tools.go.ssa_package;
using typeutil = go.golang.org.x.tools.go.types.typeutil_package;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace ssa
{
    public static partial class interp_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct iface
        {
            // Constructors
            public iface(NilType _)
            {
                this.t = default;
                this.v = default;
            }

            public iface(types.Type t = default, value v = default)
            {
                this.t = t;
                this.v = v;
            }

            // Enable comparisons between nil and iface struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(iface value, NilType nil) => value.Equals(default(iface));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(iface value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, iface value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, iface value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator iface(NilType nil) => default(iface);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static iface iface_cast(dynamic value)
        {
            return new iface(value.t, value.v);
        }
    }
}}}}}}