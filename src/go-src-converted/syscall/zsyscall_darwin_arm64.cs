// mksyscall.pl -darwin -tags darwin,arm64 syscall_bsd.go syscall_darwin.go syscall_darwin_arm64.go
// Code generated by the command above; DO NOT EDIT.

// +build darwin,arm64

// package syscall -- go2cs converted at 2020 October 08 03:28:15 UTC
// import "syscall" ==> using syscall = go.syscall_package
// Original source: C:\Go\src\syscall\zsyscall_darwin_arm64.go
using @unsafe = go.@unsafe_package;
using static go.builtin;

namespace go
{
    public static partial class syscall_package
    {
        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
        private static (long, error) getgroups(long ngid, ptr<_Gid_t> _addr_gid)
        {
            long n = default;
            error err = default!;
            ref _Gid_t gid = ref _addr_gid.val;

            var (r0, _, e1) = rawSyscall(funcPC(libc_getgroups_trampoline), uintptr(ngid), uintptr(@unsafe.Pointer(gid)), 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return ;

        }

        private static void libc_getgroups_trampoline()
;

        //go:linkname libc_getgroups libc_getgroups
        //go:cgo_import_dynamic libc_getgroups getgroups "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error setgroups(long ngid, ptr<_Gid_t> _addr_gid)
        {
            error err = default!;
            ref _Gid_t gid = ref _addr_gid.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_setgroups_trampoline), uintptr(ngid), uintptr(@unsafe.Pointer(gid)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getgroups_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setgroups_trampoline()
;

        //go:linkname libc_setgroups libc_setgroups
        //go:cgo_import_dynamic libc_setgroups setgroups "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) wait4(long pid, ptr<_C_int> _addr_wstatus, long options, ptr<Rusage> _addr_rusage)
        {
            long wpid = default;
            error err = default!;
            ref _C_int wstatus = ref _addr_wstatus.val;
            ref Rusage rusage = ref _addr_rusage.val;

            var (r0, _, e1) = syscall6(funcPC(libc_wait4_trampoline), uintptr(pid), uintptr(@unsafe.Pointer(wstatus)), uintptr(options), uintptr(@unsafe.Pointer(rusage)), 0L, 0L);
            wpid = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setgroups_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_wait4_trampoline()
;

        //go:linkname libc_wait4 libc_wait4
        //go:cgo_import_dynamic libc_wait4 wait4 "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) accept(long s, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen)
        {
            long fd = default;
            error err = default!;
            ref RawSockaddrAny rsa = ref _addr_rsa.val;
            ref _Socklen addrlen = ref _addr_addrlen.val;

            var (r0, _, e1) = syscall(funcPC(libc_accept_trampoline), uintptr(s), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
            fd = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_wait4_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_accept_trampoline()
;

        //go:linkname libc_accept libc_accept
        //go:cgo_import_dynamic libc_accept accept "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error bind(long s, unsafe.Pointer addr, _Socklen addrlen)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_bind_trampoline), uintptr(s), uintptr(addr), uintptr(addrlen));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_accept_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_bind_trampoline()
;

        //go:linkname libc_bind libc_bind
        //go:cgo_import_dynamic libc_bind bind "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error connect(long s, unsafe.Pointer addr, _Socklen addrlen)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_connect_trampoline), uintptr(s), uintptr(addr), uintptr(addrlen));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_bind_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_connect_trampoline()
;

        //go:linkname libc_connect libc_connect
        //go:cgo_import_dynamic libc_connect connect "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) socket(long domain, long typ, long proto)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = rawSyscall(funcPC(libc_socket_trampoline), uintptr(domain), uintptr(typ), uintptr(proto));
            fd = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_connect_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_socket_trampoline()
;

        //go:linkname libc_socket libc_socket
        //go:cgo_import_dynamic libc_socket socket "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error getsockopt(long s, long level, long name, unsafe.Pointer val, ptr<_Socklen> _addr_vallen)
        {
            error err = default!;
            ref _Socklen vallen = ref _addr_vallen.val;

            var (_, _, e1) = syscall6(funcPC(libc_getsockopt_trampoline), uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(@unsafe.Pointer(vallen)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_socket_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getsockopt_trampoline()
;

        //go:linkname libc_getsockopt libc_getsockopt
        //go:cgo_import_dynamic libc_getsockopt getsockopt "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error setsockopt(long s, long level, long name, unsafe.Pointer val, System.UIntPtr vallen)
        {
            error err = default!;

            var (_, _, e1) = syscall6(funcPC(libc_setsockopt_trampoline), uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(vallen), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getsockopt_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setsockopt_trampoline()
;

        //go:linkname libc_setsockopt libc_setsockopt
        //go:cgo_import_dynamic libc_setsockopt setsockopt "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error getpeername(long fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen)
        {
            error err = default!;
            ref RawSockaddrAny rsa = ref _addr_rsa.val;
            ref _Socklen addrlen = ref _addr_addrlen.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_getpeername_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setsockopt_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getpeername_trampoline()
;

        //go:linkname libc_getpeername libc_getpeername
        //go:cgo_import_dynamic libc_getpeername getpeername "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error getsockname(long fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen)
        {
            error err = default!;
            ref RawSockaddrAny rsa = ref _addr_rsa.val;
            ref _Socklen addrlen = ref _addr_addrlen.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_getsockname_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getpeername_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getsockname_trampoline()
;

        //go:linkname libc_getsockname libc_getsockname
        //go:cgo_import_dynamic libc_getsockname getsockname "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Shutdown(long s, long how)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_shutdown_trampoline), uintptr(s), uintptr(how), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getsockname_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_shutdown_trampoline()
;

        //go:linkname libc_shutdown libc_shutdown
        //go:cgo_import_dynamic libc_shutdown shutdown "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error socketpair(long domain, long typ, long proto, ptr<array<int>> _addr_fd)
        {
            error err = default!;
            ref array<int> fd = ref _addr_fd.val;

            var (_, _, e1) = rawSyscall6(funcPC(libc_socketpair_trampoline), uintptr(domain), uintptr(typ), uintptr(proto), uintptr(@unsafe.Pointer(fd)), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_shutdown_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_socketpair_trampoline()
;

        //go:linkname libc_socketpair libc_socketpair
        //go:cgo_import_dynamic libc_socketpair socketpair "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) recvfrom(long fd, slice<byte> p, long flags, ptr<RawSockaddrAny> _addr_from, ptr<_Socklen> _addr_fromlen)
        {
            long n = default;
            error err = default!;
            ref RawSockaddrAny from = ref _addr_from.val;
            ref _Socklen fromlen = ref _addr_fromlen.val;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {>>MARKER:FUNCTION_libc_socketpair_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = syscall6(funcPC(libc_recvfrom_trampoline), uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(flags), uintptr(@unsafe.Pointer(from)), uintptr(@unsafe.Pointer(fromlen)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_recvfrom_trampoline()
;

        //go:linkname libc_recvfrom libc_recvfrom
        //go:cgo_import_dynamic libc_recvfrom recvfrom "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error sendto(long s, slice<byte> buf, long flags, unsafe.Pointer to, _Socklen addrlen)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {>>MARKER:FUNCTION_libc_recvfrom_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = syscall6(funcPC(libc_sendto_trampoline), uintptr(s), uintptr(_p0), uintptr(len(buf)), uintptr(flags), uintptr(to), uintptr(addrlen));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_sendto_trampoline()
;

        //go:linkname libc_sendto libc_sendto
        //go:cgo_import_dynamic libc_sendto sendto "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) recvmsg(long s, ptr<Msghdr> _addr_msg, long flags)
        {
            long n = default;
            error err = default!;
            ref Msghdr msg = ref _addr_msg.val;

            var (r0, _, e1) = syscall(funcPC(libc_recvmsg_trampoline), uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_sendto_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_recvmsg_trampoline()
;

        //go:linkname libc_recvmsg libc_recvmsg
        //go:cgo_import_dynamic libc_recvmsg recvmsg "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) sendmsg(long s, ptr<Msghdr> _addr_msg, long flags)
        {
            long n = default;
            error err = default!;
            ref Msghdr msg = ref _addr_msg.val;

            var (r0, _, e1) = syscall(funcPC(libc_sendmsg_trampoline), uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_recvmsg_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_sendmsg_trampoline()
;

        //go:linkname libc_sendmsg libc_sendmsg
        //go:cgo_import_dynamic libc_sendmsg sendmsg "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) kevent(long kq, unsafe.Pointer change, long nchange, unsafe.Pointer @event, long nevent, ptr<Timespec> _addr_timeout)
        {
            long n = default;
            error err = default!;
            ref Timespec timeout = ref _addr_timeout.val;

            var (r0, _, e1) = syscall6(funcPC(libc_kevent_trampoline), uintptr(kq), uintptr(change), uintptr(nchange), uintptr(event), uintptr(nevent), uintptr(@unsafe.Pointer(timeout)));
            n = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_sendmsg_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_kevent_trampoline()
;

        //go:linkname libc_kevent libc_kevent
        //go:cgo_import_dynamic libc_kevent kevent "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error utimes(@string path, ptr<array<Timeval>> _addr_timeval)
        {
            error err = default!;
            ref array<Timeval> timeval = ref _addr_timeval.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_kevent_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_utimes_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(timeval)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_utimes_trampoline()
;

        //go:linkname libc_utimes libc_utimes
        //go:cgo_import_dynamic libc_utimes utimes "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error futimes(long fd, ptr<array<Timeval>> _addr_timeval)
        {
            error err = default!;
            ref array<Timeval> timeval = ref _addr_timeval.val;

            var (_, _, e1) = syscall(funcPC(libc_futimes_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(timeval)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_utimes_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_futimes_trampoline()
;

        //go:linkname libc_futimes libc_futimes
        //go:cgo_import_dynamic libc_futimes futimes "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) fcntl(long fd, long cmd, long arg)
        {
            long val = default;
            error err = default!;

            var (r0, _, e1) = syscall(funcPC(libc_fcntl_trampoline), uintptr(fd), uintptr(cmd), uintptr(arg));
            val = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_futimes_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fcntl_trampoline()
;

        //go:linkname libc_fcntl libc_fcntl
        //go:cgo_import_dynamic libc_fcntl fcntl "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error pipe(ptr<array<int>> _addr_p)
        {
            error err = default!;
            ref array<int> p = ref _addr_p.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_pipe_trampoline), uintptr(@unsafe.Pointer(p)), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fcntl_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_pipe_trampoline()
;

        //go:linkname libc_pipe libc_pipe
        //go:cgo_import_dynamic libc_pipe pipe "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error kill(long pid, long signum, long posix)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_kill_trampoline), uintptr(pid), uintptr(signum), uintptr(posix));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_pipe_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_kill_trampoline()
;

        //go:linkname libc_kill libc_kill
        //go:cgo_import_dynamic libc_kill kill "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Access(@string path, uint mode)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_kill_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_access_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_access_trampoline()
;

        //go:linkname libc_access libc_access
        //go:cgo_import_dynamic libc_access access "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Adjtime(ptr<Timeval> _addr_delta, ptr<Timeval> _addr_olddelta)
        {
            error err = default!;
            ref Timeval delta = ref _addr_delta.val;
            ref Timeval olddelta = ref _addr_olddelta.val;

            var (_, _, e1) = syscall(funcPC(libc_adjtime_trampoline), uintptr(@unsafe.Pointer(delta)), uintptr(@unsafe.Pointer(olddelta)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_access_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_adjtime_trampoline()
;

        //go:linkname libc_adjtime libc_adjtime
        //go:cgo_import_dynamic libc_adjtime adjtime "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chdir(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_adjtime_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_chdir_trampoline), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_chdir_trampoline()
;

        //go:linkname libc_chdir libc_chdir
        //go:cgo_import_dynamic libc_chdir chdir "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chflags(@string path, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_chdir_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_chflags_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_chflags_trampoline()
;

        //go:linkname libc_chflags libc_chflags
        //go:cgo_import_dynamic libc_chflags chflags "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chmod(@string path, uint mode)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_chflags_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_chmod_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_chmod_trampoline()
;

        //go:linkname libc_chmod libc_chmod
        //go:cgo_import_dynamic libc_chmod chmod "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chown(@string path, long uid, long gid)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_chmod_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_chown_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_chown_trampoline()
;

        //go:linkname libc_chown libc_chown
        //go:cgo_import_dynamic libc_chown chown "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chroot(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_chown_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_chroot_trampoline), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_chroot_trampoline()
;

        //go:linkname libc_chroot libc_chroot
        //go:cgo_import_dynamic libc_chroot chroot "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Close(long fd)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_close_trampoline), uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_chroot_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_close_trampoline()
;

        //go:linkname libc_close libc_close
        //go:cgo_import_dynamic libc_close close "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error closedir(System.UIntPtr dir)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_closedir_trampoline), uintptr(dir), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_close_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_closedir_trampoline()
;

        //go:linkname libc_closedir libc_closedir
        //go:cgo_import_dynamic libc_closedir closedir "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Dup(long fd)
        {
            long nfd = default;
            error err = default!;

            var (r0, _, e1) = syscall(funcPC(libc_dup_trampoline), uintptr(fd), 0L, 0L);
            nfd = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_closedir_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_dup_trampoline()
;

        //go:linkname libc_dup libc_dup
        //go:cgo_import_dynamic libc_dup dup "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Dup2(long from, long to)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_dup2_trampoline), uintptr(from), uintptr(to), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_dup_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_dup2_trampoline()
;

        //go:linkname libc_dup2 libc_dup2
        //go:cgo_import_dynamic libc_dup2 dup2 "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Exchangedata(@string path1, @string path2, long options)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path1);
            if (err != null)
            {>>MARKER:FUNCTION_libc_dup2_trampoline_BLOCK_PREFIX<<
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(path2);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_exchangedata_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(options));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_exchangedata_trampoline()
;

        //go:linkname libc_exchangedata libc_exchangedata
        //go:cgo_import_dynamic libc_exchangedata exchangedata "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchdir(long fd)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_fchdir_trampoline), uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_exchangedata_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fchdir_trampoline()
;

        //go:linkname libc_fchdir libc_fchdir
        //go:cgo_import_dynamic libc_fchdir fchdir "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchflags(long fd, long flags)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_fchflags_trampoline), uintptr(fd), uintptr(flags), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fchdir_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fchflags_trampoline()
;

        //go:linkname libc_fchflags libc_fchflags
        //go:cgo_import_dynamic libc_fchflags fchflags "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchmod(long fd, uint mode)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_fchmod_trampoline), uintptr(fd), uintptr(mode), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fchflags_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fchmod_trampoline()
;

        //go:linkname libc_fchmod libc_fchmod
        //go:cgo_import_dynamic libc_fchmod fchmod "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchown(long fd, long uid, long gid)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_fchown_trampoline), uintptr(fd), uintptr(uid), uintptr(gid));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fchmod_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fchown_trampoline()
;

        //go:linkname libc_fchown libc_fchown
        //go:cgo_import_dynamic libc_fchown fchown "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Flock(long fd, long how)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_flock_trampoline), uintptr(fd), uintptr(how), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fchown_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_flock_trampoline()
;

        //go:linkname libc_flock libc_flock
        //go:cgo_import_dynamic libc_flock flock "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Fpathconf(long fd, long name)
        {
            long val = default;
            error err = default!;

            var (r0, _, e1) = syscall(funcPC(libc_fpathconf_trampoline), uintptr(fd), uintptr(name), 0L);
            val = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_flock_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fpathconf_trampoline()
;

        //go:linkname libc_fpathconf libc_fpathconf
        //go:cgo_import_dynamic libc_fpathconf fpathconf "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fsync(long fd)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_fsync_trampoline), uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fpathconf_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fsync_trampoline()
;

        //go:linkname libc_fsync libc_fsync
        //go:cgo_import_dynamic libc_fsync fsync "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Ftruncate(long fd, long length)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_ftruncate_trampoline), uintptr(fd), uintptr(length), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fsync_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_ftruncate_trampoline()
;

        //go:linkname libc_ftruncate libc_ftruncate
        //go:cgo_import_dynamic libc_ftruncate ftruncate "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getdtablesize()
        {
            long size = default;

            var (r0, _, _) = syscall(funcPC(libc_getdtablesize_trampoline), 0L, 0L, 0L);
            size = int(r0);
            return ;
        }

        private static void libc_getdtablesize_trampoline()
;

        //go:linkname libc_getdtablesize libc_getdtablesize
        //go:cgo_import_dynamic libc_getdtablesize getdtablesize "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getegid()
        {
            long egid = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_getegid_trampoline), 0L, 0L, 0L);
            egid = int(r0);
            return ;
        }

        private static void libc_getegid_trampoline()
;

        //go:linkname libc_getegid libc_getegid
        //go:cgo_import_dynamic libc_getegid getegid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Geteuid()
        {
            long uid = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_geteuid_trampoline), 0L, 0L, 0L);
            uid = int(r0);
            return ;
        }

        private static void libc_geteuid_trampoline()
;

        //go:linkname libc_geteuid libc_geteuid
        //go:cgo_import_dynamic libc_geteuid geteuid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getgid()
        {
            long gid = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_getgid_trampoline), 0L, 0L, 0L);
            gid = int(r0);
            return ;
        }

        private static void libc_getgid_trampoline()
;

        //go:linkname libc_getgid libc_getgid
        //go:cgo_import_dynamic libc_getgid getgid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getpgid(long pid)
        {
            long pgid = default;
            error err = default!;

            var (r0, _, e1) = rawSyscall(funcPC(libc_getpgid_trampoline), uintptr(pid), 0L, 0L);
            pgid = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getgid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getpgid_trampoline()
;

        //go:linkname libc_getpgid libc_getpgid
        //go:cgo_import_dynamic libc_getpgid getpgid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getpgrp()
        {
            long pgrp = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_getpgrp_trampoline), 0L, 0L, 0L);
            pgrp = int(r0);
            return ;
        }

        private static void libc_getpgrp_trampoline()
;

        //go:linkname libc_getpgrp libc_getpgrp
        //go:cgo_import_dynamic libc_getpgrp getpgrp "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getpid()
        {
            long pid = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_getpid_trampoline), 0L, 0L, 0L);
            pid = int(r0);
            return ;
        }

        private static void libc_getpid_trampoline()
;

        //go:linkname libc_getpid libc_getpid
        //go:cgo_import_dynamic libc_getpid getpid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getppid()
        {
            long ppid = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_getppid_trampoline), 0L, 0L, 0L);
            ppid = int(r0);
            return ;
        }

        private static void libc_getppid_trampoline()
;

        //go:linkname libc_getppid libc_getppid
        //go:cgo_import_dynamic libc_getppid getppid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getpriority(long which, long who)
        {
            long prio = default;
            error err = default!;

            var (r0, _, e1) = syscall(funcPC(libc_getpriority_trampoline), uintptr(which), uintptr(who), 0L);
            prio = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getppid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getpriority_trampoline()
;

        //go:linkname libc_getpriority libc_getpriority
        //go:cgo_import_dynamic libc_getpriority getpriority "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Getrlimit(long which, ptr<Rlimit> _addr_lim)
        {
            error err = default!;
            ref Rlimit lim = ref _addr_lim.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_getrlimit_trampoline), uintptr(which), uintptr(@unsafe.Pointer(lim)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getpriority_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getrlimit_trampoline()
;

        //go:linkname libc_getrlimit libc_getrlimit
        //go:cgo_import_dynamic libc_getrlimit getrlimit "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Getrusage(long who, ptr<Rusage> _addr_rusage)
        {
            error err = default!;
            ref Rusage rusage = ref _addr_rusage.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_getrusage_trampoline), uintptr(who), uintptr(@unsafe.Pointer(rusage)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getrlimit_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getrusage_trampoline()
;

        //go:linkname libc_getrusage libc_getrusage
        //go:cgo_import_dynamic libc_getrusage getrusage "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getsid(long pid)
        {
            long sid = default;
            error err = default!;

            var (r0, _, e1) = rawSyscall(funcPC(libc_getsid_trampoline), uintptr(pid), 0L, 0L);
            sid = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getrusage_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_getsid_trampoline()
;

        //go:linkname libc_getsid libc_getsid
        //go:cgo_import_dynamic libc_getsid getsid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getuid()
        {
            long uid = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_getuid_trampoline), 0L, 0L, 0L);
            uid = int(r0);
            return ;
        }

        private static void libc_getuid_trampoline()
;

        //go:linkname libc_getuid libc_getuid
        //go:cgo_import_dynamic libc_getuid getuid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static bool Issetugid()
        {
            bool tainted = default;

            var (r0, _, _) = rawSyscall(funcPC(libc_issetugid_trampoline), 0L, 0L, 0L);
            tainted = bool(r0 != 0L);
            return ;
        }

        private static void libc_issetugid_trampoline()
;

        //go:linkname libc_issetugid libc_issetugid
        //go:cgo_import_dynamic libc_issetugid issetugid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Kqueue()
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = syscall(funcPC(libc_kqueue_trampoline), 0L, 0L, 0L);
            fd = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_issetugid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_kqueue_trampoline()
;

        //go:linkname libc_kqueue libc_kqueue
        //go:cgo_import_dynamic libc_kqueue kqueue "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Lchown(@string path, long uid, long gid)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_kqueue_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_lchown_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getuid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_lchown_trampoline()
;

        //go:linkname libc_lchown libc_lchown
        //go:cgo_import_dynamic libc_lchown lchown "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Link(@string path, @string link)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_lchown_trampoline_BLOCK_PREFIX<<
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(link);
            if (err != null)
            {>>MARKER:FUNCTION_libc_getsid_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_link_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getpid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_link_trampoline()
;

        //go:linkname libc_link libc_link
        //go:cgo_import_dynamic libc_link link "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Listen(long s, long backlog)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_listen_trampoline), uintptr(s), uintptr(backlog), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_link_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_listen_trampoline()
;

        //go:linkname libc_listen libc_listen
        //go:cgo_import_dynamic libc_listen listen "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mkdir(@string path, uint mode)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_listen_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_mkdir_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getpgrp_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_mkdir_trampoline()
;

        //go:linkname libc_mkdir libc_mkdir
        //go:cgo_import_dynamic libc_mkdir mkdir "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mkfifo(@string path, uint mode)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_mkdir_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_mkfifo_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getpgid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_mkfifo_trampoline()
;

        //go:linkname libc_mkfifo libc_mkfifo
        //go:cgo_import_dynamic libc_mkfifo mkfifo "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mknod(@string path, uint mode, long dev)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_mkfifo_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_mknod_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_geteuid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_mknod_trampoline()
;

        //go:linkname libc_mknod libc_mknod
        //go:cgo_import_dynamic libc_mknod mknod "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mlock(slice<byte> b)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {>>MARKER:FUNCTION_libc_mknod_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {>>MARKER:FUNCTION_libc_getegid_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = syscall(funcPC(libc_mlock_trampoline), uintptr(_p0), uintptr(len(b)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_getdtablesize_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_mlock_trampoline()
;

        //go:linkname libc_mlock libc_mlock
        //go:cgo_import_dynamic libc_mlock mlock "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mlockall(long flags)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_mlockall_trampoline), uintptr(flags), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_mlock_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_mlockall_trampoline()
;

        //go:linkname libc_mlockall libc_mlockall
        //go:cgo_import_dynamic libc_mlockall mlockall "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mprotect(slice<byte> b, long prot)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {>>MARKER:FUNCTION_libc_mlockall_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {>>MARKER:FUNCTION_libc_ftruncate_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = syscall(funcPC(libc_mprotect_trampoline), uintptr(_p0), uintptr(len(b)), uintptr(prot));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_mprotect_trampoline()
;

        //go:linkname libc_mprotect libc_mprotect
        //go:cgo_import_dynamic libc_mprotect mprotect "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Munlock(slice<byte> b)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {>>MARKER:FUNCTION_libc_mprotect_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = syscall(funcPC(libc_munlock_trampoline), uintptr(_p0), uintptr(len(b)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_munlock_trampoline()
;

        //go:linkname libc_munlock libc_munlock
        //go:cgo_import_dynamic libc_munlock munlock "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Munlockall()
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_munlockall_trampoline), 0L, 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_munlock_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_munlockall_trampoline()
;

        //go:linkname libc_munlockall libc_munlockall
        //go:cgo_import_dynamic libc_munlockall munlockall "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Open(@string path, long mode, uint perm)
        {
            long fd = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_munlockall_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (r0, _, e1) = syscall(funcPC(libc_open_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm));
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_open_trampoline()
;

        //go:linkname libc_open libc_open
        //go:cgo_import_dynamic libc_open open "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pathconf(@string path, long name)
        {
            long val = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_open_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (r0, _, e1) = syscall(funcPC(libc_pathconf_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(name), 0L);
            val = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_pathconf_trampoline()
;

        //go:linkname libc_pathconf libc_pathconf
        //go:cgo_import_dynamic libc_pathconf pathconf "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pread(long fd, slice<byte> p, long offset)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {>>MARKER:FUNCTION_libc_pathconf_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = syscall6(funcPC(libc_pread_trampoline), uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0L, 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_pread_trampoline()
;

        //go:linkname libc_pread libc_pread
        //go:cgo_import_dynamic libc_pread pread "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pwrite(long fd, slice<byte> p, long offset)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {>>MARKER:FUNCTION_libc_pread_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = syscall6(funcPC(libc_pwrite_trampoline), uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0L, 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_pwrite_trampoline()
;

        //go:linkname libc_pwrite libc_pwrite
        //go:cgo_import_dynamic libc_pwrite pwrite "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) read(long fd, slice<byte> p)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {>>MARKER:FUNCTION_libc_pwrite_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = syscall(funcPC(libc_read_trampoline), uintptr(fd), uintptr(_p0), uintptr(len(p)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_read_trampoline()
;

        //go:linkname libc_read libc_read
        //go:cgo_import_dynamic libc_read read "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static Errno readdir_r(System.UIntPtr dir, ptr<Dirent> _addr_entry, ptr<ptr<Dirent>> _addr_result)
        {
            Errno res = default;
            ref Dirent entry = ref _addr_entry.val;
            ref ptr<Dirent> result = ref _addr_result.val;

            var (r0, _, _) = syscall(funcPC(libc_readdir_r_trampoline), uintptr(dir), uintptr(@unsafe.Pointer(entry)), uintptr(@unsafe.Pointer(result)));
            res = Errno(r0);
            return ;
        }

        private static void libc_readdir_r_trampoline()
;

        //go:linkname libc_readdir_r libc_readdir_r
        //go:cgo_import_dynamic libc_readdir_r readdir_r "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Readlink(@string path, slice<byte> buf)
        {
            long n = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_readdir_r_trampoline_BLOCK_PREFIX<<
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(buf) > 0L)
            {>>MARKER:FUNCTION_libc_read_trampoline_BLOCK_PREFIX<<
                _p1 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = syscall(funcPC(libc_readlink_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_readlink_trampoline()
;

        //go:linkname libc_readlink libc_readlink
        //go:cgo_import_dynamic libc_readlink readlink "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Rename(@string from, @string to)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(from);
            if (err != null)
            {>>MARKER:FUNCTION_libc_readlink_trampoline_BLOCK_PREFIX<<
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(to);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_rename_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_rename_trampoline()
;

        //go:linkname libc_rename libc_rename
        //go:cgo_import_dynamic libc_rename rename "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Revoke(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_rename_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_revoke_trampoline), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_revoke_trampoline()
;

        //go:linkname libc_revoke libc_revoke
        //go:cgo_import_dynamic libc_revoke revoke "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Rmdir(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_revoke_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_rmdir_trampoline), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_rmdir_trampoline()
;

        //go:linkname libc_rmdir libc_rmdir
        //go:cgo_import_dynamic libc_rmdir rmdir "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Seek(long fd, long offset, long whence)
        {
            long newoffset = default;
            error err = default!;

            var (r0, _, e1) = syscallX(funcPC(libc_lseek_trampoline), uintptr(fd), uintptr(offset), uintptr(whence));
            newoffset = int64(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_rmdir_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_lseek_trampoline()
;

        //go:linkname libc_lseek libc_lseek
        //go:cgo_import_dynamic libc_lseek lseek "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Select(long n, ptr<FdSet> _addr_r, ptr<FdSet> _addr_w, ptr<FdSet> _addr_e, ptr<Timeval> _addr_timeout)
        {
            error err = default!;
            ref FdSet r = ref _addr_r.val;
            ref FdSet w = ref _addr_w.val;
            ref FdSet e = ref _addr_e.val;
            ref Timeval timeout = ref _addr_timeout.val;

            var (_, _, e1) = syscall6(funcPC(libc_select_trampoline), uintptr(n), uintptr(@unsafe.Pointer(r)), uintptr(@unsafe.Pointer(w)), uintptr(@unsafe.Pointer(e)), uintptr(@unsafe.Pointer(timeout)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_lseek_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_select_trampoline()
;

        //go:linkname libc_select libc_select
        //go:cgo_import_dynamic libc_select select "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setegid(long egid)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_setegid_trampoline), uintptr(egid), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_select_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setegid_trampoline()
;

        //go:linkname libc_setegid libc_setegid
        //go:cgo_import_dynamic libc_setegid setegid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Seteuid(long euid)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_seteuid_trampoline), uintptr(euid), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setegid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_seteuid_trampoline()
;

        //go:linkname libc_seteuid libc_seteuid
        //go:cgo_import_dynamic libc_seteuid seteuid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setgid(long gid)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_setgid_trampoline), uintptr(gid), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_seteuid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setgid_trampoline()
;

        //go:linkname libc_setgid libc_setgid
        //go:cgo_import_dynamic libc_setgid setgid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setlogin(@string name)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(name);
            if (err != null)
            {>>MARKER:FUNCTION_libc_setgid_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_setlogin_trampoline), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setlogin_trampoline()
;

        //go:linkname libc_setlogin libc_setlogin
        //go:cgo_import_dynamic libc_setlogin setlogin "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setpgid(long pid, long pgid)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_setpgid_trampoline), uintptr(pid), uintptr(pgid), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setlogin_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setpgid_trampoline()
;

        //go:linkname libc_setpgid libc_setpgid
        //go:cgo_import_dynamic libc_setpgid setpgid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setpriority(long which, long who, long prio)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_setpriority_trampoline), uintptr(which), uintptr(who), uintptr(prio));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setpgid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setpriority_trampoline()
;

        //go:linkname libc_setpriority libc_setpriority
        //go:cgo_import_dynamic libc_setpriority setpriority "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setprivexec(long flag)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_setprivexec_trampoline), uintptr(flag), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setpriority_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setprivexec_trampoline()
;

        //go:linkname libc_setprivexec libc_setprivexec
        //go:cgo_import_dynamic libc_setprivexec setprivexec "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setregid(long rgid, long egid)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_setregid_trampoline), uintptr(rgid), uintptr(egid), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setprivexec_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setregid_trampoline()
;

        //go:linkname libc_setregid libc_setregid
        //go:cgo_import_dynamic libc_setregid setregid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setreuid(long ruid, long euid)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_setreuid_trampoline), uintptr(ruid), uintptr(euid), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setregid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setreuid_trampoline()
;

        //go:linkname libc_setreuid libc_setreuid
        //go:cgo_import_dynamic libc_setreuid setreuid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setrlimit(long which, ptr<Rlimit> _addr_lim)
        {
            error err = default!;
            ref Rlimit lim = ref _addr_lim.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_setrlimit_trampoline), uintptr(which), uintptr(@unsafe.Pointer(lim)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setreuid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setrlimit_trampoline()
;

        //go:linkname libc_setrlimit libc_setrlimit
        //go:cgo_import_dynamic libc_setrlimit setrlimit "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Setsid()
        {
            long pid = default;
            error err = default!;

            var (r0, _, e1) = rawSyscall(funcPC(libc_setsid_trampoline), 0L, 0L, 0L);
            pid = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setrlimit_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setsid_trampoline()
;

        //go:linkname libc_setsid libc_setsid
        //go:cgo_import_dynamic libc_setsid setsid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Settimeofday(ptr<Timeval> _addr_tp)
        {
            error err = default!;
            ref Timeval tp = ref _addr_tp.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_settimeofday_trampoline), uintptr(@unsafe.Pointer(tp)), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_setsid_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_settimeofday_trampoline()
;

        //go:linkname libc_settimeofday libc_settimeofday
        //go:cgo_import_dynamic libc_settimeofday settimeofday "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setuid(long uid)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_setuid_trampoline), uintptr(uid), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_settimeofday_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_setuid_trampoline()
;

        //go:linkname libc_setuid libc_setuid
        //go:cgo_import_dynamic libc_setuid setuid "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Symlink(@string path, @string link)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_setuid_trampoline_BLOCK_PREFIX<<
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(link);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_symlink_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_symlink_trampoline()
;

        //go:linkname libc_symlink libc_symlink
        //go:cgo_import_dynamic libc_symlink symlink "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Sync()
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_sync_trampoline), 0L, 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_symlink_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_sync_trampoline()
;

        //go:linkname libc_sync libc_sync
        //go:cgo_import_dynamic libc_sync sync "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Truncate(@string path, long length)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_sync_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_truncate_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(length), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_truncate_trampoline()
;

        //go:linkname libc_truncate libc_truncate
        //go:cgo_import_dynamic libc_truncate truncate "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Umask(long newmask)
        {
            long oldmask = default;

            var (r0, _, _) = syscall(funcPC(libc_umask_trampoline), uintptr(newmask), 0L, 0L);
            oldmask = int(r0);
            return ;
        }

        private static void libc_umask_trampoline()
;

        //go:linkname libc_umask libc_umask
        //go:cgo_import_dynamic libc_umask umask "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Undelete(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_umask_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_undelete_trampoline), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_truncate_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_undelete_trampoline()
;

        //go:linkname libc_undelete libc_undelete
        //go:cgo_import_dynamic libc_undelete undelete "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Unlink(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_undelete_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_unlink_trampoline), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_unlink_trampoline()
;

        //go:linkname libc_unlink libc_unlink
        //go:cgo_import_dynamic libc_unlink unlink "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Unmount(@string path, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_unlink_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_unmount_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_unmount_trampoline()
;

        //go:linkname libc_unmount libc_unmount
        //go:cgo_import_dynamic libc_unmount unmount "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) write(long fd, slice<byte> p)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {>>MARKER:FUNCTION_libc_unmount_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = syscall(funcPC(libc_write_trampoline), uintptr(fd), uintptr(_p0), uintptr(len(p)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_write_trampoline()
;

        //go:linkname libc_write libc_write
        //go:cgo_import_dynamic libc_write write "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, error) writev(long fd, slice<Iovec> iovecs)
        {
            System.UIntPtr cnt = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(iovecs) > 0L)
            {>>MARKER:FUNCTION_libc_write_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_iovecs[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = syscallX(funcPC(libc_writev_trampoline), uintptr(fd), uintptr(_p0), uintptr(len(iovecs)));
            cnt = uintptr(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_writev_trampoline()
;

        //go:linkname libc_writev libc_writev
        //go:cgo_import_dynamic libc_writev writev "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, error) mmap(System.UIntPtr addr, System.UIntPtr length, long prot, long flag, long fd, long pos)
        {
            System.UIntPtr ret = default;
            error err = default!;

            var (r0, _, e1) = syscall6X(funcPC(libc_mmap_trampoline), uintptr(addr), uintptr(length), uintptr(prot), uintptr(flag), uintptr(fd), uintptr(pos));
            ret = uintptr(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_writev_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_mmap_trampoline()
;

        //go:linkname libc_mmap libc_mmap
        //go:cgo_import_dynamic libc_mmap mmap "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error munmap(System.UIntPtr addr, System.UIntPtr length)
        {
            error err = default!;

            var (_, _, e1) = syscall(funcPC(libc_munmap_trampoline), uintptr(addr), uintptr(length), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_mmap_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_munmap_trampoline()
;

        //go:linkname libc_munmap libc_munmap
        //go:cgo_import_dynamic libc_munmap munmap "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) fork()
        {
            long pid = default;
            error err = default!;

            var (r0, _, e1) = rawSyscall(funcPC(libc_fork_trampoline), 0L, 0L, 0L);
            pid = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_munmap_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fork_trampoline()
;

        //go:linkname libc_fork libc_fork
        //go:cgo_import_dynamic libc_fork fork "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error ioctl(long fd, long req, long arg)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_ioctl_trampoline), uintptr(fd), uintptr(req), uintptr(arg));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fork_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_ioctl_trampoline()
;

        //go:linkname libc_ioctl libc_ioctl
        //go:cgo_import_dynamic libc_ioctl ioctl "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error ioctlPtr(long fd, ulong req, unsafe.Pointer arg)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_ioctl_trampoline), uintptr(fd), uintptr(req), uintptr(arg));
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_ioctl_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error execve(ptr<byte> _addr_path, ptr<ptr<byte>> _addr_argv, ptr<ptr<byte>> _addr_envp)
        {
            error err = default!;
            ref byte path = ref _addr_path.val;
            ref ptr<byte> argv = ref _addr_argv.val;
            ref ptr<byte> envp = ref _addr_envp.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_execve_trampoline), uintptr(@unsafe.Pointer(path)), uintptr(@unsafe.Pointer(argv)), uintptr(@unsafe.Pointer(envp)));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_execve_trampoline()
;

        //go:linkname libc_execve libc_execve
        //go:cgo_import_dynamic libc_execve execve "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error exit(long res)
        {
            error err = default!;

            var (_, _, e1) = rawSyscall(funcPC(libc_exit_trampoline), uintptr(res), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_execve_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_exit_trampoline()
;

        //go:linkname libc_exit libc_exit
        //go:cgo_import_dynamic libc_exit exit "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error sysctl(slice<_C_int> mib, ptr<byte> _addr_old, ptr<System.UIntPtr> _addr_oldlen, ptr<byte> _addr_@new, System.UIntPtr newlen)
        {
            error err = default!;
            ref byte old = ref _addr_old.val;
            ref System.UIntPtr oldlen = ref _addr_oldlen.val;
            ref byte @new = ref _addr_@new.val;

            unsafe.Pointer _p0 = default;
            if (len(mib) > 0L)
            {>>MARKER:FUNCTION_libc_exit_trampoline_BLOCK_PREFIX<<
                _p0 = @unsafe.Pointer(_addr_mib[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = syscall6(funcPC(libc_sysctl_trampoline), uintptr(_p0), uintptr(len(mib)), uintptr(@unsafe.Pointer(old)), uintptr(@unsafe.Pointer(oldlen)), uintptr(@unsafe.Pointer(new)), uintptr(newlen));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_sysctl_trampoline()
;

        //go:linkname libc_sysctl libc_sysctl
        //go:cgo_import_dynamic libc_sysctl sysctl "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) fcntlPtr(long fd, long cmd, unsafe.Pointer arg)
        {
            long val = default;
            error err = default!;

            var (r0, _, e1) = syscall(funcPC(libc_fcntl_trampoline), uintptr(fd), uintptr(cmd), uintptr(arg));
            val = int(r0);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_sysctl_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error unlinkat(long fd, @string path, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_unlinkat_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_unlinkat_trampoline()
;

        //go:linkname libc_unlinkat libc_unlinkat
        //go:cgo_import_dynamic libc_unlinkat unlinkat "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) openat(long fd, @string path, long flags, uint perm)
        {
            long fdret = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_unlinkat_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (r0, _, e1) = syscall6(funcPC(libc_openat_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), uintptr(perm), 0L, 0L);
            fdret = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_openat_trampoline()
;

        //go:linkname libc_openat libc_openat
        //go:cgo_import_dynamic libc_openat openat "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fstat(long fd, ptr<Stat_t> _addr_stat)
        {
            error err = default!;
            ref Stat_t stat = ref _addr_stat.val;

            var (_, _, e1) = syscall(funcPC(libc_fstat_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_openat_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fstat_trampoline()
;

        //go:linkname libc_fstat libc_fstat
        //go:cgo_import_dynamic libc_fstat fstat "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fstatfs(long fd, ptr<Statfs_t> _addr_stat)
        {
            error err = default!;
            ref Statfs_t stat = ref _addr_stat.val;

            var (_, _, e1) = syscall(funcPC(libc_fstatfs_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fstat_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fstatfs_trampoline()
;

        //go:linkname libc_fstatfs libc_fstatfs
        //go:cgo_import_dynamic libc_fstatfs fstatfs "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Gettimeofday(ptr<Timeval> _addr_tp)
        {
            error err = default!;
            ref Timeval tp = ref _addr_tp.val;

            var (_, _, e1) = rawSyscall(funcPC(libc_gettimeofday_trampoline), uintptr(@unsafe.Pointer(tp)), 0L, 0L);
            if (e1 != 0L)
            {>>MARKER:FUNCTION_libc_fstatfs_trampoline_BLOCK_PREFIX<<
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_gettimeofday_trampoline()
;

        //go:linkname libc_gettimeofday libc_gettimeofday
        //go:cgo_import_dynamic libc_gettimeofday gettimeofday "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Lstat(@string path, ptr<Stat_t> _addr_stat)
        {
            error err = default!;
            ref Stat_t stat = ref _addr_stat.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_gettimeofday_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_lstat_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_lstat_trampoline()
;

        //go:linkname libc_lstat libc_lstat
        //go:cgo_import_dynamic libc_lstat lstat "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Stat(@string path, ptr<Stat_t> _addr_stat)
        {
            error err = default!;
            ref Stat_t stat = ref _addr_stat.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_lstat_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_stat_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_stat_trampoline()
;

        //go:linkname libc_stat libc_stat
        //go:cgo_import_dynamic libc_stat stat "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Statfs(@string path, ptr<Statfs_t> _addr_stat)
        {
            error err = default!;
            ref Statfs_t stat = ref _addr_stat.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_stat_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall(funcPC(libc_statfs_trampoline), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_statfs_trampoline()
;

        //go:linkname libc_statfs libc_statfs
        //go:cgo_import_dynamic libc_statfs statfs "/usr/lib/libSystem.B.dylib"

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error fstatat(long fd, @string path, ptr<Stat_t> _addr_stat, long flags)
        {
            error err = default!;
            ref Stat_t stat = ref _addr_stat.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {>>MARKER:FUNCTION_libc_statfs_trampoline_BLOCK_PREFIX<<
                return ;
            }

            var (_, _, e1) = syscall6(funcPC(libc_fstatat_trampoline), uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), uintptr(flags), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        private static void libc_fstatat_trampoline()
;

        //go:linkname libc_fstatat libc_fstatat
        //go:cgo_import_dynamic libc_fstatat fstatat "/usr/lib/libSystem.B.dylib"
    }
}
