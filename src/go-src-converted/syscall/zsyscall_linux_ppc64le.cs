// mksyscall.pl -tags linux,ppc64le syscall_linux.go syscall_linux_ppc64x.go
// Code generated by the command above; DO NOT EDIT.

//go:build linux && ppc64le
// +build linux,ppc64le

// package syscall -- go2cs converted at 2022 March 06 22:28:50 UTC
// import "syscall" ==> using syscall = go.syscall_package
// Original source: C:\Program Files\Go\src\syscall\zsyscall_linux_ppc64le.go
using @unsafe = go.@unsafe_package;

namespace go;

public static partial class syscall_package {

    // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
private static error faccessat(nint dirfd, @string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_FACCESSAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error fchmodat(nint dirfd, @string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_FCHMODAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error linkat(nint olddirfd, @string oldpath, nint newdirfd, @string newpath, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(oldpath);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(newpath);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_LINKAT, uintptr(olddirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(@unsafe.Pointer(_p1)), uintptr(flags), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) openat(nint dirfd, @string path, nint flags, uint mode) {
    nint fd = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (r0, _, e1) = Syscall6(SYS_OPENAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), uintptr(mode), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) readlinkat(nint dirfd, @string path, slice<byte> buf) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    unsafe.Pointer _p1 = default;
    if (len(buf) > 0) {
        _p1 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p1 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall6(SYS_READLINKAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error symlinkat(@string oldpath, nint newdirfd, @string newpath) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(oldpath);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(newpath);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_SYMLINKAT, uintptr(@unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(@unsafe.Pointer(_p1)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error unlinkat(nint dirfd, @string path, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_UNLINKAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error utimensat(nint dirfd, @string path, ptr<array<Timespec>> _addr_times, nint flag) {
    error err = default!;
    ref array<Timespec> times = ref _addr_times.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_UTIMENSAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(times)), uintptr(flag), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getcwd(slice<byte> buf) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(buf) > 0) {
        _p0 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall(SYS_GETCWD, uintptr(_p0), uintptr(len(buf)), 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) wait4(nint pid, ptr<_C_int> _addr_wstatus, nint options, ptr<Rusage> _addr_rusage) {
    nint wpid = default;
    error err = default!;
    ref _C_int wstatus = ref _addr_wstatus.val;
    ref Rusage rusage = ref _addr_rusage.val;

    var (r0, _, e1) = Syscall6(SYS_WAIT4, uintptr(pid), uintptr(@unsafe.Pointer(wstatus)), uintptr(options), uintptr(@unsafe.Pointer(rusage)), 0, 0);
    wpid = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error ptrace(nint request, nint pid, System.UIntPtr addr, System.UIntPtr data) {
    error err = default!;

    var (_, _, e1) = Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error reboot(nuint magic1, nuint magic2, nint cmd, @string arg) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(arg);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_REBOOT, uintptr(magic1), uintptr(magic2), uintptr(cmd), uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error mount(@string source, @string target, @string fstype, System.UIntPtr flags, ptr<byte> _addr_data) {
    error err = default!;
    ref byte data = ref _addr_data.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(source);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(target);
    if (err != null) {
        return ;
    }
    ptr<byte> _p2;
    _p2, err = BytePtrFromString(fstype);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_MOUNT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(@unsafe.Pointer(_p2)), uintptr(flags), uintptr(@unsafe.Pointer(data)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Acct(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_ACCT, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Adjtimex(ptr<Timex> _addr_buf) {
    nint state = default;
    error err = default!;
    ref Timex buf = ref _addr_buf.val;

    var (r0, _, e1) = Syscall(SYS_ADJTIMEX, uintptr(@unsafe.Pointer(buf)), 0, 0);
    state = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chdir(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_CHDIR, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chroot(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_CHROOT, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Close(nint fd) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_CLOSE, uintptr(fd), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Dup(nint oldfd) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = Syscall(SYS_DUP, uintptr(oldfd), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Dup3(nint oldfd, nint newfd, nint flags) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_DUP3, uintptr(oldfd), uintptr(newfd), uintptr(flags));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) EpollCreate1(nint flag) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_EPOLL_CREATE1, uintptr(flag), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error EpollCtl(nint epfd, nint op, nint fd, ptr<EpollEvent> _addr_@event) {
    error err = default!;
    ref EpollEvent @event = ref _addr_@event.val;

    var (_, _, e1) = RawSyscall6(SYS_EPOLL_CTL, uintptr(epfd), uintptr(op), uintptr(fd), uintptr(@unsafe.Pointer(event)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fallocate(nint fd, uint mode, long off, long len) {
    error err = default!;

    var (_, _, e1) = Syscall6(SYS_FALLOCATE, uintptr(fd), uintptr(mode), uintptr(off), uintptr(len), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchdir(nint fd) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_FCHDIR, uintptr(fd), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchmod(nint fd, uint mode) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_FCHMOD, uintptr(fd), uintptr(mode), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchownat(nint dirfd, @string path, nint uid, nint gid, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_FCHOWNAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid), uintptr(flags), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) fcntl(nint fd, nint cmd, nint arg) {
    nint val = default;
    error err = default!;

    var (r0, _, e1) = Syscall(SYS_FCNTL, uintptr(fd), uintptr(cmd), uintptr(arg));
    val = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fdatasync(nint fd) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_FDATASYNC, uintptr(fd), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Flock(nint fd, nint how) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_FLOCK, uintptr(fd), uintptr(how), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fsync(nint fd) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_FSYNC, uintptr(fd), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getdents(nint fd, slice<byte> buf) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(buf) > 0) {
        _p0 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall(SYS_GETDENTS64, uintptr(fd), uintptr(_p0), uintptr(len(buf)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getpgid(nint pid) {
    nint pgid = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_GETPGID, uintptr(pid), 0, 0);
    pgid = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getpid() {
    nint pid = default;

    var (r0, _) = rawSyscallNoError(SYS_GETPID, 0, 0, 0);
    pid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getppid() {
    nint ppid = default;

    var (r0, _) = rawSyscallNoError(SYS_GETPPID, 0, 0, 0);
    ppid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getpriority(nint which, nint who) {
    nint prio = default;
    error err = default!;

    var (r0, _, e1) = Syscall(SYS_GETPRIORITY, uintptr(which), uintptr(who), 0);
    prio = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Getrusage(nint who, ptr<Rusage> _addr_rusage) {
    error err = default!;
    ref Rusage rusage = ref _addr_rusage.val;

    var (_, _, e1) = RawSyscall(SYS_GETRUSAGE, uintptr(who), uintptr(@unsafe.Pointer(rusage)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Gettid() {
    nint tid = default;

    var (r0, _) = rawSyscallNoError(SYS_GETTID, 0, 0, 0);
    tid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getxattr(@string path, @string attr, slice<byte> dest) {
    nint sz = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(attr);
    if (err != null) {
        return ;
    }
    unsafe.Pointer _p2 = default;
    if (len(dest) > 0) {
        _p2 = @unsafe.Pointer(_addr_dest[0]);
    }
    else
 {
        _p2 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall6(SYS_GETXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(dest)), 0, 0);
    sz = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) InotifyAddWatch(nint fd, @string pathname, uint mask) {
    nint watchdesc = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(pathname);
    if (err != null) {
        return ;
    }
    var (r0, _, e1) = Syscall(SYS_INOTIFY_ADD_WATCH, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(mask));
    watchdesc = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) InotifyInit1(nint flags) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_INOTIFY_INIT1, uintptr(flags), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) InotifyRmWatch(nint fd, uint watchdesc) {
    nint success = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_INOTIFY_RM_WATCH, uintptr(fd), uintptr(watchdesc), 0);
    success = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Kill(nint pid, Signal sig) {
    error err = default!;

    var (_, _, e1) = RawSyscall(SYS_KILL, uintptr(pid), uintptr(sig), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Klogctl(nint typ, slice<byte> buf) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(buf) > 0) {
        _p0 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall(SYS_SYSLOG, uintptr(typ), uintptr(_p0), uintptr(len(buf)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Listxattr(@string path, slice<byte> dest) {
    nint sz = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    unsafe.Pointer _p1 = default;
    if (len(dest) > 0) {
        _p1 = @unsafe.Pointer(_addr_dest[0]);
    }
    else
 {
        _p1 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall(SYS_LISTXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(dest)));
    sz = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mkdirat(nint dirfd, @string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_MKDIRAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mknodat(nint dirfd, @string path, uint mode, nint dev) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_MKNODAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Nanosleep(ptr<Timespec> _addr_time, ptr<Timespec> _addr_leftover) {
    error err = default!;
    ref Timespec time = ref _addr_time.val;
    ref Timespec leftover = ref _addr_leftover.val;

    var (_, _, e1) = Syscall(SYS_NANOSLEEP, uintptr(@unsafe.Pointer(time)), uintptr(@unsafe.Pointer(leftover)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error PivotRoot(@string newroot, @string putold) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(newroot);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(putold);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_PIVOT_ROOT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error prlimit(nint pid, nint resource, ptr<Rlimit> _addr_newlimit, ptr<Rlimit> _addr_old) {
    error err = default!;
    ref Rlimit newlimit = ref _addr_newlimit.val;
    ref Rlimit old = ref _addr_old.val;

    var (_, _, e1) = RawSyscall6(SYS_PRLIMIT64, uintptr(pid), uintptr(resource), uintptr(@unsafe.Pointer(newlimit)), uintptr(@unsafe.Pointer(old)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) read(nint fd, slice<byte> p) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall(SYS_READ, uintptr(fd), uintptr(_p0), uintptr(len(p)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Removexattr(@string path, @string attr) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(attr);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_REMOVEXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setdomainname(slice<byte> p) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall(SYS_SETDOMAINNAME, uintptr(_p0), uintptr(len(p)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Sethostname(slice<byte> p) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall(SYS_SETHOSTNAME, uintptr(_p0), uintptr(len(p)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setpgid(nint pid, nint pgid) {
    error err = default!;

    var (_, _, e1) = RawSyscall(SYS_SETPGID, uintptr(pid), uintptr(pgid), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Setsid() {
    nint pid = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_SETSID, 0, 0, 0);
    pid = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Settimeofday(ptr<Timeval> _addr_tv) {
    error err = default!;
    ref Timeval tv = ref _addr_tv.val;

    var (_, _, e1) = RawSyscall(SYS_SETTIMEOFDAY, uintptr(@unsafe.Pointer(tv)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setpriority(nint which, nint who, nint prio) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_SETPRIORITY, uintptr(which), uintptr(who), uintptr(prio));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setxattr(@string path, @string attr, slice<byte> data, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(attr);
    if (err != null) {
        return ;
    }
    unsafe.Pointer _p2 = default;
    if (len(data) > 0) {
        _p2 = @unsafe.Pointer(_addr_data[0]);
    }
    else
 {
        _p2 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall6(SYS_SETXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(data)), uintptr(flags), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static void Sync() {
    Syscall(SYS_SYNC, 0, 0, 0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Sysinfo(ptr<Sysinfo_t> _addr_info) {
    error err = default!;
    ref Sysinfo_t info = ref _addr_info.val;

    var (_, _, e1) = RawSyscall(SYS_SYSINFO, uintptr(@unsafe.Pointer(info)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (long, error) Tee(nint rfd, nint wfd, nint len, nint flags) {
    long n = default;
    error err = default!;

    var (r0, _, e1) = Syscall6(SYS_TEE, uintptr(rfd), uintptr(wfd), uintptr(len), uintptr(flags), 0, 0);
    n = int64(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Tgkill(nint tgid, nint tid, Signal sig) {
    error err = default!;

    var (_, _, e1) = RawSyscall(SYS_TGKILL, uintptr(tgid), uintptr(tid), uintptr(sig));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (System.UIntPtr, error) Times(ptr<Tms> _addr_tms) {
    System.UIntPtr ticks = default;
    error err = default!;
    ref Tms tms = ref _addr_tms.val;

    var (r0, _, e1) = RawSyscall(SYS_TIMES, uintptr(@unsafe.Pointer(tms)), 0, 0);
    ticks = uintptr(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Umask(nint mask) {
    nint oldmask = default;

    var (r0, _) = rawSyscallNoError(SYS_UMASK, uintptr(mask), 0, 0);
    oldmask = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Uname(ptr<Utsname> _addr_buf) {
    error err = default!;
    ref Utsname buf = ref _addr_buf.val;

    var (_, _, e1) = RawSyscall(SYS_UNAME, uintptr(@unsafe.Pointer(buf)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Unmount(@string target, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(target);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_UMOUNT2, uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Unshare(nint flags) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_UNSHARE, uintptr(flags), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) write(nint fd, slice<byte> p) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall(SYS_WRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error exitThread(nint code) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_EXIT, uintptr(code), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) readlen(nint fd, ptr<byte> _addr_p, nint np) {
    nint n = default;
    error err = default!;
    ref byte p = ref _addr_p.val;

    var (r0, _, e1) = Syscall(SYS_READ, uintptr(fd), uintptr(@unsafe.Pointer(p)), uintptr(np));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) writelen(nint fd, ptr<byte> _addr_p, nint np) {
    nint n = default;
    error err = default!;
    ref byte p = ref _addr_p.val;

    var (r0, _, e1) = Syscall(SYS_WRITE, uintptr(fd), uintptr(@unsafe.Pointer(p)), uintptr(np));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error munmap(System.UIntPtr addr, System.UIntPtr length) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_MUNMAP, uintptr(addr), uintptr(length), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Madvise(slice<byte> b, nint advice) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(b) > 0) {
        _p0 = @unsafe.Pointer(_addr_b[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall(SYS_MADVISE, uintptr(_p0), uintptr(len(b)), uintptr(advice));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mprotect(slice<byte> b, nint prot) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(b) > 0) {
        _p0 = @unsafe.Pointer(_addr_b[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall(SYS_MPROTECT, uintptr(_p0), uintptr(len(b)), uintptr(prot));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mlock(slice<byte> b) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(b) > 0) {
        _p0 = @unsafe.Pointer(_addr_b[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall(SYS_MLOCK, uintptr(_p0), uintptr(len(b)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Munlock(slice<byte> b) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(b) > 0) {
        _p0 = @unsafe.Pointer(_addr_b[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall(SYS_MUNLOCK, uintptr(_p0), uintptr(len(b)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mlockall(nint flags) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_MLOCKALL, uintptr(flags), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Munlockall() {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_MUNLOCKALL, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Dup2(nint oldfd, nint newfd) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) EpollCreate(nint size) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_EPOLL_CREATE, uintptr(size), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) EpollWait(nint epfd, slice<EpollEvent> events, nint msec) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(events) > 0) {
        _p0 = @unsafe.Pointer(_addr_events[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall6(SYS_EPOLL_WAIT, uintptr(epfd), uintptr(_p0), uintptr(len(events)), uintptr(msec), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchown(nint fd, nint uid, nint gid) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_FCHOWN, uintptr(fd), uintptr(uid), uintptr(gid));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fstat(nint fd, ptr<Stat_t> _addr_stat) {
    error err = default!;
    ref Stat_t stat = ref _addr_stat.val;

    var (_, _, e1) = Syscall(SYS_FSTAT, uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error fstatat(nint dirfd, @string path, ptr<Stat_t> _addr_stat, nint flags) {
    error err = default!;
    ref Stat_t stat = ref _addr_stat.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_NEWFSTATAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), uintptr(flags), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fstatfs(nint fd, ptr<Statfs_t> _addr_buf) {
    error err = default!;
    ref Statfs_t buf = ref _addr_buf.val;

    var (_, _, e1) = Syscall(SYS_FSTATFS, uintptr(fd), uintptr(@unsafe.Pointer(buf)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Ftruncate(nint fd, long length) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_FTRUNCATE, uintptr(fd), uintptr(length), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getegid() {
    nint egid = default;

    var (r0, _) = rawSyscallNoError(SYS_GETEGID, 0, 0, 0);
    egid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Geteuid() {
    nint euid = default;

    var (r0, _) = rawSyscallNoError(SYS_GETEUID, 0, 0, 0);
    euid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getgid() {
    nint gid = default;

    var (r0, _) = rawSyscallNoError(SYS_GETGID, 0, 0, 0);
    gid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Getrlimit(nint resource, ptr<Rlimit> _addr_rlim) {
    error err = default!;
    ref Rlimit rlim = ref _addr_rlim.val;

    var (_, _, e1) = RawSyscall(SYS_UGETRLIMIT, uintptr(resource), uintptr(@unsafe.Pointer(rlim)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getuid() {
    nint uid = default;

    var (r0, _) = rawSyscallNoError(SYS_GETUID, 0, 0, 0);
    uid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) InotifyInit() {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_INOTIFY_INIT, 0, 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Ioperm(nint from, nint num, nint on) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_IOPERM, uintptr(from), uintptr(num), uintptr(on));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Iopl(nint level) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_IOPL, uintptr(level), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Lchown(@string path, nint uid, nint gid) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_LCHOWN, uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Listen(nint s, nint n) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_LISTEN, uintptr(s), uintptr(n), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Lstat(@string path, ptr<Stat_t> _addr_stat) {
    error err = default!;
    ref Stat_t stat = ref _addr_stat.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_LSTAT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Pause() {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_PAUSE, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Pread(nint fd, slice<byte> p, long offset) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall6(SYS_PREAD64, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Pwrite(nint fd, slice<byte> p, long offset) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall6(SYS_PWRITE64, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Renameat(nint olddirfd, @string oldpath, nint newdirfd, @string newpath) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(oldpath);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(newpath);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall6(SYS_RENAMEAT, uintptr(olddirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(@unsafe.Pointer(_p1)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (long, error) Seek(nint fd, long offset, nint whence) {
    long off = default;
    error err = default!;

    var (r0, _, e1) = Syscall(SYS_LSEEK, uintptr(fd), uintptr(offset), uintptr(whence));
    off = int64(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Select(nint nfd, ptr<FdSet> _addr_r, ptr<FdSet> _addr_w, ptr<FdSet> _addr_e, ptr<Timeval> _addr_timeout) {
    nint n = default;
    error err = default!;
    ref FdSet r = ref _addr_r.val;
    ref FdSet w = ref _addr_w.val;
    ref FdSet e = ref _addr_e.val;
    ref Timeval timeout = ref _addr_timeout.val;

    var (r0, _, e1) = Syscall6(SYS__NEWSELECT, uintptr(nfd), uintptr(@unsafe.Pointer(r)), uintptr(@unsafe.Pointer(w)), uintptr(@unsafe.Pointer(e)), uintptr(@unsafe.Pointer(timeout)), 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) sendfile(nint outfd, nint infd, ptr<long> _addr_offset, nint count) {
    nint written = default;
    error err = default!;
    ref long offset = ref _addr_offset.val;

    var (r0, _, e1) = Syscall6(SYS_SENDFILE, uintptr(outfd), uintptr(infd), uintptr(@unsafe.Pointer(offset)), uintptr(count), 0, 0);
    written = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setfsgid(nint gid) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_SETFSGID, uintptr(gid), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setfsuid(nint uid) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_SETFSUID, uintptr(uid), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setrlimit(nint resource, ptr<Rlimit> _addr_rlim) {
    error err = default!;
    ref Rlimit rlim = ref _addr_rlim.val;

    var (_, _, e1) = RawSyscall(SYS_SETRLIMIT, uintptr(resource), uintptr(@unsafe.Pointer(rlim)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Shutdown(nint fd, nint how) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_SHUTDOWN, uintptr(fd), uintptr(how), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (long, error) Splice(nint rfd, ptr<long> _addr_roff, nint wfd, ptr<long> _addr_woff, nint len, nint flags) {
    long n = default;
    error err = default!;
    ref long roff = ref _addr_roff.val;
    ref long woff = ref _addr_woff.val;

    var (r0, _, e1) = Syscall6(SYS_SPLICE, uintptr(rfd), uintptr(@unsafe.Pointer(roff)), uintptr(wfd), uintptr(@unsafe.Pointer(woff)), uintptr(len), uintptr(flags));
    n = int64(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Stat(@string path, ptr<Stat_t> _addr_stat) {
    error err = default!;
    ref Stat_t stat = ref _addr_stat.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_STAT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Statfs(@string path, ptr<Statfs_t> _addr_buf) {
    error err = default!;
    ref Statfs_t buf = ref _addr_buf.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_STATFS, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(buf)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Truncate(@string path, long length) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_TRUNCATE, uintptr(@unsafe.Pointer(_p0)), uintptr(length), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Ustat(nint dev, ptr<Ustat_t> _addr_ubuf) {
    error err = default!;
    ref Ustat_t ubuf = ref _addr_ubuf.val;

    var (_, _, e1) = Syscall(SYS_USTAT, uintptr(dev), uintptr(@unsafe.Pointer(ubuf)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) accept(nint s, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    nint fd = default;
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (r0, _, e1) = Syscall(SYS_ACCEPT, uintptr(s), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) accept4(nint s, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen, nint flags) {
    nint fd = default;
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (r0, _, e1) = Syscall6(SYS_ACCEPT4, uintptr(s), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)), uintptr(flags), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error bind(nint s, unsafe.Pointer addr, _Socklen addrlen) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_BIND, uintptr(s), uintptr(addr), uintptr(addrlen));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error connect(nint s, unsafe.Pointer addr, _Socklen addrlen) {
    error err = default!;

    var (_, _, e1) = Syscall(SYS_CONNECT, uintptr(s), uintptr(addr), uintptr(addrlen));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) getgroups(nint n, ptr<_Gid_t> _addr_list) {
    nint nn = default;
    error err = default!;
    ref _Gid_t list = ref _addr_list.val;

    var (r0, _, e1) = RawSyscall(SYS_GETGROUPS, uintptr(n), uintptr(@unsafe.Pointer(list)), 0);
    nn = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getsockopt(nint s, nint level, nint name, unsafe.Pointer val, ptr<_Socklen> _addr_vallen) {
    error err = default!;
    ref _Socklen vallen = ref _addr_vallen.val;

    var (_, _, e1) = Syscall6(SYS_GETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(@unsafe.Pointer(vallen)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error setsockopt(nint s, nint level, nint name, unsafe.Pointer val, System.UIntPtr vallen) {
    error err = default!;

    var (_, _, e1) = Syscall6(SYS_SETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(vallen), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) socket(nint domain, nint typ, nint proto) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = RawSyscall(SYS_SOCKET, uintptr(domain), uintptr(typ), uintptr(proto));
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error socketpair(nint domain, nint typ, nint proto, ptr<array<int>> _addr_fd) {
    error err = default!;
    ref array<int> fd = ref _addr_fd.val;

    var (_, _, e1) = RawSyscall6(SYS_SOCKETPAIR, uintptr(domain), uintptr(typ), uintptr(proto), uintptr(@unsafe.Pointer(fd)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getpeername(nint fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (_, _, e1) = RawSyscall(SYS_GETPEERNAME, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getsockname(nint fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (_, _, e1) = RawSyscall(SYS_GETSOCKNAME, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) recvfrom(nint fd, slice<byte> p, nint flags, ptr<RawSockaddrAny> _addr_from, ptr<_Socklen> _addr_fromlen) {
    nint n = default;
    error err = default!;
    ref RawSockaddrAny from = ref _addr_from.val;
    ref _Socklen fromlen = ref _addr_fromlen.val;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = Syscall6(SYS_RECVFROM, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(flags), uintptr(@unsafe.Pointer(from)), uintptr(@unsafe.Pointer(fromlen)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error sendto(nint s, slice<byte> buf, nint flags, unsafe.Pointer to, _Socklen addrlen) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(buf) > 0) {
        _p0 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = Syscall6(SYS_SENDTO, uintptr(s), uintptr(_p0), uintptr(len(buf)), uintptr(flags), uintptr(to), uintptr(addrlen));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) recvmsg(nint s, ptr<Msghdr> _addr_msg, nint flags) {
    nint n = default;
    error err = default!;
    ref Msghdr msg = ref _addr_msg.val;

    var (r0, _, e1) = Syscall(SYS_RECVMSG, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) sendmsg(nint s, ptr<Msghdr> _addr_msg, nint flags) {
    nint n = default;
    error err = default!;
    ref Msghdr msg = ref _addr_msg.val;

    var (r0, _, e1) = Syscall(SYS_SENDMSG, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (System.UIntPtr, error) mmap(System.UIntPtr addr, System.UIntPtr length, nint prot, nint flags, nint fd, long offset) {
    System.UIntPtr xaddr = default;
    error err = default!;

    var (r0, _, e1) = Syscall6(SYS_MMAP, uintptr(addr), uintptr(length), uintptr(prot), uintptr(flags), uintptr(fd), uintptr(offset));
    xaddr = uintptr(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error futimesat(nint dirfd, @string path, ptr<array<Timeval>> _addr_times) {
    error err = default!;
    ref array<Timeval> times = ref _addr_times.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_FUTIMESAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(times)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Gettimeofday(ptr<Timeval> _addr_tv) {
    error err = default!;
    ref Timeval tv = ref _addr_tv.val;

    var (_, _, e1) = RawSyscall(SYS_GETTIMEOFDAY, uintptr(@unsafe.Pointer(tv)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (Time_t, error) Time(ptr<Time_t> _addr_t) {
    Time_t tt = default;
    error err = default!;
    ref Time_t t = ref _addr_t.val;

    var (r0, _, e1) = RawSyscall(SYS_TIME, uintptr(@unsafe.Pointer(t)), 0, 0);
    tt = Time_t(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Utime(@string path, ptr<Utimbuf> _addr_buf) {
    error err = default!;
    ref Utimbuf buf = ref _addr_buf.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_UTIME, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(buf)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error utimes(@string path, ptr<array<Timeval>> _addr_times) {
    error err = default!;
    ref array<Timeval> times = ref _addr_times.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = Syscall(SYS_UTIMES, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(times)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error pipe2(ptr<array<_C_int>> _addr_p, nint flags) {
    error err = default!;
    ref array<_C_int> p = ref _addr_p.val;

    var (_, _, e1) = RawSyscall(SYS_PIPE2, uintptr(@unsafe.Pointer(p)), uintptr(flags), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error syncFileRange2(nint fd, nint flags, long off, long n) {
    error err = default!;

    var (_, _, e1) = Syscall6(SYS_SYNC_FILE_RANGE2, uintptr(fd), uintptr(flags), uintptr(off), uintptr(n), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

} // end syscall_package
