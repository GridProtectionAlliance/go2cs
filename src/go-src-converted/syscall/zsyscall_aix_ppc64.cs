// mksyscall_libc.pl -aix -tags aix,ppc64 syscall_aix.go syscall_aix_ppc64.go
// Code generated by the command above; DO NOT EDIT.

//go:build aix && ppc64
// +build aix,ppc64

// package syscall -- go2cs converted at 2022 March 06 22:27:30 UTC
// import "syscall" ==> using syscall = go.syscall_package
// Original source: C:\Program Files\Go\src\syscall\zsyscall_aix_ppc64.go
using @unsafe = go.@unsafe_package;

namespace go;

public static partial class syscall_package {

    //go:cgo_import_dynamic libc_fcntl fcntl "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Dup2 dup2 "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_pipe pipe "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_readlink readlink "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_utimes utimes "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_utimensat utimensat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_unlinkat unlinkat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_getcwd getcwd "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_getgroups getgroups "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_setgroups setgroups "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_getdirent getdirent "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_wait4 wait4 "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_fsync_range fsync_range "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_bind bind "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_connect connect "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getkerninfo getkerninfo "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_getsockopt getsockopt "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Listen listen "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_setsockopt setsockopt "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_socket socket "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_socketpair socketpair "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_getpeername getpeername "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_getsockname getsockname "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_recvfrom recvfrom "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_sendto sendto "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Shutdown shutdown "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_nrecvmsg nrecvmsg "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_nsendmsg nsendmsg "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_accept accept "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Openat openat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_ptrace64 ptrace64 "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Acct acct "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Chdir chdir "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Chmod chmod "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Chown chown "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Chroot chroot "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Close close "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Dup dup "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Faccessat faccessat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fchdir fchdir "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fchmod fchmod "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fchmodat fchmodat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fchown fchown "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fchownat fchownat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fpathconf fpathconf "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fstat fstat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Fstatfs fstatfs "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Ftruncate ftruncate "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getgid getgid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getpid getpid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Geteuid geteuid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getegid getegid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getppid getppid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getpriority getpriority "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getrlimit getrlimit "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Getuid getuid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Kill kill "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Lchown lchown "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Link link "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Lstat lstat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Mkdir mkdir "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Mkdirat mkdirat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Mknodat mknodat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Open open "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Pread pread "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Pwrite pwrite "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_read read "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Reboot reboot "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Rename rename "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Renameat renameat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Rmdir rmdir "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_lseek lseek "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Setegid setegid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Seteuid seteuid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Setgid setgid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Setpgid setpgid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Setpriority setpriority "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Setregid setregid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Setreuid setreuid "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Setrlimit setrlimit "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Stat stat "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Statfs statfs "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Symlink symlink "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Truncate truncate "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Umask umask "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Unlink unlink "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_Uname uname "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_write write "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_gettimeofday gettimeofday "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_mmap mmap "libc.a/shr_64.o"
    //go:cgo_import_dynamic libc_munmap munmap "libc.a/shr_64.o"

    //go:linkname libc_fcntl libc_fcntl
    //go:linkname libc_Dup2 libc_Dup2
    //go:linkname libc_pipe libc_pipe
    //go:linkname libc_readlink libc_readlink
    //go:linkname libc_utimes libc_utimes
    //go:linkname libc_utimensat libc_utimensat
    //go:linkname libc_unlinkat libc_unlinkat
    //go:linkname libc_getcwd libc_getcwd
    //go:linkname libc_getgroups libc_getgroups
    //go:linkname libc_setgroups libc_setgroups
    //go:linkname libc_getdirent libc_getdirent
    //go:linkname libc_wait4 libc_wait4
    //go:linkname libc_fsync_range libc_fsync_range
    //go:linkname libc_bind libc_bind
    //go:linkname libc_connect libc_connect
    //go:linkname libc_Getkerninfo libc_Getkerninfo
    //go:linkname libc_getsockopt libc_getsockopt
    //go:linkname libc_Listen libc_Listen
    //go:linkname libc_setsockopt libc_setsockopt
    //go:linkname libc_socket libc_socket
    //go:linkname libc_socketpair libc_socketpair
    //go:linkname libc_getpeername libc_getpeername
    //go:linkname libc_getsockname libc_getsockname
    //go:linkname libc_recvfrom libc_recvfrom
    //go:linkname libc_sendto libc_sendto
    //go:linkname libc_Shutdown libc_Shutdown
    //go:linkname libc_nrecvmsg libc_nrecvmsg
    //go:linkname libc_nsendmsg libc_nsendmsg
    //go:linkname libc_accept libc_accept
    //go:linkname libc_Openat libc_Openat
    //go:linkname libc_ptrace64 libc_ptrace64
    //go:linkname libc_Acct libc_Acct
    //go:linkname libc_Chdir libc_Chdir
    //go:linkname libc_Chmod libc_Chmod
    //go:linkname libc_Chown libc_Chown
    //go:linkname libc_Chroot libc_Chroot
    //go:linkname libc_Close libc_Close
    //go:linkname libc_Dup libc_Dup
    //go:linkname libc_Faccessat libc_Faccessat
    //go:linkname libc_Fchdir libc_Fchdir
    //go:linkname libc_Fchmod libc_Fchmod
    //go:linkname libc_Fchmodat libc_Fchmodat
    //go:linkname libc_Fchown libc_Fchown
    //go:linkname libc_Fchownat libc_Fchownat
    //go:linkname libc_Fpathconf libc_Fpathconf
    //go:linkname libc_Fstat libc_Fstat
    //go:linkname libc_Fstatfs libc_Fstatfs
    //go:linkname libc_Ftruncate libc_Ftruncate
    //go:linkname libc_Getgid libc_Getgid
    //go:linkname libc_Getpid libc_Getpid
    //go:linkname libc_Geteuid libc_Geteuid
    //go:linkname libc_Getegid libc_Getegid
    //go:linkname libc_Getppid libc_Getppid
    //go:linkname libc_Getpriority libc_Getpriority
    //go:linkname libc_Getrlimit libc_Getrlimit
    //go:linkname libc_Getuid libc_Getuid
    //go:linkname libc_Kill libc_Kill
    //go:linkname libc_Lchown libc_Lchown
    //go:linkname libc_Link libc_Link
    //go:linkname libc_Lstat libc_Lstat
    //go:linkname libc_Mkdir libc_Mkdir
    //go:linkname libc_Mkdirat libc_Mkdirat
    //go:linkname libc_Mknodat libc_Mknodat
    //go:linkname libc_Open libc_Open
    //go:linkname libc_Pread libc_Pread
    //go:linkname libc_Pwrite libc_Pwrite
    //go:linkname libc_read libc_read
    //go:linkname libc_Reboot libc_Reboot
    //go:linkname libc_Rename libc_Rename
    //go:linkname libc_Renameat libc_Renameat
    //go:linkname libc_Rmdir libc_Rmdir
    //go:linkname libc_lseek libc_lseek
    //go:linkname libc_Setegid libc_Setegid
    //go:linkname libc_Seteuid libc_Seteuid
    //go:linkname libc_Setgid libc_Setgid
    //go:linkname libc_Setpgid libc_Setpgid
    //go:linkname libc_Setpriority libc_Setpriority
    //go:linkname libc_Setregid libc_Setregid
    //go:linkname libc_Setreuid libc_Setreuid
    //go:linkname libc_Setrlimit libc_Setrlimit
    //go:linkname libc_Stat libc_Stat
    //go:linkname libc_Statfs libc_Statfs
    //go:linkname libc_Symlink libc_Symlink
    //go:linkname libc_Truncate libc_Truncate
    //go:linkname libc_Umask libc_Umask
    //go:linkname libc_Unlink libc_Unlink
    //go:linkname libc_Uname libc_Uname
    //go:linkname libc_write libc_write
    //go:linkname libc_gettimeofday libc_gettimeofday
    //go:linkname libc_mmap libc_mmap
    //go:linkname libc_munmap libc_munmap
private partial struct libcFunc { // : System.UIntPtr
}

private static libcFunc libc_fcntl = default;private static libcFunc libc_Dup2 = default;private static libcFunc libc_pipe = default;private static libcFunc libc_readlink = default;private static libcFunc libc_utimes = default;private static libcFunc libc_utimensat = default;private static libcFunc libc_unlinkat = default;private static libcFunc libc_getcwd = default;private static libcFunc libc_getgroups = default;private static libcFunc libc_setgroups = default;private static libcFunc libc_getdirent = default;private static libcFunc libc_wait4 = default;private static libcFunc libc_fsync_range = default;private static libcFunc libc_bind = default;private static libcFunc libc_connect = default;private static libcFunc libc_Getkerninfo = default;private static libcFunc libc_getsockopt = default;private static libcFunc libc_Listen = default;private static libcFunc libc_setsockopt = default;private static libcFunc libc_socket = default;private static libcFunc libc_socketpair = default;private static libcFunc libc_getpeername = default;private static libcFunc libc_getsockname = default;private static libcFunc libc_recvfrom = default;private static libcFunc libc_sendto = default;private static libcFunc libc_Shutdown = default;private static libcFunc libc_nrecvmsg = default;private static libcFunc libc_nsendmsg = default;private static libcFunc libc_accept = default;private static libcFunc libc_Openat = default;private static libcFunc libc_ptrace64 = default;private static libcFunc libc_Acct = default;private static libcFunc libc_Chdir = default;private static libcFunc libc_Chmod = default;private static libcFunc libc_Chown = default;private static libcFunc libc_Chroot = default;private static libcFunc libc_Close = default;private static libcFunc libc_Dup = default;private static libcFunc libc_Faccessat = default;private static libcFunc libc_Fchdir = default;private static libcFunc libc_Fchmod = default;private static libcFunc libc_Fchmodat = default;private static libcFunc libc_Fchown = default;private static libcFunc libc_Fchownat = default;private static libcFunc libc_Fpathconf = default;private static libcFunc libc_Fstat = default;private static libcFunc libc_Fstatfs = default;private static libcFunc libc_Ftruncate = default;private static libcFunc libc_Getgid = default;private static libcFunc libc_Getpid = default;private static libcFunc libc_Geteuid = default;private static libcFunc libc_Getegid = default;private static libcFunc libc_Getppid = default;private static libcFunc libc_Getpriority = default;private static libcFunc libc_Getrlimit = default;private static libcFunc libc_Getuid = default;private static libcFunc libc_Kill = default;private static libcFunc libc_Lchown = default;private static libcFunc libc_Link = default;private static libcFunc libc_Lstat = default;private static libcFunc libc_Mkdir = default;private static libcFunc libc_Mkdirat = default;private static libcFunc libc_Mknodat = default;private static libcFunc libc_Open = default;private static libcFunc libc_Pread = default;private static libcFunc libc_Pwrite = default;private static libcFunc libc_read = default;private static libcFunc libc_Reboot = default;private static libcFunc libc_Rename = default;private static libcFunc libc_Renameat = default;private static libcFunc libc_Rmdir = default;private static libcFunc libc_lseek = default;private static libcFunc libc_Setegid = default;private static libcFunc libc_Seteuid = default;private static libcFunc libc_Setgid = default;private static libcFunc libc_Setpgid = default;private static libcFunc libc_Setpriority = default;private static libcFunc libc_Setregid = default;private static libcFunc libc_Setreuid = default;private static libcFunc libc_Setrlimit = default;private static libcFunc libc_Stat = default;private static libcFunc libc_Statfs = default;private static libcFunc libc_Symlink = default;private static libcFunc libc_Truncate = default;private static libcFunc libc_Umask = default;private static libcFunc libc_Unlink = default;private static libcFunc libc_Uname = default;private static libcFunc libc_write = default;private static libcFunc libc_gettimeofday = default;private static libcFunc libc_mmap = default;private static libcFunc libc_munmap = default;


// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) fcntl(nint fd, nint cmd, nint arg) {
    nint val = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_fcntl)), 3, uintptr(fd), uintptr(cmd), uintptr(arg), 0, 0, 0);
    val = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Dup2(nint old, nint @new) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Dup2)), 2, uintptr(old), uintptr(new), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error pipe(ptr<array<_C_int>> _addr_p) {
    error err = default!;
    ref array<_C_int> p = ref _addr_p.val;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_pipe)), 1, uintptr(@unsafe.Pointer(p)), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) readlink(@string path, slice<byte> buf, ulong bufSize) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    if (len(buf) > 0) {
        _p1 = _addr_buf[0];
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_readlink)), 4, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(len(buf)), uintptr(bufSize), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error utimes(@string path, ptr<array<Timeval>> _addr_times) {
    error err = default!;
    ref array<Timeval> times = ref _addr_times.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_utimes)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(times)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error utimensat(nint dirfd, @string path, ptr<array<Timespec>> _addr_times, nint flag) {
    error err = default!;
    ref array<Timespec> times = ref _addr_times.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_utimensat)), 4, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(times)), uintptr(flag), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error unlinkat(nint dirfd, @string path, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_unlinkat)), 3, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getcwd(ptr<byte> _addr_buf, ulong size) {
    error err = default!;
    ref byte buf = ref _addr_buf.val;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_getcwd)), 2, uintptr(@unsafe.Pointer(buf)), uintptr(size), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) getgroups(nint ngid, ptr<_Gid_t> _addr_gid) {
    nint n = default;
    error err = default!;
    ref _Gid_t gid = ref _addr_gid.val;

    var (r0, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_getgroups)), 2, uintptr(ngid), uintptr(@unsafe.Pointer(gid)), 0, 0, 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error setgroups(nint ngid, ptr<_Gid_t> _addr_gid) {
    error err = default!;
    ref _Gid_t gid = ref _addr_gid.val;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_setgroups)), 2, uintptr(ngid), uintptr(@unsafe.Pointer(gid)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) getdirent(nint fd, slice<byte> buf) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    if (len(buf) > 0) {
        _p0 = _addr_buf[0];
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_getdirent)), 3, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(len(buf)), 0, 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (_Pid_t, error) wait4(_Pid_t pid, ptr<_C_int> _addr_status, nint options, ptr<Rusage> _addr_rusage) {
    _Pid_t wpid = default;
    error err = default!;
    ref _C_int status = ref _addr_status.val;
    ref Rusage rusage = ref _addr_rusage.val;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_wait4)), 4, uintptr(pid), uintptr(@unsafe.Pointer(status)), uintptr(options), uintptr(@unsafe.Pointer(rusage)), 0, 0);
    wpid = _Pid_t(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error fsyncRange(nint fd, nint how, long start, long length) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_fsync_range)), 4, uintptr(fd), uintptr(how), uintptr(start), uintptr(length), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error bind(nint s, unsafe.Pointer addr, _Socklen addrlen) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_bind)), 3, uintptr(s), uintptr(addr), uintptr(addrlen), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error connect(nint s, unsafe.Pointer addr, _Socklen addrlen) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_connect)), 3, uintptr(s), uintptr(addr), uintptr(addrlen), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (int, error) Getkerninfo(int op, System.UIntPtr where, System.UIntPtr size, long arg) {
    int i = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Getkerninfo)), 4, uintptr(op), uintptr(where), uintptr(size), uintptr(arg), 0, 0);
    i = int32(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getsockopt(nint s, nint level, nint name, unsafe.Pointer val, ptr<_Socklen> _addr_vallen) {
    error err = default!;
    ref _Socklen vallen = ref _addr_vallen.val;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_getsockopt)), 5, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(@unsafe.Pointer(vallen)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Listen(nint s, nint backlog) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Listen)), 2, uintptr(s), uintptr(backlog), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error setsockopt(nint s, nint level, nint name, unsafe.Pointer val, System.UIntPtr vallen) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_setsockopt)), 5, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(vallen), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) socket(nint domain, nint typ, nint proto) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_socket)), 3, uintptr(domain), uintptr(typ), uintptr(proto), 0, 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error socketpair(nint domain, nint typ, nint proto, ptr<array<int>> _addr_fd) {
    error err = default!;
    ref array<int> fd = ref _addr_fd.val;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_socketpair)), 4, uintptr(domain), uintptr(typ), uintptr(proto), uintptr(@unsafe.Pointer(fd)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getpeername(nint fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_getpeername)), 3, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getsockname(nint fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_getsockname)), 3, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) recvfrom(nint fd, slice<byte> p, nint flags, ptr<RawSockaddrAny> _addr_from, ptr<_Socklen> _addr_fromlen) {
    nint n = default;
    error err = default!;
    ref RawSockaddrAny from = ref _addr_from.val;
    ref _Socklen fromlen = ref _addr_fromlen.val;

    ptr<byte> _p0;
    if (len(p) > 0) {
        _p0 = _addr_p[0];
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_recvfrom)), 6, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(len(p)), uintptr(flags), uintptr(@unsafe.Pointer(from)), uintptr(@unsafe.Pointer(fromlen)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error sendto(nint s, slice<byte> buf, nint flags, unsafe.Pointer to, _Socklen addrlen) {
    error err = default!;

    ptr<byte> _p0;
    if (len(buf) > 0) {
        _p0 = _addr_buf[0];
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_sendto)), 6, uintptr(s), uintptr(@unsafe.Pointer(_p0)), uintptr(len(buf)), uintptr(flags), uintptr(to), uintptr(addrlen));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Shutdown(nint s, nint how) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Shutdown)), 2, uintptr(s), uintptr(how), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) recvmsg(nint s, ptr<Msghdr> _addr_msg, nint flags) {
    nint n = default;
    error err = default!;
    ref Msghdr msg = ref _addr_msg.val;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_nrecvmsg)), 3, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags), 0, 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) sendmsg(nint s, ptr<Msghdr> _addr_msg, nint flags) {
    nint n = default;
    error err = default!;
    ref Msghdr msg = ref _addr_msg.val;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_nsendmsg)), 3, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags), 0, 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) accept(nint s, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    nint fd = default;
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_accept)), 3, uintptr(s), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)), 0, 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Openat(nint dirfd, @string path, nint flags, uint mode) {
    nint fd = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Openat)), 4, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), uintptr(mode), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error ptrace64(nint request, long id, long addr, nint data, System.UIntPtr buff) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_ptrace64)), 5, uintptr(request), uintptr(id), uintptr(addr), uintptr(data), uintptr(buff), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Acct(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Acct)), 1, uintptr(@unsafe.Pointer(_p0)), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chdir(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Chdir)), 1, uintptr(@unsafe.Pointer(_p0)), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chmod(@string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Chmod)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chown(@string path, nint uid, nint gid) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Chown)), 3, uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chroot(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Chroot)), 1, uintptr(@unsafe.Pointer(_p0)), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Close(nint fd) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Close)), 1, uintptr(fd), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Dup(nint fd) {
    nint nfd = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Dup)), 1, uintptr(fd), 0, 0, 0, 0, 0);
    nfd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Faccessat(nint dirfd, @string path, uint mode, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Faccessat)), 4, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(flags), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchdir(nint fd) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fchdir)), 1, uintptr(fd), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchmod(nint fd, uint mode) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fchmod)), 2, uintptr(fd), uintptr(mode), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchmodat(nint dirfd, @string path, uint mode, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fchmodat)), 4, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(flags), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchown(nint fd, nint uid, nint gid) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fchown)), 3, uintptr(fd), uintptr(uid), uintptr(gid), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchownat(nint dirfd, @string path, nint uid, nint gid, nint flags) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fchownat)), 5, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid), uintptr(flags), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Fpathconf(nint fd, nint name) {
    nint val = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fpathconf)), 2, uintptr(fd), uintptr(name), 0, 0, 0, 0);
    val = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fstat(nint fd, ptr<Stat_t> _addr_stat) {
    error err = default!;
    ref Stat_t stat = ref _addr_stat.val;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fstat)), 2, uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fstatfs(nint fd, ptr<Statfs_t> _addr_buf) {
    error err = default!;
    ref Statfs_t buf = ref _addr_buf.val;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Fstatfs)), 2, uintptr(fd), uintptr(@unsafe.Pointer(buf)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Ftruncate(nint fd, long length) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Ftruncate)), 2, uintptr(fd), uintptr(length), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getgid() {
    nint gid = default;

    var (r0, _, _) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Getgid)), 0, 0, 0, 0, 0, 0, 0);
    gid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getpid() {
    nint pid = default;

    var (r0, _, _) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Getpid)), 0, 0, 0, 0, 0, 0, 0);
    pid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Geteuid() {
    nint euid = default;

    var (r0, _, _) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Geteuid)), 0, 0, 0, 0, 0, 0, 0);
    euid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getegid() {
    nint egid = default;

    var (r0, _, _) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Getegid)), 0, 0, 0, 0, 0, 0, 0);
    egid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getppid() {
    nint ppid = default;

    var (r0, _, _) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Getppid)), 0, 0, 0, 0, 0, 0, 0);
    ppid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getpriority(nint which, nint who) {
    nint n = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Getpriority)), 2, uintptr(which), uintptr(who), 0, 0, 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Getrlimit(nint which, ptr<Rlimit> _addr_lim) {
    error err = default!;
    ref Rlimit lim = ref _addr_lim.val;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Getrlimit)), 2, uintptr(which), uintptr(@unsafe.Pointer(lim)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getuid() {
    nint uid = default;

    var (r0, _, _) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Getuid)), 0, 0, 0, 0, 0, 0, 0);
    uid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Kill(nint pid, Signal signum) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Kill)), 2, uintptr(pid), uintptr(signum), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Lchown(@string path, nint uid, nint gid) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Lchown)), 3, uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Link(@string path, @string link) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(link);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Link)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Lstat(@string path, ptr<Stat_t> _addr_stat) {
    error err = default!;
    ref Stat_t stat = ref _addr_stat.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Lstat)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mkdir(@string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Mkdir)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mkdirat(nint dirfd, @string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Mkdirat)), 3, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mknodat(nint dirfd, @string path, uint mode, nint dev) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Mknodat)), 4, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Open(@string path, nint mode, uint perm) {
    nint fd = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Open)), 3, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm), 0, 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Pread(nint fd, slice<byte> p, long offset) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    if (len(p) > 0) {
        _p0 = _addr_p[0];
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Pread)), 4, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(len(p)), uintptr(offset), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Pwrite(nint fd, slice<byte> p, long offset) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    if (len(p) > 0) {
        _p0 = _addr_p[0];
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Pwrite)), 4, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(len(p)), uintptr(offset), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) read(nint fd, slice<byte> p) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    if (len(p) > 0) {
        _p0 = _addr_p[0];
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_read)), 3, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(len(p)), 0, 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Reboot(nint how) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Reboot)), 1, uintptr(how), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Rename(@string from, @string to) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(from);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(to);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Rename)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Renameat(nint olddirfd, @string oldpath, nint newdirfd, @string newpath) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(oldpath);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(newpath);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Renameat)), 4, uintptr(olddirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(@unsafe.Pointer(_p1)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Rmdir(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Rmdir)), 1, uintptr(@unsafe.Pointer(_p0)), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (long, error) Seek(nint fd, long offset, nint whence) {
    long newoffset = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_lseek)), 3, uintptr(fd), uintptr(offset), uintptr(whence), 0, 0, 0);
    newoffset = int64(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setegid(nint egid) {
    error err = default!;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Setegid)), 1, uintptr(egid), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Seteuid(nint euid) {
    error err = default!;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Seteuid)), 1, uintptr(euid), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setgid(nint gid) {
    error err = default!;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Setgid)), 1, uintptr(gid), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setpgid(nint pid, nint pgid) {
    error err = default!;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Setpgid)), 2, uintptr(pid), uintptr(pgid), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setpriority(nint which, nint who, nint prio) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Setpriority)), 3, uintptr(which), uintptr(who), uintptr(prio), 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setregid(nint rgid, nint egid) {
    error err = default!;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Setregid)), 2, uintptr(rgid), uintptr(egid), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setreuid(nint ruid, nint euid) {
    error err = default!;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Setreuid)), 2, uintptr(ruid), uintptr(euid), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setrlimit(nint which, ptr<Rlimit> _addr_lim) {
    error err = default!;
    ref Rlimit lim = ref _addr_lim.val;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Setrlimit)), 2, uintptr(which), uintptr(@unsafe.Pointer(lim)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Stat(@string path, ptr<Stat_t> _addr_stat) {
    error err = default!;
    ref Stat_t stat = ref _addr_stat.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Stat)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Statfs(@string path, ptr<Statfs_t> _addr_buf) {
    error err = default!;
    ref Statfs_t buf = ref _addr_buf.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Statfs)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(buf)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Symlink(@string path, @string link) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(link);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Symlink)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Truncate(@string path, long length) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Truncate)), 2, uintptr(@unsafe.Pointer(_p0)), uintptr(length), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Umask(nint newmask) {
    nint oldmask = default;

    var (r0, _, _) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Umask)), 1, uintptr(newmask), 0, 0, 0, 0, 0);
    oldmask = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Unlink(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_Unlink)), 1, uintptr(@unsafe.Pointer(_p0)), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Uname(ptr<Utsname> _addr_buf) {
    error err = default!;
    ref Utsname buf = ref _addr_buf.val;

    var (_, _, e1) = rawSyscall6(uintptr(@unsafe.Pointer(_addr_libc_Uname)), 1, uintptr(@unsafe.Pointer(buf)), 0, 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) write(nint fd, slice<byte> p) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    if (len(p) > 0) {
        _p0 = _addr_p[0];
    }
    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_write)), 3, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(len(p)), 0, 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error gettimeofday(ptr<Timeval> _addr_tv, ptr<Timezone> _addr_tzp) {
    error err = default!;
    ref Timeval tv = ref _addr_tv.val;
    ref Timezone tzp = ref _addr_tzp.val;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_gettimeofday)), 2, uintptr(@unsafe.Pointer(tv)), uintptr(@unsafe.Pointer(tzp)), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (System.UIntPtr, error) mmap(System.UIntPtr addr, System.UIntPtr length, nint prot, nint flag, nint fd, long pos) {
    System.UIntPtr ret = default;
    error err = default!;

    var (r0, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_mmap)), 6, uintptr(addr), uintptr(length), uintptr(prot), uintptr(flag), uintptr(fd), uintptr(pos));
    ret = uintptr(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error munmap(System.UIntPtr addr, System.UIntPtr length) {
    error err = default!;

    var (_, _, e1) = syscall6(uintptr(@unsafe.Pointer(_addr_libc_munmap)), 2, uintptr(addr), uintptr(length), 0, 0, 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

} // end syscall_package
