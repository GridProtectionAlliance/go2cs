// Code generated by cmd/cgo -godefs; DO NOT EDIT.
// cgo -godefs types_aix.go | go run mkpost.go

// package syscall -- go2cs converted at 2022 March 06 22:29:48 UTC
// import "syscall" ==> using syscall = go.syscall_package
// Original source: C:\Program Files\Go\src\syscall\ztypes_aix_ppc64.go


namespace go;

public static partial class syscall_package {

private static readonly nuint sizeofPtr = 0x8;
private static readonly nuint sizeofShort = 0x2;
private static readonly nuint sizeofInt = 0x4;
private static readonly nuint sizeofLong = 0x8;
private static readonly nuint sizeofLongLong = 0x8;
public static readonly nuint PathMax = 0x3ff;


private partial struct _C_short { // : short
}
private partial struct _C_int { // : int
}
private partial struct _C_long { // : long
}
private partial struct _C_long_long { // : long
}
public partial struct Timespec {
    public long Sec;
    public long Nsec;
}

public partial struct Timeval {
    public long Sec;
    public int Usec;
    public array<byte> Pad_cgo_0;
}

public partial struct Timeval32 {
    public int Sec;
    public int Usec;
}

public partial struct Timezone {
    public int Minuteswest;
    public int Dsttime;
}

public partial struct Rusage {
    public Timeval Utime;
    public Timeval Stime;
    public long Maxrss;
    public long Ixrss;
    public long Idrss;
    public long Isrss;
    public long Minflt;
    public long Majflt;
    public long Nswap;
    public long Inblock;
    public long Oublock;
    public long Msgsnd;
    public long Msgrcv;
    public long Nsignals;
    public long Nvcsw;
    public long Nivcsw;
}

public partial struct Rlimit {
    public ulong Cur;
    public ulong Max;
}

private partial struct _Pid_t { // : int
}

private partial struct _Gid_t { // : uint
}

public partial struct Flock_t {
    public short Type;
    public short Whence;
    public uint Sysid;
    public int Pid;
    public int Vfs;
    public long Start;
    public long Len;
}

public partial struct Stat_t {
    public ulong Dev;
    public ulong Ino;
    public uint Mode;
    public short Nlink;
    public ushort Flag;
    public uint Uid;
    public uint Gid;
    public ulong Rdev;
    public int Ssize;
    public StTimespec_t Atim;
    public StTimespec_t Mtim;
    public StTimespec_t Ctim;
    public long Blksize;
    public long Blocks;
    public int Vfstype;
    public uint Vfs;
    public uint Type;
    public uint Gen;
    public array<uint> Reserved;
    public uint Padto_ll;
    public long Size;
}

public partial struct Statfs_t {
    public int Version;
    public int Type;
    public ulong Bsize;
    public ulong Blocks;
    public ulong Bfree;
    public ulong Bavail;
    public ulong Files;
    public ulong Ffree;
    public Fsid64_t Fsid;
    public int Vfstype;
    public ulong Fsize;
    public int Vfsnumber;
    public int Vfsoff;
    public int Vfslen;
    public int Vfsvers;
    public array<byte> Fname;
    public array<byte> Fpack;
    public int Name_max;
    public array<byte> Pad_cgo_0;
}

public partial struct Fsid64_t {
    public array<ulong> Val;
}

public partial struct StTimespec_t {
    public long Sec;
    public int Nsec;
    public array<byte> Pad_cgo_0;
}

public partial struct Dirent {
    public ulong Offset;
    public ulong Ino;
    public ushort Reclen;
    public ushort Namlen;
    public array<byte> Name;
    public array<byte> Pad_cgo_0;
}

public partial struct RawSockaddrInet4 {
    public byte Len;
    public byte Family;
    public ushort Port;
    public array<byte> Addr; /* in_addr */
    public array<byte> Zero;
}

public partial struct RawSockaddrInet6 {
    public byte Len;
    public byte Family;
    public ushort Port;
    public uint Flowinfo;
    public array<byte> Addr; /* in6_addr */
    public uint Scope_id;
}

public partial struct RawSockaddrUnix {
    public byte Len;
    public byte Family;
    public array<byte> Path;
}

public partial struct RawSockaddrDatalink {
    public byte Len;
    public byte Family;
    public ushort Index;
    public byte Type;
    public byte Nlen;
    public byte Alen;
    public byte Slen;
    public array<byte> Data;
}

public partial struct RawSockaddr {
    public byte Len;
    public byte Family;
    public array<byte> Data;
}

public partial struct RawSockaddrAny {
    public RawSockaddr Addr;
    public array<byte> Pad;
}

private partial struct _Socklen { // : uint
}

public partial struct Cmsghdr {
    public uint Len;
    public int Level;
    public int Type;
}

public partial struct ICMPv6Filter {
    public array<uint> Filt;
}

public partial struct Iovec {
    public ptr<byte> Base;
    public ulong Len;
}

public partial struct IPMreq {
    public array<byte> Multiaddr; /* in_addr */
    public array<byte> Interface; /* in_addr */
}

public partial struct IPv6Mreq {
    public array<byte> Multiaddr; /* in6_addr */
    public uint Interface;
}

public partial struct Linger {
    public int Onoff;
    public int Linger;
}

public partial struct Msghdr {
    public ptr<byte> Name;
    public uint Namelen;
    public ptr<Iovec> Iov;
    public int Iovlen;
    public ptr<byte> Control;
    public uint Controllen;
    public int Flags;
}

public static readonly nuint SizeofSockaddrInet4 = 0x10;
public static readonly nuint SizeofSockaddrInet6 = 0x1c;
public static readonly nuint SizeofSockaddrAny = 0x404;
public static readonly nuint SizeofSockaddrUnix = 0x401;
public static readonly nuint SizeofSockaddrDatalink = 0x80;
public static readonly nuint SizeofLinger = 0x8;
public static readonly nuint SizeofIPMreq = 0x8;
public static readonly nuint SizeofIPv6Mreq = 0x14;
public static readonly nuint SizeofMsghdr = 0x30;
public static readonly nuint SizeofCmsghdr = 0xc;
public static readonly nuint SizeofICMPv6Filter = 0x20;


public static readonly nuint PTRACE_TRACEME = 0x0;
public static readonly nuint PTRACE_CONT = 0x7;
public static readonly nuint PTRACE_KILL = 0x8;


public static readonly nuint SizeofIfMsghdr = 0x10;


public partial struct IfMsgHdr {
    public ushort Msglen;
    public byte Version;
    public byte Type;
    public int Addrs;
    public int Flags;
    public ushort Index;
    public byte Addrlen;
    public array<byte> Pad_cgo_0;
}

public partial struct Utsname {
    public array<byte> Sysname;
    public array<byte> Nodename;
    public array<byte> Release;
    public array<byte> Version;
    public array<byte> Machine;
}

private static readonly nuint _AT_FDCWD = -0x2;
private static readonly nuint _AT_REMOVEDIR = 0x1;
private static readonly nuint _AT_SYMLINK_NOFOLLOW = 0x1;


public partial struct Termios {
    public uint Iflag;
    public uint Oflag;
    public uint Cflag;
    public uint Lflag;
    public array<byte> Cc;
}

} // end syscall_package
