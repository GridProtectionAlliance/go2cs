// mkerrors_windows.sh -m32
// Code generated by the command above; DO NOT EDIT.

// package syscall -- go2cs converted at 2020 October 08 03:28:03 UTC
// import "syscall" ==> using syscall = go.syscall_package
// Original source: C:\Go\src\syscall\zerrors_windows.go

using static go.builtin;

namespace go
{
    public static partial class syscall_package
    {
        // Go names for Windows errors.
        public static readonly Errno ENOENT = (Errno)ERROR_FILE_NOT_FOUND;
        public static readonly Errno ENOTDIR = (Errno)ERROR_PATH_NOT_FOUND;


        // Windows reserves errors >= 1<<29 for application use.
        public static readonly long APPLICATION_ERROR = (long)1L << (int)(29L);

        // Invented values to support what package os and others expects.


        // Invented values to support what package os and others expects.
        public static readonly Errno E2BIG = (Errno)APPLICATION_ERROR + iota;
        public static readonly var EACCES = (var)0;
        public static readonly var EADDRINUSE = (var)1;
        public static readonly var EADDRNOTAVAIL = (var)2;
        public static readonly var EADV = (var)3;
        public static readonly var EAFNOSUPPORT = (var)4;
        public static readonly var EAGAIN = (var)5;
        public static readonly var EALREADY = (var)6;
        public static readonly var EBADE = (var)7;
        public static readonly var EBADF = (var)8;
        public static readonly var EBADFD = (var)9;
        public static readonly var EBADMSG = (var)10;
        public static readonly var EBADR = (var)11;
        public static readonly var EBADRQC = (var)12;
        public static readonly var EBADSLT = (var)13;
        public static readonly var EBFONT = (var)14;
        public static readonly var EBUSY = (var)15;
        public static readonly var ECANCELED = (var)16;
        public static readonly var ECHILD = (var)17;
        public static readonly var ECHRNG = (var)18;
        public static readonly var ECOMM = (var)19;
        public static readonly var ECONNABORTED = (var)20;
        public static readonly var ECONNREFUSED = (var)21;
        public static readonly var ECONNRESET = (var)22;
        public static readonly var EDEADLK = (var)23;
        public static readonly var EDEADLOCK = (var)24;
        public static readonly var EDESTADDRREQ = (var)25;
        public static readonly var EDOM = (var)26;
        public static readonly var EDOTDOT = (var)27;
        public static readonly var EDQUOT = (var)28;
        public static readonly var EEXIST = (var)29;
        public static readonly var EFAULT = (var)30;
        public static readonly var EFBIG = (var)31;
        public static readonly var EHOSTDOWN = (var)32;
        public static readonly var EHOSTUNREACH = (var)33;
        public static readonly var EIDRM = (var)34;
        public static readonly var EILSEQ = (var)35;
        public static readonly var EINPROGRESS = (var)36;
        public static readonly var EINTR = (var)37;
        public static readonly var EINVAL = (var)38;
        public static readonly var EIO = (var)39;
        public static readonly var EISCONN = (var)40;
        public static readonly var EISDIR = (var)41;
        public static readonly var EISNAM = (var)42;
        public static readonly var EKEYEXPIRED = (var)43;
        public static readonly var EKEYREJECTED = (var)44;
        public static readonly var EKEYREVOKED = (var)45;
        public static readonly var EL2HLT = (var)46;
        public static readonly var EL2NSYNC = (var)47;
        public static readonly var EL3HLT = (var)48;
        public static readonly var EL3RST = (var)49;
        public static readonly var ELIBACC = (var)50;
        public static readonly var ELIBBAD = (var)51;
        public static readonly var ELIBEXEC = (var)52;
        public static readonly var ELIBMAX = (var)53;
        public static readonly var ELIBSCN = (var)54;
        public static readonly var ELNRNG = (var)55;
        public static readonly var ELOOP = (var)56;
        public static readonly var EMEDIUMTYPE = (var)57;
        public static readonly var EMFILE = (var)58;
        public static readonly var EMLINK = (var)59;
        public static readonly var EMSGSIZE = (var)60;
        public static readonly var EMULTIHOP = (var)61;
        public static readonly var ENAMETOOLONG = (var)62;
        public static readonly var ENAVAIL = (var)63;
        public static readonly var ENETDOWN = (var)64;
        public static readonly var ENETRESET = (var)65;
        public static readonly var ENETUNREACH = (var)66;
        public static readonly var ENFILE = (var)67;
        public static readonly var ENOANO = (var)68;
        public static readonly var ENOBUFS = (var)69;
        public static readonly var ENOCSI = (var)70;
        public static readonly var ENODATA = (var)71;
        public static readonly var ENODEV = (var)72;
        public static readonly var ENOEXEC = (var)73;
        public static readonly var ENOKEY = (var)74;
        public static readonly var ENOLCK = (var)75;
        public static readonly var ENOLINK = (var)76;
        public static readonly var ENOMEDIUM = (var)77;
        public static readonly var ENOMEM = (var)78;
        public static readonly var ENOMSG = (var)79;
        public static readonly var ENONET = (var)80;
        public static readonly var ENOPKG = (var)81;
        public static readonly var ENOPROTOOPT = (var)82;
        public static readonly var ENOSPC = (var)83;
        public static readonly var ENOSR = (var)84;
        public static readonly var ENOSTR = (var)85;
        public static readonly var ENOSYS = (var)86;
        public static readonly var ENOTBLK = (var)87;
        public static readonly var ENOTCONN = (var)88;
        public static readonly var ENOTEMPTY = (var)89;
        public static readonly var ENOTNAM = (var)90;
        public static readonly var ENOTRECOVERABLE = (var)91;
        public static readonly var ENOTSOCK = (var)92;
        public static readonly var ENOTSUP = (var)93;
        public static readonly var ENOTTY = (var)94;
        public static readonly var ENOTUNIQ = (var)95;
        public static readonly var ENXIO = (var)96;
        public static readonly var EOPNOTSUPP = (var)97;
        public static readonly var EOVERFLOW = (var)98;
        public static readonly var EOWNERDEAD = (var)99;
        public static readonly var EPERM = (var)100;
        public static readonly var EPFNOSUPPORT = (var)101;
        public static readonly var EPIPE = (var)102;
        public static readonly var EPROTO = (var)103;
        public static readonly var EPROTONOSUPPORT = (var)104;
        public static readonly var EPROTOTYPE = (var)105;
        public static readonly var ERANGE = (var)106;
        public static readonly var EREMCHG = (var)107;
        public static readonly var EREMOTE = (var)108;
        public static readonly var EREMOTEIO = (var)109;
        public static readonly var ERESTART = (var)110;
        public static readonly var EROFS = (var)111;
        public static readonly var ESHUTDOWN = (var)112;
        public static readonly var ESOCKTNOSUPPORT = (var)113;
        public static readonly var ESPIPE = (var)114;
        public static readonly var ESRCH = (var)115;
        public static readonly var ESRMNT = (var)116;
        public static readonly var ESTALE = (var)117;
        public static readonly var ESTRPIPE = (var)118;
        public static readonly var ETIME = (var)119;
        public static readonly var ETIMEDOUT = (var)120;
        public static readonly var ETOOMANYREFS = (var)121;
        public static readonly var ETXTBSY = (var)122;
        public static readonly var EUCLEAN = (var)123;
        public static readonly var EUNATCH = (var)124;
        public static readonly var EUSERS = (var)125;
        public static readonly var EWOULDBLOCK = (var)126;
        public static readonly var EXDEV = (var)127;
        public static readonly var EXFULL = (var)128;
        public static readonly var EWINDOWS = (var)129;


        // Error strings for invented errors
        private static array<@string> errors = new array<@string>(InitKeyedValues<@string>((E2BIG-APPLICATION_ERROR, "argument list too long"), (EACCES-APPLICATION_ERROR, "permission denied"), (EADDRINUSE-APPLICATION_ERROR, "address already in use"), (EADDRNOTAVAIL-APPLICATION_ERROR, "cannot assign requested address"), (EADV-APPLICATION_ERROR, "advertise error"), (EAFNOSUPPORT-APPLICATION_ERROR, "address family not supported by protocol"), (EAGAIN-APPLICATION_ERROR, "resource temporarily unavailable"), (EALREADY-APPLICATION_ERROR, "operation already in progress"), (EBADE-APPLICATION_ERROR, "invalid exchange"), (EBADF-APPLICATION_ERROR, "bad file descriptor"), (EBADFD-APPLICATION_ERROR, "file descriptor in bad state"), (EBADMSG-APPLICATION_ERROR, "bad message"), (EBADR-APPLICATION_ERROR, "invalid request descriptor"), (EBADRQC-APPLICATION_ERROR, "invalid request code"), (EBADSLT-APPLICATION_ERROR, "invalid slot"), (EBFONT-APPLICATION_ERROR, "bad font file format"), (EBUSY-APPLICATION_ERROR, "device or resource busy"), (ECANCELED-APPLICATION_ERROR, "operation canceled"), (ECHILD-APPLICATION_ERROR, "no child processes"), (ECHRNG-APPLICATION_ERROR, "channel number out of range"), (ECOMM-APPLICATION_ERROR, "communication error on send"), (ECONNABORTED-APPLICATION_ERROR, "software caused connection abort"), (ECONNREFUSED-APPLICATION_ERROR, "connection refused"), (ECONNRESET-APPLICATION_ERROR, "connection reset by peer"), (EDEADLK-APPLICATION_ERROR, "resource deadlock avoided"), (EDEADLOCK-APPLICATION_ERROR, "resource deadlock avoided"), (EDESTADDRREQ-APPLICATION_ERROR, "destination address required"), (EDOM-APPLICATION_ERROR, "numerical argument out of domain"), (EDOTDOT-APPLICATION_ERROR, "RFS specific error"), (EDQUOT-APPLICATION_ERROR, "disk quota exceeded"), (EEXIST-APPLICATION_ERROR, "file exists"), (EFAULT-APPLICATION_ERROR, "bad address"), (EFBIG-APPLICATION_ERROR, "file too large"), (EHOSTDOWN-APPLICATION_ERROR, "host is down"), (EHOSTUNREACH-APPLICATION_ERROR, "no route to host"), (EIDRM-APPLICATION_ERROR, "identifier removed"), (EILSEQ-APPLICATION_ERROR, "invalid or incomplete multibyte or wide character"), (EINPROGRESS-APPLICATION_ERROR, "operation now in progress"), (EINTR-APPLICATION_ERROR, "interrupted system call"), (EINVAL-APPLICATION_ERROR, "invalid argument"), (EIO-APPLICATION_ERROR, "input/output error"), (EISCONN-APPLICATION_ERROR, "transport endpoint is already connected"), (EISDIR-APPLICATION_ERROR, "is a directory"), (EISNAM-APPLICATION_ERROR, "is a named type file"), (EKEYEXPIRED-APPLICATION_ERROR, "key has expired"), (EKEYREJECTED-APPLICATION_ERROR, "key was rejected by service"), (EKEYREVOKED-APPLICATION_ERROR, "key has been revoked"), (EL2HLT-APPLICATION_ERROR, "level 2 halted"), (EL2NSYNC-APPLICATION_ERROR, "level 2 not synchronized"), (EL3HLT-APPLICATION_ERROR, "level 3 halted"), (EL3RST-APPLICATION_ERROR, "level 3 reset"), (ELIBACC-APPLICATION_ERROR, "can not access a needed shared library"), (ELIBBAD-APPLICATION_ERROR, "accessing a corrupted shared library"), (ELIBEXEC-APPLICATION_ERROR, "cannot exec a shared library directly"), (ELIBMAX-APPLICATION_ERROR, "attempting to link in too many shared libraries"), (ELIBSCN-APPLICATION_ERROR, ".lib section in a.out corrupted"), (ELNRNG-APPLICATION_ERROR, "link number out of range"), (ELOOP-APPLICATION_ERROR, "too many levels of symbolic links"), (EMEDIUMTYPE-APPLICATION_ERROR, "wrong medium type"), (EMFILE-APPLICATION_ERROR, "too many open files"), (EMLINK-APPLICATION_ERROR, "too many links"), (EMSGSIZE-APPLICATION_ERROR, "message too long"), (EMULTIHOP-APPLICATION_ERROR, "multihop attempted"), (ENAMETOOLONG-APPLICATION_ERROR, "file name too long"), (ENAVAIL-APPLICATION_ERROR, "no XENIX semaphores available"), (ENETDOWN-APPLICATION_ERROR, "network is down"), (ENETRESET-APPLICATION_ERROR, "network dropped connection on reset"), (ENETUNREACH-APPLICATION_ERROR, "network is unreachable"), (ENFILE-APPLICATION_ERROR, "too many open files in system"), (ENOANO-APPLICATION_ERROR, "no anode"), (ENOBUFS-APPLICATION_ERROR, "no buffer space available"), (ENOCSI-APPLICATION_ERROR, "no CSI structure available"), (ENODATA-APPLICATION_ERROR, "no data available"), (ENODEV-APPLICATION_ERROR, "no such device"), (ENOEXEC-APPLICATION_ERROR, "exec format error"), (ENOKEY-APPLICATION_ERROR, "required key not available"), (ENOLCK-APPLICATION_ERROR, "no locks available"), (ENOLINK-APPLICATION_ERROR, "link has been severed"), (ENOMEDIUM-APPLICATION_ERROR, "no medium found"), (ENOMEM-APPLICATION_ERROR, "cannot allocate memory"), (ENOMSG-APPLICATION_ERROR, "no message of desired type"), (ENONET-APPLICATION_ERROR, "machine is not on the network"), (ENOPKG-APPLICATION_ERROR, "package not installed"), (ENOPROTOOPT-APPLICATION_ERROR, "protocol not available"), (ENOSPC-APPLICATION_ERROR, "no space left on device"), (ENOSR-APPLICATION_ERROR, "out of streams resources"), (ENOSTR-APPLICATION_ERROR, "device not a stream"), (ENOSYS-APPLICATION_ERROR, "function not implemented"), (ENOTBLK-APPLICATION_ERROR, "block device required"), (ENOTCONN-APPLICATION_ERROR, "transport endpoint is not connected"), (ENOTEMPTY-APPLICATION_ERROR, "directory not empty"), (ENOTNAM-APPLICATION_ERROR, "not a XENIX named type file"), (ENOTRECOVERABLE-APPLICATION_ERROR, "state not recoverable"), (ENOTSOCK-APPLICATION_ERROR, "socket operation on non-socket"), (ENOTSUP-APPLICATION_ERROR, "operation not supported"), (ENOTTY-APPLICATION_ERROR, "inappropriate ioctl for device"), (ENOTUNIQ-APPLICATION_ERROR, "name not unique on network"), (ENXIO-APPLICATION_ERROR, "no such device or address"), (EOPNOTSUPP-APPLICATION_ERROR, "operation not supported"), (EOVERFLOW-APPLICATION_ERROR, "value too large for defined data type"), (EOWNERDEAD-APPLICATION_ERROR, "owner died"), (EPERM-APPLICATION_ERROR, "operation not permitted"), (EPFNOSUPPORT-APPLICATION_ERROR, "protocol family not supported"), (EPIPE-APPLICATION_ERROR, "broken pipe"), (EPROTO-APPLICATION_ERROR, "protocol error"), (EPROTONOSUPPORT-APPLICATION_ERROR, "protocol not supported"), (EPROTOTYPE-APPLICATION_ERROR, "protocol wrong type for socket"), (ERANGE-APPLICATION_ERROR, "numerical result out of range"), (EREMCHG-APPLICATION_ERROR, "remote address changed"), (EREMOTE-APPLICATION_ERROR, "object is remote"), (EREMOTEIO-APPLICATION_ERROR, "remote I/O error"), (ERESTART-APPLICATION_ERROR, "interrupted system call should be restarted"), (EROFS-APPLICATION_ERROR, "read-only file system"), (ESHUTDOWN-APPLICATION_ERROR, "cannot send after transport endpoint shutdown"), (ESOCKTNOSUPPORT-APPLICATION_ERROR, "socket type not supported"), (ESPIPE-APPLICATION_ERROR, "illegal seek"), (ESRCH-APPLICATION_ERROR, "no such process"), (ESRMNT-APPLICATION_ERROR, "srmount error"), (ESTALE-APPLICATION_ERROR, "stale NFS file handle"), (ESTRPIPE-APPLICATION_ERROR, "streams pipe error"), (ETIME-APPLICATION_ERROR, "timer expired"), (ETIMEDOUT-APPLICATION_ERROR, "connection timed out"), (ETOOMANYREFS-APPLICATION_ERROR, "too many references: cannot splice"), (ETXTBSY-APPLICATION_ERROR, "text file busy"), (EUCLEAN-APPLICATION_ERROR, "structure needs cleaning"), (EUNATCH-APPLICATION_ERROR, "protocol driver not attached"), (EUSERS-APPLICATION_ERROR, "too many users"), (EWOULDBLOCK-APPLICATION_ERROR, "resource temporarily unavailable"), (EXDEV-APPLICATION_ERROR, "invalid cross-device link"), (EXFULL-APPLICATION_ERROR, "exchange full"), (EWINDOWS-APPLICATION_ERROR, "not supported by windows")));
    }
}
