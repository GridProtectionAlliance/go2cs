//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:26:29 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using itoa = go.@internal.itoa_package;
using runtime = go.runtime_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class syscall_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct capHeader
        {
            // Constructors
            public capHeader(NilType _)
            {
                this.version = default;
                this.pid = default;
            }

            public capHeader(uint version = default, int pid = default)
            {
                this.version = version;
                this.pid = pid;
            }

            // Enable comparisons between nil and capHeader struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(capHeader value, NilType nil) => value.Equals(default(capHeader));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(capHeader value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, capHeader value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, capHeader value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator capHeader(NilType nil) => default(capHeader);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static capHeader capHeader_cast(dynamic value)
        {
            return new capHeader(value.version, value.pid);
        }
    }
}