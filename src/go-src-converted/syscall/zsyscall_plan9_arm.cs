// mksyscall.pl -l32 -plan9 -tags plan9,arm syscall_plan9.go
// Code generated by the command above; DO NOT EDIT.

// +build plan9,arm

// package syscall -- go2cs converted at 2020 October 08 03:30:20 UTC
// import "syscall" ==> using syscall = go.syscall_package
// Original source: C:\Go\src\syscall\zsyscall_plan9_arm.go
using @unsafe = go.@unsafe_package;
using static go.builtin;

namespace go
{
    public static partial class syscall_package
    {
        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
        private static error fd2path(long fd, slice<byte> buf)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }
            var (r0, _, e1) = Syscall(SYS_FD2PATH, uintptr(fd), uintptr(_p0), uintptr(len(buf)));
            if (int32(r0) == -1L)
            {
                err = e1;
            }
            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error pipe(ptr<array<int>> _addr_p)
        {
            error err = default!;
            ref array<int> p = ref _addr_p.val;

            var (r0, _, e1) = Syscall(SYS_PIPE, uintptr(@unsafe.Pointer(p)), 0L, 0L);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) await(slice<byte> s)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(s) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_s[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_AWAIT, uintptr(_p0), uintptr(len(s)), 0L);
            n = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) open(@string path, long mode)
        {
            long fd = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_OPEN, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0L);
            fd = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) create(@string path, long mode, uint perm)
        {
            long fd = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_CREATE, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm));
            fd = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error remove(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_REMOVE, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) stat(@string path, slice<byte> edir)
        {
            long n = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(edir) > 0L)
            {
                _p1 = @unsafe.Pointer(_addr_edir[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_STAT, uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(edir)));
            n = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error bind(@string name, @string old, long flag)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(name);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(old);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_BIND, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(flag));
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error mount(long fd, long afd, @string old, long flag, @string aname)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(old);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(aname);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall6(SYS_MOUNT, uintptr(fd), uintptr(afd), uintptr(@unsafe.Pointer(_p0)), uintptr(flag), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error wstat(@string path, slice<byte> edir)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(edir) > 0L)
            {
                _p1 = @unsafe.Pointer(_addr_edir[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_WSTAT, uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(edir)));
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error chdir(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_CHDIR, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Dup(long oldfd, long newfd)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = Syscall(SYS_DUP, uintptr(oldfd), uintptr(newfd), 0L);
            fd = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pread(long fd, slice<byte> p, long offset)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_PREAD, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), uintptr(offset >> (int)(32L)), 0L);
            n = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pwrite(long fd, slice<byte> p, long offset)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_PWRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), uintptr(offset >> (int)(32L)), 0L);
            n = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Close(long fd)
        {
            error err = default!;

            var (r0, _, e1) = Syscall(SYS_CLOSE, uintptr(fd), 0L, 0L);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Fstat(long fd, slice<byte> edir)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(edir) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_edir[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_FSTAT, uintptr(fd), uintptr(_p0), uintptr(len(edir)));
            n = int(r0);
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fwstat(long fd, slice<byte> edir)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(edir) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_edir[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_FWSTAT, uintptr(fd), uintptr(_p0), uintptr(len(edir)));
            if (int32(r0) == -1L)
            {
                err = e1;
            }

            return ;

        }
    }
}
