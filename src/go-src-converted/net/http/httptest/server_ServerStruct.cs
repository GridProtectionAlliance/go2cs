//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:41:27 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using tls = go.crypto.tls_package;
using x509 = go.crypto.x509_package;
using flag = go.flag_package;
using fmt = go.fmt_package;
using log = go.log_package;
using net = go.net_package;
using http = go.net.http_package;
using @internal = go.net.http.@internal_package;
using os = go.os_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;
using go;

namespace go {
namespace net {
namespace http
{
    public static partial class httptest_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Server
        {
            // Constructors
            public Server(NilType _)
            {
                this.URL = default;
                this.Listener = default;
                this.EnableHTTP2 = default;
                this.TLS = default;
                this.Config = default;
                this.certificate = default;
                this.wg = default;
                this.mu = default;
                this.closed = default;
                this.conns = default;
                this.client = default;
            }

            public Server(@string URL = default, net.Listener Listener = default, bool EnableHTTP2 = default, ref ptr<tls.Config> TLS = default, ref ptr<http.Server> Config = default, ref ptr<x509.Certificate> certificate = default, sync.WaitGroup wg = default, sync.Mutex mu = default, bool closed = default, map<net.Conn, http.ConnState> conns = default, ref ptr<http.Client> client = default)
            {
                this.URL = URL;
                this.Listener = Listener;
                this.EnableHTTP2 = EnableHTTP2;
                this.TLS = TLS;
                this.Config = Config;
                this.certificate = certificate;
                this.wg = wg;
                this.mu = mu;
                this.closed = closed;
                this.conns = conns;
                this.client = client;
            }

            // Enable comparisons between nil and Server struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Server value, NilType nil) => value.Equals(default(Server));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Server value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Server value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Server value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Server(NilType nil) => default(Server);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Server Server_cast(dynamic value)
        {
            return new Server(value.URL, value.Listener, value.EnableHTTP2, ref value.TLS, ref value.Config, ref value.certificate, value.wg, value.mu, value.closed, value.conns, ref value.client);
        }
    }
}}}