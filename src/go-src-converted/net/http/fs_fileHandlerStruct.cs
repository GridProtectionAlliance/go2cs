//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:56:20 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using mime = go.mime_package;
using multipart = go.mime.multipart_package;
using textproto = go.net.textproto_package;
using url = go.net.url_package;
using os = go.os_package;
using path = go.path_package;
using filepath = go.path.filepath_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace net
{
    public static partial class http_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct fileHandler
        {
            // Constructors
            public fileHandler(NilType _)
            {
                this.root = default;
            }

            public fileHandler(FileSystem root = default)
            {
                this.root = root;
            }

            // Enable comparisons between nil and fileHandler struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(fileHandler value, NilType nil) => value.Equals(default(fileHandler));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(fileHandler value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, fileHandler value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, fileHandler value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator fileHandler(NilType nil) => default(fileHandler);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static fileHandler fileHandler_cast(dynamic value)
        {
            return new fileHandler(value.root);
        }
    }
}}