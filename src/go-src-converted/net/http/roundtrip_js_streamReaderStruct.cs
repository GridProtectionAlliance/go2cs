//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:22:57 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using strconv = go.strconv_package;
using js = go.syscall.js_package;
using go;

#nullable enable

namespace go {
namespace net
{
    public static partial class http_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct streamReader
        {
            // Constructors
            public streamReader(NilType _)
            {
                this.pending = default;
                this.stream = default;
                this.err = default;
            }

            public streamReader(slice<byte> pending = default, js.Value stream = default, error err = default)
            {
                this.pending = pending;
                this.stream = stream;
                this.err = err;
            }

            // Enable comparisons between nil and streamReader struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(streamReader value, NilType nil) => value.Equals(default(streamReader));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(streamReader value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, streamReader value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, streamReader value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator streamReader(NilType nil) => default(streamReader);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static streamReader streamReader_cast(dynamic value)
        {
            return new streamReader(value.pending, value.stream, value.err);
        }
    }
}}