//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:24:07 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace net {
namespace http
{
    public static partial class pprof_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct handler
        {
            // Value of the handler struct
            private readonly @string m_value;
            
            public handler(@string value) => m_value = value;

            // Enable implicit conversions between @string and handler struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator handler(@string value) => new handler(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator @string(handler value) => value.m_value;
            
            // Enable comparisons between nil and handler struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(handler value, NilType nil) => value.Equals(default(handler));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(handler value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, handler value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, handler value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator handler(NilType nil) => default(handler);
        }
    }
}}}
