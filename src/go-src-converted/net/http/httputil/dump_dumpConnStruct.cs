//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:38:26 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using net = go.net_package;
using http = go.net.http_package;
using url = go.net.url_package;
using strings = go.strings_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace net {
namespace http
{
    public static partial class httputil_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct dumpConn
        {
            // Writer.Write function promotion
            private delegate (nint, error) WriteByVal(T value, slice<byte> p);
            private delegate (nint, error) WriteByRef(ref T value, slice<byte> p);

            private static readonly WriteByVal s_WriteByVal;
            private static readonly WriteByRef s_WriteByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (nint, error) Write(slice<byte> p) => s_WriteByRef?.Invoke(ref this, p) ?? s_WriteByVal?.Invoke(this, p) ?? Writer?.Write(p) ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);

            // Reader.Read function promotion
            private delegate (nint, error) ReadByVal(T value, slice<byte> p);
            private delegate (nint, error) ReadByRef(ref T value, slice<byte> p);

            private static readonly ReadByVal s_ReadByVal;
            private static readonly ReadByRef s_ReadByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (nint, error) Read(slice<byte> p) => s_ReadByRef?.Invoke(ref this, p) ?? s_ReadByVal?.Invoke(this, p) ?? Reader?.Read(p) ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);
            
            [DebuggerStepperBoundary]
            static dumpConn()
            {
                Type targetType = typeof(dumpConn);
                MethodInfo extensionMethod;
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Write");

                if (extensionMethod is not null)
                {
                    s_WriteByRef = extensionMethod.CreateStaticDelegate(typeof(WriteByRef)) as WriteByRef;

                    if (s_WriteByRef is null)
                        s_WriteByVal = extensionMethod.CreateStaticDelegate(typeof(WriteByVal)) as WriteByVal;
                }
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Read");

                if (extensionMethod is not null)
                {
                    s_ReadByRef = extensionMethod.CreateStaticDelegate(typeof(ReadByRef)) as ReadByRef;

                    if (s_ReadByRef is null)
                        s_ReadByVal = extensionMethod.CreateStaticDelegate(typeof(ReadByVal)) as ReadByVal;
                }
            }

            // Constructors
            public dumpConn(NilType _)
            {
                this.Writer = default;
                this.Reader = default;
            }

            public dumpConn(io.Writer Writer = default, io.Reader Reader = default)
            {
                this.Writer = Writer;
                this.Reader = Reader;
            }

            // Enable comparisons between nil and dumpConn struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(dumpConn value, NilType nil) => value.Equals(default(dumpConn));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(dumpConn value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, dumpConn value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, dumpConn value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator dumpConn(NilType nil) => default(dumpConn);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static dumpConn dumpConn_cast(dynamic value)
        {
            return new dumpConn(value.Writer, value.Reader);
        }
    }
}}}