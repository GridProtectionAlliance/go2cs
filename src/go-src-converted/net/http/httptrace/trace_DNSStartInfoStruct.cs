//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:37:14 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using context = go.context_package;
using tls = go.crypto.tls_package;
using nettrace = go.@internal.nettrace_package;
using net = go.net_package;
using textproto = go.net.textproto_package;
using reflect = go.reflect_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace net {
namespace http
{
    public static partial class httptrace_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct DNSStartInfo
        {
            // Constructors
            public DNSStartInfo(NilType _)
            {
                this.Host = default;
            }

            public DNSStartInfo(@string Host = default)
            {
                this.Host = Host;
            }

            // Enable comparisons between nil and DNSStartInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(DNSStartInfo value, NilType nil) => value.Equals(default(DNSStartInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(DNSStartInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, DNSStartInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, DNSStartInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator DNSStartInfo(NilType nil) => default(DNSStartInfo);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static DNSStartInfo DNSStartInfo_cast(dynamic value)
        {
            return new DNSStartInfo(value.Host);
        }
    }
}}}