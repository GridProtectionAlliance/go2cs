//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:21:58 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using gzip = go.compress.gzip_package;
using context = go.context_package;
using rand = go.crypto.rand_package;
using tls = go.crypto.tls_package;
using binary = go.encoding.binary_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using ioutil = go.io.ioutil_package;
using log = go.log_package;
using math = go.math_package;
using mathrand = go.math.rand_package;
using net = go.net_package;
using httptrace = go.net.http.httptrace_package;
using textproto = go.net.textproto_package;
using url = go.net.url_package;
using os = go.os_package;
using reflect = go.reflect_package;
using runtime = go.runtime_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;
using httpguts = go.golang.org.x.net.http.httpguts_package;
using hpack = go.golang.org.x.net.http2.hpack_package;
using idna = go.golang.org.x.net.idna_package;
using go;

#nullable enable

namespace go {
namespace net
{
    public static partial class http_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(http2FrameHeader))]
        [PromotedStruct(typeof(http2PriorityParam))]
        private partial struct http2PriorityFrame
        {
            // http2FrameHeader structure promotion - sourced from value copy
            private readonly ptr<http2FrameHeader> m_http2FrameHeaderRef;

            private ref http2FrameHeader http2FrameHeader_val => ref m_http2FrameHeaderRef.Value;

            public ref bool valid => ref m_http2FrameHeaderRef.Value.valid;

            public ref http2FrameType Type => ref m_http2FrameHeaderRef.Value.Type;

            public ref http2Flags Flags => ref m_http2FrameHeaderRef.Value.Flags;

            public ref uint Length => ref m_http2FrameHeaderRef.Value.Length;

            public ref uint StreamID => ref m_http2FrameHeaderRef.Value.StreamID;

            // http2PriorityParam structure promotion - sourced from value copy
            private readonly ptr<http2PriorityParam> m_http2PriorityParamRef;

            private ref http2PriorityParam http2PriorityParam_val => ref m_http2PriorityParamRef.Value;

            public ref uint StreamDep => ref m_http2PriorityParamRef.Value.StreamDep;

            public ref bool Exclusive => ref m_http2PriorityParamRef.Value.Exclusive;

            public ref byte Weight => ref m_http2PriorityParamRef.Value.Weight;

            // Constructors
            public http2PriorityFrame(NilType _)
            {
                this.m_http2FrameHeaderRef = new ptr<http2FrameHeader>(new http2FrameHeader(nil));
                this.m_http2PriorityParamRef = new ptr<http2PriorityParam>(new http2PriorityParam(nil));
            }

            public http2PriorityFrame(http2FrameHeader http2FrameHeader = default, http2PriorityParam http2PriorityParam = default)
            {
                this.m_http2FrameHeaderRef = new ptr<http2FrameHeader>(http2FrameHeader);
                this.m_http2PriorityParamRef = new ptr<http2PriorityParam>(http2PriorityParam);
            }

            // Enable comparisons between nil and http2PriorityFrame struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(http2PriorityFrame value, NilType nil) => value.Equals(default(http2PriorityFrame));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(http2PriorityFrame value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, http2PriorityFrame value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, http2PriorityFrame value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator http2PriorityFrame(NilType nil) => default(http2PriorityFrame);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static http2PriorityFrame http2PriorityFrame_cast(dynamic value)
        {
            return new http2PriorityFrame(value.http2FrameHeader, value.http2PriorityParam);
        }
    }
}}