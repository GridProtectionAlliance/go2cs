//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:50:29 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytealg = go.@internal.bytealg_package;
using os = go.os_package;
using runtime = go.runtime_package;
using sync = go.sync_package;
using syscall = go.syscall_package;

#nullable enable

namespace go
{
    public static partial class net_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct conf
        {
            // Constructors
            public conf(NilType _)
            {
                this.forceCgoLookupHost = default;
                this.netGo = default;
                this.netCgo = default;
                this.hasMDNSAllow = default;
                this.goos = default;
                this.dnsDebugLevel = default;
                this.nss = default;
                this.resolv = default;
            }

            public conf(bool forceCgoLookupHost = default, bool netGo = default, bool netCgo = default, bool hasMDNSAllow = default, @string goos = default, long dnsDebugLevel = default, ref ptr<nssConf> nss = default, ref ptr<dnsConfig> resolv = default)
            {
                this.forceCgoLookupHost = forceCgoLookupHost;
                this.netGo = netGo;
                this.netCgo = netCgo;
                this.hasMDNSAllow = hasMDNSAllow;
                this.goos = goos;
                this.dnsDebugLevel = dnsDebugLevel;
                this.nss = nss;
                this.resolv = resolv;
            }

            // Enable comparisons between nil and conf struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(conf value, NilType nil) => value.Equals(default(conf));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(conf value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, conf value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, conf value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator conf(NilType nil) => default(conf);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static conf conf_cast(dynamic value)
        {
            return new conf(value.forceCgoLookupHost, value.netGo, value.netCgo, value.hasMDNSAllow, value.goos, value.dnsDebugLevel, ref value.nss, ref value.resolv);
        }
    }
}