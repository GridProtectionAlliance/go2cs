//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:25:49 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using template = go.html.template_package;
using http = go.net.http_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace net
{
    public static partial class rpc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct debugService
        {
            // Constructors
            public debugService(NilType _)
            {
                this.Service = default;
                this.Name = default;
                this.Method = default;
            }

            public debugService(ref ptr<service> Service = default, @string Name = default, methodArray Method = default)
            {
                this.Service = Service;
                this.Name = Name;
                this.Method = Method;
            }

            // Enable comparisons between nil and debugService struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(debugService value, NilType nil) => value.Equals(default(debugService));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(debugService value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, debugService value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, debugService value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator debugService(NilType nil) => default(debugService);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static debugService debugService_cast(dynamic value)
        {
            return new debugService(ref value.Service, value.Name, value.Method);
        }
    }
}}