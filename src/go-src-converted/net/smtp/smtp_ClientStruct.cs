//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:43:30 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using tls = go.crypto.tls_package;
using base64 = go.encoding.base64_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using net = go.net_package;
using textproto = go.net.textproto_package;
using strings = go.strings_package;
using go;

namespace go {
namespace net
{
    public static partial class smtp_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Client
        {
            // Constructors
            public Client(NilType _)
            {
                this.Text = default;
                this.conn = default;
                this.tls = default;
                this.serverName = default;
                this.ext = default;
                this.auth = default;
                this.localName = default;
                this.didHello = default;
                this.helloError = default;
            }

            public Client(ref ptr<textproto.Conn> Text = default, net.Conn conn = default, bool tls = default, @string serverName = default, map<@string, @string> ext = default, slice<@string> auth = default, @string localName = default, bool didHello = default, error helloError = default)
            {
                this.Text = Text;
                this.conn = conn;
                this.tls = tls;
                this.serverName = serverName;
                this.ext = ext;
                this.auth = auth;
                this.localName = localName;
                this.didHello = didHello;
                this.helloError = helloError;
            }

            // Enable comparisons between nil and Client struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Client value, NilType nil) => value.Equals(default(Client));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Client value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Client value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Client value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Client(NilType nil) => default(Client);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Client Client_cast(dynamic value)
        {
            return new Client(ref value.Text, value.conn, value.tls, value.serverName, value.ext, value.auth, value.localName, value.didHello, value.helloError);
        }
    }
}}