//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:43:30 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using tls = go.crypto.tls_package;
using base64 = go.encoding.base64_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using net = go.net_package;
using textproto = go.net.textproto_package;
using strings = go.strings_package;
using go;

namespace go {
namespace net
{
    public static partial class smtp_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct dataCloser
        {
            // WriteCloser.Write function promotion
            private delegate (long, error) WriteByVal(T value, slice<byte> p);
            private delegate (long, error) WriteByRef(ref T value, slice<byte> p);

            private static readonly WriteByVal s_WriteByVal;
            private static readonly WriteByRef s_WriteByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) Write(slice<byte> p) => s_WriteByRef?.Invoke(ref this, p) ?? s_WriteByVal?.Invoke(this, p) ?? WriteCloser?.Write(p) ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);

            // WriteCloser.Close function promotion
            private delegate error CloseByVal(T value);
            private delegate error CloseByRef(ref T value);

            private static readonly CloseByVal s_CloseByVal;
            private static readonly CloseByRef s_CloseByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public error Close() => s_CloseByRef?.Invoke(ref this) ?? s_CloseByVal?.Invoke(this) ?? WriteCloser?.Close() ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);
            
            [DebuggerStepperBoundary]
            static dataCloser()
            {
                Type targetType = typeof(dataCloser);
                MethodInfo extensionMethod;
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Write");

                if ((object)extensionMethod != null)
                {
                    s_WriteByRef = extensionMethod.CreateStaticDelegate(typeof(WriteByRef)) as WriteByRef;

                    if ((object)s_WriteByRef == null)
                        s_WriteByVal = extensionMethod.CreateStaticDelegate(typeof(WriteByVal)) as WriteByVal;
                }
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Close");

                if ((object)extensionMethod != null)
                {
                    s_CloseByRef = extensionMethod.CreateStaticDelegate(typeof(CloseByRef)) as CloseByRef;

                    if ((object)s_CloseByRef == null)
                        s_CloseByVal = extensionMethod.CreateStaticDelegate(typeof(CloseByVal)) as CloseByVal;
                }
            }

            // Constructors
            public dataCloser(NilType _)
            {
                this.c = default;
                this.WriteCloser = default;
            }

            public dataCloser(ref ptr<Client> c = default, io.WriteCloser WriteCloser = default)
            {
                this.c = c;
                this.WriteCloser = WriteCloser;
            }

            // Enable comparisons between nil and dataCloser struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(dataCloser value, NilType nil) => value.Equals(default(dataCloser));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(dataCloser value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, dataCloser value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, dataCloser value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator dataCloser(NilType nil) => default(dataCloser);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static dataCloser dataCloser_cast(dynamic value)
        {
            return new dataCloser(ref value.c, value.WriteCloser);
        }
    }
}}