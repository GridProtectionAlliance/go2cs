//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:15:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using poll = go.@internal.poll_package;
using unix = go.@internal.syscall.unix_package;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;

#nullable enable

namespace go
{
    public static partial class net_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct ifreq
        {
            // Constructors
            public ifreq(NilType _)
            {
                this.Name = default;
                this.Ifru = default;
            }

            public ifreq(array<byte> Name = default, array<byte> Ifru = default)
            {
                this.Name = Name;
                this.Ifru = Ifru;
            }

            // Enable comparisons between nil and ifreq struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ifreq value, NilType nil) => value.Equals(default(ifreq));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ifreq value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ifreq value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ifreq value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ifreq(NilType nil) => default(ifreq);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static ifreq ifreq_cast(dynamic value)
        {
            return new ifreq(value.Name, value.Ifru);
        }
    }
}