//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:31:41 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytealg = go.@internal.bytealg_package;
using os = go.os_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;

namespace go
{
    public static partial class net_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct dnsConfig
        {
            // Constructors
            public dnsConfig(NilType _)
            {
                this.servers = default;
                this.search = default;
                this.ndots = default;
                this.timeout = default;
                this.attempts = default;
                this.rotate = default;
                this.unknownOpt = default;
                this.lookup = default;
                this.err = default;
                this.mtime = default;
                this.soffset = default;
                this.singleRequest = default;
                this.useTCP = default;
            }

            public dnsConfig(slice<@string> servers = default, slice<@string> search = default, long ndots = default, time.Duration timeout = default, long attempts = default, bool rotate = default, bool unknownOpt = default, slice<@string> lookup = default, error err = default, time.Time mtime = default, uint soffset = default, bool singleRequest = default, bool useTCP = default)
            {
                this.servers = servers;
                this.search = search;
                this.ndots = ndots;
                this.timeout = timeout;
                this.attempts = attempts;
                this.rotate = rotate;
                this.unknownOpt = unknownOpt;
                this.lookup = lookup;
                this.err = err;
                this.mtime = mtime;
                this.soffset = soffset;
                this.singleRequest = singleRequest;
                this.useTCP = useTCP;
            }

            // Enable comparisons between nil and dnsConfig struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(dnsConfig value, NilType nil) => value.Equals(default(dnsConfig));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(dnsConfig value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, dnsConfig value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, dnsConfig value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator dnsConfig(NilType nil) => default(dnsConfig);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static dnsConfig dnsConfig_cast(dynamic value)
        {
            return new dnsConfig(value.servers, value.search, value.ndots, value.timeout, value.attempts, value.rotate, value.unknownOpt, value.lookup, value.err, value.mtime, value.soffset, value.singleRequest, value.useTCP);
        }
    }
}