//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:29:43 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using context = go.context_package;
using errors = go.errors_package;
using itoa = go.@internal.itoa_package;
using io = go.io_package;
using os = go.os_package;
using sync = go.sync_package;
using time = go.time_package;
using dnsmessage = go.golang.org.x.net.dns.dnsmessage_package;

#nullable enable

namespace go
{
    public static partial class net_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct resolverConfig
        {
            // Constructors
            public resolverConfig(NilType _)
            {
                this.initOnce = default;
                this.ch = default;
                this.lastChecked = default;
                this.mu = default;
                this.dnsConfig = default;
            }

            public resolverConfig(sync.Once initOnce = default, channel<object> ch = default, time.Time lastChecked = default, sync.RWMutex mu = default, ref ptr<dnsConfig> dnsConfig = default)
            {
                this.initOnce = initOnce;
                this.ch = ch;
                this.lastChecked = lastChecked;
                this.mu = mu;
                this.dnsConfig = dnsConfig;
            }

            // Enable comparisons between nil and resolverConfig struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(resolverConfig value, NilType nil) => value.Equals(default(resolverConfig));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(resolverConfig value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, resolverConfig value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, resolverConfig value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator resolverConfig(NilType nil) => default(resolverConfig);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static resolverConfig resolverConfig_cast(dynamic value)
        {
            return new resolverConfig(value.initOnce, value.ch, value.lastChecked, value.mu, ref value.dnsConfig);
        }
    }
}