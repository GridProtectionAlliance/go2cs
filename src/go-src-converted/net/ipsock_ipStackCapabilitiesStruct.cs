//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:16:13 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using context = go.context_package;
using bytealg = go.@internal.bytealg_package;
using runtime = go.runtime_package;
using sync = go.sync_package;

#nullable enable

namespace go
{
    public static partial class net_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(sync.Once))]
        private partial struct ipStackCapabilities
        {
            // Once structure promotion - sourced from value copy
            private readonly ptr<Once> m_OnceRef;

            private ref Once Once_val => ref m_OnceRef.Value;

            public ref uint done => ref m_OnceRef.Value.done;

            public ref Mutex m => ref m_OnceRef.Value.m;

            // Constructors
            public ipStackCapabilities(NilType _)
            {
                this.m_OnceRef = new ptr<sync.Once>(new sync.Once(nil));
                this.ipv4Enabled = default;
                this.ipv6Enabled = default;
                this.ipv4MappedIPv6Enabled = default;
            }

            public ipStackCapabilities(sync.Once Once = default, bool ipv4Enabled = default, bool ipv6Enabled = default, bool ipv4MappedIPv6Enabled = default)
            {
                this.m_OnceRef = new ptr<sync.Once>(Once);
                this.ipv4Enabled = ipv4Enabled;
                this.ipv6Enabled = ipv6Enabled;
                this.ipv4MappedIPv6Enabled = ipv4MappedIPv6Enabled;
            }

            // Enable comparisons between nil and ipStackCapabilities struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ipStackCapabilities value, NilType nil) => value.Equals(default(ipStackCapabilities));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ipStackCapabilities value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ipStackCapabilities value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ipStackCapabilities value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ipStackCapabilities(NilType nil) => default(ipStackCapabilities);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static ipStackCapabilities ipStackCapabilities_cast(dynamic value)
        {
            return new ipStackCapabilities(value.Once, value.ipv4Enabled, value.ipv6Enabled, value.ipv4MappedIPv6Enabled);
        }
    }
}