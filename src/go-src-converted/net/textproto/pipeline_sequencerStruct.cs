//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:21:09 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using sync = go.sync_package;
using go;

#nullable enable

namespace go {
namespace net
{
    public static partial class textproto_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct sequencer
        {
            // Constructors
            public sequencer(NilType _)
            {
                this.mu = default;
                this.id = default;
                this.wait = default;
            }

            public sequencer(sync.Mutex mu = default, nuint id = default, map<nuint, channel<object>> wait = default)
            {
                this.mu = mu;
                this.id = id;
                this.wait = wait;
            }

            // Enable comparisons between nil and sequencer struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sequencer value, NilType nil) => value.Equals(default(sequencer));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sequencer value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sequencer value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sequencer value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sequencer(NilType nil) => default(sequencer);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static sequencer sequencer_cast(dynamic value)
        {
            return new sequencer(value.mu, value.id, value.wait);
        }
    }
}}