//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:38:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using utf8 = go.unicode.utf8_package;
using transform = go.golang.org.x.text.transform_package;
using bidi = go.golang.org.x.text.unicode.bidi_package;
using go;

#nullable enable

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace text {
namespace secure
{
    public static partial class bidirule_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Transformer
        {
            // Constructors
            public Transformer(NilType _)
            {
                this.state = default;
                this.hasRTL = default;
                this.seen = default;
            }

            public Transformer(ruleState state = default, bool hasRTL = default, ushort seen = default)
            {
                this.state = state;
                this.hasRTL = hasRTL;
                this.seen = seen;
            }

            // Enable comparisons between nil and Transformer struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Transformer value, NilType nil) => value.Equals(default(Transformer));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Transformer value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Transformer value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Transformer value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Transformer(NilType nil) => default(Transformer);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Transformer Transformer_cast(dynamic value)
        {
            return new Transformer(value.state, value.hasRTL, value.seen);
        }
    }
}}}}}}