//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:07:56 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using utf8 = go.unicode.utf8_package;
using transform = go.golang.org.x.text.transform_package;
using bidi = go.golang.org.x.text.unicode.bidi_package;
using go;

#nullable enable

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace text {
namespace secure
{
    public static partial class bidirule_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct ruleTransition
        {
            // Constructors
            public ruleTransition(NilType _)
            {
                this.next = default;
                this.mask = default;
            }

            public ruleTransition(ruleState next = default, ushort mask = default)
            {
                this.next = next;
                this.mask = mask;
            }

            // Enable comparisons between nil and ruleTransition struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ruleTransition value, NilType nil) => value.Equals(default(ruleTransition));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ruleTransition value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ruleTransition value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ruleTransition value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ruleTransition(NilType nil) => default(ruleTransition);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static ruleTransition ruleTransition_cast(dynamic value)
        {
            return new ruleTransition(value.next, value.mask);
        }
    }
}}}}}}