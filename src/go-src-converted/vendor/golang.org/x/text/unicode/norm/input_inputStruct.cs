//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:08:21 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace text {
namespace unicode
{
    public static partial class norm_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct input
        {
            // Constructors
            public input(NilType _)
            {
                this.str = default;
                this.bytes = default;
            }

            public input(@string str = default, slice<byte> bytes = default)
            {
                this.str = str;
                this.bytes = bytes;
            }

            // Enable comparisons between nil and input struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(input value, NilType nil) => value.Equals(default(input));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(input value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, input value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, input value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator input(NilType nil) => default(input);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static input input_cast(dynamic value)
        {
            return new input(value.str, value.bytes);
        }
    }
}}}}}}