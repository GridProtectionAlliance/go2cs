//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:08:25 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using io = go.io_package;
using go;

#nullable enable

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace text {
namespace unicode
{
    public static partial class norm_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct normReader
        {
            // Constructors
            public normReader(NilType _)
            {
                this.rb = default;
                this.r = default;
                this.inbuf = default;
                this.outbuf = default;
                this.bufStart = default;
                this.lastBoundary = default;
                this.err = default;
            }

            public normReader(reorderBuffer rb = default, io.Reader r = default, slice<byte> inbuf = default, slice<byte> outbuf = default, long bufStart = default, long lastBoundary = default, error err = default)
            {
                this.rb = rb;
                this.r = r;
                this.inbuf = inbuf;
                this.outbuf = outbuf;
                this.bufStart = bufStart;
                this.lastBoundary = lastBoundary;
                this.err = err;
            }

            // Enable comparisons between nil and normReader struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(normReader value, NilType nil) => value.Equals(default(normReader));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(normReader value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, normReader value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, normReader value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator normReader(NilType nil) => default(normReader);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static normReader normReader_cast(dynamic value)
        {
            return new normReader(value.rb, value.r, value.inbuf, value.outbuf, value.bufStart, value.lastBoundary, value.err);
        }
    }
}}}}}}