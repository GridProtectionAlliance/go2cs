//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:45:33 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using strings = go.strings_package;
using utf8 = go.unicode.utf8_package;
using bidirule = go.golang.org.x.text.secure.bidirule_package;
using bidi = go.golang.org.x.text.unicode.bidi_package;
using norm = go.golang.org.x.text.unicode.norm_package;
using go;

#nullable enable

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace net
{
    public static partial class idna_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct labelIter
        {
            // Constructors
            public labelIter(NilType _)
            {
                this.orig = default;
                this.slice = default;
                this.curStart = default;
                this.curEnd = default;
                this.i = default;
            }

            public labelIter(@string orig = default, slice<@string> slice = default, nint curStart = default, nint curEnd = default, nint i = default)
            {
                this.orig = orig;
                this.slice = slice;
                this.curStart = curStart;
                this.curEnd = curEnd;
                this.i = i;
            }

            // Enable comparisons between nil and labelIter struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(labelIter value, NilType nil) => value.Equals(default(labelIter));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(labelIter value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, labelIter value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, labelIter value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator labelIter(NilType nil) => default(labelIter);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static labelIter labelIter_cast(dynamic value)
        {
            return new labelIter(value.orig, value.slice, value.curStart, value.curEnd, value.i);
        }
    }
}}}}}