//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 05:01:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace net
{
    public static partial class idna_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct info
        {
            // Value of the info struct
            private readonly ushort m_value;

            public info(ushort value) => m_value = value;

            // Enable implicit conversions between ushort and info struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator info(ushort value) => new info(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ushort(info value) => value.m_value;
            
            // Enable comparisons between nil and info struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(info value, NilType nil) => value.Equals(default(info));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(info value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, info value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, info value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator info(NilType nil) => default(info);
        }
    }
}}}}}
