//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 05:00:32 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using fmt = go.fmt_package;
using net = go.net_package;
using url = go.net.url_package;
using os = go.os_package;
using strings = go.strings_package;
using utf8 = go.unicode.utf8_package;
using idna = go.golang.org.x.net.idna_package;
using go;

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace net {
namespace http
{
    public static partial class httpproxy_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct domainMatch
        {
            // Constructors
            public domainMatch(NilType _)
            {
                this.host = default;
                this.port = default;
                this.matchHost = default;
            }

            public domainMatch(@string host = default, @string port = default, bool matchHost = default)
            {
                this.host = host;
                this.port = port;
                this.matchHost = matchHost;
            }

            // Enable comparisons between nil and domainMatch struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(domainMatch value, NilType nil) => value.Equals(default(domainMatch));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(domainMatch value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, domainMatch value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, domainMatch value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator domainMatch(NilType nil) => default(domainMatch);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static domainMatch domainMatch_cast(dynamic value)
        {
            return new domainMatch(value.host, value.port, value.matchHost);
        }
    }
}}}}}}