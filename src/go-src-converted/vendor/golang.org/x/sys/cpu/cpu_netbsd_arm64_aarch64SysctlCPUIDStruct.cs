//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:38:20 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class cpu_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct aarch64SysctlCPUID
        {
            // Constructors
            public aarch64SysctlCPUID(NilType _)
            {
                this.midr = default;
                this.revidr = default;
                this.mpidr = default;
                this.aa64dfr0 = default;
                this.aa64dfr1 = default;
                this.aa64isar0 = default;
                this.aa64isar1 = default;
                this.aa64mmfr0 = default;
                this.aa64mmfr1 = default;
                this.aa64mmfr2 = default;
                this.aa64pfr0 = default;
                this.aa64pfr1 = default;
                this.aa64zfr0 = default;
                this.mvfr0 = default;
                this.mvfr1 = default;
                this.mvfr2 = default;
                this.pad = default;
                this.clidr = default;
                this.ctr = default;
            }

            public aarch64SysctlCPUID(ulong midr = default, ulong revidr = default, ulong mpidr = default, ulong aa64dfr0 = default, ulong aa64dfr1 = default, ulong aa64isar0 = default, ulong aa64isar1 = default, ulong aa64mmfr0 = default, ulong aa64mmfr1 = default, ulong aa64mmfr2 = default, ulong aa64pfr0 = default, ulong aa64pfr1 = default, ulong aa64zfr0 = default, uint mvfr0 = default, uint mvfr1 = default, uint mvfr2 = default, uint pad = default, ulong clidr = default, ulong ctr = default)
            {
                this.midr = midr;
                this.revidr = revidr;
                this.mpidr = mpidr;
                this.aa64dfr0 = aa64dfr0;
                this.aa64dfr1 = aa64dfr1;
                this.aa64isar0 = aa64isar0;
                this.aa64isar1 = aa64isar1;
                this.aa64mmfr0 = aa64mmfr0;
                this.aa64mmfr1 = aa64mmfr1;
                this.aa64mmfr2 = aa64mmfr2;
                this.aa64pfr0 = aa64pfr0;
                this.aa64pfr1 = aa64pfr1;
                this.aa64zfr0 = aa64zfr0;
                this.mvfr0 = mvfr0;
                this.mvfr1 = mvfr1;
                this.mvfr2 = mvfr2;
                this.pad = pad;
                this.clidr = clidr;
                this.ctr = ctr;
            }

            // Enable comparisons between nil and aarch64SysctlCPUID struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(aarch64SysctlCPUID value, NilType nil) => value.Equals(default(aarch64SysctlCPUID));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(aarch64SysctlCPUID value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, aarch64SysctlCPUID value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, aarch64SysctlCPUID value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator aarch64SysctlCPUID(NilType nil) => default(aarch64SysctlCPUID);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static aarch64SysctlCPUID aarch64SysctlCPUID_cast(dynamic value)
        {
            return new aarch64SysctlCPUID(value.midr, value.revidr, value.mpidr, value.aa64dfr0, value.aa64dfr1, value.aa64isar0, value.aa64isar1, value.aa64mmfr0, value.aa64mmfr1, value.aa64mmfr2, value.aa64pfr0, value.aa64pfr1, value.aa64zfr0, value.mvfr0, value.mvfr1, value.mvfr2, value.pad, value.clidr, value.ctr);
        }
    }
}}}}}