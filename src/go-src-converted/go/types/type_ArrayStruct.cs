//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:42:23 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using token = go.go.token_package;
using atomic = go.sync.atomic_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class types_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Array
        {
            // Constructors
            public Array(NilType _)
            {
                this.len = default;
                this.elem = default;
            }

            public Array(long len = default, Type elem = default)
            {
                this.len = len;
                this.elem = elem;
            }

            // Enable comparisons between nil and Array struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Array value, NilType nil) => value.Equals(default(Array));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Array value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Array value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Array value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Array(NilType nil) => default(Array);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Array Array_cast(dynamic value)
        {
            return new Array(value.len, value.elem);
        }
    }
}}