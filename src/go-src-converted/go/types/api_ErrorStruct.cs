//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:52:23 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using constant = go.go.constant_package;
using token = go.go.token_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class types_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Error
        {
            // Constructors
            public Error(NilType _)
            {
                this.Fset = default;
                this.Pos = default;
                this.Msg = default;
                this.Soft = default;
                this.go116code = default;
                this.go116start = default;
                this.go116end = default;
            }

            public Error(ref ptr<token.FileSet> Fset = default, token.Pos Pos = default, @string Msg = default, bool Soft = default, errorCode go116code = default, token.Pos go116start = default, token.Pos go116end = default)
            {
                this.Fset = Fset;
                this.Pos = Pos;
                this.Msg = Msg;
                this.Soft = Soft;
                this.go116code = go116code;
                this.go116start = go116start;
                this.go116end = go116end;
            }

            // Enable comparisons between nil and Error struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Error value, NilType nil) => value.Equals(default(Error));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Error value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Error value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Error value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Error(NilType nil) => default(Error);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Error Error_cast(dynamic value)
        {
            return new Error(ref value.Fset, value.Pos, value.Msg, value.Soft, value.go116code, value.go116start, value.go116end);
        }
    }
}}