//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:27:08 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using reflect = go.reflect_package;
using sort = go.sort_package;
using go;

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace ast
{
    public static partial class astutil_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Cursor
        {
            // Constructors
            public Cursor(NilType _)
            {
                this.parent = default;
                this.name = default;
                this.iter = default;
                this.node = default;
            }

            public Cursor(ast.Node parent = default, @string name = default, ref ptr<iterator> iter = default, ast.Node node = default)
            {
                this.parent = parent;
                this.name = name;
                this.iter = iter;
                this.node = node;
            }

            // Enable comparisons between nil and Cursor struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Cursor value, NilType nil) => value.Equals(default(Cursor));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Cursor value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Cursor value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Cursor value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Cursor(NilType nil) => default(Cursor);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Cursor Cursor_cast(dynamic value)
        {
            return new Cursor(value.parent, value.name, ref value.iter, value.node);
        }
    }
}}}}}}