//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:42:30 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace go {
namespace @internal
{
    public static partial class aliases_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct C1
        {
            // Value of the C1 struct
            private readonly ptr<C0> m_value;
            
            public C1(ptr<C0> value) => m_value = value;

            // Enable implicit conversions between ptr<C0> and C1 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator C1(ptr<C0> value) => new C1(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ptr<C0>(C1 value) => value.m_value;
            
            // Enable comparisons between nil and C1 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(C1 value, NilType nil) => value.Equals(default(C1));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(C1 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, C1 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, C1 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator C1(NilType nil) => default(C1);
        }
    }
}}}
