//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:02:54 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using constant = go.go.constant_package;
using token = go.go.token_package;
using types = go.go.types_package;
using io = go.io_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using scanner = go.text.scanner_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace go {
namespace @internal
{
    public static partial class gccgoimporter_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct typeOffset
        {
            // Constructors
            public typeOffset(NilType _)
            {
                this.offset = default;
                this.length = default;
            }

            public typeOffset(long offset = default, long length = default)
            {
                this.offset = offset;
                this.length = length;
            }

            // Enable comparisons between nil and typeOffset struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(typeOffset value, NilType nil) => value.Equals(default(typeOffset));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(typeOffset value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, typeOffset value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, typeOffset value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator typeOffset(NilType nil) => default(typeOffset);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static typeOffset typeOffset_cast(dynamic value)
        {
            return new typeOffset(value.offset, value.length);
        }
    }
}}}