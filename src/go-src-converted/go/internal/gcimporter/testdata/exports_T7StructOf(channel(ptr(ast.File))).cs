//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:32:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace go {
namespace @internal
{
    public static partial class exports_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct T7 : IChannel
        {
            // Value of the T7 struct
            private readonly channel<ptr<ast.File>> m_value;
            
            public nint Capacity => m_value.Capacity;

            public nint Length => m_value.Length;

            public bool SendIsReady => m_value.SendIsReady;

            public bool ReceiveIsReady => m_value.ReceiveIsReady;

            void Send(object value) => m_value.Send(value);

            object Receive() => m_value.Receive();

            bool Sent(object value) => m_value.Sent(value);

            bool Received(out object value) => m_values.Received(out value);

            void Close() => m_value.Close();

            public IEnumerator GetEnumerator() => ((IEnumerable)m_value).GetEnumerator();

            public T7(channel<ptr<ast.File>> value) => m_value = value;

            // Enable implicit conversions between channel<ptr<ast.File>> and T7 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator T7(channel<ptr<ast.File>> value) => new T7(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator channel<ptr<ast.File>>(T7 value) => value.m_value;
            
            // Enable comparisons between nil and T7 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(T7 value, NilType nil) => value.Equals(default(T7));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(T7 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, T7 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, T7 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator T7(NilType nil) => default(T7);
        }
    }
}}}
