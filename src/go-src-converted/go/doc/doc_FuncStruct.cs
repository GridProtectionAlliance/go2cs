//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:41:27 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using token = go.go.token_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class doc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Func
        {
            // Constructors
            public Func(NilType _)
            {
                this.Doc = default;
                this.Name = default;
                this.Decl = default;
                this.Recv = default;
                this.Orig = default;
                this.Level = default;
                this.Examples = default;
            }

            public Func(@string Doc = default, @string Name = default, ref ptr<ast.FuncDecl> Decl = default, @string Recv = default, @string Orig = default, nint Level = default, slice<ptr<Example>> Examples = default)
            {
                this.Doc = Doc;
                this.Name = Name;
                this.Decl = Decl;
                this.Recv = Recv;
                this.Orig = Orig;
                this.Level = Level;
                this.Examples = Examples;
            }

            // Enable comparisons between nil and Func struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Func value, NilType nil) => value.Equals(default(Func));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Func value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Func value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Func value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Func(NilType nil) => default(Func);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Func Func_cast(dynamic value)
        {
            return new Func(value.Doc, value.Name, ref value.Decl, value.Recv, value.Orig, value.Level, value.Examples);
        }
    }
}}