//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:52:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using flag = go.flag_package;
using fmt = go.fmt_package;
using os = go.os_package;
using runtime = go.runtime_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class testing_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct B
        {
            // Constructors
            public B(NilType _)
            {
                this.common = default;
                this.N = default;
                this.benchmark = default;
                this.bytes = default;
                this.timerOn = default;
                this.result = default;
            }

            public B(common common = default, nint N = default, InternalBenchmark benchmark = default, long bytes = default, bool timerOn = default, BenchmarkResult result = default)
            {
                this.common = common;
                this.N = N;
                this.benchmark = benchmark;
                this.bytes = bytes;
                this.timerOn = timerOn;
                this.result = result;
            }

            // Enable comparisons between nil and B struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(B value, NilType nil) => value.Equals(default(B));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(B value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, B value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, B value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator B(NilType nil) => default(B);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static B B_cast(dynamic value)
        {
            return new B(value.common, value.N, value.benchmark, value.bytes, value.timerOn, value.result);
        }
    }
}}