//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:02:53 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

namespace go {
namespace go
{
    public static partial class e_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(t2))]
        private partial struct t2e
        {
            // t2 structure promotion - sourced from value copy
            private readonly ptr<t2> m_t2Ref;

            private ref t2 t2_val => ref m_t2Ref.Value;

            // Constructors
            public t2e(NilType _)
            {
                this.m_t2Ref = new ptr<t2>(new t2(nil));
            }

            public t2e(t2 t2 = default)
            {
                this.m_t2Ref = new ptr<t2>(t2);
            }

            // Enable comparisons between nil and t2e struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(t2e value, NilType nil) => value.Equals(default(t2e));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(t2e value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, t2e value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, t2e value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator t2e(NilType nil) => default(t2e);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static t2e t2e_cast(dynamic value)
        {
            return new t2e(value.t2);
        }
    }
}}