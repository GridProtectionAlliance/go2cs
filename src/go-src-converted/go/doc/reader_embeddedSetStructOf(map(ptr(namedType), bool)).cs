//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:19:08 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class doc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct embeddedSet
        {
            // Value of the embeddedSet struct
            private readonly map<ptr<namedType>, bool> m_value;

            public embeddedSet(map<ptr<namedType>, bool> value) => m_value = value;

            // Enable implicit conversions between map<ptr<namedType>, bool> and embeddedSet struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator embeddedSet(map<ptr<namedType>, bool> value) => new embeddedSet(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator map<ptr<namedType>, bool>(embeddedSet value) => value.m_value;
            
            // Enable comparisons between nil and embeddedSet struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(embeddedSet value, NilType nil) => value.Equals(default(embeddedSet));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(embeddedSet value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, embeddedSet value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, embeddedSet value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator embeddedSet(NilType nil) => default(embeddedSet);
        }
    }
}}
