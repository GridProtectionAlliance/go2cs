//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:19:03 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using token = go.go.token_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class doc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Note
        {
            // Constructors
            public Note(NilType _)
            {
                this.Pos = default;
                this.End = default;
                this.UID = default;
                this.Body = default;
            }

            public Note(token.Pos Pos = default, token.Pos End = default, @string UID = default, @string Body = default)
            {
                this.Pos = Pos;
                this.End = End;
                this.UID = UID;
                this.Body = Body;
            }

            // Enable comparisons between nil and Note struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Note value, NilType nil) => value.Equals(default(Note));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Note value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Note value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Note value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Note(NilType nil) => default(Note);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Note Note_cast(dynamic value)
        {
            return new Note(value.Pos, value.End, value.UID, value.Body);
        }
    }
}}