//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:52:27 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using lazyregexp = go.@internal.lazyregexp_package;
using io = go.io_package;
using strings = go.strings_package;
using template = go.text.template_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class doc_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct lineWrapper
        {
            // Constructors
            public lineWrapper(NilType _)
            {
                this.@out = default;
                this.printed = default;
                this.width = default;
                this.indent = default;
                this.n = default;
                this.pendSpace = default;
            }

            public lineWrapper(io.Writer @out = default, bool printed = default, nint width = default, @string indent = default, nint n = default, nint pendSpace = default)
            {
                this.@out = @out;
                this.printed = printed;
                this.width = width;
                this.indent = indent;
                this.n = n;
                this.pendSpace = pendSpace;
            }

            // Enable comparisons between nil and lineWrapper struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(lineWrapper value, NilType nil) => value.Equals(default(lineWrapper));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(lineWrapper value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, lineWrapper value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, lineWrapper value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator lineWrapper(NilType nil) => default(lineWrapper);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static lineWrapper lineWrapper_cast(dynamic value)
        {
            return new lineWrapper(value.@out, value.printed, value.width, value.indent, value.n, value.pendSpace);
        }
    }
}}