//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:41:10 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using token = go.go.token_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class ast_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct ForStmt
        {
            // Constructors
            public ForStmt(NilType _)
            {
                this.For = default;
                this.Init = default;
                this.Cond = default;
                this.Post = default;
                this.Body = default;
            }

            public ForStmt(token.Pos For = default, Stmt Init = default, Expr Cond = default, Stmt Post = default, ref ptr<BlockStmt> Body = default)
            {
                this.For = For;
                this.Init = Init;
                this.Cond = Cond;
                this.Post = Post;
                this.Body = Body;
            }

            // Enable comparisons between nil and ForStmt struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ForStmt value, NilType nil) => value.Equals(default(ForStmt));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ForStmt value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ForStmt value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ForStmt value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ForStmt(NilType nil) => default(ForStmt);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static ForStmt ForStmt_cast(dynamic value)
        {
            return new ForStmt(value.For, value.Init, value.Cond, value.Post, ref value.Body);
        }
    }
}}