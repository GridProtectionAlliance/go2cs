//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:41:10 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using token = go.go.token_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace go
{
    public static partial class ast_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct EmptyStmt
        {
            // Constructors
            public EmptyStmt(NilType _)
            {
                this.Semicolon = default;
                this.Implicit = default;
            }

            public EmptyStmt(token.Pos Semicolon = default, bool Implicit = default)
            {
                this.Semicolon = Semicolon;
                this.Implicit = Implicit;
            }

            // Enable comparisons between nil and EmptyStmt struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(EmptyStmt value, NilType nil) => value.Equals(default(EmptyStmt));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(EmptyStmt value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, EmptyStmt value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, EmptyStmt value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator EmptyStmt(NilType nil) => default(EmptyStmt);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static EmptyStmt EmptyStmt_cast(dynamic value)
        {
            return new EmptyStmt(value.Semicolon, value.Implicit);
        }
    }
}}