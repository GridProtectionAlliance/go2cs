//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:52:25 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using strings = go.strings_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace go {
namespace build
{
    public static partial class constraint_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct exprParser
        {
            // Constructors
            public exprParser(NilType _)
            {
                this.s = default;
                this.i = default;
                this.tok = default;
                this.isTag = default;
                this.pos = default;
            }

            public exprParser(@string s = default, nint i = default, @string tok = default, bool isTag = default, nint pos = default)
            {
                this.s = s;
                this.i = i;
                this.tok = tok;
                this.isTag = isTag;
                this.pos = pos;
            }

            // Enable comparisons between nil and exprParser struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(exprParser value, NilType nil) => value.Equals(default(exprParser));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(exprParser value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, exprParser value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, exprParser value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator exprParser(NilType nil) => default(exprParser);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static exprParser exprParser_cast(dynamic value)
        {
            return new exprParser(value.s, value.i, value.tok, value.isTag, value.pos);
        }
    }
}}}