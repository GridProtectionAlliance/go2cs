//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:32:27 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using go;

namespace go {
namespace @internal {
namespace syscall
{
    public static partial class windows_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct SymbolicLinkReparseBuffer
        {
            // Constructors
            public SymbolicLinkReparseBuffer(NilType _)
            {
                this.SubstituteNameOffset = default;
                this.SubstituteNameLength = default;
                this.PrintNameOffset = default;
                this.PrintNameLength = default;
                this.Flags = default;
                this.PathBuffer = default;
            }

            public SymbolicLinkReparseBuffer(ushort SubstituteNameOffset = default, ushort SubstituteNameLength = default, ushort PrintNameOffset = default, ushort PrintNameLength = default, uint Flags = default, array<ushort> PathBuffer = default)
            {
                this.SubstituteNameOffset = SubstituteNameOffset;
                this.SubstituteNameLength = SubstituteNameLength;
                this.PrintNameOffset = PrintNameOffset;
                this.PrintNameLength = PrintNameLength;
                this.Flags = Flags;
                this.PathBuffer = PathBuffer;
            }

            // Enable comparisons between nil and SymbolicLinkReparseBuffer struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(SymbolicLinkReparseBuffer value, NilType nil) => value.Equals(default(SymbolicLinkReparseBuffer));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(SymbolicLinkReparseBuffer value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, SymbolicLinkReparseBuffer value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, SymbolicLinkReparseBuffer value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator SymbolicLinkReparseBuffer(NilType nil) => default(SymbolicLinkReparseBuffer);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static SymbolicLinkReparseBuffer SymbolicLinkReparseBuffer_cast(dynamic value)
        {
            return new SymbolicLinkReparseBuffer(value.SubstituteNameOffset, value.SubstituteNameLength, value.PrintNameOffset, value.PrintNameLength, value.Flags, value.PathBuffer);
        }
    }
}}}