//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:41:04 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace @internal
{
    public static partial class xcoff_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct LoaderSymbol64
        {
            // Constructors
            public LoaderSymbol64(NilType _)
            {
                this.Lvalue = default;
                this.Loffset = default;
                this.Lscnum = default;
                this.Lsmtype = default;
                this.Lsmclas = default;
                this.Lifile = default;
                this.Lparm = default;
            }

            public LoaderSymbol64(ulong Lvalue = default, uint Loffset = default, short Lscnum = default, sbyte Lsmtype = default, sbyte Lsmclas = default, int Lifile = default, uint Lparm = default)
            {
                this.Lvalue = Lvalue;
                this.Loffset = Loffset;
                this.Lscnum = Lscnum;
                this.Lsmtype = Lsmtype;
                this.Lsmclas = Lsmclas;
                this.Lifile = Lifile;
                this.Lparm = Lparm;
            }

            // Enable comparisons between nil and LoaderSymbol64 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(LoaderSymbol64 value, NilType nil) => value.Equals(default(LoaderSymbol64));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(LoaderSymbol64 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, LoaderSymbol64 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, LoaderSymbol64 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator LoaderSymbol64(NilType nil) => default(LoaderSymbol64);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static LoaderSymbol64 LoaderSymbol64_cast(dynamic value)
        {
            return new LoaderSymbol64(value.Lvalue, value.Loffset, value.Lscnum, value.Lsmtype, value.Lsmclas, value.Lifile, value.Lparm);
        }
    }
}}