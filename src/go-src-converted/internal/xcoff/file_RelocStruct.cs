//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:18:42 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using dwarf = go.debug.dwarf_package;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using io = go.io_package;
using os = go.os_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace @internal
{
    public static partial class xcoff_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Reloc
        {
            // Constructors
            public Reloc(NilType _)
            {
                this.VirtualAddress = default;
                this.Symbol = default;
                this.Signed = default;
                this.InstructionFixed = default;
                this.Length = default;
                this.Type = default;
            }

            public Reloc(ulong VirtualAddress = default, ref ptr<Symbol> Symbol = default, bool Signed = default, bool InstructionFixed = default, byte Length = default, byte Type = default)
            {
                this.VirtualAddress = VirtualAddress;
                this.Symbol = Symbol;
                this.Signed = Signed;
                this.InstructionFixed = InstructionFixed;
                this.Length = Length;
                this.Type = Type;
            }

            // Enable comparisons between nil and Reloc struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Reloc value, NilType nil) => value.Equals(default(Reloc));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Reloc value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Reloc value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Reloc value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Reloc(NilType nil) => default(Reloc);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Reloc Reloc_cast(dynamic value)
        {
            return new Reloc(value.VirtualAddress, ref value.Symbol, value.Signed, value.InstructionFixed, value.Length, value.Type);
        }
    }
}}