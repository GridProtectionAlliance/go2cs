//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:52:32 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using os = go.os_package;
using regexp = go.regexp_package;
using strings = go.strings_package;
using sync = go.sync_package;
using go;

#nullable enable

namespace go {
namespace @internal
{
    public static partial class lazyregexp_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Regexp
        {
            // Constructors
            public Regexp(NilType _)
            {
                this.str = default;
                this.once = default;
                this.rx = default;
            }

            public Regexp(@string str = default, sync.Once once = default, ref ptr<regexp.Regexp> rx = default)
            {
                this.str = str;
                this.once = once;
                this.rx = rx;
            }

            // Enable comparisons between nil and Regexp struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Regexp value, NilType nil) => value.Equals(default(Regexp));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Regexp value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Regexp value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Regexp value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Regexp(NilType nil) => default(Regexp);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Regexp Regexp_cast(dynamic value)
        {
            return new Regexp(value.str, value.once, ref value.rx);
        }
    }
}}