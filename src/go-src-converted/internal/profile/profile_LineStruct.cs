//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:24:19 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using gzip = go.compress.gzip_package;
using fmt = go.fmt_package;
using io = go.io_package;
using regexp = go.regexp_package;
using strings = go.strings_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace @internal
{
    public static partial class profile_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Line
        {
            // Constructors
            public Line(NilType _)
            {
                this.Function = default;
                this.Line = default;
                this.functionIDX = default;
            }

            public Line(ref ptr<Function> Function = default, long Line = default, ulong functionIDX = default)
            {
                this.Function = Function;
                this.Line = Line;
                this.functionIDX = functionIDX;
            }

            // Enable comparisons between nil and Line struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Line value, NilType nil) => value.Equals(default(Line));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Line value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Line value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Line value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Line(NilType nil) => default(Line);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Line Line_cast(dynamic value)
        {
            return new Line(ref value.Function, value.Line, value.functionIDX);
        }
    }
}}