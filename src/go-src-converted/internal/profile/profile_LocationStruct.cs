//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:38:46 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using gzip = go.compress.gzip_package;
using fmt = go.fmt_package;
using io = go.io_package;
using regexp = go.regexp_package;
using strings = go.strings_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace @internal
{
    public static partial class profile_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Location
        {
            // Constructors
            public Location(NilType _)
            {
                this.ID = default;
                this.Mapping = default;
                this.Address = default;
                this.Line = default;
                this.IsFolded = default;
                this.mappingIDX = default;
            }

            public Location(ulong ID = default, ref ptr<Mapping> Mapping = default, ulong Address = default, slice<Line> Line = default, bool IsFolded = default, ulong mappingIDX = default)
            {
                this.ID = ID;
                this.Mapping = Mapping;
                this.Address = Address;
                this.Line = Line;
                this.IsFolded = IsFolded;
                this.mappingIDX = mappingIDX;
            }

            // Enable comparisons between nil and Location struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Location value, NilType nil) => value.Equals(default(Location));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Location value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Location value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Location value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Location(NilType nil) => default(Location);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Location Location_cast(dynamic value)
        {
            return new Location(value.ID, ref value.Mapping, value.Address, value.Line, value.IsFolded, value.mappingIDX);
        }
    }
}}