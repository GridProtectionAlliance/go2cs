//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:35:58 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using math = go.math_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace @internal
{
    public static partial class trace_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct mud
        {
            // Constructors
            public mud(NilType _)
            {
                this.sorted = default;
                this.unsorted = default;
                this.trackMass = default;
                this.trackBucket = default;
                this.trackSum = default;
                this.hist = default;
            }

            public mud(slice<edge> sorted = default, slice<edge> unsorted = default, double trackMass = default, nint trackBucket = default, double trackSum = default, array<double> hist = default)
            {
                this.sorted = sorted;
                this.unsorted = unsorted;
                this.trackMass = trackMass;
                this.trackBucket = trackBucket;
                this.trackSum = trackSum;
                this.hist = hist;
            }

            // Enable comparisons between nil and mud struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(mud value, NilType nil) => value.Equals(default(mud));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(mud value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, mud value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, mud value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator mud(NilType nil) => default(mud);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static mud mud_cast(dynamic value)
        {
            return new mud(value.sorted, value.unsorted, value.trackMass, value.trackBucket, value.trackSum, value.hist);
        }
    }
}}