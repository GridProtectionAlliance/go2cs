//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:42:26 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using sort = go.sort_package;
using go;

namespace go {
namespace @internal
{
    public static partial class trace_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct eventBatch
        {
            // Constructors
            public eventBatch(NilType _)
            {
                this.events = default;
                this.selected = default;
            }

            public eventBatch(slice<ptr<Event>> events = default, bool selected = default)
            {
                this.events = events;
                this.selected = selected;
            }

            // Enable comparisons between nil and eventBatch struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(eventBatch value, NilType nil) => value.Equals(default(eventBatch));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(eventBatch value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, eventBatch value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, eventBatch value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator eventBatch(NilType nil) => default(eventBatch);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static eventBatch eventBatch_cast(dynamic value)
        {
            return new eventBatch(value.events, value.selected);
        }
    }
}}