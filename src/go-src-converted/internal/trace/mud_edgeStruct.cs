//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:42:26 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using math = go.math_package;
using sort = go.sort_package;
using go;

namespace go {
namespace @internal
{
    public static partial class trace_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct edge
        {
            // Constructors
            public edge(NilType _)
            {
                this.x = default;
                this.delta = default;
                this.dirac = default;
            }

            public edge(double x = default, double delta = default, double dirac = default)
            {
                this.x = x;
                this.delta = delta;
                this.dirac = dirac;
            }

            // Enable comparisons between nil and edge struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(edge value, NilType nil) => value.Equals(default(edge));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(edge value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, edge value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, edge value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator edge(NilType nil) => default(edge);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static edge edge_cast(dynamic value)
        {
            return new edge(value.x, value.delta, value.dirac);
        }
    }
}}