//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:52:57 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using heap = go.container.heap_package;
using math = go.math_package;
using sort = go.sort_package;
using strings = go.strings_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace @internal
{
    public static partial class trace_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct accumulator
        {
            // Constructors
            public accumulator(NilType _)
            {
                this.mmu = default;
                this.bound = default;
                this.nWorst = default;
                this.wHeap = default;
                this.mud = default;
                this.preciseMass = default;
                this.lastTime = default;
                this.lastMU = default;
            }

            public accumulator(double mmu = default, double bound = default, long nWorst = default, utilHeap wHeap = default, ref ptr<mud> mud = default, double preciseMass = default, long lastTime = default, double lastMU = default)
            {
                this.mmu = mmu;
                this.bound = bound;
                this.nWorst = nWorst;
                this.wHeap = wHeap;
                this.mud = mud;
                this.preciseMass = preciseMass;
                this.lastTime = lastTime;
                this.lastMU = lastMU;
            }

            // Enable comparisons between nil and accumulator struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(accumulator value, NilType nil) => value.Equals(default(accumulator));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(accumulator value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, accumulator value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, accumulator value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator accumulator(NilType nil) => default(accumulator);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static accumulator accumulator_cast(dynamic value)
        {
            return new accumulator(value.mmu, value.bound, value.nWorst, value.wHeap, ref value.mud, value.preciseMass, value.lastTime, value.lastMU);
        }
    }
}}