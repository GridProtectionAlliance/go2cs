//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:31:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using io = go.io_package;
using reflect = go.reflect_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace @internal {
namespace @event
{
    public static partial class label_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct listMap
        {
            // Constructors
            public listMap(NilType _)
            {
                this.labels = default;
            }

            public listMap(slice<Label> labels = default)
            {
                this.labels = labels;
            }

            // Enable comparisons between nil and listMap struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(listMap value, NilType nil) => value.Equals(default(listMap));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(listMap value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, listMap value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, listMap value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator listMap(NilType nil) => default(listMap);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static listMap listMap_cast(dynamic value)
        {
            return new listMap(value.labels);
        }
    }
}}}}}}