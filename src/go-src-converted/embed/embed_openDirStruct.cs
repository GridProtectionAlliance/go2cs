//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:43:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using io = go.io_package;
using fs = go.io.fs_package;
using time = go.time_package;

#nullable enable

namespace go
{
    public static partial class embed_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct openDir
        {
            // Constructors
            public openDir(NilType _)
            {
                this.f = default;
                this.files = default;
                this.offset = default;
            }

            public openDir(ref ptr<file> f = default, slice<file> files = default, nint offset = default)
            {
                this.f = f;
                this.files = files;
                this.offset = offset;
            }

            // Enable comparisons between nil and openDir struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(openDir value, NilType nil) => value.Equals(default(openDir));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(openDir value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, openDir value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, openDir value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator openDir(NilType nil) => default(openDir);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static openDir openDir_cast(dynamic value)
        {
            return new openDir(ref value.f, value.files, value.offset);
        }
    }
}