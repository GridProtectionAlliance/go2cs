//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:31:16 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using gob = go.encoding.gob_package;
using flag = go.flag_package;
using fmt = go.fmt_package;
using format = go.go.format_package;
using parser = go.go.parser_package;
using token = go.go.token_package;
using types = go.go.types_package;
using ioutil = go.io.ioutil_package;
using log = go.log_package;
using os = go.os_package;
using reflect = go.reflect_package;
using runtime = go.runtime_package;
using pprof = go.runtime.pprof_package;
using trace = go.runtime.trace_package;
using sort = go.sort_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;
using analysis = go.golang.org.x.tools.go.analysis_package;
using analysisflags = go.golang.org.x.tools.go.analysis.@internal.analysisflags_package;
using packages = go.golang.org.x.tools.go.packages_package;
using analysisinternal = go.golang.org.x.tools.@internal.analysisinternal_package;
using span = go.golang.org.x.tools.@internal.span_package;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace analysis {
namespace @internal
{
    public static partial class checker_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct TestAnalyzerResult
        {
            // Constructors
            public TestAnalyzerResult(NilType _)
            {
                this.Pass = default;
                this.Diagnostics = default;
                this.Facts = default;
                this.Err = default;
            }

            public TestAnalyzerResult(ref ptr<analysis.Pass> Pass = default, slice<analysis.Diagnostic> Diagnostics = default, map<types.Object, slice<analysis.Fact>> Facts = default, error Err = default)
            {
                this.Pass = Pass;
                this.Diagnostics = Diagnostics;
                this.Facts = Facts;
                this.Err = Err;
            }

            // Enable comparisons between nil and TestAnalyzerResult struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(TestAnalyzerResult value, NilType nil) => value.Equals(default(TestAnalyzerResult));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(TestAnalyzerResult value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, TestAnalyzerResult value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, TestAnalyzerResult value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator TestAnalyzerResult(NilType nil) => default(TestAnalyzerResult);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static TestAnalyzerResult TestAnalyzerResult_cast(dynamic value)
        {
            return new TestAnalyzerResult(ref value.Pass, value.Diagnostics, value.Facts, value.Err);
        }
    }
}}}}}}}