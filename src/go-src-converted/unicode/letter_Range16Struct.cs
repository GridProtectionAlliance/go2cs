//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:14:12 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;


#nullable enable

namespace go
{
    public static partial class unicode_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Range16
        {
            // Constructors
            public Range16(NilType _)
            {
                this.Lo = default;
                this.Hi = default;
                this.Stride = default;
            }

            public Range16(ushort Lo = default, ushort Hi = default, ushort Stride = default)
            {
                this.Lo = Lo;
                this.Hi = Hi;
                this.Stride = Stride;
            }

            // Enable comparisons between nil and Range16 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Range16 value, NilType nil) => value.Equals(default(Range16));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Range16 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Range16 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Range16 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Range16(NilType nil) => default(Range16);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Range16 Range16_cast(dynamic value)
        {
            return new Range16(value.Lo, value.Hi, value.Stride);
        }
    }
}