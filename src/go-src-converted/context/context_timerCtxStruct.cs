//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:14:03 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using reflectlite = go.@internal.reflectlite_package;
using sync = go.sync_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;

#nullable enable

namespace go
{
    public static partial class context_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(cancelCtx))]
        private partial struct timerCtx
        {
            // cancelCtx structure promotion - sourced from value copy
            private readonly ptr<cancelCtx> m_cancelCtxRef;

            private ref cancelCtx cancelCtx_val => ref m_cancelCtxRef.Value;

            public ref sync.Mutex mu => ref m_cancelCtxRef.Value.mu;

            public ref atomic.Value done => ref m_cancelCtxRef.Value.done;

            public ref error err => ref m_cancelCtxRef.Value.err;

            // Constructors
            public timerCtx(NilType _)
            {
                this.m_cancelCtxRef = new ptr<cancelCtx>(new cancelCtx(nil));
                this.timer = default;
                this.deadline = default;
            }

            public timerCtx(cancelCtx cancelCtx = default, ref ptr<time.Timer> timer = default, time.Time deadline = default)
            {
                this.m_cancelCtxRef = new ptr<cancelCtx>(cancelCtx);
                this.timer = timer;
                this.deadline = deadline;
            }

            // Enable comparisons between nil and timerCtx struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(timerCtx value, NilType nil) => value.Equals(default(timerCtx));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(timerCtx value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, timerCtx value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, timerCtx value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator timerCtx(NilType nil) => default(timerCtx);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static timerCtx timerCtx_cast(dynamic value)
        {
            return new timerCtx(value.cancelCtx, ref value.timer, value.deadline);
        }
    }
}