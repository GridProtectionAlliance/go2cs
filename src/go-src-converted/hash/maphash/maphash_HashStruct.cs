//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:29:04 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using unsafeheader = go.@internal.unsafeheader_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace hash
{
    public static partial class maphash_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Hash
        {
            // Constructors
            public Hash(NilType _)
            {
                this._ = default;
                this.seed = default;
                this.state = default;
                this.buf = default;
                this.n = default;
            }

            public Hash(array<Action> _ = default, Seed seed = default, Seed state = default, array<byte> buf = default, nint n = default)
            {
                this._ = _;
                this.seed = seed;
                this.state = state;
                this.buf = buf;
                this.n = n;
            }

            // Enable comparisons between nil and Hash struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Hash value, NilType nil) => value.Equals(default(Hash));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Hash value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Hash value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Hash value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Hash(NilType nil) => default(Hash);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Hash Hash_cast(dynamic value)
        {
            return new Hash(value._, value.seed, value.state, value.buf, value.n);
        }
    }
}}