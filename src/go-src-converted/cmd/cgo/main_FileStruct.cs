//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:58:37 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using md5 = go.crypto.md5_package;
using flag = go.flag_package;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using printer = go.go.printer_package;
using token = go.go.token_package;
using buildcfg = go.@internal.buildcfg_package;
using io = go.io_package;
using ioutil = go.io.ioutil_package;
using os = go.os_package;
using exec = go.os.exec_package;
using filepath = go.path.filepath_package;
using reflect = go.reflect_package;
using runtime = go.runtime_package;
using sort = go.sort_package;
using strings = go.strings_package;
using edit = go.cmd.@internal.edit_package;
using objabi = go.cmd.@internal.objabi_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct File
        {
            // Constructors
            public File(NilType _)
            {
                this.AST = default;
                this.Comments = default;
                this.Package = default;
                this.Preamble = default;
                this.Ref = default;
                this.Calls = default;
                this.ExpFunc = default;
                this.Name = default;
                this.NamePos = default;
                this.Edit = default;
            }

            public File(ref ptr<ast.File> AST = default, slice<ptr<ast.CommentGroup>> Comments = default, @string Package = default, @string Preamble = default, slice<ptr<Ref>> Ref = default, slice<ptr<Call>> Calls = default, slice<ptr<ExpFunc>> ExpFunc = default, map<@string, ptr<Name>> Name = default, map<ptr<Name>, token.Pos> NamePos = default, ref ptr<edit.Buffer> Edit = default)
            {
                this.AST = AST;
                this.Comments = Comments;
                this.Package = Package;
                this.Preamble = Preamble;
                this.Ref = Ref;
                this.Calls = Calls;
                this.ExpFunc = ExpFunc;
                this.Name = Name;
                this.NamePos = NamePos;
                this.Edit = Edit;
            }

            // Enable comparisons between nil and File struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(File value, NilType nil) => value.Equals(default(File));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(File value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, File value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, File value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator File(NilType nil) => default(File);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static File File_cast(dynamic value)
        {
            return new File(ref value.AST, value.Comments, value.Package, value.Preamble, value.Ref, value.Calls, value.ExpFunc, value.Name, value.NamePos, ref value.Edit);
        }
    }
}