//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:23:46 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using md5 = go.crypto.md5_package;
using flag = go.flag_package;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using printer = go.go.printer_package;
using token = go.go.token_package;
using io = go.io_package;
using ioutil = go.io.ioutil_package;
using os = go.os_package;
using filepath = go.path.filepath_package;
using reflect = go.reflect_package;
using runtime = go.runtime_package;
using sort = go.sort_package;
using strings = go.strings_package;
using edit = go.cmd.@internal.edit_package;
using objabi = go.cmd.@internal.objabi_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct ExpFunc
        {
            // Constructors
            public ExpFunc(NilType _)
            {
                this.Func = default;
                this.ExpName = default;
                this.Doc = default;
            }

            public ExpFunc(ref ptr<ast.FuncDecl> Func = default, @string ExpName = default, @string Doc = default)
            {
                this.Func = Func;
                this.ExpName = ExpName;
                this.Doc = Doc;
            }

            // Enable comparisons between nil and ExpFunc struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ExpFunc value, NilType nil) => value.Equals(default(ExpFunc));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ExpFunc value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ExpFunc value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ExpFunc value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ExpFunc(NilType nil) => default(ExpFunc);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static ExpFunc ExpFunc_cast(dynamic value)
        {
            return new ExpFunc(ref value.Func, value.ExpName, value.Doc);
        }
    }
}