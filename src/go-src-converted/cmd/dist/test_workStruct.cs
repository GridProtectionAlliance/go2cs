//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:29:02 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using flag = go.flag_package;
using fmt = go.fmt_package;
using ioutil = go.io.ioutil_package;
using log = go.log_package;
using os = go.os_package;
using exec = go.os.exec_package;
using path = go.path_package;
using filepath = go.path.filepath_package;
using reflect = go.reflect_package;
using regexp = go.regexp_package;
using runtime = go.runtime_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct work
        {
            // Constructors
            public work(NilType _)
            {
                this.dt = default;
                this.cmd = default;
                this.start = default;
                this.@out = default;
                this.err = default;
                this.end = default;
            }

            public work(ref ptr<distTest> dt = default, ref ptr<exec.Cmd> cmd = default, channel<bool> start = default, slice<byte> @out = default, error err = default, channel<bool> end = default)
            {
                this.dt = dt;
                this.cmd = cmd;
                this.start = start;
                this.@out = @out;
                this.err = err;
                this.end = end;
            }

            // Enable comparisons between nil and work struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(work value, NilType nil) => value.Equals(default(work));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(work value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, work value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, work value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator work(NilType nil) => default(work);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static work work_cast(dynamic value)
        {
            return new work(ref value.dt, ref value.cmd, value.start, value.@out, value.err, value.end);
        }
    }
}