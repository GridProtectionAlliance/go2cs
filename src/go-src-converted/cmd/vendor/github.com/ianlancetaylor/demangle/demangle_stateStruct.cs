//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:24:31 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace ianlancetaylor
{
    public static partial class demangle_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct state
        {
            // Constructors
            public state(NilType _)
            {
                this.str = default;
                this.verbose = default;
                this.off = default;
                this.subs = default;
                this.templates = default;
                this.inLambda = default;
            }

            public state(@string str = default, bool verbose = default, nint off = default, substitutions subs = default, slice<ptr<Template>> templates = default, nint inLambda = default)
            {
                this.str = str;
                this.verbose = verbose;
                this.off = off;
                this.subs = subs;
                this.templates = templates;
                this.inLambda = inLambda;
            }

            // Enable comparisons between nil and state struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(state value, NilType nil) => value.Equals(default(state));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(state value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, state value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, state value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator state(NilType nil) => default(state);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static state state_cast(dynamic value)
        {
            return new state(value.str, value.verbose, value.off, value.subs, value.templates, value.inLambda);
        }
    }
}}}}}