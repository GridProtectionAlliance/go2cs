//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:37:25 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace ianlancetaylor
{
    public static partial class demangle_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct TypeWithQualifiers
        {
            // Constructors
            public TypeWithQualifiers(NilType _)
            {
                this.Base = default;
                this.Qualifiers = default;
            }

            public TypeWithQualifiers(AST Base = default, AST Qualifiers = default)
            {
                this.Base = Base;
                this.Qualifiers = Qualifiers;
            }

            // Enable comparisons between nil and TypeWithQualifiers struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(TypeWithQualifiers value, NilType nil) => value.Equals(default(TypeWithQualifiers));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(TypeWithQualifiers value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, TypeWithQualifiers value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, TypeWithQualifiers value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator TypeWithQualifiers(NilType nil) => default(TypeWithQualifiers);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static TypeWithQualifiers TypeWithQualifiers_cast(dynamic value)
        {
            return new TypeWithQualifiers(value.Base, value.Qualifiers);
        }
    }
}}}}}