//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:43:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace ianlancetaylor
{
    public static partial class demangle_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct New
        {
            // Constructors
            public New(NilType _)
            {
                this.Op = default;
                this.Place = default;
                this.Type = default;
                this.Init = default;
            }

            public New(AST Op = default, AST Place = default, AST Type = default, AST Init = default)
            {
                this.Op = Op;
                this.Place = Place;
                this.Type = Type;
                this.Init = Init;
            }

            // Enable comparisons between nil and New struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(New value, NilType nil) => value.Equals(default(New));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(New value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, New value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, New value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator New(NilType nil) => default(New);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static New New_cast(dynamic value)
        {
            return new New(value.Op, value.Place, value.Type, value.Init);
        }
    }
}}}}}