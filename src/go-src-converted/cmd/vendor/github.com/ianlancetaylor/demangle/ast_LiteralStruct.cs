//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:24:18 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace ianlancetaylor
{
    public static partial class demangle_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Literal
        {
            // Constructors
            public Literal(NilType _)
            {
                this.Type = default;
                this.Val = default;
                this.Neg = default;
            }

            public Literal(AST Type = default, @string Val = default, bool Neg = default)
            {
                this.Type = Type;
                this.Val = Val;
                this.Neg = Neg;
            }

            // Enable comparisons between nil and Literal struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Literal value, NilType nil) => value.Equals(default(Literal));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Literal value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Literal value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Literal value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Literal(NilType nil) => default(Literal);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Literal Literal_cast(dynamic value)
        {
            return new Literal(value.Type, value.Val, value.Neg);
        }
    }
}}}}}