//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:42:48 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof
{
    public static partial class driver_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct MappingSources
        {
            // Value of the MappingSources struct
            private readonly map<@string, slice<object>> m_value;

            public MappingSources(map<@string, slice<object>> value) => m_value = value;

            // Enable implicit conversions between map<@string, slice<object>> and MappingSources struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator MappingSources(map<@string, slice<object>> value) => new MappingSources(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator map<@string, slice<object>>(MappingSources value) => value.m_value;
            
            // Enable comparisons between nil and MappingSources struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(MappingSources value, NilType nil) => value.Equals(default(MappingSources));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(MappingSources value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, MappingSources value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, MappingSources value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator MappingSources(NilType nil) => default(MappingSources);
        }
    }
}}}}}}
