//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:53:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class graph_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct NodeMap
        {
            // Value of the NodeMap struct
            private readonly map<NodeInfo, ptr<Node>> m_value;

            public NodeMap(map<NodeInfo, ptr<Node>> value) => m_value = value;

            // Enable implicit conversions between map<NodeInfo, ptr<Node>> and NodeMap struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator NodeMap(map<NodeInfo, ptr<Node>> value) => new NodeMap(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator map<NodeInfo, ptr<Node>>(NodeMap value) => value.m_value;
            
            // Enable comparisons between nil and NodeMap struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NodeMap value, NilType nil) => value.Equals(default(NodeMap));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NodeMap value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, NodeMap value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, NodeMap value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator NodeMap(NilType nil) => default(NodeMap);
        }
    }
}}}}}}}
