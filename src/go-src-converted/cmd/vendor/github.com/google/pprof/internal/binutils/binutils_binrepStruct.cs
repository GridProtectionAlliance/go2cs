//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:42:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using elf = go.debug.elf_package;
using macho = go.debug.macho_package;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using io = go.io_package;
using os = go.os_package;
using exec = go.os.exec_package;
using filepath = go.path.filepath_package;
using regexp = go.regexp_package;
using runtime = go.runtime_package;
using strings = go.strings_package;
using sync = go.sync_package;
using elfexec = go.github.com.google.pprof.@internal.elfexec_package;
using plugin = go.github.com.google.pprof.@internal.plugin_package;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class binutils_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct binrep
        {
            // Constructors
            public binrep(NilType _)
            {
                this.llvmSymbolizer = default;
                this.llvmSymbolizerFound = default;
                this.addr2line = default;
                this.addr2lineFound = default;
                this.nm = default;
                this.nmFound = default;
                this.objdump = default;
                this.objdumpFound = default;
                this.fast = default;
            }

            public binrep(@string llvmSymbolizer = default, bool llvmSymbolizerFound = default, @string addr2line = default, bool addr2lineFound = default, @string nm = default, bool nmFound = default, @string objdump = default, bool objdumpFound = default, bool fast = default)
            {
                this.llvmSymbolizer = llvmSymbolizer;
                this.llvmSymbolizerFound = llvmSymbolizerFound;
                this.addr2line = addr2line;
                this.addr2lineFound = addr2lineFound;
                this.nm = nm;
                this.nmFound = nmFound;
                this.objdump = objdump;
                this.objdumpFound = objdumpFound;
                this.fast = fast;
            }

            // Enable comparisons between nil and binrep struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(binrep value, NilType nil) => value.Equals(default(binrep));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(binrep value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, binrep value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, binrep value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator binrep(NilType nil) => default(binrep);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static binrep binrep_cast(dynamic value)
        {
            return new binrep(value.llvmSymbolizer, value.llvmSymbolizerFound, value.addr2line, value.addr2lineFound, value.nm, value.nmFound, value.objdump, value.objdumpFound, value.fast);
        }
    }
}}}}}}}