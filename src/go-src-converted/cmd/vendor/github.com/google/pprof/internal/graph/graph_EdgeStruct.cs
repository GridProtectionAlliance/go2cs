//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:53:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using math = go.math_package;
using filepath = go.path.filepath_package;
using regexp = go.regexp_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using profile = go.github.com.google.pprof.profile_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class graph_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Edge
        {
            // Constructors
            public Edge(NilType _)
            {
                this.Src = default;
                this.Dest = default;
                this.Weight = default;
                this.WeightDiv = default;
                this.Residual = default;
                this.Inline = default;
            }

            public Edge(ref ptr<Node> Src = default, ref ptr<Node> Dest = default, long Weight = default, long WeightDiv = default, bool Residual = default, bool Inline = default)
            {
                this.Src = Src;
                this.Dest = Dest;
                this.Weight = Weight;
                this.WeightDiv = WeightDiv;
                this.Residual = Residual;
                this.Inline = Inline;
            }

            // Enable comparisons between nil and Edge struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Edge value, NilType nil) => value.Equals(default(Edge));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Edge value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Edge value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Edge value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Edge(NilType nil) => default(Edge);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Edge Edge_cast(dynamic value)
        {
            return new Edge(ref value.Src, ref value.Dest, value.Weight, value.WeightDiv, value.Residual, value.Inline);
        }
    }
}}}}}}}