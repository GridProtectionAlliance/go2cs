//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:23:45 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using io = go.io_package;
using filepath = go.path.filepath_package;
using regexp = go.regexp_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using tabwriter = go.text.tabwriter_package;
using time = go.time_package;
using graph = go.github.com.google.pprof.@internal.graph_package;
using measurement = go.github.com.google.pprof.@internal.measurement_package;
using plugin = go.github.com.google.pprof.@internal.plugin_package;
using profile = go.github.com.google.pprof.profile_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class report_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct assemblyInstruction
        {
            // Constructors
            public assemblyInstruction(NilType _)
            {
                this.address = default;
                this.instruction = default;
                this.function = default;
                this.file = default;
                this.line = default;
                this.flat = default;
                this.cum = default;
                this.flatDiv = default;
                this.cumDiv = default;
                this.startsBlock = default;
                this.inlineCalls = default;
            }

            public assemblyInstruction(ulong address = default, @string instruction = default, @string function = default, @string file = default, nint line = default, long flat = default, long cum = default, long flatDiv = default, long cumDiv = default, bool startsBlock = default, slice<callID> inlineCalls = default)
            {
                this.address = address;
                this.instruction = instruction;
                this.function = function;
                this.file = file;
                this.line = line;
                this.flat = flat;
                this.cum = cum;
                this.flatDiv = flatDiv;
                this.cumDiv = cumDiv;
                this.startsBlock = startsBlock;
                this.inlineCalls = inlineCalls;
            }

            // Enable comparisons between nil and assemblyInstruction struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(assemblyInstruction value, NilType nil) => value.Equals(default(assemblyInstruction));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(assemblyInstruction value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, assemblyInstruction value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, assemblyInstruction value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator assemblyInstruction(NilType nil) => default(assemblyInstruction);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static assemblyInstruction assemblyInstruction_cast(dynamic value)
        {
            return new assemblyInstruction(value.address, value.instruction, value.function, value.file, value.line, value.flat, value.cum, value.flatDiv, value.cumDiv, value.startsBlock, value.inlineCalls);
        }
    }
}}}}}}}