//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:36:44 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using math = go.math_package;
using filepath = go.path.filepath_package;
using regexp = go.regexp_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using profile = go.github.com.google.pprof.profile_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class graph_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct tags
        {
            // Constructors
            public tags(NilType _)
            {
                this.t = default;
                this.flat = default;
            }

            public tags(slice<ptr<Tag>> t = default, bool flat = default)
            {
                this.t = t;
                this.flat = flat;
            }

            // Enable comparisons between nil and tags struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(tags value, NilType nil) => value.Equals(default(tags));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(tags value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, tags value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, tags value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator tags(NilType nil) => default(tags);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static tags tags_cast(dynamic value)
        {
            return new tags(value.t, value.flat);
        }
    }
}}}}}}}