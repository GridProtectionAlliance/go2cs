//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:53:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using math = go.math_package;
using filepath = go.path.filepath_package;
using regexp = go.regexp_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using profile = go.github.com.google.pprof.profile_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class graph_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct NodeInfo
        {
            // Constructors
            public NodeInfo(NilType _)
            {
                this.Name = default;
                this.OrigName = default;
                this.Address = default;
                this.File = default;
                this.StartLine = default;
                this.Lineno = default;
                this.Objfile = default;
            }

            public NodeInfo(@string Name = default, @string OrigName = default, ulong Address = default, @string File = default, long StartLine = default, long Lineno = default, @string Objfile = default)
            {
                this.Name = Name;
                this.OrigName = OrigName;
                this.Address = Address;
                this.File = File;
                this.StartLine = StartLine;
                this.Lineno = Lineno;
                this.Objfile = Objfile;
            }

            // Enable comparisons between nil and NodeInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NodeInfo value, NilType nil) => value.Equals(default(NodeInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NodeInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, NodeInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, NodeInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator NodeInfo(NilType nil) => default(NodeInfo);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static NodeInfo NodeInfo_cast(dynamic value)
        {
            return new NodeInfo(value.Name, value.OrigName, value.Address, value.File, value.StartLine, value.Lineno, value.Objfile);
        }
    }
}}}}}}}