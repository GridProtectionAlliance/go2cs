//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:36:24 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using fmt = go.fmt_package;
using os = go.os_package;
using strings = go.strings_package;
using binutils = go.github.com.google.pprof.@internal.binutils_package;
using plugin = go.github.com.google.pprof.@internal.plugin_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class driver_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct source
        {
            // Constructors
            public source(NilType _)
            {
                this.Sources = default;
                this.ExecName = default;
                this.BuildID = default;
                this.Base = default;
                this.DiffBase = default;
                this.Normalize = default;
                this.Seconds = default;
                this.Timeout = default;
                this.Symbolize = default;
                this.HTTPHostport = default;
                this.HTTPDisableBrowser = default;
                this.Comment = default;
            }

            public source(slice<@string> Sources = default, @string ExecName = default, @string BuildID = default, slice<@string> Base = default, bool DiffBase = default, bool Normalize = default, nint Seconds = default, nint Timeout = default, @string Symbolize = default, @string HTTPHostport = default, bool HTTPDisableBrowser = default, @string Comment = default)
            {
                this.Sources = Sources;
                this.ExecName = ExecName;
                this.BuildID = BuildID;
                this.Base = Base;
                this.DiffBase = DiffBase;
                this.Normalize = Normalize;
                this.Seconds = Seconds;
                this.Timeout = Timeout;
                this.Symbolize = Symbolize;
                this.HTTPHostport = HTTPHostport;
                this.HTTPDisableBrowser = HTTPDisableBrowser;
                this.Comment = Comment;
            }

            // Enable comparisons between nil and source struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(source value, NilType nil) => value.Equals(default(source));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(source value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, source value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, source value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator source(NilType nil) => default(source);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static source source_cast(dynamic value)
        {
            return new source(value.Sources, value.ExecName, value.BuildID, value.Base, value.DiffBase, value.Normalize, value.Seconds, value.Timeout, value.Symbolize, value.HTTPHostport, value.HTTPDisableBrowser, value.Comment);
        }
    }
}}}}}}}