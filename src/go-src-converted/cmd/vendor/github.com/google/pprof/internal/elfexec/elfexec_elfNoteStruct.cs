//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:23:34 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using elf = go.debug.elf_package;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using io = go.io_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class elfexec_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct elfNote
        {
            // Constructors
            public elfNote(NilType _)
            {
                this.Name = default;
                this.Desc = default;
                this.Type = default;
            }

            public elfNote(@string Name = default, slice<byte> Desc = default, uint Type = default)
            {
                this.Name = Name;
                this.Desc = Desc;
                this.Type = Type;
            }

            // Enable comparisons between nil and elfNote struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(elfNote value, NilType nil) => value.Equals(default(elfNote));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(elfNote value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, elfNote value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, elfNote value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator elfNote(NilType nil) => default(elfNote);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static elfNote elfNote_cast(dynamic value)
        {
            return new elfNote(value.Name, value.Desc, value.Type);
        }
    }
}}}}}}}