//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:23:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using math = go.math_package;
using filepath = go.path.filepath_package;
using regexp = go.regexp_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using profile = go.github.com.google.pprof.profile_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class graph_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Options
        {
            // Constructors
            public Options(NilType _)
            {
                this.SampleValue = default;
                this.SampleMeanDivisor = default;
                this.FormatTag = default;
                this.ObjNames = default;
                this.OrigFnNames = default;
                this.CallTree = default;
                this.DropNegative = default;
                this.KeptNodes = default;
            }

            public Options(Func<slice<long>, long> SampleValue = default, Func<slice<long>, long> SampleMeanDivisor = default, Func<long, @string, @string> FormatTag = default, bool ObjNames = default, bool OrigFnNames = default, bool CallTree = default, bool DropNegative = default, NodeSet KeptNodes = default)
            {
                this.SampleValue = SampleValue;
                this.SampleMeanDivisor = SampleMeanDivisor;
                this.FormatTag = FormatTag;
                this.ObjNames = ObjNames;
                this.OrigFnNames = OrigFnNames;
                this.CallTree = CallTree;
                this.DropNegative = DropNegative;
                this.KeptNodes = KeptNodes;
            }

            // Enable comparisons between nil and Options struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Options value, NilType nil) => value.Equals(default(Options));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Options value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Options value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Options value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Options(NilType nil) => default(Options);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Options Options_cast(dynamic value)
        {
            return new Options(value.SampleValue, value.SampleMeanDivisor, value.FormatTag, value.ObjNames, value.OrigFnNames, value.CallTree, value.DropNegative, value.KeptNodes);
        }
    }
}}}}}}}