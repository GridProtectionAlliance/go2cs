//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:53:34 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using template = go.html.template_package;
using net = go.net_package;
using http = go.net.http_package;
using gourl = go.net.url_package;
using os = go.os_package;
using exec = go.os.exec_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using time = go.time_package;
using graph = go.github.com.google.pprof.@internal.graph_package;
using plugin = go.github.com.google.pprof.@internal.plugin_package;
using report = go.github.com.google.pprof.@internal.report_package;
using profile = go.github.com.google.pprof.profile_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class driver_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct errorCatcher
        {
            // Constructors
            public errorCatcher(NilType _)
            {
                this.UI = default;
                this.errors = default;
            }

            public errorCatcher(plugin.UI UI = default, slice<@string> errors = default)
            {
                this.UI = UI;
                this.errors = errors;
            }

            // Enable comparisons between nil and errorCatcher struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(errorCatcher value, NilType nil) => value.Equals(default(errorCatcher));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(errorCatcher value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, errorCatcher value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, errorCatcher value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator errorCatcher(NilType nil) => default(errorCatcher);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static errorCatcher errorCatcher_cast(dynamic value)
        {
            return new errorCatcher(value.UI, value.errors);
        }
    }
}}}}}}}