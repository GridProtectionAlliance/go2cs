//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:23:15 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using fmt = go.fmt_package;
using io = go.io_package;
using exec = go.os.exec_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using plugin = go.github.com.google.pprof.@internal.plugin_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class binutils_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(sync.Mutex))]
        private partial struct llvmSymbolizer
        {
            // Mutex structure promotion - sourced from value copy
            private readonly ptr<Mutex> m_MutexRef;

            private ref Mutex Mutex_val => ref m_MutexRef.Value;

            public ref int state => ref m_MutexRef.Value.state;

            public ref uint sema => ref m_MutexRef.Value.sema;

            // Constructors
            public llvmSymbolizer(NilType _)
            {
                this.m_MutexRef = new ptr<sync.Mutex>(new sync.Mutex(nil));
                this.filename = default;
                this.rw = default;
                this.@base = default;
            }

            public llvmSymbolizer(sync.Mutex Mutex = default, @string filename = default, lineReaderWriter rw = default, ulong @base = default)
            {
                this.m_MutexRef = new ptr<sync.Mutex>(Mutex);
                this.filename = filename;
                this.rw = rw;
                this.@base = @base;
            }

            // Enable comparisons between nil and llvmSymbolizer struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(llvmSymbolizer value, NilType nil) => value.Equals(default(llvmSymbolizer));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(llvmSymbolizer value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, llvmSymbolizer value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, llvmSymbolizer value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator llvmSymbolizer(NilType nil) => default(llvmSymbolizer);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static llvmSymbolizer llvmSymbolizer_cast(dynamic value)
        {
            return new llvmSymbolizer(value.Mutex, value.filename, value.rw, value.@base);
        }
    }
}}}}}}}