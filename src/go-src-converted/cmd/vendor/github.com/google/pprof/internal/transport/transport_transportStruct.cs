//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:43:27 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using tls = go.crypto.tls_package;
using x509 = go.crypto.x509_package;
using fmt = go.fmt_package;
using ioutil = go.io.ioutil_package;
using http = go.net.http_package;
using sync = go.sync_package;
using plugin = go.github.com.google.pprof.@internal.plugin_package;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class transport_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct transport
        {
            // Constructors
            public transport(NilType _)
            {
                this.cert = default;
                this.key = default;
                this.ca = default;
                this.caCertPool = default;
                this.certs = default;
                this.initOnce = default;
                this.initErr = default;
            }

            public transport(ref ptr<@string> cert = default, ref ptr<@string> key = default, ref ptr<@string> ca = default, ref ptr<x509.CertPool> caCertPool = default, slice<tls.Certificate> certs = default, sync.Once initOnce = default, error initErr = default)
            {
                this.cert = cert;
                this.key = key;
                this.ca = ca;
                this.caCertPool = caCertPool;
                this.certs = certs;
                this.initOnce = initOnce;
                this.initErr = initErr;
            }

            // Enable comparisons between nil and transport struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(transport value, NilType nil) => value.Equals(default(transport));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(transport value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, transport value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, transport value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator transport(NilType nil) => default(transport);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static transport transport_cast(dynamic value)
        {
            return new transport(ref value.cert, ref value.key, ref value.ca, ref value.caCertPool, value.certs, value.initOnce, value.initErr);
        }
    }
}}}}}}}