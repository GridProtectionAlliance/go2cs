//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:43:03 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using json = go.encoding.json_package;
using template = go.html.template_package;
using http = go.net.http_package;
using strings = go.strings_package;
using graph = go.github.com.google.pprof.@internal.graph_package;
using measurement = go.github.com.google.pprof.@internal.measurement_package;
using report = go.github.com.google.pprof.@internal.report_package;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace github.com {
namespace google {
namespace pprof {
namespace @internal
{
    public static partial class driver_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct treeNode
        {
            // Constructors
            public treeNode(NilType _)
            {
                this.Name = default;
                this.FullName = default;
                this.Cum = default;
                this.CumFormat = default;
                this.Percent = default;
                this.Children = default;
            }

            public treeNode(@string Name = default, @string FullName = default, long Cum = default, @string CumFormat = default, @string Percent = default, slice<ptr<treeNode>> Children = default)
            {
                this.Name = Name;
                this.FullName = FullName;
                this.Cum = Cum;
                this.CumFormat = CumFormat;
                this.Percent = Percent;
                this.Children = Children;
            }

            // Enable comparisons between nil and treeNode struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(treeNode value, NilType nil) => value.Equals(default(treeNode));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(treeNode value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, treeNode value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, treeNode value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator treeNode(NilType nil) => default(treeNode);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static treeNode treeNode_cast(dynamic value)
        {
            return new treeNode(value.Name, value.FullName, value.Cum, value.CumFormat, value.Percent, value.Children);
        }
    }
}}}}}}}