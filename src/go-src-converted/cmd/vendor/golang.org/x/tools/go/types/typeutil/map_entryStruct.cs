//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:42:44 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using types = go.go.types_package;
using reflect = go.reflect_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace types
{
    public static partial class typeutil_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct entry
        {
            // Constructors
            public entry(NilType _)
            {
                this.key = default;
            }

            public entry(types.Type key = default)
            {
                this.key = key;
            }

            // Enable comparisons between nil and entry struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(entry value, NilType nil) => value.Equals(default(entry));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(entry value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, entry value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, entry value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator entry(NilType nil) => default(entry);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static entry entry_cast(dynamic value)
        {
            return new entry(value.key);
        }
    }
}}}}}}}}