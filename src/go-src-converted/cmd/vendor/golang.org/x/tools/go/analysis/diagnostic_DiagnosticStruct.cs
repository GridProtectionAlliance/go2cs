//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:54:17 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using token = go.go.token_package;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace tools {
namespace go
{
    public static partial class analysis_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Diagnostic
        {
            // Constructors
            public Diagnostic(NilType _)
            {
                this.Pos = default;
                this.End = default;
                this.Category = default;
                this.Message = default;
                this.SuggestedFixes = default;
                this.Related = default;
            }

            public Diagnostic(token.Pos Pos = default, token.Pos End = default, @string Category = default, @string Message = default, slice<SuggestedFix> SuggestedFixes = default, slice<RelatedInformation> Related = default)
            {
                this.Pos = Pos;
                this.End = End;
                this.Category = Category;
                this.Message = Message;
                this.SuggestedFixes = SuggestedFixes;
                this.Related = Related;
            }

            // Enable comparisons between nil and Diagnostic struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Diagnostic value, NilType nil) => value.Equals(default(Diagnostic));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Diagnostic value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Diagnostic value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Diagnostic value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Diagnostic(NilType nil) => default(Diagnostic);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Diagnostic Diagnostic_cast(dynamic value)
        {
            return new Diagnostic(value.Pos, value.End, value.Category, value.Message, value.SuggestedFixes, value.Related);
        }
    }
}}}}}}}