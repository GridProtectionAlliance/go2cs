//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:41:47 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using ast = go.go.ast_package;
using constraint = go.go.build.constraint_package;
using parser = go.go.parser_package;
using token = go.go.token_package;
using strings = go.strings_package;
using unicode = go.unicode_package;
using analysis = go.golang.org.x.tools.go.analysis_package;
using analysisutil = go.golang.org.x.tools.go.analysis.passes.@internal.analysisutil_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace analysis {
namespace passes
{
    public static partial class buildtag_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct checker
        {
            // Constructors
            public checker(NilType _)
            {
                this.pass = default;
                this.plusBuildOK = default;
                this.goBuildOK = default;
                this.crossCheck = default;
                this.inStar = default;
                this.goBuildPos = default;
                this.plusBuildPos = default;
                this.goBuild = default;
                this.plusBuild = default;
            }

            public checker(ref ptr<analysis.Pass> pass = default, bool plusBuildOK = default, bool goBuildOK = default, bool crossCheck = default, bool inStar = default, token.Pos goBuildPos = default, token.Pos plusBuildPos = default, constraint.Expr goBuild = default, constraint.Expr plusBuild = default)
            {
                this.pass = pass;
                this.plusBuildOK = plusBuildOK;
                this.goBuildOK = goBuildOK;
                this.crossCheck = crossCheck;
                this.inStar = inStar;
                this.goBuildPos = goBuildPos;
                this.plusBuildPos = plusBuildPos;
                this.goBuild = goBuild;
                this.plusBuild = plusBuild;
            }

            // Enable comparisons between nil and checker struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(checker value, NilType nil) => value.Equals(default(checker));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(checker value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, checker value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, checker value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator checker(NilType nil) => default(checker);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static checker checker_cast(dynamic value)
        {
            return new checker(ref value.pass, value.plusBuildOK, value.goBuildOK, value.crossCheck, value.inStar, value.goBuildPos, value.plusBuildPos, value.goBuild, value.plusBuild);
        }
    }
}}}}}}}}}