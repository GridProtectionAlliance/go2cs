//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:41:33 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using io = go.io_package;
using runtime = go.runtime_package;
using strconv = go.strconv_package;
using sync = go.sync_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x
{
    public static partial class term_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Terminal
        {
            // Constructors
            public Terminal(NilType _)
            {
                this.AutoCompleteCallback = default;
                this.Escape = default;
                this.@lock = default;
                this.c = default;
                this.prompt = default;
                this.line = default;
                this.pos = default;
                this.echo = default;
                this.pasteActive = default;
                this.cursorX = default;
                this.cursorY = default;
                this.maxLine = default;
                this.termWidth = default;
                this.termHeight = default;
                this.outBuf = default;
                this.remainder = default;
                this.inBuf = default;
                this.history = default;
                this.historyIndex = default;
                this.historyPending = default;
            }

            public Terminal(Func<@string, nint, int, (@string, nint, bool)> AutoCompleteCallback = default, ref ptr<EscapeCodes> Escape = default, sync.Mutex @lock = default, io.ReadWriter c = default, slice<int> prompt = default, slice<int> line = default, nint pos = default, bool echo = default, bool pasteActive = default, nint cursorX = default, nint cursorY = default, nint maxLine = default, nint termWidth = default, nint termHeight = default, slice<byte> outBuf = default, slice<byte> remainder = default, array<byte> inBuf = default, stRingBuffer history = default, nint historyIndex = default, @string historyPending = default)
            {
                this.AutoCompleteCallback = AutoCompleteCallback;
                this.Escape = Escape;
                this.@lock = @lock;
                this.c = c;
                this.prompt = prompt;
                this.line = line;
                this.pos = pos;
                this.echo = echo;
                this.pasteActive = pasteActive;
                this.cursorX = cursorX;
                this.cursorY = cursorY;
                this.maxLine = maxLine;
                this.termWidth = termWidth;
                this.termHeight = termHeight;
                this.outBuf = outBuf;
                this.remainder = remainder;
                this.inBuf = inBuf;
                this.history = history;
                this.historyIndex = historyIndex;
                this.historyPending = historyPending;
            }

            // Enable comparisons between nil and Terminal struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Terminal value, NilType nil) => value.Equals(default(Terminal));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Terminal value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Terminal value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Terminal value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Terminal(NilType nil) => default(Terminal);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Terminal Terminal_cast(dynamic value)
        {
            return new Terminal(value.AutoCompleteCallback, ref value.Escape, value.@lock, value.c, value.prompt, value.line, value.pos, value.echo, value.pasteActive, value.cursorX, value.cursorY, value.maxLine, value.termWidth, value.termHeight, value.outBuf, value.remainder, value.inBuf, value.history, value.historyIndex, value.historyPending);
        }
    }
}}}}}