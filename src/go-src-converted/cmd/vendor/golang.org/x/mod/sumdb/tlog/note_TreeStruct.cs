//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:46:02 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using base64 = go.encoding.base64_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using utf8 = go.unicode.utf8_package;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace mod {
namespace sumdb
{
    public static partial class tlog_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Tree
        {
            // Constructors
            public Tree(NilType _)
            {
                this.N = default;
                this.Hash = default;
            }

            public Tree(long N = default, Hash Hash = default)
            {
                this.N = N;
                this.Hash = Hash;
            }

            // Enable comparisons between nil and Tree struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Tree value, NilType nil) => value.Equals(default(Tree));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Tree value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Tree value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Tree value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Tree(NilType nil) => default(Tree);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Tree Tree_cast(dynamic value)
        {
            return new Tree(value.N, value.Hash);
        }
    }
}}}}}}}