//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:40:59 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using path = go.path_package;
using sort = go.sort_package;
using strings = go.strings_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using semver = go.golang.org.x.mod.semver_package;
using errors = go.golang.org.x.xerrors_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace mod
{
    public static partial class module_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct InvalidPathError
        {
            // Constructors
            public InvalidPathError(NilType _)
            {
                this.Kind = default;
                this.Path = default;
                this.Err = default;
            }

            public InvalidPathError(@string Kind = default, @string Path = default, error Err = default)
            {
                this.Kind = Kind;
                this.Path = Path;
                this.Err = Err;
            }

            // Enable comparisons between nil and InvalidPathError struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(InvalidPathError value, NilType nil) => value.Equals(default(InvalidPathError));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(InvalidPathError value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, InvalidPathError value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, InvalidPathError value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator InvalidPathError(NilType nil) => default(InvalidPathError);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static InvalidPathError InvalidPathError_cast(dynamic value)
        {
            return new InvalidPathError(value.Kind, value.Path, value.Err);
        }
    }
}}}}}}