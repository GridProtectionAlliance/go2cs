//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:26:00 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using os = go.os_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace mod
{
    public static partial class modfile_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Comments
        {
            // Constructors
            public Comments(NilType _)
            {
                this.Before = default;
                this.Suffix = default;
                this.After = default;
            }

            public Comments(slice<Comment> Before = default, slice<Comment> Suffix = default, slice<Comment> After = default)
            {
                this.Before = Before;
                this.Suffix = Suffix;
                this.After = After;
            }

            // Enable comparisons between nil and Comments struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Comments value, NilType nil) => value.Equals(default(Comments));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Comments value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Comments value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Comments value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Comments(NilType nil) => default(Comments);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Comments Comments_cast(dynamic value)
        {
            return new Comments(value.Before, value.Suffix, value.After);
        }
    }
}}}}}}