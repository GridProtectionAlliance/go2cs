//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:55:32 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace crypto
{
    public static partial class ed25519_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct PrivateKey
        {
            // Value of the PrivateKey struct
            private readonly ed25519.PrivateKey m_value;

            public PrivateKey(ed25519.PrivateKey value) => m_value = value;

            // Enable implicit conversions between ed25519.PrivateKey and PrivateKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator PrivateKey(ed25519.PrivateKey value) => new PrivateKey(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ed25519.PrivateKey(PrivateKey value) => value.m_value;
            
            // Enable comparisons between nil and PrivateKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(PrivateKey value, NilType nil) => value.Equals(default(PrivateKey));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(PrivateKey value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, PrivateKey value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, PrivateKey value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator PrivateKey(NilType nil) => default(PrivateKey);
        }
    }
}}}}}}
