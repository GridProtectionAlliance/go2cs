//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:53:57 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using net = go.net_package;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using go;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class windows_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct DNSMXData
        {
            // Constructors
            public DNSMXData(NilType _)
            {
                this.NameExchange = default;
                this.Preference = default;
                this.Pad = default;
            }

            public DNSMXData(ref ptr<ushort> NameExchange = default, ushort Preference = default, ushort Pad = default)
            {
                this.NameExchange = NameExchange;
                this.Preference = Preference;
                this.Pad = Pad;
            }

            // Enable comparisons between nil and DNSMXData struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(DNSMXData value, NilType nil) => value.Equals(default(DNSMXData));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(DNSMXData value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, DNSMXData value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, DNSMXData value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator DNSMXData(NilType nil) => default(DNSMXData);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static DNSMXData DNSMXData_cast(dynamic value)
        {
            return new DNSMXData(ref value.NameExchange, value.Preference, value.Pad);
        }
    }
}}}}}}