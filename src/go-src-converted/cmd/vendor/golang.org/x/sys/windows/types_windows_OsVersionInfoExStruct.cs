//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:00:59 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using net = go.net_package;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class windows_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct OsVersionInfoEx
        {
            // Constructors
            public OsVersionInfoEx(NilType _)
            {
                this.osVersionInfoSize = default;
                this.MajorVersion = default;
                this.MinorVersion = default;
                this.BuildNumber = default;
                this.PlatformId = default;
                this.CsdVersion = default;
                this.ServicePackMajor = default;
                this.ServicePackMinor = default;
                this.SuiteMask = default;
                this.ProductType = default;
                this._ = default;
            }

            public OsVersionInfoEx(uint osVersionInfoSize = default, uint MajorVersion = default, uint MinorVersion = default, uint BuildNumber = default, uint PlatformId = default, array<ushort> CsdVersion = default, ushort ServicePackMajor = default, ushort ServicePackMinor = default, ushort SuiteMask = default, byte ProductType = default, byte _ = default)
            {
                this.osVersionInfoSize = osVersionInfoSize;
                this.MajorVersion = MajorVersion;
                this.MinorVersion = MinorVersion;
                this.BuildNumber = BuildNumber;
                this.PlatformId = PlatformId;
                this.CsdVersion = CsdVersion;
                this.ServicePackMajor = ServicePackMajor;
                this.ServicePackMinor = ServicePackMinor;
                this.SuiteMask = SuiteMask;
                this.ProductType = ProductType;
                this._ = _;
            }

            // Enable comparisons between nil and OsVersionInfoEx struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(OsVersionInfoEx value, NilType nil) => value.Equals(default(OsVersionInfoEx));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(OsVersionInfoEx value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, OsVersionInfoEx value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, OsVersionInfoEx value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator OsVersionInfoEx(NilType nil) => default(OsVersionInfoEx);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static OsVersionInfoEx OsVersionInfoEx_cast(dynamic value)
        {
            return new OsVersionInfoEx(value.osVersionInfoSize, value.MajorVersion, value.MinorVersion, value.BuildNumber, value.PlatformId, value.CsdVersion, value.ServicePackMajor, value.ServicePackMinor, value.SuiteMask, value.ProductType, value._);
        }
    }
}}}}}}