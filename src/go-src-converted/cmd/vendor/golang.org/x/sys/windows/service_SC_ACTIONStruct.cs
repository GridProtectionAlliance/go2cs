//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:53:49 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class windows_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct SC_ACTION
        {
            // Constructors
            public SC_ACTION(NilType _)
            {
                this.Type = default;
                this.Delay = default;
            }

            public SC_ACTION(uint Type = default, uint Delay = default)
            {
                this.Type = Type;
                this.Delay = Delay;
            }

            // Enable comparisons between nil and SC_ACTION struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(SC_ACTION value, NilType nil) => value.Equals(default(SC_ACTION));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(SC_ACTION value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, SC_ACTION value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, SC_ACTION value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator SC_ACTION(NilType nil) => default(SC_ACTION);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static SC_ACTION SC_ACTION_cast(dynamic value)
        {
            return new SC_ACTION(value.Type, value.Delay);
        }
    }
}}}}}}