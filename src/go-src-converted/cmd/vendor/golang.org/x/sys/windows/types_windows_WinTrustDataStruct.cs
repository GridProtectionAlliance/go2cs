//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:30:43 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using net = go.net_package;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class windows_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct WinTrustData
        {
            // Constructors
            public WinTrustData(NilType _)
            {
                this.Size = default;
                this.PolicyCallbackData = default;
                this.SIPClientData = default;
                this.UIChoice = default;
                this.RevocationChecks = default;
                this.UnionChoice = default;
                this.FileOrCatalogOrBlobOrSgnrOrCert = default;
                this.StateAction = default;
                this.StateData = default;
                this.URLReference = default;
                this.ProvFlags = default;
                this.UIContext = default;
                this.SignatureSettings = default;
            }

            public WinTrustData(uint Size = default, System.UIntPtr PolicyCallbackData = default, System.UIntPtr SIPClientData = default, uint UIChoice = default, uint RevocationChecks = default, uint UnionChoice = default, unsafe.Pointer FileOrCatalogOrBlobOrSgnrOrCert = default, uint StateAction = default, Handle StateData = default, ref ptr<ushort> URLReference = default, uint ProvFlags = default, uint UIContext = default, ref ptr<WinTrustSignatureSettings> SignatureSettings = default)
            {
                this.Size = Size;
                this.PolicyCallbackData = PolicyCallbackData;
                this.SIPClientData = SIPClientData;
                this.UIChoice = UIChoice;
                this.RevocationChecks = RevocationChecks;
                this.UnionChoice = UnionChoice;
                this.FileOrCatalogOrBlobOrSgnrOrCert = FileOrCatalogOrBlobOrSgnrOrCert;
                this.StateAction = StateAction;
                this.StateData = StateData;
                this.URLReference = URLReference;
                this.ProvFlags = ProvFlags;
                this.UIContext = UIContext;
                this.SignatureSettings = SignatureSettings;
            }

            // Enable comparisons between nil and WinTrustData struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(WinTrustData value, NilType nil) => value.Equals(default(WinTrustData));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(WinTrustData value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, WinTrustData value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, WinTrustData value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator WinTrustData(NilType nil) => default(WinTrustData);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static WinTrustData WinTrustData_cast(dynamic value)
        {
            return new WinTrustData(value.Size, value.PolicyCallbackData, value.SIPClientData, value.UIChoice, value.RevocationChecks, value.UnionChoice, value.FileOrCatalogOrBlobOrSgnrOrCert, value.StateAction, value.StateData, ref value.URLReference, value.ProvFlags, value.UIContext, ref value.SignatureSettings);
        }
    }
}}}}}}