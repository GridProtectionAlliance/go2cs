//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:30:43 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using net = go.net_package;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class windows_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct RTL_USER_PROCESS_PARAMETERS
        {
            // Constructors
            public RTL_USER_PROCESS_PARAMETERS(NilType _)
            {
                this.MaximumLength = default;
                this.Length = default;
                this.Flags = default;
                this.DebugFlags = default;
                this.ConsoleHandle = default;
                this.ConsoleFlags = default;
                this.StandardInput = default;
                this.StandardOutput = default;
                this.StandardError = default;
                this.CurrentDirectory = default;
                this.DllPath = default;
                this.ImagePathName = default;
                this.CommandLine = default;
                this.Environment = default;
                this.StartingX = default;
                this.StartingY = default;
                this.CountX = default;
                this.CountY = default;
                this.CountCharsX = default;
                this.CountCharsY = default;
                this.FillAttribute = default;
                this.WindowFlags = default;
                this.ShowWindowFlags = default;
                this.WindowTitle = default;
                this.DesktopInfo = default;
                this.ShellInfo = default;
                this.RuntimeData = default;
                this.CurrentDirectories = default;
                this.EnvironmentSize = default;
                this.EnvironmentVersion = default;
                this.PackageDependencyData = default;
                this.ProcessGroupId = default;
                this.LoaderThreads = default;
                this.RedirectionDllName = default;
                this.HeapPartitionName = default;
                this.DefaultThreadpoolCpuSetMasks = default;
                this.DefaultThreadpoolCpuSetMaskCount = default;
            }

            public RTL_USER_PROCESS_PARAMETERS(uint MaximumLength = default, uint Length = default, uint Flags = default, uint DebugFlags = default, Handle ConsoleHandle = default, uint ConsoleFlags = default, Handle StandardInput = default, Handle StandardOutput = default, Handle StandardError = default, CURDIR CurrentDirectory = default, NTUnicodeString DllPath = default, NTUnicodeString ImagePathName = default, NTUnicodeString CommandLine = default, unsafe.Pointer Environment = default, uint StartingX = default, uint StartingY = default, uint CountX = default, uint CountY = default, uint CountCharsX = default, uint CountCharsY = default, uint FillAttribute = default, uint WindowFlags = default, uint ShowWindowFlags = default, NTUnicodeString WindowTitle = default, NTUnicodeString DesktopInfo = default, NTUnicodeString ShellInfo = default, NTUnicodeString RuntimeData = default, array<RTL_DRIVE_LETTER_CURDIR> CurrentDirectories = default, System.UIntPtr EnvironmentSize = default, System.UIntPtr EnvironmentVersion = default, unsafe.Pointer PackageDependencyData = default, uint ProcessGroupId = default, uint LoaderThreads = default, NTUnicodeString RedirectionDllName = default, NTUnicodeString HeapPartitionName = default, System.UIntPtr DefaultThreadpoolCpuSetMasks = default, uint DefaultThreadpoolCpuSetMaskCount = default)
            {
                this.MaximumLength = MaximumLength;
                this.Length = Length;
                this.Flags = Flags;
                this.DebugFlags = DebugFlags;
                this.ConsoleHandle = ConsoleHandle;
                this.ConsoleFlags = ConsoleFlags;
                this.StandardInput = StandardInput;
                this.StandardOutput = StandardOutput;
                this.StandardError = StandardError;
                this.CurrentDirectory = CurrentDirectory;
                this.DllPath = DllPath;
                this.ImagePathName = ImagePathName;
                this.CommandLine = CommandLine;
                this.Environment = Environment;
                this.StartingX = StartingX;
                this.StartingY = StartingY;
                this.CountX = CountX;
                this.CountY = CountY;
                this.CountCharsX = CountCharsX;
                this.CountCharsY = CountCharsY;
                this.FillAttribute = FillAttribute;
                this.WindowFlags = WindowFlags;
                this.ShowWindowFlags = ShowWindowFlags;
                this.WindowTitle = WindowTitle;
                this.DesktopInfo = DesktopInfo;
                this.ShellInfo = ShellInfo;
                this.RuntimeData = RuntimeData;
                this.CurrentDirectories = CurrentDirectories;
                this.EnvironmentSize = EnvironmentSize;
                this.EnvironmentVersion = EnvironmentVersion;
                this.PackageDependencyData = PackageDependencyData;
                this.ProcessGroupId = ProcessGroupId;
                this.LoaderThreads = LoaderThreads;
                this.RedirectionDllName = RedirectionDllName;
                this.HeapPartitionName = HeapPartitionName;
                this.DefaultThreadpoolCpuSetMasks = DefaultThreadpoolCpuSetMasks;
                this.DefaultThreadpoolCpuSetMaskCount = DefaultThreadpoolCpuSetMaskCount;
            }

            // Enable comparisons between nil and RTL_USER_PROCESS_PARAMETERS struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(RTL_USER_PROCESS_PARAMETERS value, NilType nil) => value.Equals(default(RTL_USER_PROCESS_PARAMETERS));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(RTL_USER_PROCESS_PARAMETERS value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, RTL_USER_PROCESS_PARAMETERS value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, RTL_USER_PROCESS_PARAMETERS value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator RTL_USER_PROCESS_PARAMETERS(NilType nil) => default(RTL_USER_PROCESS_PARAMETERS);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static RTL_USER_PROCESS_PARAMETERS RTL_USER_PROCESS_PARAMETERS_cast(dynamic value)
        {
            return new RTL_USER_PROCESS_PARAMETERS(value.MaximumLength, value.Length, value.Flags, value.DebugFlags, value.ConsoleHandle, value.ConsoleFlags, value.StandardInput, value.StandardOutput, value.StandardError, value.CurrentDirectory, value.DllPath, value.ImagePathName, value.CommandLine, value.Environment, value.StartingX, value.StartingY, value.CountX, value.CountY, value.CountCharsX, value.CountCharsY, value.FillAttribute, value.WindowFlags, value.ShowWindowFlags, value.WindowTitle, value.DesktopInfo, value.ShellInfo, value.RuntimeData, value.CurrentDirectories, value.EnvironmentSize, value.EnvironmentVersion, value.PackageDependencyData, value.ProcessGroupId, value.LoaderThreads, value.RedirectionDllName, value.HeapPartitionName, value.DefaultThreadpoolCpuSetMasks, value.DefaultThreadpoolCpuSetMaskCount);
        }
    }
}}}}}}