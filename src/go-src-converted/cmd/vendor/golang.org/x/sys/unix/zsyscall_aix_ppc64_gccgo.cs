// go run mksyscall_aix_ppc64.go -aix -tags aix,ppc64 syscall_aix.go syscall_aix_ppc64.go
// Code generated by the command above; see README.md. DO NOT EDIT.

// +build aix,ppc64
// +build gccgo

// package unix -- go2cs converted at 2020 October 08 04:49:47 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Go\src\cmd\vendor\golang.org\x\sys\unix\zsyscall_aix_ppc64_gccgo.go
/*
#include <stdint.h>
int utimes(uintptr_t, uintptr_t);
int utimensat(int, uintptr_t, uintptr_t, int);
int getcwd(uintptr_t, size_t);
int accept(int, uintptr_t, uintptr_t);
int getdirent(int, uintptr_t, size_t);
int wait4(int, uintptr_t, int, uintptr_t);
int ioctl(int, int, uintptr_t);
int fcntl(uintptr_t, int, uintptr_t);
int acct(uintptr_t);
int chdir(uintptr_t);
int chroot(uintptr_t);
int close(int);
int dup(int);
void exit(int);
int faccessat(int, uintptr_t, unsigned int, int);
int fchdir(int);
int fchmod(int, unsigned int);
int fchmodat(int, uintptr_t, unsigned int, int);
int fchownat(int, uintptr_t, int, int, int);
int fdatasync(int);
int fsync(int);
int getpgid(int);
int getpgrp();
int getpid();
int getppid();
int getpriority(int, int);
int getrusage(int, uintptr_t);
int getsid(int);
int kill(int, int);
int syslog(int, uintptr_t, size_t);
int mkdir(int, uintptr_t, unsigned int);
int mkdirat(int, uintptr_t, unsigned int);
int mkfifo(uintptr_t, unsigned int);
int mknod(uintptr_t, unsigned int, int);
int mknodat(int, uintptr_t, unsigned int, int);
int nanosleep(uintptr_t, uintptr_t);
int open64(uintptr_t, int, unsigned int);
int openat(int, uintptr_t, int, unsigned int);
int read(int, uintptr_t, size_t);
int readlink(uintptr_t, uintptr_t, size_t);
int renameat(int, uintptr_t, int, uintptr_t);
int setdomainname(uintptr_t, size_t);
int sethostname(uintptr_t, size_t);
int setpgid(int, int);
int setsid();
int settimeofday(uintptr_t);
int setuid(int);
int setgid(int);
int setpriority(int, int, int);
int statx(int, uintptr_t, int, int, uintptr_t);
int sync();
uintptr_t times(uintptr_t);
int umask(int);
int uname(uintptr_t);
int unlink(uintptr_t);
int unlinkat(int, uintptr_t, int);
int ustat(int, uintptr_t);
int write(int, uintptr_t, size_t);
int dup2(int, int);
int posix_fadvise64(int, long long, long long, int);
int fchown(int, int, int);
int fstat(int, uintptr_t);
int fstatat(int, uintptr_t, uintptr_t, int);
int fstatfs(int, uintptr_t);
int ftruncate(int, long long);
int getegid();
int geteuid();
int getgid();
int getuid();
int lchown(uintptr_t, int, int);
int listen(int, int);
int lstat(uintptr_t, uintptr_t);
int pause();
int pread64(int, uintptr_t, size_t, long long);
int pwrite64(int, uintptr_t, size_t, long long);
#define c_select select
int select(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
int pselect(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
int setregid(int, int);
int setreuid(int, int);
int shutdown(int, int);
long long splice(int, uintptr_t, int, uintptr_t, int, int);
int stat(uintptr_t, uintptr_t);
int statfs(uintptr_t, uintptr_t);
int truncate(uintptr_t, long long);
int bind(int, uintptr_t, uintptr_t);
int connect(int, uintptr_t, uintptr_t);
int getgroups(int, uintptr_t);
int setgroups(int, uintptr_t);
int getsockopt(int, int, int, uintptr_t, uintptr_t);
int setsockopt(int, int, int, uintptr_t, uintptr_t);
int socket(int, int, int);
int socketpair(int, int, int, uintptr_t);
int getpeername(int, uintptr_t, uintptr_t);
int getsockname(int, uintptr_t, uintptr_t);
int recvfrom(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);
int sendto(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);
int nrecvmsg(int, uintptr_t, int);
int nsendmsg(int, uintptr_t, int);
int munmap(uintptr_t, uintptr_t);
int madvise(uintptr_t, size_t, int);
int mprotect(uintptr_t, size_t, int);
int mlock(uintptr_t, size_t);
int mlockall(int);
int msync(uintptr_t, size_t, int);
int munlock(uintptr_t, size_t);
int munlockall();
int pipe(uintptr_t);
int poll(uintptr_t, int, int);
int gettimeofday(uintptr_t, uintptr_t);
int time(uintptr_t);
int utime(uintptr_t, uintptr_t);
unsigned long long getsystemcfg(int);
int umount(uintptr_t);
int getrlimit(int, uintptr_t);
int setrlimit(int, uintptr_t);
long long lseek(int, long long, int);
uintptr_t mmap64(uintptr_t, uintptr_t, int, int, int, long long);

*/
using C = go.C_package;/*
#include <stdint.h>
int utimes(uintptr_t, uintptr_t);
int utimensat(int, uintptr_t, uintptr_t, int);
int getcwd(uintptr_t, size_t);
int accept(int, uintptr_t, uintptr_t);
int getdirent(int, uintptr_t, size_t);
int wait4(int, uintptr_t, int, uintptr_t);
int ioctl(int, int, uintptr_t);
int fcntl(uintptr_t, int, uintptr_t);
int acct(uintptr_t);
int chdir(uintptr_t);
int chroot(uintptr_t);
int close(int);
int dup(int);
void exit(int);
int faccessat(int, uintptr_t, unsigned int, int);
int fchdir(int);
int fchmod(int, unsigned int);
int fchmodat(int, uintptr_t, unsigned int, int);
int fchownat(int, uintptr_t, int, int, int);
int fdatasync(int);
int fsync(int);
int getpgid(int);
int getpgrp();
int getpid();
int getppid();
int getpriority(int, int);
int getrusage(int, uintptr_t);
int getsid(int);
int kill(int, int);
int syslog(int, uintptr_t, size_t);
int mkdir(int, uintptr_t, unsigned int);
int mkdirat(int, uintptr_t, unsigned int);
int mkfifo(uintptr_t, unsigned int);
int mknod(uintptr_t, unsigned int, int);
int mknodat(int, uintptr_t, unsigned int, int);
int nanosleep(uintptr_t, uintptr_t);
int open64(uintptr_t, int, unsigned int);
int openat(int, uintptr_t, int, unsigned int);
int read(int, uintptr_t, size_t);
int readlink(uintptr_t, uintptr_t, size_t);
int renameat(int, uintptr_t, int, uintptr_t);
int setdomainname(uintptr_t, size_t);
int sethostname(uintptr_t, size_t);
int setpgid(int, int);
int setsid();
int settimeofday(uintptr_t);
int setuid(int);
int setgid(int);
int setpriority(int, int, int);
int statx(int, uintptr_t, int, int, uintptr_t);
int sync();
uintptr_t times(uintptr_t);
int umask(int);
int uname(uintptr_t);
int unlink(uintptr_t);
int unlinkat(int, uintptr_t, int);
int ustat(int, uintptr_t);
int write(int, uintptr_t, size_t);
int dup2(int, int);
int posix_fadvise64(int, long long, long long, int);
int fchown(int, int, int);
int fstat(int, uintptr_t);
int fstatat(int, uintptr_t, uintptr_t, int);
int fstatfs(int, uintptr_t);
int ftruncate(int, long long);
int getegid();
int geteuid();
int getgid();
int getuid();
int lchown(uintptr_t, int, int);
int listen(int, int);
int lstat(uintptr_t, uintptr_t);
int pause();
int pread64(int, uintptr_t, size_t, long long);
int pwrite64(int, uintptr_t, size_t, long long);
#define c_select select
int select(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
int pselect(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);
int setregid(int, int);
int setreuid(int, int);
int shutdown(int, int);
long long splice(int, uintptr_t, int, uintptr_t, int, int);
int stat(uintptr_t, uintptr_t);
int statfs(uintptr_t, uintptr_t);
int truncate(uintptr_t, long long);
int bind(int, uintptr_t, uintptr_t);
int connect(int, uintptr_t, uintptr_t);
int getgroups(int, uintptr_t);
int setgroups(int, uintptr_t);
int getsockopt(int, int, int, uintptr_t, uintptr_t);
int setsockopt(int, int, int, uintptr_t, uintptr_t);
int socket(int, int, int);
int socketpair(int, int, int, uintptr_t);
int getpeername(int, uintptr_t, uintptr_t);
int getsockname(int, uintptr_t, uintptr_t);
int recvfrom(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);
int sendto(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);
int nrecvmsg(int, uintptr_t, int);
int nsendmsg(int, uintptr_t, int);
int munmap(uintptr_t, uintptr_t);
int madvise(uintptr_t, size_t, int);
int mprotect(uintptr_t, size_t, int);
int mlock(uintptr_t, size_t);
int mlockall(int);
int msync(uintptr_t, size_t, int);
int munlock(uintptr_t, size_t);
int munlockall();
int pipe(uintptr_t);
int poll(uintptr_t, int, int);
int gettimeofday(uintptr_t, uintptr_t);
int time(uintptr_t);
int utime(uintptr_t, uintptr_t);
unsigned long long getsystemcfg(int);
int umount(uintptr_t);
int getrlimit(int, uintptr_t);
int setrlimit(int, uintptr_t);
long long lseek(int, long long, int);
uintptr_t mmap64(uintptr_t, uintptr_t, int, int, int, long long);

*/

using syscall = go.syscall_package;
using static go.builtin;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
        private static (System.UIntPtr, Errno) callutimes(System.UIntPtr _p0, System.UIntPtr times)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.utimes(C.uintptr_t(_p0), C.uintptr_t(times)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callutimensat(long dirfd, System.UIntPtr _p0, System.UIntPtr times, long flag)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.utimensat(C.@int(dirfd), C.uintptr_t(_p0), C.uintptr_t(times), C.@int(flag)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetcwd(System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getcwd(C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callaccept(long s, System.UIntPtr rsa, System.UIntPtr addrlen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.accept(C.@int(s), C.uintptr_t(rsa), C.uintptr_t(addrlen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetdirent(long fd, System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getdirent(C.@int(fd), C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callwait4(long pid, System.UIntPtr status, long options, System.UIntPtr rusage)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.wait4(C.@int(pid), C.uintptr_t(status), C.@int(options), C.uintptr_t(rusage)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callioctl(long fd, long req, System.UIntPtr arg)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.ioctl(C.@int(fd), C.@int(req), C.uintptr_t(arg)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfcntl(System.UIntPtr fd, long cmd, System.UIntPtr arg)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fcntl(C.uintptr_t(fd), C.@int(cmd), C.uintptr_t(arg)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callacct(System.UIntPtr _p0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.acct(C.uintptr_t(_p0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callchdir(System.UIntPtr _p0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.chdir(C.uintptr_t(_p0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callchroot(System.UIntPtr _p0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.chroot(C.uintptr_t(_p0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callclose(long fd)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.close(C.@int(fd)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calldup(long oldfd)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.dup(C.@int(oldfd)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callexit(long code)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.exit(C.@int(code)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfaccessat(long dirfd, System.UIntPtr _p0, uint mode, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.faccessat(C.@int(dirfd), C.uintptr_t(_p0), C.@uint(mode), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfchdir(long fd)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fchdir(C.@int(fd)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfchmod(long fd, uint mode)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fchmod(C.@int(fd), C.@uint(mode)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfchmodat(long dirfd, System.UIntPtr _p0, uint mode, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fchmodat(C.@int(dirfd), C.uintptr_t(_p0), C.@uint(mode), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfchownat(long dirfd, System.UIntPtr _p0, long uid, long gid, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fchownat(C.@int(dirfd), C.uintptr_t(_p0), C.@int(uid), C.@int(gid), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfdatasync(long fd)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fdatasync(C.@int(fd)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfsync(long fd)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fsync(C.@int(fd)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetpgid(long pid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getpgid(C.@int(pid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetpgrp()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getpgrp());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetpid()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getpid());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetppid()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getppid());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetpriority(long which, long who)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getpriority(C.@int(which), C.@int(who)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetrusage(long who, System.UIntPtr rusage)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getrusage(C.@int(who), C.uintptr_t(rusage)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetsid(long pid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getsid(C.@int(pid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callkill(long pid, long sig)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.kill(C.@int(pid), C.@int(sig)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsyslog(long typ, System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.syslog(C.@int(typ), C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmkdir(long dirfd, System.UIntPtr _p0, uint mode)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mkdir(C.@int(dirfd), C.uintptr_t(_p0), C.@uint(mode)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmkdirat(long dirfd, System.UIntPtr _p0, uint mode)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mkdirat(C.@int(dirfd), C.uintptr_t(_p0), C.@uint(mode)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmkfifo(System.UIntPtr _p0, uint mode)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mkfifo(C.uintptr_t(_p0), C.@uint(mode)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmknod(System.UIntPtr _p0, uint mode, long dev)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mknod(C.uintptr_t(_p0), C.@uint(mode), C.@int(dev)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmknodat(long dirfd, System.UIntPtr _p0, uint mode, long dev)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mknodat(C.@int(dirfd), C.uintptr_t(_p0), C.@uint(mode), C.@int(dev)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callnanosleep(System.UIntPtr time, System.UIntPtr leftover)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.nanosleep(C.uintptr_t(time), C.uintptr_t(leftover)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callopen64(System.UIntPtr _p0, long mode, uint perm)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.open64(C.uintptr_t(_p0), C.@int(mode), C.@uint(perm)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callopenat(long dirfd, System.UIntPtr _p0, long flags, uint mode)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.openat(C.@int(dirfd), C.uintptr_t(_p0), C.@int(flags), C.@uint(mode)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callread(long fd, System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.read(C.@int(fd), C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callreadlink(System.UIntPtr _p0, System.UIntPtr _p1, long _lenp1)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.readlink(C.uintptr_t(_p0), C.uintptr_t(_p1), C.size_t(_lenp1)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callrenameat(long olddirfd, System.UIntPtr _p0, long newdirfd, System.UIntPtr _p1)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.renameat(C.@int(olddirfd), C.uintptr_t(_p0), C.@int(newdirfd), C.uintptr_t(_p1)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetdomainname(System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setdomainname(C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsethostname(System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.sethostname(C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetpgid(long pid, long pgid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setpgid(C.@int(pid), C.@int(pgid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetsid()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setsid());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsettimeofday(System.UIntPtr tv)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.settimeofday(C.uintptr_t(tv)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetuid(long uid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setuid(C.@int(uid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetgid(long uid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setgid(C.@int(uid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetpriority(long which, long who, long prio)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setpriority(C.@int(which), C.@int(who), C.@int(prio)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callstatx(long dirfd, System.UIntPtr _p0, long flags, long mask, System.UIntPtr stat)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.statx(C.@int(dirfd), C.uintptr_t(_p0), C.@int(flags), C.@int(mask), C.uintptr_t(stat)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsync()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.sync());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calltimes(System.UIntPtr tms)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.times(C.uintptr_t(tms)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callumask(long mask)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.umask(C.@int(mask)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calluname(System.UIntPtr buf)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.uname(C.uintptr_t(buf)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callunlink(System.UIntPtr _p0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.unlink(C.uintptr_t(_p0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callunlinkat(long dirfd, System.UIntPtr _p0, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.unlinkat(C.@int(dirfd), C.uintptr_t(_p0), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callustat(long dev, System.UIntPtr ubuf)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.ustat(C.@int(dev), C.uintptr_t(ubuf)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callwrite(long fd, System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.write(C.@int(fd), C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calldup2(long oldfd, long newfd)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.dup2(C.@int(oldfd), C.@int(newfd)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callposix_fadvise64(long fd, long offset, long length, long advice)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.posix_fadvise64(C.@int(fd), C.longlong(offset), C.longlong(length), C.@int(advice)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfchown(long fd, long uid, long gid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fchown(C.@int(fd), C.@int(uid), C.@int(gid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfstat(long fd, System.UIntPtr stat)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fstat(C.@int(fd), C.uintptr_t(stat)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfstatat(long dirfd, System.UIntPtr _p0, System.UIntPtr stat, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fstatat(C.@int(dirfd), C.uintptr_t(_p0), C.uintptr_t(stat), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callfstatfs(long fd, System.UIntPtr buf)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.fstatfs(C.@int(fd), C.uintptr_t(buf)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callftruncate(long fd, long length)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.ftruncate(C.@int(fd), C.longlong(length)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetegid()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getegid());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgeteuid()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.geteuid());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetgid()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getgid());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetuid()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getuid());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calllchown(System.UIntPtr _p0, long uid, long gid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.lchown(C.uintptr_t(_p0), C.@int(uid), C.@int(gid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calllisten(long s, long n)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.listen(C.@int(s), C.@int(n)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calllstat(System.UIntPtr _p0, System.UIntPtr stat)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.lstat(C.uintptr_t(_p0), C.uintptr_t(stat)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callpause()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.pause());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callpread64(long fd, System.UIntPtr _p0, long _lenp0, long offset)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.pread64(C.@int(fd), C.uintptr_t(_p0), C.size_t(_lenp0), C.longlong(offset)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callpwrite64(long fd, System.UIntPtr _p0, long _lenp0, long offset)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.pwrite64(C.@int(fd), C.uintptr_t(_p0), C.size_t(_lenp0), C.longlong(offset)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callselect(long nfd, System.UIntPtr r, System.UIntPtr w, System.UIntPtr e, System.UIntPtr timeout)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.c_select(C.@int(nfd), C.uintptr_t(r), C.uintptr_t(w), C.uintptr_t(e), C.uintptr_t(timeout)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callpselect(long nfd, System.UIntPtr r, System.UIntPtr w, System.UIntPtr e, System.UIntPtr timeout, System.UIntPtr sigmask)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.pselect(C.@int(nfd), C.uintptr_t(r), C.uintptr_t(w), C.uintptr_t(e), C.uintptr_t(timeout), C.uintptr_t(sigmask)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetregid(long rgid, long egid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setregid(C.@int(rgid), C.@int(egid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetreuid(long ruid, long euid)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setreuid(C.@int(ruid), C.@int(euid)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callshutdown(long fd, long how)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.shutdown(C.@int(fd), C.@int(how)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsplice(long rfd, System.UIntPtr roff, long wfd, System.UIntPtr woff, long len, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.splice(C.@int(rfd), C.uintptr_t(roff), C.@int(wfd), C.uintptr_t(woff), C.@int(len), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callstat(System.UIntPtr _p0, System.UIntPtr statptr)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.stat(C.uintptr_t(_p0), C.uintptr_t(statptr)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callstatfs(System.UIntPtr _p0, System.UIntPtr buf)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.statfs(C.uintptr_t(_p0), C.uintptr_t(buf)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calltruncate(System.UIntPtr _p0, long length)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.truncate(C.uintptr_t(_p0), C.longlong(length)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callbind(long s, System.UIntPtr addr, System.UIntPtr addrlen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.bind(C.@int(s), C.uintptr_t(addr), C.uintptr_t(addrlen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callconnect(long s, System.UIntPtr addr, System.UIntPtr addrlen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.connect(C.@int(s), C.uintptr_t(addr), C.uintptr_t(addrlen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetgroups(long n, System.UIntPtr list)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getgroups(C.@int(n), C.uintptr_t(list)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetgroups(long n, System.UIntPtr list)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setgroups(C.@int(n), C.uintptr_t(list)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetsockopt(long s, long level, long name, System.UIntPtr val, System.UIntPtr vallen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getsockopt(C.@int(s), C.@int(level), C.@int(name), C.uintptr_t(val), C.uintptr_t(vallen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetsockopt(long s, long level, long name, System.UIntPtr val, System.UIntPtr vallen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setsockopt(C.@int(s), C.@int(level), C.@int(name), C.uintptr_t(val), C.uintptr_t(vallen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsocket(long domain, long typ, long proto)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.socket(C.@int(domain), C.@int(typ), C.@int(proto)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsocketpair(long domain, long typ, long proto, System.UIntPtr fd)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.socketpair(C.@int(domain), C.@int(typ), C.@int(proto), C.uintptr_t(fd)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetpeername(long fd, System.UIntPtr rsa, System.UIntPtr addrlen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getpeername(C.@int(fd), C.uintptr_t(rsa), C.uintptr_t(addrlen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetsockname(long fd, System.UIntPtr rsa, System.UIntPtr addrlen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getsockname(C.@int(fd), C.uintptr_t(rsa), C.uintptr_t(addrlen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callrecvfrom(long fd, System.UIntPtr _p0, long _lenp0, long flags, System.UIntPtr from, System.UIntPtr fromlen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.recvfrom(C.@int(fd), C.uintptr_t(_p0), C.size_t(_lenp0), C.@int(flags), C.uintptr_t(from), C.uintptr_t(fromlen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsendto(long s, System.UIntPtr _p0, long _lenp0, long flags, System.UIntPtr to, System.UIntPtr addrlen)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.sendto(C.@int(s), C.uintptr_t(_p0), C.size_t(_lenp0), C.@int(flags), C.uintptr_t(to), C.uintptr_t(addrlen)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callnrecvmsg(long s, System.UIntPtr msg, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.nrecvmsg(C.@int(s), C.uintptr_t(msg), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callnsendmsg(long s, System.UIntPtr msg, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.nsendmsg(C.@int(s), C.uintptr_t(msg), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmunmap(System.UIntPtr addr, System.UIntPtr length)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.munmap(C.uintptr_t(addr), C.uintptr_t(length)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmadvise(System.UIntPtr _p0, long _lenp0, long advice)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.madvise(C.uintptr_t(_p0), C.size_t(_lenp0), C.@int(advice)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmprotect(System.UIntPtr _p0, long _lenp0, long prot)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mprotect(C.uintptr_t(_p0), C.size_t(_lenp0), C.@int(prot)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmlock(System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mlock(C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmlockall(long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mlockall(C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmsync(System.UIntPtr _p0, long _lenp0, long flags)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.msync(C.uintptr_t(_p0), C.size_t(_lenp0), C.@int(flags)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmunlock(System.UIntPtr _p0, long _lenp0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.munlock(C.uintptr_t(_p0), C.size_t(_lenp0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmunlockall()
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.munlockall());
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callpipe(System.UIntPtr p)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.pipe(C.uintptr_t(p)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callpoll(System.UIntPtr fds, long nfds, long timeout)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.poll(C.uintptr_t(fds), C.@int(nfds), C.@int(timeout)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgettimeofday(System.UIntPtr tv, System.UIntPtr tzp)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.gettimeofday(C.uintptr_t(tv), C.uintptr_t(tzp)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calltime(System.UIntPtr t)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.time(C.uintptr_t(t)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callutime(System.UIntPtr _p0, System.UIntPtr buf)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.utime(C.uintptr_t(_p0), C.uintptr_t(buf)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetsystemcfg(long label)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getsystemcfg(C.@int(label)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callumount(System.UIntPtr _p0)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.umount(C.uintptr_t(_p0)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callgetrlimit(long resource, System.UIntPtr rlim)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.getrlimit(C.@int(resource), C.uintptr_t(rlim)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callsetrlimit(long resource, System.UIntPtr rlim)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.setrlimit(C.@int(resource), C.uintptr_t(rlim)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) calllseek(long fd, long offset, long whence)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.lseek(C.@int(fd), C.longlong(offset), C.@int(whence)));
            e1 = syscall.GetErrno();
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (System.UIntPtr, Errno) callmmap64(System.UIntPtr addr, System.UIntPtr length, long prot, long flags, long fd, long offset)
        {
            System.UIntPtr r1 = default;
            Errno e1 = default;

            r1 = uintptr(C.mmap64(C.uintptr_t(addr), C.uintptr_t(length), C.@int(prot), C.@int(flags), C.@int(fd), C.longlong(offset)));
            e1 = syscall.GetErrno();
            return ;
        }
    }
}}}}}}
