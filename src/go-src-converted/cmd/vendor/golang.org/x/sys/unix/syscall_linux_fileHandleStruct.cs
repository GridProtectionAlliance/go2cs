//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:56:44 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using binary = go.encoding.binary_package;
using runtime = go.runtime_package;
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct FileHandle
        {
            // Constructors
            public FileHandle(NilType _)
            {
                this.ptr<fileHandle> = default;
            }

            public FileHandle(ref ptr<fileHandle> ptr<fileHandle> = default)
            {
                this.ptr<fileHandle> = ptr<fileHandle>;
            }

            // Enable comparisons between nil and FileHandle struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(FileHandle value, NilType nil) => value.Equals(default(FileHandle));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(FileHandle value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, FileHandle value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, FileHandle value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator FileHandle(NilType nil) => default(FileHandle);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static FileHandle FileHandle_cast(dynamic value)
        {
            return new FileHandle(ref value.ptr<fileHandle>);
        }
    }
}}}}}}