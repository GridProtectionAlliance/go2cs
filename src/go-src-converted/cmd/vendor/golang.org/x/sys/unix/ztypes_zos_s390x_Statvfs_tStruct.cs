//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:30:31 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Statvfs_t
        {
            // Constructors
            public Statvfs_t(NilType _)
            {
                this.ID = default;
                this.Len = default;
                this.Bsize = default;
                this.Blocks = default;
                this.Usedspace = default;
                this.Bavail = default;
                this.Flag = default;
                this.Maxfilesize = default;
                this._ = default;
                this.Frsize = default;
                this.Bfree = default;
                this.Files = default;
                this.Ffree = default;
                this.Favail = default;
                this.Namemax31 = default;
                this.Invarsec = default;
                this._ = default;
                this.Fsid = default;
                this.Namemax = default;
            }

            public Statvfs_t(array<byte> ID = default, int Len = default, ulong Bsize = default, ulong Blocks = default, ulong Usedspace = default, ulong Bavail = default, ulong Flag = default, long Maxfilesize = default, array<byte> _ = default, ulong Frsize = default, ulong Bfree = default, uint Files = default, uint Ffree = default, uint Favail = default, uint Namemax31 = default, uint Invarsec = default, array<byte> _ = default, ulong Fsid = default, ulong Namemax = default)
            {
                this.ID = ID;
                this.Len = Len;
                this.Bsize = Bsize;
                this.Blocks = Blocks;
                this.Usedspace = Usedspace;
                this.Bavail = Bavail;
                this.Flag = Flag;
                this.Maxfilesize = Maxfilesize;
                this._ = _;
                this.Frsize = Frsize;
                this.Bfree = Bfree;
                this.Files = Files;
                this.Ffree = Ffree;
                this.Favail = Favail;
                this.Namemax31 = Namemax31;
                this.Invarsec = Invarsec;
                this._ = _;
                this.Fsid = Fsid;
                this.Namemax = Namemax;
            }

            // Enable comparisons between nil and Statvfs_t struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Statvfs_t value, NilType nil) => value.Equals(default(Statvfs_t));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Statvfs_t value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Statvfs_t value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Statvfs_t value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Statvfs_t(NilType nil) => default(Statvfs_t);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Statvfs_t Statvfs_t_cast(dynamic value)
        {
            return new Statvfs_t(value.ID, value.Len, value.Bsize, value.Blocks, value.Usedspace, value.Bavail, value.Flag, value.Maxfilesize, value._, value.Frsize, value.Bfree, value.Files, value.Ffree, value.Favail, value.Namemax31, value.Invarsec, value._, value.Fsid, value.Namemax);
        }
    }
}}}}}}