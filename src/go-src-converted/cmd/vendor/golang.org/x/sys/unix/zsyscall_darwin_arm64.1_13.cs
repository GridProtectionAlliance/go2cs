// go run mksyscall.go -tags darwin,arm64,go1.13 syscall_darwin.1_13.go
// Code generated by the command above; see README.md. DO NOT EDIT.

//go:build darwin && arm64 && go1.13
// +build darwin,arm64,go1.13

// package unix -- go2cs converted at 2022 March 13 06:41:28 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Program Files\Go\src\cmd\vendor\golang.org\x\sys\unix\zsyscall_darwin_arm64.1_13.go
namespace go.cmd.vendor.golang.org.x.sys;

using syscall = syscall_package;
using @unsafe = @unsafe_package;

public static partial class unix_package {

private static syscall.Errno _ = default;

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error closedir(System.UIntPtr dir) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(libc_closedir_trampoline_addr, uintptr(dir), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;
}

private static System.UIntPtr libc_closedir_trampoline_addr = default;

//go:cgo_import_dynamic libc_closedir closedir "/usr/lib/libSystem.B.dylib"

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static Errno readdir_r(System.UIntPtr dir, ptr<Dirent> _addr_entry, ptr<ptr<Dirent>> _addr_result) {
    Errno res = default;
    ref Dirent entry = ref _addr_entry.val;
    ref ptr<Dirent> result = ref _addr_result.val;

    var (r0, _, _) = syscall_syscall(libc_readdir_r_trampoline_addr, uintptr(dir), uintptr(@unsafe.Pointer(entry)), uintptr(@unsafe.Pointer(result)));
    res = Errno(r0);
    return ;
}

private static System.UIntPtr libc_readdir_r_trampoline_addr = default;

//go:cgo_import_dynamic libc_readdir_r readdir_r "/usr/lib/libSystem.B.dylib"

} // end unix_package
