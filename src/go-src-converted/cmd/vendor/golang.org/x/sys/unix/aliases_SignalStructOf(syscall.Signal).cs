//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:56:11 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Signal
        {
            // Value of the Signal struct
            private readonly syscall.Signal m_value;

            public Signal(syscall.Signal value) => m_value = value;

            // Enable implicit conversions between syscall.Signal and Signal struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Signal(syscall.Signal value) => new Signal(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator syscall.Signal(Signal value) => value.m_value;
            
            // Enable comparisons between nil and Signal struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Signal value, NilType nil) => value.Equals(default(Signal));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Signal value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Signal value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Signal value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Signal(NilType nil) => default(Signal);
        }
    }
}}}}}}
