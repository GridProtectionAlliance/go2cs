// cgo -godefs types_aix.go | go run mkpost.go
// Code generated by the command above; see README.md. DO NOT EDIT.

// +build ppc64,aix

// package unix -- go2cs converted at 2020 October 09 06:00:27 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Go\src\cmd\vendor\golang.org\x\sys\unix\ztypes_aix_ppc64.go

using static go.builtin;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        public static readonly ulong SizeofPtr = (ulong)0x8UL;
        public static readonly ulong SizeofShort = (ulong)0x2UL;
        public static readonly ulong SizeofInt = (ulong)0x4UL;
        public static readonly ulong SizeofLong = (ulong)0x8UL;
        public static readonly ulong SizeofLongLong = (ulong)0x8UL;
        public static readonly ulong PathMax = (ulong)0x3ffUL;


        private partial struct _C_short // : short
        {
        }
        private partial struct _C_int // : int
        {
        }
        private partial struct _C_long // : long
        {
        }
        private partial struct _C_long_long // : long
        {
        }
        private partial struct off64 // : long
        {
        }
        private partial struct off // : long
        {
        }
        public partial struct Mode_t // : uint
        {
        }

        public partial struct Timespec
        {
            public long Sec;
            public long Nsec;
        }

        public partial struct Timeval
        {
            public long Sec;
            public int Usec;
            public array<byte> _;
        }

        public partial struct Timeval32
        {
            public int Sec;
            public int Usec;
        }

        public partial struct Timex
        {
        }

        public partial struct Time_t // : long
        {
        }

        public partial struct Tms
        {
        }

        public partial struct Utimbuf
        {
            public long Actime;
            public long Modtime;
        }

        public partial struct Timezone
        {
            public int Minuteswest;
            public int Dsttime;
        }

        public partial struct Rusage
        {
            public Timeval Utime;
            public Timeval Stime;
            public long Maxrss;
            public long Ixrss;
            public long Idrss;
            public long Isrss;
            public long Minflt;
            public long Majflt;
            public long Nswap;
            public long Inblock;
            public long Oublock;
            public long Msgsnd;
            public long Msgrcv;
            public long Nsignals;
            public long Nvcsw;
            public long Nivcsw;
        }

        public partial struct Rlimit
        {
            public ulong Cur;
            public ulong Max;
        }

        public partial struct Pid_t // : int
        {
        }

        private partial struct _Gid_t // : uint
        {
        }

        private partial struct dev_t // : ulong
        {
        }

        public partial struct Stat_t
        {
            public ulong Dev;
            public ulong Ino;
            public uint Mode;
            public short Nlink;
            public ushort Flag;
            public uint Uid;
            public uint Gid;
            public ulong Rdev;
            public int Ssize;
            public Timespec Atim;
            public Timespec Mtim;
            public Timespec Ctim;
            public long Blksize;
            public long Blocks;
            public int Vfstype;
            public uint Vfs;
            public uint Type;
            public uint Gen;
            public array<uint> Reserved;
            public uint Padto_ll;
            public long Size;
        }

        public partial struct StatxTimestamp
        {
        }

        public partial struct Statx_t
        {
        }

        public partial struct Dirent
        {
            public ulong Offset;
            public ulong Ino;
            public ushort Reclen;
            public ushort Namlen;
            public array<byte> Name;
            public array<byte> _;
        }

        public partial struct RawSockaddrInet4
        {
            public byte Len;
            public byte Family;
            public ushort Port;
            public array<byte> Addr; /* in_addr */
            public array<byte> Zero;
        }

        public partial struct RawSockaddrInet6
        {
            public byte Len;
            public byte Family;
            public ushort Port;
            public uint Flowinfo;
            public array<byte> Addr; /* in6_addr */
            public uint Scope_id;
        }

        public partial struct RawSockaddrUnix
        {
            public byte Len;
            public byte Family;
            public array<byte> Path;
        }

        public partial struct RawSockaddrDatalink
        {
            public byte Len;
            public byte Family;
            public ushort Index;
            public byte Type;
            public byte Nlen;
            public byte Alen;
            public byte Slen;
            public array<byte> Data;
        }

        public partial struct RawSockaddr
        {
            public byte Len;
            public byte Family;
            public array<byte> Data;
        }

        public partial struct RawSockaddrAny
        {
            public RawSockaddr Addr;
            public array<byte> Pad;
        }

        private partial struct _Socklen // : uint
        {
        }

        public partial struct Cmsghdr
        {
            public uint Len;
            public int Level;
            public int Type;
        }

        public partial struct ICMPv6Filter
        {
            public array<uint> Filt;
        }

        public partial struct Iovec
        {
            public ptr<byte> Base;
            public ulong Len;
        }

        public partial struct IPMreq
        {
            public array<byte> Multiaddr; /* in_addr */
            public array<byte> Interface; /* in_addr */
        }

        public partial struct IPv6Mreq
        {
            public array<byte> Multiaddr; /* in6_addr */
            public uint Interface;
        }

        public partial struct IPv6MTUInfo
        {
            public RawSockaddrInet6 Addr;
            public uint Mtu;
        }

        public partial struct Linger
        {
            public int Onoff;
            public int Linger;
        }

        public partial struct Msghdr
        {
            public ptr<byte> Name;
            public uint Namelen;
            public ptr<Iovec> Iov;
            public int Iovlen;
            public ptr<byte> Control;
            public uint Controllen;
            public int Flags;
        }

        public static readonly ulong SizeofSockaddrInet4 = (ulong)0x10UL;
        public static readonly ulong SizeofSockaddrInet6 = (ulong)0x1cUL;
        public static readonly ulong SizeofSockaddrAny = (ulong)0x404UL;
        public static readonly ulong SizeofSockaddrUnix = (ulong)0x401UL;
        public static readonly ulong SizeofSockaddrDatalink = (ulong)0x80UL;
        public static readonly ulong SizeofLinger = (ulong)0x8UL;
        public static readonly ulong SizeofIPMreq = (ulong)0x8UL;
        public static readonly ulong SizeofIPv6Mreq = (ulong)0x14UL;
        public static readonly ulong SizeofIPv6MTUInfo = (ulong)0x20UL;
        public static readonly ulong SizeofMsghdr = (ulong)0x30UL;
        public static readonly ulong SizeofCmsghdr = (ulong)0xcUL;
        public static readonly ulong SizeofICMPv6Filter = (ulong)0x20UL;


        public static readonly ulong SizeofIfMsghdr = (ulong)0x10UL;


        public partial struct IfMsgHdr
        {
            public ushort Msglen;
            public byte Version;
            public byte Type;
            public int Addrs;
            public int Flags;
            public ushort Index;
            public byte Addrlen;
            public array<byte> _;
        }

        public partial struct FdSet
        {
            public array<long> Bits;
        }

        public partial struct Utsname
        {
            public array<byte> Sysname;
            public array<byte> Nodename;
            public array<byte> Release;
            public array<byte> Version;
            public array<byte> Machine;
        }

        public partial struct Ustat_t
        {
        }

        public partial struct Sigset_t
        {
            public array<ulong> Set;
        }

        public static readonly ulong AT_FDCWD = (ulong)-0x2UL;
        public static readonly ulong AT_REMOVEDIR = (ulong)0x1UL;
        public static readonly ulong AT_SYMLINK_NOFOLLOW = (ulong)0x1UL;


        public partial struct Termios
        {
            public uint Iflag;
            public uint Oflag;
            public uint Cflag;
            public uint Lflag;
            public array<byte> Cc;
        }

        public partial struct Termio
        {
            public ushort Iflag;
            public ushort Oflag;
            public ushort Cflag;
            public ushort Lflag;
            public byte Line;
            public array<byte> Cc;
            public array<byte> _;
        }

        public partial struct Winsize
        {
            public ushort Row;
            public ushort Col;
            public ushort Xpixel;
            public ushort Ypixel;
        }

        public partial struct PollFd
        {
            public int Fd;
            public ushort Events;
            public ushort Revents;
        }

        public static readonly ulong POLLERR = (ulong)0x4000UL;
        public static readonly ulong POLLHUP = (ulong)0x2000UL;
        public static readonly ulong POLLIN = (ulong)0x1UL;
        public static readonly ulong POLLNVAL = (ulong)0x8000UL;
        public static readonly ulong POLLOUT = (ulong)0x2UL;
        public static readonly ulong POLLPRI = (ulong)0x4UL;
        public static readonly ulong POLLRDBAND = (ulong)0x20UL;
        public static readonly ulong POLLRDNORM = (ulong)0x10UL;
        public static readonly ulong POLLWRBAND = (ulong)0x40UL;
        public static readonly ulong POLLWRNORM = (ulong)0x2UL;


        public partial struct Flock_t
        {
            public short Type;
            public short Whence;
            public uint Sysid;
            public int Pid;
            public int Vfs;
            public long Start;
            public long Len;
        }

        public partial struct Fsid_t
        {
            public array<uint> Val;
        }
        public partial struct Fsid64_t
        {
            public array<ulong> Val;
        }

        public partial struct Statfs_t
        {
            public int Version;
            public int Type;
            public ulong Bsize;
            public ulong Blocks;
            public ulong Bfree;
            public ulong Bavail;
            public ulong Files;
            public ulong Ffree;
            public Fsid64_t Fsid;
            public int Vfstype;
            public ulong Fsize;
            public int Vfsnumber;
            public int Vfsoff;
            public int Vfslen;
            public int Vfsvers;
            public array<byte> Fname;
            public array<byte> Fpack;
            public int Name_max;
            public array<byte> _;
        }

        public static readonly ulong RNDGETENTCNT = (ulong)0x80045200UL;

    }
}}}}}}
