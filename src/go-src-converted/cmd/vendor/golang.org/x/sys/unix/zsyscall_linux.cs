// Code generated by mkmerge.go; DO NOT EDIT.

// +build linux

// package unix -- go2cs converted at 2020 October 08 04:51:34 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Go\src\cmd\vendor\golang.org\x\sys\unix\zsyscall_linux.go
using syscall = go.syscall_package;
using @unsafe = go.@unsafe_package;
using static go.builtin;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
        public static (long, error) FanotifyInit(ulong flags, ulong event_f_flags)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }
            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error fchmodat(long dirfd, @string path, uint mode)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_FCHMODAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error ioctl(long fd, ulong req, System.UIntPtr arg)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Linkat(long olddirfd, @string oldpath, long newdirfd, @string newpath, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(oldpath);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(newpath);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_LINKAT, uintptr(olddirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(@unsafe.Pointer(_p1)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) openat(long dirfd, @string path, long flags, uint mode)
        {
            long fd = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall6(SYS_OPENAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), uintptr(mode), 0L, 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) ppoll(ptr<PollFd> _addr_fds, long nfds, ptr<Timespec> _addr_timeout, ptr<Sigset_t> _addr_sigmask)
        {
            long n = default;
            error err = default!;
            ref PollFd fds = ref _addr_fds.val;
            ref Timespec timeout = ref _addr_timeout.val;
            ref Sigset_t sigmask = ref _addr_sigmask.val;

            var (r0, _, e1) = Syscall6(SYS_PPOLL, uintptr(@unsafe.Pointer(fds)), uintptr(nfds), uintptr(@unsafe.Pointer(timeout)), uintptr(@unsafe.Pointer(sigmask)), 0L, 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Readlinkat(long dirfd, @string path, slice<byte> buf)
        {
            long n = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(buf) > 0L)
            {
                _p1 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_READLINKAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)), 0L, 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Symlinkat(@string oldpath, long newdirfd, @string newpath)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(oldpath);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(newpath);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_SYMLINKAT, uintptr(@unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(@unsafe.Pointer(_p1)));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Unlinkat(long dirfd, @string path, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_UNLINKAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error utimensat(long dirfd, @string path, ptr<array<Timespec>> _addr_times, long flags)
        {
            error err = default!;
            ref array<Timespec> times = ref _addr_times.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_UTIMENSAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(times)), uintptr(flags), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getcwd(slice<byte> buf)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_GETCWD, uintptr(_p0), uintptr(len(buf)), 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) wait4(long pid, ptr<_C_int> _addr_wstatus, long options, ptr<Rusage> _addr_rusage)
        {
            long wpid = default;
            error err = default!;
            ref _C_int wstatus = ref _addr_wstatus.val;
            ref Rusage rusage = ref _addr_rusage.val;

            var (r0, _, e1) = Syscall6(SYS_WAIT4, uintptr(pid), uintptr(@unsafe.Pointer(wstatus)), uintptr(options), uintptr(@unsafe.Pointer(rusage)), 0L, 0L);
            wpid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) KeyctlInt(long cmd, long arg2, long arg3, long arg4, long arg5)
        {
            long ret = default;
            error err = default!;

            var (r0, _, e1) = Syscall6(SYS_KEYCTL, uintptr(cmd), uintptr(arg2), uintptr(arg3), uintptr(arg4), uintptr(arg5), 0L);
            ret = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) KeyctlBuffer(long cmd, long arg2, slice<byte> buf, long arg5)
        {
            long ret = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_KEYCTL, uintptr(cmd), uintptr(arg2), uintptr(_p0), uintptr(len(buf)), uintptr(arg5), 0L);
            ret = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) keyctlJoin(long cmd, @string arg2)
        {
            long ret = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(arg2);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_KEYCTL, uintptr(cmd), uintptr(@unsafe.Pointer(_p0)), 0L);
            ret = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) keyctlSearch(long cmd, long arg2, @string arg3, @string arg4, long arg5)
        {
            long ret = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(arg3);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(arg4);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall6(SYS_KEYCTL, uintptr(cmd), uintptr(arg2), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(arg5), 0L);
            ret = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error keyctlIOV(long cmd, long arg2, slice<Iovec> payload, long arg5)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(payload) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_payload[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall6(SYS_KEYCTL, uintptr(cmd), uintptr(arg2), uintptr(_p0), uintptr(len(payload)), uintptr(arg5), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) keyctlDH(long cmd, ptr<KeyctlDHParams> _addr_arg2, slice<byte> buf)
        {
            long ret = default;
            error err = default!;
            ref KeyctlDHParams arg2 = ref _addr_arg2.val;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_KEYCTL, uintptr(cmd), uintptr(@unsafe.Pointer(arg2)), uintptr(_p0), uintptr(len(buf)), 0L, 0L);
            ret = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error keyctlRestrictKeyringByType(long cmd, long arg2, @string keyType, @string restriction)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(keyType);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(restriction);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_KEYCTL, uintptr(cmd), uintptr(arg2), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error keyctlRestrictKeyring(long cmd, long arg2)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_KEYCTL, uintptr(cmd), uintptr(arg2), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error ptrace(long request, long pid, System.UIntPtr addr, System.UIntPtr data)
        {
            error err = default!;

            var (_, _, e1) = Syscall6(SYS_PTRACE, uintptr(request), uintptr(pid), uintptr(addr), uintptr(data), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error reboot(ulong magic1, ulong magic2, long cmd, @string arg)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(arg);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_REBOOT, uintptr(magic1), uintptr(magic2), uintptr(cmd), uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error mount(@string source, @string target, @string fstype, System.UIntPtr flags, ptr<byte> _addr_data)
        {
            error err = default!;
            ref byte data = ref _addr_data.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(source);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(target);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p2;
            _p2, err = BytePtrFromString(fstype);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_MOUNT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(@unsafe.Pointer(_p2)), uintptr(flags), uintptr(@unsafe.Pointer(data)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Acct(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_ACCT, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) AddKey(@string keyType, @string description, slice<byte> payload, long ringid)
        {
            long id = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(keyType);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(description);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p2 = default;
            if (len(payload) > 0L)
            {
                _p2 = @unsafe.Pointer(_addr_payload[0L]);
            }
            else
            {
                _p2 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_ADD_KEY, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(payload)), uintptr(ringid), 0L);
            id = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Adjtimex(ptr<Timex> _addr_buf)
        {
            long state = default;
            error err = default!;
            ref Timex buf = ref _addr_buf.val;

            var (r0, _, e1) = Syscall(SYS_ADJTIMEX, uintptr(@unsafe.Pointer(buf)), 0L, 0L);
            state = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Capget(ptr<CapUserHeader> _addr_hdr, ptr<CapUserData> _addr_data)
        {
            error err = default!;
            ref CapUserHeader hdr = ref _addr_hdr.val;
            ref CapUserData data = ref _addr_data.val;

            var (_, _, e1) = RawSyscall(SYS_CAPGET, uintptr(@unsafe.Pointer(hdr)), uintptr(@unsafe.Pointer(data)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Capset(ptr<CapUserHeader> _addr_hdr, ptr<CapUserData> _addr_data)
        {
            error err = default!;
            ref CapUserHeader hdr = ref _addr_hdr.val;
            ref CapUserData data = ref _addr_data.val;

            var (_, _, e1) = RawSyscall(SYS_CAPSET, uintptr(@unsafe.Pointer(hdr)), uintptr(@unsafe.Pointer(data)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chdir(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_CHDIR, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Chroot(@string path)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_CHROOT, uintptr(@unsafe.Pointer(_p0)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error ClockGetres(int clockid, ptr<Timespec> _addr_res)
        {
            error err = default!;
            ref Timespec res = ref _addr_res.val;

            var (_, _, e1) = Syscall(SYS_CLOCK_GETRES, uintptr(clockid), uintptr(@unsafe.Pointer(res)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error ClockGettime(int clockid, ptr<Timespec> _addr_time)
        {
            error err = default!;
            ref Timespec time = ref _addr_time.val;

            var (_, _, e1) = Syscall(SYS_CLOCK_GETTIME, uintptr(clockid), uintptr(@unsafe.Pointer(time)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error ClockNanosleep(int clockid, long flags, ptr<Timespec> _addr_request, ptr<Timespec> _addr_remain)
        {
            error err = default!;
            ref Timespec request = ref _addr_request.val;
            ref Timespec remain = ref _addr_remain.val;

            var (_, _, e1) = Syscall6(SYS_CLOCK_NANOSLEEP, uintptr(clockid), uintptr(flags), uintptr(@unsafe.Pointer(request)), uintptr(@unsafe.Pointer(remain)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Close(long fd)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_CLOSE, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) CopyFileRange(long rfd, ptr<long> _addr_roff, long wfd, ptr<long> _addr_woff, long len, long flags)
        {
            long n = default;
            error err = default!;
            ref long roff = ref _addr_roff.val;
            ref long woff = ref _addr_woff.val;

            var (r0, _, e1) = Syscall6(SYS_COPY_FILE_RANGE, uintptr(rfd), uintptr(@unsafe.Pointer(roff)), uintptr(wfd), uintptr(@unsafe.Pointer(woff)), uintptr(len), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error DeleteModule(@string name, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(name);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_DELETE_MODULE, uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Dup(long oldfd)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = Syscall(SYS_DUP, uintptr(oldfd), 0L, 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Dup3(long oldfd, long newfd, long flags)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_DUP3, uintptr(oldfd), uintptr(newfd), uintptr(flags));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) EpollCreate1(long flag)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = RawSyscall(SYS_EPOLL_CREATE1, uintptr(flag), 0L, 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error EpollCtl(long epfd, long op, long fd, ptr<EpollEvent> _addr_@event)
        {
            error err = default!;
            ref EpollEvent @event = ref _addr_@event.val;

            var (_, _, e1) = RawSyscall6(SYS_EPOLL_CTL, uintptr(epfd), uintptr(op), uintptr(fd), uintptr(@unsafe.Pointer(event)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Eventfd(ulong initval, long flags)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = Syscall(SYS_EVENTFD2, uintptr(initval), uintptr(flags), 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static void Exit(long code)
        {
            SyscallNoError(SYS_EXIT_GROUP, uintptr(code), 0L, 0L);
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchdir(long fd)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_FCHDIR, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchmod(long fd, uint mode)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_FCHMOD, uintptr(fd), uintptr(mode), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fchownat(long dirfd, @string path, long uid, long gid, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_FCHOWNAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fdatasync(long fd)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_FDATASYNC, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Fgetxattr(long fd, @string attr, slice<byte> dest)
        {
            long sz = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(dest) > 0L)
            {
                _p1 = @unsafe.Pointer(_addr_dest[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_FGETXATTR, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(dest)), 0L, 0L);
            sz = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error FinitModule(long fd, @string @params, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(params);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_FINIT_MODULE, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Flistxattr(long fd, slice<byte> dest)
        {
            long sz = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(dest) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_dest[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_FLISTXATTR, uintptr(fd), uintptr(_p0), uintptr(len(dest)));
            sz = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Flock(long fd, long how)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_FLOCK, uintptr(fd), uintptr(how), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fremovexattr(long fd, @string attr)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_FREMOVEXATTR, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fsetxattr(long fd, @string attr, slice<byte> dest, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(dest) > 0L)
            {
                _p1 = @unsafe.Pointer(_addr_dest[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall6(SYS_FSETXATTR, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(dest)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Fsync(long fd)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_FSYNC, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getdents(long fd, slice<byte> buf)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_GETDENTS64, uintptr(fd), uintptr(_p0), uintptr(len(buf)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getpgid(long pid)
        {
            long pgid = default;
            error err = default!;

            var (r0, _, e1) = RawSyscall(SYS_GETPGID, uintptr(pid), 0L, 0L);
            pgid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getpid()
        {
            long pid = default;

            var (r0, _) = RawSyscallNoError(SYS_GETPID, 0L, 0L, 0L);
            pid = int(r0);
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Getppid()
        {
            long ppid = default;

            var (r0, _) = RawSyscallNoError(SYS_GETPPID, 0L, 0L, 0L);
            ppid = int(r0);
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getpriority(long which, long who)
        {
            long prio = default;
            error err = default!;

            var (r0, _, e1) = Syscall(SYS_GETPRIORITY, uintptr(which), uintptr(who), 0L);
            prio = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getrandom(slice<byte> buf, long flags)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_GETRANDOM, uintptr(_p0), uintptr(len(buf)), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Getrusage(long who, ptr<Rusage> _addr_rusage)
        {
            error err = default!;
            ref Rusage rusage = ref _addr_rusage.val;

            var (_, _, e1) = RawSyscall(SYS_GETRUSAGE, uintptr(who), uintptr(@unsafe.Pointer(rusage)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getsid(long pid)
        {
            long sid = default;
            error err = default!;

            var (r0, _, e1) = RawSyscall(SYS_GETSID, uintptr(pid), 0L, 0L);
            sid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Gettid()
        {
            long tid = default;

            var (r0, _) = RawSyscallNoError(SYS_GETTID, 0L, 0L, 0L);
            tid = int(r0);
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Getxattr(@string path, @string attr, slice<byte> dest)
        {
            long sz = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p2 = default;
            if (len(dest) > 0L)
            {
                _p2 = @unsafe.Pointer(_addr_dest[0L]);
            }
            else
            {
                _p2 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_GETXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(dest)), 0L, 0L);
            sz = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error InitModule(slice<byte> moduleImage, @string @params)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(moduleImage) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_moduleImage[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(params);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_INIT_MODULE, uintptr(_p0), uintptr(len(moduleImage)), uintptr(@unsafe.Pointer(_p1)));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) InotifyAddWatch(long fd, @string pathname, uint mask)
        {
            long watchdesc = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(pathname);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_INOTIFY_ADD_WATCH, uintptr(fd), uintptr(@unsafe.Pointer(_p0)), uintptr(mask));
            watchdesc = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) InotifyInit1(long flags)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = RawSyscall(SYS_INOTIFY_INIT1, uintptr(flags), 0L, 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) InotifyRmWatch(long fd, uint watchdesc)
        {
            long success = default;
            error err = default!;

            var (r0, _, e1) = RawSyscall(SYS_INOTIFY_RM_WATCH, uintptr(fd), uintptr(watchdesc), 0L);
            success = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Kill(long pid, syscall.Signal sig)
        {
            error err = default!;

            var (_, _, e1) = RawSyscall(SYS_KILL, uintptr(pid), uintptr(sig), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Klogctl(long typ, slice<byte> buf)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(buf) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_buf[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_SYSLOG, uintptr(typ), uintptr(_p0), uintptr(len(buf)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Lgetxattr(@string path, @string attr, slice<byte> dest)
        {
            long sz = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p2 = default;
            if (len(dest) > 0L)
            {
                _p2 = @unsafe.Pointer(_addr_dest[0L]);
            }
            else
            {
                _p2 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_LGETXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(dest)), 0L, 0L);
            sz = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Listxattr(@string path, slice<byte> dest)
        {
            long sz = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(dest) > 0L)
            {
                _p1 = @unsafe.Pointer(_addr_dest[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_LISTXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(dest)));
            sz = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Llistxattr(@string path, slice<byte> dest)
        {
            long sz = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p1 = default;
            if (len(dest) > 0L)
            {
                _p1 = @unsafe.Pointer(_addr_dest[0L]);
            }
            else
            {
                _p1 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_LLISTXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(dest)));
            sz = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Lremovexattr(@string path, @string attr)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_LREMOVEXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Lsetxattr(@string path, @string attr, slice<byte> data, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p2 = default;
            if (len(data) > 0L)
            {
                _p2 = @unsafe.Pointer(_addr_data[0L]);
            }
            else
            {
                _p2 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall6(SYS_LSETXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(data)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) MemfdCreate(@string name, long flags)
        {
            long fd = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(name);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall(SYS_MEMFD_CREATE, uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mkdirat(long dirfd, @string path, uint mode)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_MKDIRAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mknodat(long dirfd, @string path, uint mode, long dev)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_MKNODAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Nanosleep(ptr<Timespec> _addr_time, ptr<Timespec> _addr_leftover)
        {
            error err = default!;
            ref Timespec time = ref _addr_time.val;
            ref Timespec leftover = ref _addr_leftover.val;

            var (_, _, e1) = Syscall(SYS_NANOSLEEP, uintptr(@unsafe.Pointer(time)), uintptr(@unsafe.Pointer(leftover)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) PerfEventOpen(ptr<PerfEventAttr> _addr_attr, long pid, long cpu, long groupFd, long flags)
        {
            long fd = default;
            error err = default!;
            ref PerfEventAttr attr = ref _addr_attr.val;

            var (r0, _, e1) = Syscall6(SYS_PERF_EVENT_OPEN, uintptr(@unsafe.Pointer(attr)), uintptr(pid), uintptr(cpu), uintptr(groupFd), uintptr(flags), 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error PivotRoot(@string newroot, @string putold)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(newroot);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(putold);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_PIVOT_ROOT, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error prlimit(long pid, long resource, ptr<Rlimit> _addr_newlimit, ptr<Rlimit> _addr_old)
        {
            error err = default!;
            ref Rlimit newlimit = ref _addr_newlimit.val;
            ref Rlimit old = ref _addr_old.val;

            var (_, _, e1) = RawSyscall6(SYS_PRLIMIT64, uintptr(pid), uintptr(resource), uintptr(@unsafe.Pointer(newlimit)), uintptr(@unsafe.Pointer(old)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Prctl(long option, System.UIntPtr arg2, System.UIntPtr arg3, System.UIntPtr arg4, System.UIntPtr arg5)
        {
            error err = default!;

            var (_, _, e1) = Syscall6(SYS_PRCTL, uintptr(option), uintptr(arg2), uintptr(arg3), uintptr(arg4), uintptr(arg5), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Pselect(long nfd, ptr<FdSet> _addr_r, ptr<FdSet> _addr_w, ptr<FdSet> _addr_e, ptr<Timespec> _addr_timeout, ptr<Sigset_t> _addr_sigmask)
        {
            long n = default;
            error err = default!;
            ref FdSet r = ref _addr_r.val;
            ref FdSet w = ref _addr_w.val;
            ref FdSet e = ref _addr_e.val;
            ref Timespec timeout = ref _addr_timeout.val;
            ref Sigset_t sigmask = ref _addr_sigmask.val;

            var (r0, _, e1) = Syscall6(SYS_PSELECT6, uintptr(nfd), uintptr(@unsafe.Pointer(r)), uintptr(@unsafe.Pointer(w)), uintptr(@unsafe.Pointer(e)), uintptr(@unsafe.Pointer(timeout)), uintptr(@unsafe.Pointer(sigmask)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) read(long fd, slice<byte> p)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_READ, uintptr(fd), uintptr(_p0), uintptr(len(p)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Removexattr(@string path, @string attr)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_REMOVEXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Renameat2(long olddirfd, @string oldpath, long newdirfd, @string newpath, ulong flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(oldpath);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(newpath);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_RENAMEAT2, uintptr(olddirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(@unsafe.Pointer(_p1)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) RequestKey(@string keyType, @string description, @string callback, long destRingid)
        {
            long id = default;
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(keyType);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(description);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p2;
            _p2, err = BytePtrFromString(callback);
            if (err != null)
            {
                return ;
            }

            var (r0, _, e1) = Syscall6(SYS_REQUEST_KEY, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(@unsafe.Pointer(_p2)), uintptr(destRingid), 0L, 0L);
            id = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setdomainname(slice<byte> p)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall(SYS_SETDOMAINNAME, uintptr(_p0), uintptr(len(p)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Sethostname(slice<byte> p)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall(SYS_SETHOSTNAME, uintptr(_p0), uintptr(len(p)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setpgid(long pid, long pgid)
        {
            error err = default!;

            var (_, _, e1) = RawSyscall(SYS_SETPGID, uintptr(pid), uintptr(pgid), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) Setsid()
        {
            long pid = default;
            error err = default!;

            var (r0, _, e1) = RawSyscall(SYS_SETSID, 0L, 0L, 0L);
            pid = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Settimeofday(ptr<Timeval> _addr_tv)
        {
            error err = default!;
            ref Timeval tv = ref _addr_tv.val;

            var (_, _, e1) = RawSyscall(SYS_SETTIMEOFDAY, uintptr(@unsafe.Pointer(tv)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setns(long fd, long nstype)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_SETNS, uintptr(fd), uintptr(nstype), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setpriority(long which, long who, long prio)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_SETPRIORITY, uintptr(which), uintptr(who), uintptr(prio));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Setxattr(@string path, @string attr, slice<byte> data, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            ptr<byte> _p1;
            _p1, err = BytePtrFromString(attr);
            if (err != null)
            {
                return ;
            }

            unsafe.Pointer _p2 = default;
            if (len(data) > 0L)
            {
                _p2 = @unsafe.Pointer(_addr_data[0L]);
            }
            else
            {
                _p2 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall6(SYS_SETXATTR, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(_p2), uintptr(len(data)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) signalfd(long fd, ptr<Sigset_t> _addr_sigmask, System.UIntPtr maskSize, long flags)
        {
            long newfd = default;
            error err = default!;
            ref Sigset_t sigmask = ref _addr_sigmask.val;

            var (r0, _, e1) = Syscall6(SYS_SIGNALFD4, uintptr(fd), uintptr(@unsafe.Pointer(sigmask)), uintptr(maskSize), uintptr(flags), 0L, 0L);
            newfd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Statx(long dirfd, @string path, long flags, long mask, ptr<Statx_t> _addr_stat)
        {
            error err = default!;
            ref Statx_t stat = ref _addr_stat.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_STATX, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(flags), uintptr(mask), uintptr(@unsafe.Pointer(stat)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static void Sync()
        {
            SyscallNoError(SYS_SYNC, 0L, 0L, 0L);
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Syncfs(long fd)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_SYNCFS, uintptr(fd), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Sysinfo(ptr<Sysinfo_t> _addr_info)
        {
            error err = default!;
            ref Sysinfo_t info = ref _addr_info.val;

            var (_, _, e1) = RawSyscall(SYS_SYSINFO, uintptr(@unsafe.Pointer(info)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (long, error) TimerfdCreate(long clockid, long flags)
        {
            long fd = default;
            error err = default!;

            var (r0, _, e1) = RawSyscall(SYS_TIMERFD_CREATE, uintptr(clockid), uintptr(flags), 0L);
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error TimerfdGettime(long fd, ptr<ItimerSpec> _addr_currValue)
        {
            error err = default!;
            ref ItimerSpec currValue = ref _addr_currValue.val;

            var (_, _, e1) = RawSyscall(SYS_TIMERFD_GETTIME, uintptr(fd), uintptr(@unsafe.Pointer(currValue)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error TimerfdSettime(long fd, long flags, ptr<ItimerSpec> _addr_newValue, ptr<ItimerSpec> _addr_oldValue)
        {
            error err = default!;
            ref ItimerSpec newValue = ref _addr_newValue.val;
            ref ItimerSpec oldValue = ref _addr_oldValue.val;

            var (_, _, e1) = RawSyscall6(SYS_TIMERFD_SETTIME, uintptr(fd), uintptr(flags), uintptr(@unsafe.Pointer(newValue)), uintptr(@unsafe.Pointer(oldValue)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Tgkill(long tgid, long tid, syscall.Signal sig)
        {
            error err = default!;

            var (_, _, e1) = RawSyscall(SYS_TGKILL, uintptr(tgid), uintptr(tid), uintptr(sig));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static (System.UIntPtr, error) Times(ptr<Tms> _addr_tms)
        {
            System.UIntPtr ticks = default;
            error err = default!;
            ref Tms tms = ref _addr_tms.val;

            var (r0, _, e1) = RawSyscall(SYS_TIMES, uintptr(@unsafe.Pointer(tms)), 0L, 0L);
            ticks = uintptr(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static long Umask(long mask)
        {
            long oldmask = default;

            var (r0, _) = RawSyscallNoError(SYS_UMASK, uintptr(mask), 0L, 0L);
            oldmask = int(r0);
            return ;
        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Uname(ptr<Utsname> _addr_buf)
        {
            error err = default!;
            ref Utsname buf = ref _addr_buf.val;

            var (_, _, e1) = RawSyscall(SYS_UNAME, uintptr(@unsafe.Pointer(buf)), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Unmount(@string target, long flags)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(target);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_UMOUNT2, uintptr(@unsafe.Pointer(_p0)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Unshare(long flags)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_UNSHARE, uintptr(flags), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) write(long fd, slice<byte> p)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(p) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_p[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_WRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error exitThread(long code)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_EXIT, uintptr(code), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) readlen(long fd, ptr<byte> _addr_p, long np)
        {
            long n = default;
            error err = default!;
            ref byte p = ref _addr_p.val;

            var (r0, _, e1) = Syscall(SYS_READ, uintptr(fd), uintptr(@unsafe.Pointer(p)), uintptr(np));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) writelen(long fd, ptr<byte> _addr_p, long np)
        {
            long n = default;
            error err = default!;
            ref byte p = ref _addr_p.val;

            var (r0, _, e1) = Syscall(SYS_WRITE, uintptr(fd), uintptr(@unsafe.Pointer(p)), uintptr(np));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) readv(long fd, slice<Iovec> iovs)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(iovs) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_iovs[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_READV, uintptr(fd), uintptr(_p0), uintptr(len(iovs)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) writev(long fd, slice<Iovec> iovs)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(iovs) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_iovs[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall(SYS_WRITEV, uintptr(fd), uintptr(_p0), uintptr(len(iovs)));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) preadv(long fd, slice<Iovec> iovs, System.UIntPtr offs_l, System.UIntPtr offs_h)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(iovs) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_iovs[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_PREADV, uintptr(fd), uintptr(_p0), uintptr(len(iovs)), uintptr(offs_l), uintptr(offs_h), 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) pwritev(long fd, slice<Iovec> iovs, System.UIntPtr offs_l, System.UIntPtr offs_h)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(iovs) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_iovs[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_PWRITEV, uintptr(fd), uintptr(_p0), uintptr(len(iovs)), uintptr(offs_l), uintptr(offs_h), 0L);
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) preadv2(long fd, slice<Iovec> iovs, System.UIntPtr offs_l, System.UIntPtr offs_h, long flags)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(iovs) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_iovs[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_PREADV2, uintptr(fd), uintptr(_p0), uintptr(len(iovs)), uintptr(offs_l), uintptr(offs_h), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) pwritev2(long fd, slice<Iovec> iovs, System.UIntPtr offs_l, System.UIntPtr offs_h, long flags)
        {
            long n = default;
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(iovs) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_iovs[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (r0, _, e1) = Syscall6(SYS_PWRITEV2, uintptr(fd), uintptr(_p0), uintptr(len(iovs)), uintptr(offs_l), uintptr(offs_h), uintptr(flags));
            n = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error munmap(System.UIntPtr addr, System.UIntPtr length)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_MUNMAP, uintptr(addr), uintptr(length), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Madvise(slice<byte> b, long advice)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall(SYS_MADVISE, uintptr(_p0), uintptr(len(b)), uintptr(advice));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mprotect(slice<byte> b, long prot)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall(SYS_MPROTECT, uintptr(_p0), uintptr(len(b)), uintptr(prot));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mlock(slice<byte> b)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall(SYS_MLOCK, uintptr(_p0), uintptr(len(b)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Mlockall(long flags)
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_MLOCKALL, uintptr(flags), 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Msync(slice<byte> b, long flags)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall(SYS_MSYNC, uintptr(_p0), uintptr(len(b)), uintptr(flags));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Munlock(slice<byte> b)
        {
            error err = default!;

            unsafe.Pointer _p0 = default;
            if (len(b) > 0L)
            {
                _p0 = @unsafe.Pointer(_addr_b[0L]);
            }
            else
            {
                _p0 = @unsafe.Pointer(_addr__zero);
            }

            var (_, _, e1) = Syscall(SYS_MUNLOCK, uintptr(_p0), uintptr(len(b)), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        public static error Munlockall()
        {
            error err = default!;

            var (_, _, e1) = Syscall(SYS_MUNLOCKALL, 0L, 0L, 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error faccessat(long dirfd, @string path, uint mode)
        {
            error err = default!;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(path);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall(SYS_FACCESSAT, uintptr(dirfd), uintptr(@unsafe.Pointer(_p0)), uintptr(mode));
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error nameToHandleAt(long dirFD, @string pathname, ptr<fileHandle> _addr_fh, ptr<_C_int> _addr_mountID, long flags)
        {
            error err = default!;
            ref fileHandle fh = ref _addr_fh.val;
            ref _C_int mountID = ref _addr_mountID.val;

            ptr<byte> _p0;
            _p0, err = BytePtrFromString(pathname);
            if (err != null)
            {
                return ;
            }

            var (_, _, e1) = Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(fh)), uintptr(@unsafe.Pointer(mountID)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static (long, error) openByHandleAt(long mountFD, ptr<fileHandle> _addr_fh, long flags)
        {
            long fd = default;
            error err = default!;
            ref fileHandle fh = ref _addr_fh.val;

            var (r0, _, e1) = Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(@unsafe.Pointer(fh)), uintptr(flags));
            fd = int(r0);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }

        // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

        private static error pipe2(ptr<array<_C_int>> _addr_p, long flags)
        {
            error err = default!;
            ref array<_C_int> p = ref _addr_p.val;

            var (_, _, e1) = RawSyscall(SYS_PIPE2, uintptr(@unsafe.Pointer(p)), uintptr(flags), 0L);
            if (e1 != 0L)
            {
                err = errnoErr(e1);
            }

            return ;

        }
    }
}}}}}}
