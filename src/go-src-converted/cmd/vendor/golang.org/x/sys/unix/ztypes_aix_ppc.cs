// cgo -godefs types_aix.go | go run mkpost.go
// Code generated by the command above; see README.md. DO NOT EDIT.

//go:build ppc && aix
// +build ppc,aix

// package unix -- go2cs converted at 2022 March 06 23:30:28 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Program Files\Go\src\cmd\vendor\golang.org\x\sys\unix\ztypes_aix_ppc.go


namespace go.cmd.vendor.golang.org.x.sys;

public static partial class unix_package {

public static readonly nuint SizeofPtr = 0x4;
public static readonly nuint SizeofShort = 0x2;
public static readonly nuint SizeofInt = 0x4;
public static readonly nuint SizeofLong = 0x4;
public static readonly nuint SizeofLongLong = 0x8;
public static readonly nuint PathMax = 0x3ff;


private partial struct _C_short { // : short
}
private partial struct _C_int { // : int
}
private partial struct _C_long { // : int
}
private partial struct _C_long_long { // : long
}
private partial struct off64 { // : long
}
private partial struct off { // : int
}
public partial struct Mode_t { // : uint
}

public partial struct Timespec {
    public int Sec;
    public int Nsec;
}

public partial struct Timeval {
    public int Sec;
    public int Usec;
}

public partial struct Timeval32 {
    public int Sec;
    public int Usec;
}

public partial struct Timex {
}

public partial struct Time_t { // : int
}

public partial struct Tms {
}

public partial struct Utimbuf {
    public int Actime;
    public int Modtime;
}

public partial struct Timezone {
    public int Minuteswest;
    public int Dsttime;
}

public partial struct Rusage {
    public Timeval Utime;
    public Timeval Stime;
    public int Maxrss;
    public int Ixrss;
    public int Idrss;
    public int Isrss;
    public int Minflt;
    public int Majflt;
    public int Nswap;
    public int Inblock;
    public int Oublock;
    public int Msgsnd;
    public int Msgrcv;
    public int Nsignals;
    public int Nvcsw;
    public int Nivcsw;
}

public partial struct Rlimit {
    public ulong Cur;
    public ulong Max;
}

public partial struct Pid_t { // : int
}

private partial struct _Gid_t { // : uint
}

private partial struct dev_t { // : uint
}

public partial struct Stat_t {
    public uint Dev;
    public uint Ino;
    public uint Mode;
    public short Nlink;
    public ushort Flag;
    public uint Uid;
    public uint Gid;
    public uint Rdev;
    public int Size;
    public Timespec Atim;
    public Timespec Mtim;
    public Timespec Ctim;
    public int Blksize;
    public int Blocks;
    public int Vfstype;
    public uint Vfs;
    public uint Type;
    public uint Gen;
    public array<uint> Reserved;
}

public partial struct StatxTimestamp {
}

public partial struct Statx_t {
}

public partial struct Dirent {
    public uint Offset;
    public uint Ino;
    public ushort Reclen;
    public ushort Namlen;
    public array<byte> Name;
}

public partial struct RawSockaddrInet4 {
    public byte Len;
    public byte Family;
    public ushort Port;
    public array<byte> Addr; /* in_addr */
    public array<byte> Zero;
}

public partial struct RawSockaddrInet6 {
    public byte Len;
    public byte Family;
    public ushort Port;
    public uint Flowinfo;
    public array<byte> Addr; /* in6_addr */
    public uint Scope_id;
}

public partial struct RawSockaddrUnix {
    public byte Len;
    public byte Family;
    public array<byte> Path;
}

public partial struct RawSockaddrDatalink {
    public byte Len;
    public byte Family;
    public ushort Index;
    public byte Type;
    public byte Nlen;
    public byte Alen;
    public byte Slen;
    public array<byte> Data;
}

public partial struct RawSockaddr {
    public byte Len;
    public byte Family;
    public array<byte> Data;
}

public partial struct RawSockaddrAny {
    public RawSockaddr Addr;
    public array<byte> Pad;
}

private partial struct _Socklen { // : uint
}

public partial struct Cmsghdr {
    public uint Len;
    public int Level;
    public int Type;
}

public partial struct ICMPv6Filter {
    public array<uint> Filt;
}

public partial struct Iovec {
    public ptr<byte> Base;
    public uint Len;
}

public partial struct IPMreq {
    public array<byte> Multiaddr; /* in_addr */
    public array<byte> Interface; /* in_addr */
}

public partial struct IPv6Mreq {
    public array<byte> Multiaddr; /* in6_addr */
    public uint Interface;
}

public partial struct IPv6MTUInfo {
    public RawSockaddrInet6 Addr;
    public uint Mtu;
}

public partial struct Linger {
    public int Onoff;
    public int Linger;
}

public partial struct Msghdr {
    public ptr<byte> Name;
    public uint Namelen;
    public ptr<Iovec> Iov;
    public int Iovlen;
    public ptr<byte> Control;
    public uint Controllen;
    public int Flags;
}

public static readonly nuint SizeofSockaddrInet4 = 0x10;
public static readonly nuint SizeofSockaddrInet6 = 0x1c;
public static readonly nuint SizeofSockaddrAny = 0x404;
public static readonly nuint SizeofSockaddrUnix = 0x401;
public static readonly nuint SizeofSockaddrDatalink = 0x80;
public static readonly nuint SizeofLinger = 0x8;
public static readonly nuint SizeofIovec = 0x8;
public static readonly nuint SizeofIPMreq = 0x8;
public static readonly nuint SizeofIPv6Mreq = 0x14;
public static readonly nuint SizeofIPv6MTUInfo = 0x20;
public static readonly nuint SizeofMsghdr = 0x1c;
public static readonly nuint SizeofCmsghdr = 0xc;
public static readonly nuint SizeofICMPv6Filter = 0x20;


public static readonly nuint SizeofIfMsghdr = 0x10;


public partial struct IfMsgHdr {
    public ushort Msglen;
    public byte Version;
    public byte Type;
    public int Addrs;
    public int Flags;
    public ushort Index;
    public byte Addrlen;
    public array<byte> _;
}

public partial struct FdSet {
    public array<int> Bits;
}

public partial struct Utsname {
    public array<byte> Sysname;
    public array<byte> Nodename;
    public array<byte> Release;
    public array<byte> Version;
    public array<byte> Machine;
}

public partial struct Ustat_t {
}

public partial struct Sigset_t {
    public uint Losigs;
    public uint Hisigs;
}

public static readonly nuint AT_FDCWD = -0x2;
public static readonly nuint AT_REMOVEDIR = 0x1;
public static readonly nuint AT_SYMLINK_NOFOLLOW = 0x1;


public partial struct Termios {
    public uint Iflag;
    public uint Oflag;
    public uint Cflag;
    public uint Lflag;
    public array<byte> Cc;
}

public partial struct Termio {
    public ushort Iflag;
    public ushort Oflag;
    public ushort Cflag;
    public ushort Lflag;
    public byte Line;
    public array<byte> Cc;
    public array<byte> _;
}

public partial struct Winsize {
    public ushort Row;
    public ushort Col;
    public ushort Xpixel;
    public ushort Ypixel;
}

public partial struct PollFd {
    public int Fd;
    public ushort Events;
    public ushort Revents;
}

public static readonly nuint POLLERR = 0x4000;
public static readonly nuint POLLHUP = 0x2000;
public static readonly nuint POLLIN = 0x1;
public static readonly nuint POLLNVAL = 0x8000;
public static readonly nuint POLLOUT = 0x2;
public static readonly nuint POLLPRI = 0x4;
public static readonly nuint POLLRDBAND = 0x20;
public static readonly nuint POLLRDNORM = 0x10;
public static readonly nuint POLLWRBAND = 0x40;
public static readonly nuint POLLWRNORM = 0x2;


public partial struct Flock_t {
    public short Type;
    public short Whence;
    public uint Sysid;
    public int Pid;
    public int Vfs;
    public long Start;
    public long Len;
}

public partial struct Fsid_t {
    public array<uint> Val;
}
public partial struct Fsid64_t {
    public array<ulong> Val;
}

public partial struct Statfs_t {
    public int Version;
    public int Type;
    public uint Bsize;
    public uint Blocks;
    public uint Bfree;
    public uint Bavail;
    public uint Files;
    public uint Ffree;
    public Fsid_t Fsid;
    public int Vfstype;
    public uint Fsize;
    public int Vfsnumber;
    public int Vfsoff;
    public int Vfslen;
    public int Vfsvers;
    public array<byte> Fname;
    public array<byte> Fpack;
    public int Name_max;
}

public static readonly nuint RNDGETENTCNT = 0x80045200;


} // end unix_package
