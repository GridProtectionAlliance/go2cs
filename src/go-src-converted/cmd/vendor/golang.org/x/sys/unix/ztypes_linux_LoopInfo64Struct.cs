//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:00:34 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct LoopInfo64
        {
            // Constructors
            public LoopInfo64(NilType _)
            {
                this.Device = default;
                this.Inode = default;
                this.Rdevice = default;
                this.Offset = default;
                this.Sizelimit = default;
                this.Number = default;
                this.Encrypt_type = default;
                this.Encrypt_key_size = default;
                this.Flags = default;
                this.File_name = default;
                this.Crypt_name = default;
                this.Encrypt_key = default;
                this.Init = default;
            }

            public LoopInfo64(ulong Device = default, ulong Inode = default, ulong Rdevice = default, ulong Offset = default, ulong Sizelimit = default, uint Number = default, uint Encrypt_type = default, uint Encrypt_key_size = default, uint Flags = default, array<byte> File_name = default, array<byte> Crypt_name = default, array<byte> Encrypt_key = default, array<ulong> Init = default)
            {
                this.Device = Device;
                this.Inode = Inode;
                this.Rdevice = Rdevice;
                this.Offset = Offset;
                this.Sizelimit = Sizelimit;
                this.Number = Number;
                this.Encrypt_type = Encrypt_type;
                this.Encrypt_key_size = Encrypt_key_size;
                this.Flags = Flags;
                this.File_name = File_name;
                this.Crypt_name = Crypt_name;
                this.Encrypt_key = Encrypt_key;
                this.Init = Init;
            }

            // Enable comparisons between nil and LoopInfo64 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(LoopInfo64 value, NilType nil) => value.Equals(default(LoopInfo64));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(LoopInfo64 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, LoopInfo64 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, LoopInfo64 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator LoopInfo64(NilType nil) => default(LoopInfo64);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static LoopInfo64 LoopInfo64_cast(dynamic value)
        {
            return new LoopInfo64(value.Device, value.Inode, value.Rdevice, value.Offset, value.Sizelimit, value.Number, value.Encrypt_type, value.Encrypt_key_size, value.Flags, value.File_name, value.Crypt_name, value.Encrypt_key, value.Init);
        }
    }
}}}}}}