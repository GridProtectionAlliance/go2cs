// Code generated by mkmerge.go; DO NOT EDIT.

//go:build linux
// +build linux

// package unix -- go2cs converted at 2022 March 06 23:30:29 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Program Files\Go\src\cmd\vendor\golang.org\x\sys\unix\ztypes_linux.go


namespace go.cmd.vendor.golang.org.x.sys;

public static partial class unix_package {

public static readonly nuint SizeofShort = 0x2;
public static readonly nuint SizeofInt = 0x4;
public static readonly nuint SizeofLongLong = 0x8;
public static readonly nuint PathMax = 0x1000;


private partial struct _C_short { // : short
}
private partial struct _C_int { // : int
}

private partial struct _C_long_long { // : long
}
public partial struct ItimerSpec {
    public Timespec Interval;
    public Timespec Value;
}

public static readonly nuint TIME_OK = 0x0;
public static readonly nuint TIME_INS = 0x1;
public static readonly nuint TIME_DEL = 0x2;
public static readonly nuint TIME_OOP = 0x3;
public static readonly nuint TIME_WAIT = 0x4;
public static readonly nuint TIME_ERROR = 0x5;
public static readonly nuint TIME_BAD = 0x5;


public partial struct Rlimit {
    public ulong Cur;
    public ulong Max;
}

private partial struct _Gid_t { // : uint
}

public partial struct StatxTimestamp {
    public long Sec;
    public uint Nsec;
    public int _;
}

public partial struct Statx_t {
    public uint Mask;
    public uint Blksize;
    public ulong Attributes;
    public uint Nlink;
    public uint Uid;
    public uint Gid;
    public ushort Mode;
    public array<ushort> _;
    public ulong Ino;
    public ulong Size;
    public ulong Blocks;
    public ulong Attributes_mask;
    public StatxTimestamp Atime;
    public StatxTimestamp Btime;
    public StatxTimestamp Ctime;
    public StatxTimestamp Mtime;
    public uint Rdev_major;
    public uint Rdev_minor;
    public uint Dev_major;
    public uint Dev_minor;
    public ulong Mnt_id;
    public ulong _;
    public array<ulong> _;
}

public partial struct Fsid {
    public array<int> Val;
}

public partial struct FileCloneRange {
    public long Src_fd;
    public ulong Src_offset;
    public ulong Src_length;
    public ulong Dest_offset;
}

public partial struct RawFileDedupeRange {
    public ulong Src_offset;
    public ulong Src_length;
    public ushort Dest_count;
    public ushort Reserved1;
    public uint Reserved2;
}

public partial struct RawFileDedupeRangeInfo {
    public long Dest_fd;
    public ulong Dest_offset;
    public ulong Bytes_deduped;
    public int Status;
    public uint Reserved;
}

public static readonly nuint SizeofRawFileDedupeRange = 0x18;
public static readonly nuint SizeofRawFileDedupeRangeInfo = 0x20;
public static readonly nuint FILE_DEDUPE_RANGE_SAME = 0x0;
public static readonly nuint FILE_DEDUPE_RANGE_DIFFERS = 0x1;


public partial struct FscryptPolicy {
    public byte Version;
    public byte Contents_encryption_mode;
    public byte Filenames_encryption_mode;
    public byte Flags;
    public array<byte> Master_key_descriptor;
}

public partial struct FscryptKey {
    public uint Mode;
    public array<byte> Raw;
    public uint Size;
}

public partial struct FscryptPolicyV1 {
    public byte Version;
    public byte Contents_encryption_mode;
    public byte Filenames_encryption_mode;
    public byte Flags;
    public array<byte> Master_key_descriptor;
}

public partial struct FscryptPolicyV2 {
    public byte Version;
    public byte Contents_encryption_mode;
    public byte Filenames_encryption_mode;
    public byte Flags;
    public array<byte> _;
    public array<byte> Master_key_identifier;
}

public partial struct FscryptGetPolicyExArg {
    public ulong Size;
    public array<byte> Policy;
}

public partial struct FscryptKeySpecifier {
    public uint Type;
    public uint _;
    public array<byte> U;
}

public partial struct FscryptAddKeyArg {
    public FscryptKeySpecifier Key_spec;
    public uint Raw_size;
    public uint Key_id;
    public array<uint> _;
}

public partial struct FscryptRemoveKeyArg {
    public FscryptKeySpecifier Key_spec;
    public uint Removal_status_flags;
    public array<uint> _;
}

public partial struct FscryptGetKeyStatusArg {
    public FscryptKeySpecifier Key_spec;
    public array<uint> _;
    public uint Status;
    public uint Status_flags;
    public uint User_count;
    public array<uint> _;
}

public partial struct DmIoctl {
    public array<uint> Version;
    public uint Data_size;
    public uint Data_start;
    public uint Target_count;
    public int Open_count;
    public uint Flags;
    public uint Event_nr;
    public uint _;
    public ulong Dev;
    public array<byte> Name;
    public array<byte> Uuid;
    public array<byte> Data;
}

public partial struct DmTargetSpec {
    public ulong Sector_start;
    public ulong Length;
    public int Status;
    public uint Next;
    public array<byte> Target_type;
}

public partial struct DmTargetDeps {
    public uint Count;
    public uint _;
}

public partial struct DmTargetVersions {
    public uint Next;
    public array<uint> Version;
}

public partial struct DmTargetMsg {
    public ulong Sector;
}

public static readonly nuint SizeofDmIoctl = 0x138;
public static readonly nuint SizeofDmTargetSpec = 0x28;


public partial struct KeyctlDHParams {
    public int Private;
    public int Prime;
    public int Base;
}

public static readonly nuint FADV_NORMAL = 0x0;
public static readonly nuint FADV_RANDOM = 0x1;
public static readonly nuint FADV_SEQUENTIAL = 0x2;
public static readonly nuint FADV_WILLNEED = 0x3;


public partial struct RawSockaddrInet4 {
    public ushort Family;
    public ushort Port;
    public array<byte> Addr; /* in_addr */
    public array<byte> Zero;
}

public partial struct RawSockaddrInet6 {
    public ushort Family;
    public ushort Port;
    public uint Flowinfo;
    public array<byte> Addr; /* in6_addr */
    public uint Scope_id;
}

public partial struct RawSockaddrUnix {
    public ushort Family;
    public array<sbyte> Path;
}

public partial struct RawSockaddrLinklayer {
    public ushort Family;
    public ushort Protocol;
    public int Ifindex;
    public ushort Hatype;
    public byte Pkttype;
    public byte Halen;
    public array<byte> Addr;
}

public partial struct RawSockaddrNetlink {
    public ushort Family;
    public ushort Pad;
    public uint Pid;
    public uint Groups;
}

public partial struct RawSockaddrHCI {
    public ushort Family;
    public ushort Dev;
    public ushort Channel;
}

public partial struct RawSockaddrL2 {
    public ushort Family;
    public ushort Psm;
    public array<byte> Bdaddr;
    public ushort Cid;
    public byte Bdaddr_type;
    public array<byte> _;
}

public partial struct RawSockaddrRFCOMM {
    public ushort Family;
    public array<byte> Bdaddr;
    public byte Channel;
    public array<byte> _;
}

public partial struct RawSockaddrCAN {
    public ushort Family;
    public int Ifindex;
    public array<byte> Addr;
}

public partial struct RawSockaddrALG {
    public ushort Family;
    public array<byte> Type;
    public uint Feat;
    public uint Mask;
    public array<byte> Name;
}

public partial struct RawSockaddrVM {
    public ushort Family;
    public ushort Reserved1;
    public uint Port;
    public uint Cid;
    public byte Flags;
    public array<byte> Zero;
}

public partial struct RawSockaddrXDP {
    public ushort Family;
    public ushort Flags;
    public uint Ifindex;
    public uint Queue_id;
    public uint Shared_umem_fd;
}

public partial struct RawSockaddrPPPoX { // : array<byte>
}

public partial struct RawSockaddrTIPC {
    public ushort Family;
    public byte Addrtype;
    public sbyte Scope;
    public array<byte> Addr;
}

public partial struct RawSockaddrL2TPIP {
    public ushort Family;
    public ushort Unused;
    public array<byte> Addr; /* in_addr */
    public uint Conn_id;
    public array<byte> _;
}

public partial struct RawSockaddrL2TPIP6 {
    public ushort Family;
    public ushort Unused;
    public uint Flowinfo;
    public array<byte> Addr; /* in6_addr */
    public uint Scope_id;
    public uint Conn_id;
}

public partial struct RawSockaddrIUCV {
    public ushort Family;
    public ushort Port;
    public uint Addr;
    public array<sbyte> Nodeid;
    public array<sbyte> User_id;
    public array<sbyte> Name;
}

private partial struct _Socklen { // : uint
}

public partial struct Linger {
    public int Onoff;
    public int Linger;
}

public partial struct IPMreq {
    public array<byte> Multiaddr; /* in_addr */
    public array<byte> Interface; /* in_addr */
}

public partial struct IPMreqn {
    public array<byte> Multiaddr; /* in_addr */
    public array<byte> Address; /* in_addr */
    public int Ifindex;
}

public partial struct IPv6Mreq {
    public array<byte> Multiaddr; /* in6_addr */
    public uint Interface;
}

public partial struct PacketMreq {
    public int Ifindex;
    public ushort Type;
    public ushort Alen;
    public array<byte> Address;
}

public partial struct Inet4Pktinfo {
    public int Ifindex;
    public array<byte> Spec_dst; /* in_addr */
    public array<byte> Addr; /* in_addr */
}

public partial struct Inet6Pktinfo {
    public array<byte> Addr; /* in6_addr */
    public uint Ifindex;
}

public partial struct IPv6MTUInfo {
    public RawSockaddrInet6 Addr;
    public uint Mtu;
}

public partial struct ICMPv6Filter {
    public array<uint> Data;
}

public partial struct Ucred {
    public int Pid;
    public uint Uid;
    public uint Gid;
}

public partial struct TCPInfo {
    public byte State;
    public byte Ca_state;
    public byte Retransmits;
    public byte Probes;
    public byte Backoff;
    public byte Options;
    public uint Rto;
    public uint Ato;
    public uint Snd_mss;
    public uint Rcv_mss;
    public uint Unacked;
    public uint Sacked;
    public uint Lost;
    public uint Retrans;
    public uint Fackets;
    public uint Last_data_sent;
    public uint Last_ack_sent;
    public uint Last_data_recv;
    public uint Last_ack_recv;
    public uint Pmtu;
    public uint Rcv_ssthresh;
    public uint Rtt;
    public uint Rttvar;
    public uint Snd_ssthresh;
    public uint Snd_cwnd;
    public uint Advmss;
    public uint Reordering;
    public uint Rcv_rtt;
    public uint Rcv_space;
    public uint Total_retrans;
}

public partial struct CanFilter {
    public uint Id;
    public uint Mask;
}

public static readonly nuint SizeofSockaddrInet4 = 0x10;
public static readonly nuint SizeofSockaddrInet6 = 0x1c;
public static readonly nuint SizeofSockaddrAny = 0x70;
public static readonly nuint SizeofSockaddrUnix = 0x6e;
public static readonly nuint SizeofSockaddrLinklayer = 0x14;
public static readonly nuint SizeofSockaddrNetlink = 0xc;
public static readonly nuint SizeofSockaddrHCI = 0x6;
public static readonly nuint SizeofSockaddrL2 = 0xe;
public static readonly nuint SizeofSockaddrRFCOMM = 0xa;
public static readonly nuint SizeofSockaddrCAN = 0x18;
public static readonly nuint SizeofSockaddrALG = 0x58;
public static readonly nuint SizeofSockaddrVM = 0x10;
public static readonly nuint SizeofSockaddrXDP = 0x10;
public static readonly nuint SizeofSockaddrPPPoX = 0x1e;
public static readonly nuint SizeofSockaddrTIPC = 0x10;
public static readonly nuint SizeofSockaddrL2TPIP = 0x10;
public static readonly nuint SizeofSockaddrL2TPIP6 = 0x20;
public static readonly nuint SizeofSockaddrIUCV = 0x20;
public static readonly nuint SizeofLinger = 0x8;
public static readonly nuint SizeofIPMreq = 0x8;
public static readonly nuint SizeofIPMreqn = 0xc;
public static readonly nuint SizeofIPv6Mreq = 0x14;
public static readonly nuint SizeofPacketMreq = 0x10;
public static readonly nuint SizeofInet4Pktinfo = 0xc;
public static readonly nuint SizeofInet6Pktinfo = 0x14;
public static readonly nuint SizeofIPv6MTUInfo = 0x20;
public static readonly nuint SizeofICMPv6Filter = 0x20;
public static readonly nuint SizeofUcred = 0xc;
public static readonly nuint SizeofTCPInfo = 0x68;
public static readonly nuint SizeofCanFilter = 0x8;


public static readonly nuint NDA_UNSPEC = 0x0;
public static readonly nuint NDA_DST = 0x1;
public static readonly nuint NDA_LLADDR = 0x2;
public static readonly nuint NDA_CACHEINFO = 0x3;
public static readonly nuint NDA_PROBES = 0x4;
public static readonly nuint NDA_VLAN = 0x5;
public static readonly nuint NDA_PORT = 0x6;
public static readonly nuint NDA_VNI = 0x7;
public static readonly nuint NDA_IFINDEX = 0x8;
public static readonly nuint NDA_MASTER = 0x9;
public static readonly nuint NDA_LINK_NETNSID = 0xa;
public static readonly nuint NDA_SRC_VNI = 0xb;
public static readonly nuint NTF_USE = 0x1;
public static readonly nuint NTF_SELF = 0x2;
public static readonly nuint NTF_MASTER = 0x4;
public static readonly nuint NTF_PROXY = 0x8;
public static readonly nuint NTF_EXT_LEARNED = 0x10;
public static readonly nuint NTF_OFFLOADED = 0x20;
public static readonly nuint NTF_ROUTER = 0x80;
public static readonly nuint NUD_INCOMPLETE = 0x1;
public static readonly nuint NUD_REACHABLE = 0x2;
public static readonly nuint NUD_STALE = 0x4;
public static readonly nuint NUD_DELAY = 0x8;
public static readonly nuint NUD_PROBE = 0x10;
public static readonly nuint NUD_FAILED = 0x20;
public static readonly nuint NUD_NOARP = 0x40;
public static readonly nuint NUD_PERMANENT = 0x80;
public static readonly nuint NUD_NONE = 0x0;
public static readonly nuint IFA_UNSPEC = 0x0;
public static readonly nuint IFA_ADDRESS = 0x1;
public static readonly nuint IFA_LOCAL = 0x2;
public static readonly nuint IFA_LABEL = 0x3;
public static readonly nuint IFA_BROADCAST = 0x4;
public static readonly nuint IFA_ANYCAST = 0x5;
public static readonly nuint IFA_CACHEINFO = 0x6;
public static readonly nuint IFA_MULTICAST = 0x7;
public static readonly nuint IFA_FLAGS = 0x8;
public static readonly nuint IFA_RT_PRIORITY = 0x9;
public static readonly nuint IFA_TARGET_NETNSID = 0xa;
public static readonly nuint RT_SCOPE_UNIVERSE = 0x0;
public static readonly nuint RT_SCOPE_SITE = 0xc8;
public static readonly nuint RT_SCOPE_LINK = 0xfd;
public static readonly nuint RT_SCOPE_HOST = 0xfe;
public static readonly nuint RT_SCOPE_NOWHERE = 0xff;
public static readonly nuint RT_TABLE_UNSPEC = 0x0;
public static readonly nuint RT_TABLE_COMPAT = 0xfc;
public static readonly nuint RT_TABLE_DEFAULT = 0xfd;
public static readonly nuint RT_TABLE_MAIN = 0xfe;
public static readonly nuint RT_TABLE_LOCAL = 0xff;
public static readonly nuint RT_TABLE_MAX = 0xffffffff;
public static readonly nuint RTA_UNSPEC = 0x0;
public static readonly nuint RTA_DST = 0x1;
public static readonly nuint RTA_SRC = 0x2;
public static readonly nuint RTA_IIF = 0x3;
public static readonly nuint RTA_OIF = 0x4;
public static readonly nuint RTA_GATEWAY = 0x5;
public static readonly nuint RTA_PRIORITY = 0x6;
public static readonly nuint RTA_PREFSRC = 0x7;
public static readonly nuint RTA_METRICS = 0x8;
public static readonly nuint RTA_MULTIPATH = 0x9;
public static readonly nuint RTA_FLOW = 0xb;
public static readonly nuint RTA_CACHEINFO = 0xc;
public static readonly nuint RTA_TABLE = 0xf;
public static readonly nuint RTA_MARK = 0x10;
public static readonly nuint RTA_MFC_STATS = 0x11;
public static readonly nuint RTA_VIA = 0x12;
public static readonly nuint RTA_NEWDST = 0x13;
public static readonly nuint RTA_PREF = 0x14;
public static readonly nuint RTA_ENCAP_TYPE = 0x15;
public static readonly nuint RTA_ENCAP = 0x16;
public static readonly nuint RTA_EXPIRES = 0x17;
public static readonly nuint RTA_PAD = 0x18;
public static readonly nuint RTA_UID = 0x19;
public static readonly nuint RTA_TTL_PROPAGATE = 0x1a;
public static readonly nuint RTA_IP_PROTO = 0x1b;
public static readonly nuint RTA_SPORT = 0x1c;
public static readonly nuint RTA_DPORT = 0x1d;
public static readonly nuint RTN_UNSPEC = 0x0;
public static readonly nuint RTN_UNICAST = 0x1;
public static readonly nuint RTN_LOCAL = 0x2;
public static readonly nuint RTN_BROADCAST = 0x3;
public static readonly nuint RTN_ANYCAST = 0x4;
public static readonly nuint RTN_MULTICAST = 0x5;
public static readonly nuint RTN_BLACKHOLE = 0x6;
public static readonly nuint RTN_UNREACHABLE = 0x7;
public static readonly nuint RTN_PROHIBIT = 0x8;
public static readonly nuint RTN_THROW = 0x9;
public static readonly nuint RTN_NAT = 0xa;
public static readonly nuint RTN_XRESOLVE = 0xb;
public static readonly nuint SizeofNlMsghdr = 0x10;
public static readonly nuint SizeofNlMsgerr = 0x14;
public static readonly nuint SizeofRtGenmsg = 0x1;
public static readonly nuint SizeofNlAttr = 0x4;
public static readonly nuint SizeofRtAttr = 0x4;
public static readonly nuint SizeofIfInfomsg = 0x10;
public static readonly nuint SizeofIfAddrmsg = 0x8;
public static readonly nuint SizeofIfaCacheinfo = 0x10;
public static readonly nuint SizeofRtMsg = 0xc;
public static readonly nuint SizeofRtNexthop = 0x8;
public static readonly nuint SizeofNdUseroptmsg = 0x10;
public static readonly nuint SizeofNdMsg = 0xc;


public partial struct NlMsghdr {
    public uint Len;
    public ushort Type;
    public ushort Flags;
    public uint Seq;
    public uint Pid;
}

public partial struct NlMsgerr {
    public int Error;
    public NlMsghdr Msg;
}

public partial struct RtGenmsg {
    public byte Family;
}

public partial struct NlAttr {
    public ushort Len;
    public ushort Type;
}

public partial struct RtAttr {
    public ushort Len;
    public ushort Type;
}

public partial struct IfInfomsg {
    public byte Family;
    public byte _;
    public ushort Type;
    public int Index;
    public uint Flags;
    public uint Change;
}

public partial struct IfAddrmsg {
    public byte Family;
    public byte Prefixlen;
    public byte Flags;
    public byte Scope;
    public uint Index;
}

public partial struct IfaCacheinfo {
    public uint Prefered;
    public uint Valid;
    public uint Cstamp;
    public uint Tstamp;
}

public partial struct RtMsg {
    public byte Family;
    public byte Dst_len;
    public byte Src_len;
    public byte Tos;
    public byte Table;
    public byte Protocol;
    public byte Scope;
    public byte Type;
    public uint Flags;
}

public partial struct RtNexthop {
    public ushort Len;
    public byte Flags;
    public byte Hops;
    public int Ifindex;
}

public partial struct NdUseroptmsg {
    public byte Family;
    public byte Pad1;
    public ushort Opts_len;
    public int Ifindex;
    public byte Icmp_type;
    public byte Icmp_code;
    public ushort Pad2;
    public uint Pad3;
}

public partial struct NdMsg {
    public byte Family;
    public byte Pad1;
    public ushort Pad2;
    public int Ifindex;
    public ushort State;
    public byte Flags;
    public byte Type;
}

public static readonly nuint SizeofSockFilter = 0x8;


public partial struct SockFilter {
    public ushort Code;
    public byte Jt;
    public byte Jf;
    public uint K;
}

public partial struct SockFprog {
    public ushort Len;
    public ptr<SockFilter> Filter;
}

public partial struct InotifyEvent {
    public int Wd;
    public uint Mask;
    public uint Cookie;
    public uint Len;
}

public static readonly nuint SizeofInotifyEvent = 0x10;



public static readonly nuint SI_LOAD_SHIFT = 0x10;



public partial struct Utsname {
    public array<byte> Sysname;
    public array<byte> Nodename;
    public array<byte> Release;
    public array<byte> Version;
    public array<byte> Machine;
    public array<byte> Domainname;
}

public static readonly nuint AT_EMPTY_PATH = 0x1000;
public static readonly nuint AT_FDCWD = -0x64;
public static readonly nuint AT_NO_AUTOMOUNT = 0x800;
public static readonly nuint AT_REMOVEDIR = 0x200;

public static readonly nuint AT_STATX_SYNC_AS_STAT = 0x0;
public static readonly nuint AT_STATX_FORCE_SYNC = 0x2000;
public static readonly nuint AT_STATX_DONT_SYNC = 0x4000;

public static readonly nuint AT_SYMLINK_FOLLOW = 0x400;
public static readonly nuint AT_SYMLINK_NOFOLLOW = 0x100;

public static readonly nuint AT_EACCESS = 0x200;


public partial struct OpenHow {
    public ulong Flags;
    public ulong Mode;
    public ulong Resolve;
}

public static readonly nuint SizeofOpenHow = 0x18;



public static readonly nuint RESOLVE_BENEATH = 0x8;
public static readonly nuint RESOLVE_IN_ROOT = 0x10;
public static readonly nuint RESOLVE_NO_MAGICLINKS = 0x2;
public static readonly nuint RESOLVE_NO_SYMLINKS = 0x4;
public static readonly nuint RESOLVE_NO_XDEV = 0x1;


public partial struct PollFd {
    public int Fd;
    public short Events;
    public short Revents;
}

public static readonly nuint POLLIN = 0x1;
public static readonly nuint POLLPRI = 0x2;
public static readonly nuint POLLOUT = 0x4;
public static readonly nuint POLLERR = 0x8;
public static readonly nuint POLLHUP = 0x10;
public static readonly nuint POLLNVAL = 0x20;


public partial struct SignalfdSiginfo {
    public uint Signo;
    public int Errno;
    public int Code;
    public uint Pid;
    public uint Uid;
    public int Fd;
    public uint Tid;
    public uint Band;
    public uint Overrun;
    public uint Trapno;
    public int Status;
    public int Int;
    public ulong Ptr;
    public ulong Utime;
    public ulong Stime;
    public ulong Addr;
    public ushort Addr_lsb;
    public ushort _;
    public int Syscall;
    public ulong Call_addr;
    public uint Arch;
    public array<byte> _;
}

public partial struct Winsize {
    public ushort Row;
    public ushort Col;
    public ushort Xpixel;
    public ushort Ypixel;
}

public static readonly nuint TASKSTATS_CMD_UNSPEC = 0x0;
public static readonly nuint TASKSTATS_CMD_GET = 0x1;
public static readonly nuint TASKSTATS_CMD_NEW = 0x2;
public static readonly nuint TASKSTATS_TYPE_UNSPEC = 0x0;
public static readonly nuint TASKSTATS_TYPE_PID = 0x1;
public static readonly nuint TASKSTATS_TYPE_TGID = 0x2;
public static readonly nuint TASKSTATS_TYPE_STATS = 0x3;
public static readonly nuint TASKSTATS_TYPE_AGGR_PID = 0x4;
public static readonly nuint TASKSTATS_TYPE_AGGR_TGID = 0x5;
public static readonly nuint TASKSTATS_TYPE_NULL = 0x6;
public static readonly nuint TASKSTATS_CMD_ATTR_UNSPEC = 0x0;
public static readonly nuint TASKSTATS_CMD_ATTR_PID = 0x1;
public static readonly nuint TASKSTATS_CMD_ATTR_TGID = 0x2;
public static readonly nuint TASKSTATS_CMD_ATTR_REGISTER_CPUMASK = 0x3;
public static readonly nuint TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK = 0x4;


public partial struct CGroupStats {
    public ulong Sleeping;
    public ulong Running;
    public ulong Stopped;
    public ulong Uninterruptible;
    public ulong Io_wait;
}

public static readonly nuint CGROUPSTATS_CMD_UNSPEC = 0x3;
public static readonly nuint CGROUPSTATS_CMD_GET = 0x4;
public static readonly nuint CGROUPSTATS_CMD_NEW = 0x5;
public static readonly nuint CGROUPSTATS_TYPE_UNSPEC = 0x0;
public static readonly nuint CGROUPSTATS_TYPE_CGROUP_STATS = 0x1;
public static readonly nuint CGROUPSTATS_CMD_ATTR_UNSPEC = 0x0;
public static readonly nuint CGROUPSTATS_CMD_ATTR_FD = 0x1;


public partial struct Genlmsghdr {
    public byte Cmd;
    public byte Version;
    public ushort Reserved;
}

public static readonly nuint CTRL_CMD_UNSPEC = 0x0;
public static readonly nuint CTRL_CMD_NEWFAMILY = 0x1;
public static readonly nuint CTRL_CMD_DELFAMILY = 0x2;
public static readonly nuint CTRL_CMD_GETFAMILY = 0x3;
public static readonly nuint CTRL_CMD_NEWOPS = 0x4;
public static readonly nuint CTRL_CMD_DELOPS = 0x5;
public static readonly nuint CTRL_CMD_GETOPS = 0x6;
public static readonly nuint CTRL_CMD_NEWMCAST_GRP = 0x7;
public static readonly nuint CTRL_CMD_DELMCAST_GRP = 0x8;
public static readonly nuint CTRL_CMD_GETMCAST_GRP = 0x9;
public static readonly nuint CTRL_ATTR_UNSPEC = 0x0;
public static readonly nuint CTRL_ATTR_FAMILY_ID = 0x1;
public static readonly nuint CTRL_ATTR_FAMILY_NAME = 0x2;
public static readonly nuint CTRL_ATTR_VERSION = 0x3;
public static readonly nuint CTRL_ATTR_HDRSIZE = 0x4;
public static readonly nuint CTRL_ATTR_MAXATTR = 0x5;
public static readonly nuint CTRL_ATTR_OPS = 0x6;
public static readonly nuint CTRL_ATTR_MCAST_GROUPS = 0x7;
public static readonly nuint CTRL_ATTR_OP_UNSPEC = 0x0;
public static readonly nuint CTRL_ATTR_OP_ID = 0x1;
public static readonly nuint CTRL_ATTR_OP_FLAGS = 0x2;
public static readonly nuint CTRL_ATTR_MCAST_GRP_UNSPEC = 0x0;
public static readonly nuint CTRL_ATTR_MCAST_GRP_NAME = 0x1;
public static readonly nuint CTRL_ATTR_MCAST_GRP_ID = 0x2;


private static readonly nuint _CPU_SETSIZE = 0x400;


public static readonly nuint BDADDR_BREDR = 0x0;
public static readonly nuint BDADDR_LE_PUBLIC = 0x1;
public static readonly nuint BDADDR_LE_RANDOM = 0x2;


public partial struct PerfEventAttr {
    public uint Type;
    public uint Size;
    public ulong Config;
    public ulong Sample;
    public ulong Sample_type;
    public ulong Read_format;
    public ulong Bits;
    public uint Wakeup;
    public uint Bp_type;
    public ulong Ext1;
    public ulong Ext2;
    public ulong Branch_sample_type;
    public ulong Sample_regs_user;
    public uint Sample_stack_user;
    public int Clockid;
    public ulong Sample_regs_intr;
    public uint Aux_watermark;
    public ushort Sample_max_stack;
    public ushort _;
}

public partial struct PerfEventMmapPage {
    public uint Version;
    public uint Compat_version;
    public uint Lock;
    public uint Index;
    public long Offset;
    public ulong Time_enabled;
    public ulong Time_running;
    public ulong Capabilities;
    public ushort Pmc_width;
    public ushort Time_shift;
    public uint Time_mult;
    public ulong Time_offset;
    public ulong Time_zero;
    public uint Size;
    public uint _;
    public ulong Time_cycles;
    public ulong Time_mask;
    public array<byte> _;
    public ulong Data_head;
    public ulong Data_tail;
    public ulong Data_offset;
    public ulong Data_size;
    public ulong Aux_head;
    public ulong Aux_tail;
    public ulong Aux_offset;
    public ulong Aux_size;
}

public static readonly ulong PerfBitDisabled = CBitFieldMaskBit0;
public static readonly var PerfBitInherit = CBitFieldMaskBit1;
public static readonly var PerfBitPinned = CBitFieldMaskBit2;
public static readonly var PerfBitExclusive = CBitFieldMaskBit3;
public static readonly var PerfBitExcludeUser = CBitFieldMaskBit4;
public static readonly var PerfBitExcludeKernel = CBitFieldMaskBit5;
public static readonly var PerfBitExcludeHv = CBitFieldMaskBit6;
public static readonly var PerfBitExcludeIdle = CBitFieldMaskBit7;
public static readonly var PerfBitMmap = CBitFieldMaskBit8;
public static readonly var PerfBitComm = CBitFieldMaskBit9;
public static readonly var PerfBitFreq = CBitFieldMaskBit10;
public static readonly var PerfBitInheritStat = CBitFieldMaskBit11;
public static readonly var PerfBitEnableOnExec = CBitFieldMaskBit12;
public static readonly var PerfBitTask = CBitFieldMaskBit13;
public static readonly var PerfBitWatermark = CBitFieldMaskBit14;
public static readonly var PerfBitPreciseIPBit1 = CBitFieldMaskBit15;
public static readonly var PerfBitPreciseIPBit2 = CBitFieldMaskBit16;
public static readonly var PerfBitMmapData = CBitFieldMaskBit17;
public static readonly var PerfBitSampleIDAll = CBitFieldMaskBit18;
public static readonly var PerfBitExcludeHost = CBitFieldMaskBit19;
public static readonly var PerfBitExcludeGuest = CBitFieldMaskBit20;
public static readonly var PerfBitExcludeCallchainKernel = CBitFieldMaskBit21;
public static readonly var PerfBitExcludeCallchainUser = CBitFieldMaskBit22;
public static readonly var PerfBitMmap2 = CBitFieldMaskBit23;
public static readonly var PerfBitCommExec = CBitFieldMaskBit24;
public static readonly var PerfBitUseClockID = CBitFieldMaskBit25;
public static readonly var PerfBitContextSwitch = CBitFieldMaskBit26;


public static readonly nuint PERF_TYPE_HARDWARE = 0x0;
public static readonly nuint PERF_TYPE_SOFTWARE = 0x1;
public static readonly nuint PERF_TYPE_TRACEPOINT = 0x2;
public static readonly nuint PERF_TYPE_HW_CACHE = 0x3;
public static readonly nuint PERF_TYPE_RAW = 0x4;
public static readonly nuint PERF_TYPE_BREAKPOINT = 0x5;
public static readonly nuint PERF_TYPE_MAX = 0x6;
public static readonly nuint PERF_COUNT_HW_CPU_CYCLES = 0x0;
public static readonly nuint PERF_COUNT_HW_INSTRUCTIONS = 0x1;
public static readonly nuint PERF_COUNT_HW_CACHE_REFERENCES = 0x2;
public static readonly nuint PERF_COUNT_HW_CACHE_MISSES = 0x3;
public static readonly nuint PERF_COUNT_HW_BRANCH_INSTRUCTIONS = 0x4;
public static readonly nuint PERF_COUNT_HW_BRANCH_MISSES = 0x5;
public static readonly nuint PERF_COUNT_HW_BUS_CYCLES = 0x6;
public static readonly nuint PERF_COUNT_HW_STALLED_CYCLES_FRONTEND = 0x7;
public static readonly nuint PERF_COUNT_HW_STALLED_CYCLES_BACKEND = 0x8;
public static readonly nuint PERF_COUNT_HW_REF_CPU_CYCLES = 0x9;
public static readonly nuint PERF_COUNT_HW_MAX = 0xa;
public static readonly nuint PERF_COUNT_HW_CACHE_L1D = 0x0;
public static readonly nuint PERF_COUNT_HW_CACHE_L1I = 0x1;
public static readonly nuint PERF_COUNT_HW_CACHE_LL = 0x2;
public static readonly nuint PERF_COUNT_HW_CACHE_DTLB = 0x3;
public static readonly nuint PERF_COUNT_HW_CACHE_ITLB = 0x4;
public static readonly nuint PERF_COUNT_HW_CACHE_BPU = 0x5;
public static readonly nuint PERF_COUNT_HW_CACHE_NODE = 0x6;
public static readonly nuint PERF_COUNT_HW_CACHE_MAX = 0x7;
public static readonly nuint PERF_COUNT_HW_CACHE_OP_READ = 0x0;
public static readonly nuint PERF_COUNT_HW_CACHE_OP_WRITE = 0x1;
public static readonly nuint PERF_COUNT_HW_CACHE_OP_PREFETCH = 0x2;
public static readonly nuint PERF_COUNT_HW_CACHE_OP_MAX = 0x3;
public static readonly nuint PERF_COUNT_HW_CACHE_RESULT_ACCESS = 0x0;
public static readonly nuint PERF_COUNT_HW_CACHE_RESULT_MISS = 0x1;
public static readonly nuint PERF_COUNT_HW_CACHE_RESULT_MAX = 0x2;
public static readonly nuint PERF_COUNT_SW_CPU_CLOCK = 0x0;
public static readonly nuint PERF_COUNT_SW_TASK_CLOCK = 0x1;
public static readonly nuint PERF_COUNT_SW_PAGE_FAULTS = 0x2;
public static readonly nuint PERF_COUNT_SW_CONTEXT_SWITCHES = 0x3;
public static readonly nuint PERF_COUNT_SW_CPU_MIGRATIONS = 0x4;
public static readonly nuint PERF_COUNT_SW_PAGE_FAULTS_MIN = 0x5;
public static readonly nuint PERF_COUNT_SW_PAGE_FAULTS_MAJ = 0x6;
public static readonly nuint PERF_COUNT_SW_ALIGNMENT_FAULTS = 0x7;
public static readonly nuint PERF_COUNT_SW_EMULATION_FAULTS = 0x8;
public static readonly nuint PERF_COUNT_SW_DUMMY = 0x9;
public static readonly nuint PERF_COUNT_SW_BPF_OUTPUT = 0xa;
public static readonly nuint PERF_COUNT_SW_MAX = 0xb;
public static readonly nuint PERF_SAMPLE_IP = 0x1;
public static readonly nuint PERF_SAMPLE_TID = 0x2;
public static readonly nuint PERF_SAMPLE_TIME = 0x4;
public static readonly nuint PERF_SAMPLE_ADDR = 0x8;
public static readonly nuint PERF_SAMPLE_READ = 0x10;
public static readonly nuint PERF_SAMPLE_CALLCHAIN = 0x20;
public static readonly nuint PERF_SAMPLE_ID = 0x40;
public static readonly nuint PERF_SAMPLE_CPU = 0x80;
public static readonly nuint PERF_SAMPLE_PERIOD = 0x100;
public static readonly nuint PERF_SAMPLE_STREAM_ID = 0x200;
public static readonly nuint PERF_SAMPLE_RAW = 0x400;
public static readonly nuint PERF_SAMPLE_BRANCH_STACK = 0x800;
public static readonly nuint PERF_SAMPLE_REGS_USER = 0x1000;
public static readonly nuint PERF_SAMPLE_STACK_USER = 0x2000;
public static readonly nuint PERF_SAMPLE_WEIGHT = 0x4000;
public static readonly nuint PERF_SAMPLE_DATA_SRC = 0x8000;
public static readonly nuint PERF_SAMPLE_IDENTIFIER = 0x10000;
public static readonly nuint PERF_SAMPLE_TRANSACTION = 0x20000;
public static readonly nuint PERF_SAMPLE_REGS_INTR = 0x40000;
public static readonly nuint PERF_SAMPLE_PHYS_ADDR = 0x80000;
public static readonly nuint PERF_SAMPLE_AUX = 0x100000;
public static readonly nuint PERF_SAMPLE_CGROUP = 0x200000;
public static readonly nuint PERF_SAMPLE_DATA_PAGE_SIZE = 0x400000;
public static readonly nuint PERF_SAMPLE_CODE_PAGE_SIZE = 0x800000;
public static readonly nuint PERF_SAMPLE_WEIGHT_STRUCT = 0x1000000;
public static readonly nuint PERF_SAMPLE_MAX = 0x2000000;
public static readonly nuint PERF_SAMPLE_BRANCH_USER_SHIFT = 0x0;
public static readonly nuint PERF_SAMPLE_BRANCH_KERNEL_SHIFT = 0x1;
public static readonly nuint PERF_SAMPLE_BRANCH_HV_SHIFT = 0x2;
public static readonly nuint PERF_SAMPLE_BRANCH_ANY_SHIFT = 0x3;
public static readonly nuint PERF_SAMPLE_BRANCH_ANY_CALL_SHIFT = 0x4;
public static readonly nuint PERF_SAMPLE_BRANCH_ANY_RETURN_SHIFT = 0x5;
public static readonly nuint PERF_SAMPLE_BRANCH_IND_CALL_SHIFT = 0x6;
public static readonly nuint PERF_SAMPLE_BRANCH_ABORT_TX_SHIFT = 0x7;
public static readonly nuint PERF_SAMPLE_BRANCH_IN_TX_SHIFT = 0x8;
public static readonly nuint PERF_SAMPLE_BRANCH_NO_TX_SHIFT = 0x9;
public static readonly nuint PERF_SAMPLE_BRANCH_COND_SHIFT = 0xa;
public static readonly nuint PERF_SAMPLE_BRANCH_CALL_STACK_SHIFT = 0xb;
public static readonly nuint PERF_SAMPLE_BRANCH_IND_JUMP_SHIFT = 0xc;
public static readonly nuint PERF_SAMPLE_BRANCH_CALL_SHIFT = 0xd;
public static readonly nuint PERF_SAMPLE_BRANCH_NO_FLAGS_SHIFT = 0xe;
public static readonly nuint PERF_SAMPLE_BRANCH_NO_CYCLES_SHIFT = 0xf;
public static readonly nuint PERF_SAMPLE_BRANCH_TYPE_SAVE_SHIFT = 0x10;
public static readonly nuint PERF_SAMPLE_BRANCH_HW_INDEX_SHIFT = 0x11;
public static readonly nuint PERF_SAMPLE_BRANCH_MAX_SHIFT = 0x12;
public static readonly nuint PERF_SAMPLE_BRANCH_USER = 0x1;
public static readonly nuint PERF_SAMPLE_BRANCH_KERNEL = 0x2;
public static readonly nuint PERF_SAMPLE_BRANCH_HV = 0x4;
public static readonly nuint PERF_SAMPLE_BRANCH_ANY = 0x8;
public static readonly nuint PERF_SAMPLE_BRANCH_ANY_CALL = 0x10;
public static readonly nuint PERF_SAMPLE_BRANCH_ANY_RETURN = 0x20;
public static readonly nuint PERF_SAMPLE_BRANCH_IND_CALL = 0x40;
public static readonly nuint PERF_SAMPLE_BRANCH_ABORT_TX = 0x80;
public static readonly nuint PERF_SAMPLE_BRANCH_IN_TX = 0x100;
public static readonly nuint PERF_SAMPLE_BRANCH_NO_TX = 0x200;
public static readonly nuint PERF_SAMPLE_BRANCH_COND = 0x400;
public static readonly nuint PERF_SAMPLE_BRANCH_CALL_STACK = 0x800;
public static readonly nuint PERF_SAMPLE_BRANCH_IND_JUMP = 0x1000;
public static readonly nuint PERF_SAMPLE_BRANCH_CALL = 0x2000;
public static readonly nuint PERF_SAMPLE_BRANCH_NO_FLAGS = 0x4000;
public static readonly nuint PERF_SAMPLE_BRANCH_NO_CYCLES = 0x8000;
public static readonly nuint PERF_SAMPLE_BRANCH_TYPE_SAVE = 0x10000;
public static readonly nuint PERF_SAMPLE_BRANCH_HW_INDEX = 0x20000;
public static readonly nuint PERF_SAMPLE_BRANCH_MAX = 0x40000;
public static readonly nuint PERF_BR_UNKNOWN = 0x0;
public static readonly nuint PERF_BR_COND = 0x1;
public static readonly nuint PERF_BR_UNCOND = 0x2;
public static readonly nuint PERF_BR_IND = 0x3;
public static readonly nuint PERF_BR_CALL = 0x4;
public static readonly nuint PERF_BR_IND_CALL = 0x5;
public static readonly nuint PERF_BR_RET = 0x6;
public static readonly nuint PERF_BR_SYSCALL = 0x7;
public static readonly nuint PERF_BR_SYSRET = 0x8;
public static readonly nuint PERF_BR_COND_CALL = 0x9;
public static readonly nuint PERF_BR_COND_RET = 0xa;
public static readonly nuint PERF_BR_MAX = 0xb;
public static readonly nuint PERF_SAMPLE_REGS_ABI_NONE = 0x0;
public static readonly nuint PERF_SAMPLE_REGS_ABI_32 = 0x1;
public static readonly nuint PERF_SAMPLE_REGS_ABI_64 = 0x2;
public static readonly nuint PERF_TXN_ELISION = 0x1;
public static readonly nuint PERF_TXN_TRANSACTION = 0x2;
public static readonly nuint PERF_TXN_SYNC = 0x4;
public static readonly nuint PERF_TXN_ASYNC = 0x8;
public static readonly nuint PERF_TXN_RETRY = 0x10;
public static readonly nuint PERF_TXN_CONFLICT = 0x20;
public static readonly nuint PERF_TXN_CAPACITY_WRITE = 0x40;
public static readonly nuint PERF_TXN_CAPACITY_READ = 0x80;
public static readonly nuint PERF_TXN_MAX = 0x100;
public static readonly nuint PERF_TXN_ABORT_MASK = -0x100000000;
public static readonly nuint PERF_TXN_ABORT_SHIFT = 0x20;
public static readonly nuint PERF_FORMAT_TOTAL_TIME_ENABLED = 0x1;
public static readonly nuint PERF_FORMAT_TOTAL_TIME_RUNNING = 0x2;
public static readonly nuint PERF_FORMAT_ID = 0x4;
public static readonly nuint PERF_FORMAT_GROUP = 0x8;
public static readonly nuint PERF_FORMAT_MAX = 0x10;
public static readonly nuint PERF_IOC_FLAG_GROUP = 0x1;
public static readonly nuint PERF_RECORD_MMAP = 0x1;
public static readonly nuint PERF_RECORD_LOST = 0x2;
public static readonly nuint PERF_RECORD_COMM = 0x3;
public static readonly nuint PERF_RECORD_EXIT = 0x4;
public static readonly nuint PERF_RECORD_THROTTLE = 0x5;
public static readonly nuint PERF_RECORD_UNTHROTTLE = 0x6;
public static readonly nuint PERF_RECORD_FORK = 0x7;
public static readonly nuint PERF_RECORD_READ = 0x8;
public static readonly nuint PERF_RECORD_SAMPLE = 0x9;
public static readonly nuint PERF_RECORD_MMAP2 = 0xa;
public static readonly nuint PERF_RECORD_AUX = 0xb;
public static readonly nuint PERF_RECORD_ITRACE_START = 0xc;
public static readonly nuint PERF_RECORD_LOST_SAMPLES = 0xd;
public static readonly nuint PERF_RECORD_SWITCH = 0xe;
public static readonly nuint PERF_RECORD_SWITCH_CPU_WIDE = 0xf;
public static readonly nuint PERF_RECORD_NAMESPACES = 0x10;
public static readonly nuint PERF_RECORD_KSYMBOL = 0x11;
public static readonly nuint PERF_RECORD_BPF_EVENT = 0x12;
public static readonly nuint PERF_RECORD_CGROUP = 0x13;
public static readonly nuint PERF_RECORD_TEXT_POKE = 0x14;
public static readonly nuint PERF_RECORD_MAX = 0x15;
public static readonly nuint PERF_RECORD_KSYMBOL_TYPE_UNKNOWN = 0x0;
public static readonly nuint PERF_RECORD_KSYMBOL_TYPE_BPF = 0x1;
public static readonly nuint PERF_RECORD_KSYMBOL_TYPE_OOL = 0x2;
public static readonly nuint PERF_RECORD_KSYMBOL_TYPE_MAX = 0x3;
public static readonly nuint PERF_BPF_EVENT_UNKNOWN = 0x0;
public static readonly nuint PERF_BPF_EVENT_PROG_LOAD = 0x1;
public static readonly nuint PERF_BPF_EVENT_PROG_UNLOAD = 0x2;
public static readonly nuint PERF_BPF_EVENT_MAX = 0x3;
public static readonly nuint PERF_CONTEXT_HV = -0x20;
public static readonly nuint PERF_CONTEXT_KERNEL = -0x80;
public static readonly nuint PERF_CONTEXT_USER = -0x200;
public static readonly nuint PERF_CONTEXT_GUEST = -0x800;
public static readonly nuint PERF_CONTEXT_GUEST_KERNEL = -0x880;
public static readonly nuint PERF_CONTEXT_GUEST_USER = -0xa00;
public static readonly nuint PERF_CONTEXT_MAX = -0xfff;


public partial struct TCPMD5Sig {
    public SockaddrStorage Addr;
    public byte Flags;
    public byte Prefixlen;
    public ushort Keylen;
    public uint _;
    public array<byte> Key;
}

public partial struct HDDriveCmdHdr {
    public byte Command;
    public byte Number;
    public byte Feature;
    public byte Count;
}

public partial struct HDDriveID {
    public ushort Config;
    public ushort Cyls;
    public ushort Reserved2;
    public ushort Heads;
    public ushort Track_bytes;
    public ushort Sector_bytes;
    public ushort Sectors;
    public ushort Vendor0;
    public ushort Vendor1;
    public ushort Vendor2;
    public array<byte> Serial_no;
    public ushort Buf_type;
    public ushort Buf_size;
    public ushort Ecc_bytes;
    public array<byte> Fw_rev;
    public array<byte> Model;
    public byte Max_multsect;
    public byte Vendor3;
    public ushort Dword_io;
    public byte Vendor4;
    public byte Capability;
    public ushort Reserved50;
    public byte Vendor5;
    public byte TPIO;
    public byte Vendor6;
    public byte TDMA;
    public ushort Field_valid;
    public ushort Cur_cyls;
    public ushort Cur_heads;
    public ushort Cur_sectors;
    public ushort Cur_capacity0;
    public ushort Cur_capacity1;
    public byte Multsect;
    public byte Multsect_valid;
    public uint Lba_capacity;
    public ushort Dma_1word;
    public ushort Dma_mword;
    public ushort Eide_pio_modes;
    public ushort Eide_dma_min;
    public ushort Eide_dma_time;
    public ushort Eide_pio;
    public ushort Eide_pio_iordy;
    public array<ushort> Words69_70;
    public array<ushort> Words71_74;
    public ushort Queue_depth;
    public array<ushort> Words76_79;
    public ushort Major_rev_num;
    public ushort Minor_rev_num;
    public ushort Command_set_1;
    public ushort Command_set_2;
    public ushort Cfsse;
    public ushort Cfs_enable_1;
    public ushort Cfs_enable_2;
    public ushort Csf_default;
    public ushort Dma_ultra;
    public ushort Trseuc;
    public ushort TrsEuc;
    public ushort CurAPMvalues;
    public ushort Mprc;
    public ushort Hw_config;
    public ushort Acoustic;
    public ushort Msrqs;
    public ushort Sxfert;
    public ushort Sal;
    public uint Spg;
    public ulong Lba_capacity_2;
    public array<ushort> Words104_125;
    public ushort Last_lun;
    public ushort Word127;
    public ushort Dlf;
    public ushort Csfo;
    public array<ushort> Words130_155;
    public ushort Word156;
    public array<ushort> Words157_159;
    public ushort Cfa_power;
    public array<ushort> Words161_175;
    public array<ushort> Words176_205;
    public array<ushort> Words206_254;
    public ushort Integrity_word;
}

public static readonly nuint ST_MANDLOCK = 0x40;
public static readonly nuint ST_NOATIME = 0x400;
public static readonly nuint ST_NODEV = 0x4;
public static readonly nuint ST_NODIRATIME = 0x800;
public static readonly nuint ST_NOEXEC = 0x8;
public static readonly nuint ST_NOSUID = 0x2;
public static readonly nuint ST_RDONLY = 0x1;
public static readonly nuint ST_RELATIME = 0x1000;
public static readonly nuint ST_SYNCHRONOUS = 0x10;


public partial struct Tpacket2Hdr {
    public uint Status;
    public uint Len;
    public uint Snaplen;
    public ushort Mac;
    public ushort Net;
    public uint Sec;
    public uint Nsec;
    public ushort Vlan_tci;
    public ushort Vlan_tpid;
    public array<byte> _;
}

public partial struct Tpacket3Hdr {
    public uint Next_offset;
    public uint Sec;
    public uint Nsec;
    public uint Snaplen;
    public uint Len;
    public uint Status;
    public ushort Mac;
    public ushort Net;
    public TpacketHdrVariant1 Hv1;
    public array<byte> _;
}

public partial struct TpacketHdrVariant1 {
    public uint Rxhash;
    public uint Vlan_tci;
    public ushort Vlan_tpid;
    public ushort _;
}

public partial struct TpacketBlockDesc {
    public uint Version;
    public uint To_priv;
    public array<byte> Hdr;
}

public partial struct TpacketBDTS {
    public uint Sec;
    public uint Usec;
}

public partial struct TpacketHdrV1 {
    public uint Block_status;
    public uint Num_pkts;
    public uint Offset_to_first_pkt;
    public uint Blk_len;
    public ulong Seq_num;
    public TpacketBDTS Ts_first_pkt;
    public TpacketBDTS Ts_last_pkt;
}

public partial struct TpacketReq {
    public uint Block_size;
    public uint Block_nr;
    public uint Frame_size;
    public uint Frame_nr;
}

public partial struct TpacketReq3 {
    public uint Block_size;
    public uint Block_nr;
    public uint Frame_size;
    public uint Frame_nr;
    public uint Retire_blk_tov;
    public uint Sizeof_priv;
    public uint Feature_req_word;
}

public partial struct TpacketStats {
    public uint Packets;
    public uint Drops;
}

public partial struct TpacketStatsV3 {
    public uint Packets;
    public uint Drops;
    public uint Freeze_q_cnt;
}

public partial struct TpacketAuxdata {
    public uint Status;
    public uint Len;
    public uint Snaplen;
    public ushort Mac;
    public ushort Net;
    public ushort Vlan_tci;
    public ushort Vlan_tpid;
}

public static readonly nuint TPACKET_V1 = 0x0;
public static readonly nuint TPACKET_V2 = 0x1;
public static readonly nuint TPACKET_V3 = 0x2;


public static readonly nuint SizeofTpacket2Hdr = 0x20;
public static readonly nuint SizeofTpacket3Hdr = 0x30;

public static readonly nuint SizeofTpacketStats = 0x8;
public static readonly nuint SizeofTpacketStatsV3 = 0xc;


public static readonly nuint IFLA_UNSPEC = 0x0;
public static readonly nuint IFLA_ADDRESS = 0x1;
public static readonly nuint IFLA_BROADCAST = 0x2;
public static readonly nuint IFLA_IFNAME = 0x3;
public static readonly nuint IFLA_MTU = 0x4;
public static readonly nuint IFLA_LINK = 0x5;
public static readonly nuint IFLA_QDISC = 0x6;
public static readonly nuint IFLA_STATS = 0x7;
public static readonly nuint IFLA_COST = 0x8;
public static readonly nuint IFLA_PRIORITY = 0x9;
public static readonly nuint IFLA_MASTER = 0xa;
public static readonly nuint IFLA_WIRELESS = 0xb;
public static readonly nuint IFLA_PROTINFO = 0xc;
public static readonly nuint IFLA_TXQLEN = 0xd;
public static readonly nuint IFLA_MAP = 0xe;
public static readonly nuint IFLA_WEIGHT = 0xf;
public static readonly nuint IFLA_OPERSTATE = 0x10;
public static readonly nuint IFLA_LINKMODE = 0x11;
public static readonly nuint IFLA_LINKINFO = 0x12;
public static readonly nuint IFLA_NET_NS_PID = 0x13;
public static readonly nuint IFLA_IFALIAS = 0x14;
public static readonly nuint IFLA_NUM_VF = 0x15;
public static readonly nuint IFLA_VFINFO_LIST = 0x16;
public static readonly nuint IFLA_STATS64 = 0x17;
public static readonly nuint IFLA_VF_PORTS = 0x18;
public static readonly nuint IFLA_PORT_SELF = 0x19;
public static readonly nuint IFLA_AF_SPEC = 0x1a;
public static readonly nuint IFLA_GROUP = 0x1b;
public static readonly nuint IFLA_NET_NS_FD = 0x1c;
public static readonly nuint IFLA_EXT_MASK = 0x1d;
public static readonly nuint IFLA_PROMISCUITY = 0x1e;
public static readonly nuint IFLA_NUM_TX_QUEUES = 0x1f;
public static readonly nuint IFLA_NUM_RX_QUEUES = 0x20;
public static readonly nuint IFLA_CARRIER = 0x21;
public static readonly nuint IFLA_PHYS_PORT_ID = 0x22;
public static readonly nuint IFLA_CARRIER_CHANGES = 0x23;
public static readonly nuint IFLA_PHYS_SWITCH_ID = 0x24;
public static readonly nuint IFLA_LINK_NETNSID = 0x25;
public static readonly nuint IFLA_PHYS_PORT_NAME = 0x26;
public static readonly nuint IFLA_PROTO_DOWN = 0x27;
public static readonly nuint IFLA_GSO_MAX_SEGS = 0x28;
public static readonly nuint IFLA_GSO_MAX_SIZE = 0x29;
public static readonly nuint IFLA_PAD = 0x2a;
public static readonly nuint IFLA_XDP = 0x2b;
public static readonly nuint IFLA_EVENT = 0x2c;
public static readonly nuint IFLA_NEW_NETNSID = 0x2d;
public static readonly nuint IFLA_IF_NETNSID = 0x2e;
public static readonly nuint IFLA_TARGET_NETNSID = 0x2e;
public static readonly nuint IFLA_CARRIER_UP_COUNT = 0x2f;
public static readonly nuint IFLA_CARRIER_DOWN_COUNT = 0x30;
public static readonly nuint IFLA_NEW_IFINDEX = 0x31;
public static readonly nuint IFLA_MIN_MTU = 0x32;
public static readonly nuint IFLA_MAX_MTU = 0x33;
public static readonly nuint IFLA_PROP_LIST = 0x34;
public static readonly nuint IFLA_ALT_IFNAME = 0x35;
public static readonly nuint IFLA_PERM_ADDRESS = 0x36;
public static readonly nuint IFLA_PROTO_DOWN_REASON = 0x37;
public static readonly nuint IFLA_PROTO_DOWN_REASON_UNSPEC = 0x0;
public static readonly nuint IFLA_PROTO_DOWN_REASON_MASK = 0x1;
public static readonly nuint IFLA_PROTO_DOWN_REASON_VALUE = 0x2;
public static readonly nuint IFLA_PROTO_DOWN_REASON_MAX = 0x2;
public static readonly nuint IFLA_INET_UNSPEC = 0x0;
public static readonly nuint IFLA_INET_CONF = 0x1;
public static readonly nuint IFLA_INET6_UNSPEC = 0x0;
public static readonly nuint IFLA_INET6_FLAGS = 0x1;
public static readonly nuint IFLA_INET6_CONF = 0x2;
public static readonly nuint IFLA_INET6_STATS = 0x3;
public static readonly nuint IFLA_INET6_MCAST = 0x4;
public static readonly nuint IFLA_INET6_CACHEINFO = 0x5;
public static readonly nuint IFLA_INET6_ICMP6STATS = 0x6;
public static readonly nuint IFLA_INET6_TOKEN = 0x7;
public static readonly nuint IFLA_INET6_ADDR_GEN_MODE = 0x8;
public static readonly nuint IFLA_BR_UNSPEC = 0x0;
public static readonly nuint IFLA_BR_FORWARD_DELAY = 0x1;
public static readonly nuint IFLA_BR_HELLO_TIME = 0x2;
public static readonly nuint IFLA_BR_MAX_AGE = 0x3;
public static readonly nuint IFLA_BR_AGEING_TIME = 0x4;
public static readonly nuint IFLA_BR_STP_STATE = 0x5;
public static readonly nuint IFLA_BR_PRIORITY = 0x6;
public static readonly nuint IFLA_BR_VLAN_FILTERING = 0x7;
public static readonly nuint IFLA_BR_VLAN_PROTOCOL = 0x8;
public static readonly nuint IFLA_BR_GROUP_FWD_MASK = 0x9;
public static readonly nuint IFLA_BR_ROOT_ID = 0xa;
public static readonly nuint IFLA_BR_BRIDGE_ID = 0xb;
public static readonly nuint IFLA_BR_ROOT_PORT = 0xc;
public static readonly nuint IFLA_BR_ROOT_PATH_COST = 0xd;
public static readonly nuint IFLA_BR_TOPOLOGY_CHANGE = 0xe;
public static readonly nuint IFLA_BR_TOPOLOGY_CHANGE_DETECTED = 0xf;
public static readonly nuint IFLA_BR_HELLO_TIMER = 0x10;
public static readonly nuint IFLA_BR_TCN_TIMER = 0x11;
public static readonly nuint IFLA_BR_TOPOLOGY_CHANGE_TIMER = 0x12;
public static readonly nuint IFLA_BR_GC_TIMER = 0x13;
public static readonly nuint IFLA_BR_GROUP_ADDR = 0x14;
public static readonly nuint IFLA_BR_FDB_FLUSH = 0x15;
public static readonly nuint IFLA_BR_MCAST_ROUTER = 0x16;
public static readonly nuint IFLA_BR_MCAST_SNOOPING = 0x17;
public static readonly nuint IFLA_BR_MCAST_QUERY_USE_IFADDR = 0x18;
public static readonly nuint IFLA_BR_MCAST_QUERIER = 0x19;
public static readonly nuint IFLA_BR_MCAST_HASH_ELASTICITY = 0x1a;
public static readonly nuint IFLA_BR_MCAST_HASH_MAX = 0x1b;
public static readonly nuint IFLA_BR_MCAST_LAST_MEMBER_CNT = 0x1c;
public static readonly nuint IFLA_BR_MCAST_STARTUP_QUERY_CNT = 0x1d;
public static readonly nuint IFLA_BR_MCAST_LAST_MEMBER_INTVL = 0x1e;
public static readonly nuint IFLA_BR_MCAST_MEMBERSHIP_INTVL = 0x1f;
public static readonly nuint IFLA_BR_MCAST_QUERIER_INTVL = 0x20;
public static readonly nuint IFLA_BR_MCAST_QUERY_INTVL = 0x21;
public static readonly nuint IFLA_BR_MCAST_QUERY_RESPONSE_INTVL = 0x22;
public static readonly nuint IFLA_BR_MCAST_STARTUP_QUERY_INTVL = 0x23;
public static readonly nuint IFLA_BR_NF_CALL_IPTABLES = 0x24;
public static readonly nuint IFLA_BR_NF_CALL_IP6TABLES = 0x25;
public static readonly nuint IFLA_BR_NF_CALL_ARPTABLES = 0x26;
public static readonly nuint IFLA_BR_VLAN_DEFAULT_PVID = 0x27;
public static readonly nuint IFLA_BR_PAD = 0x28;
public static readonly nuint IFLA_BR_VLAN_STATS_ENABLED = 0x29;
public static readonly nuint IFLA_BR_MCAST_STATS_ENABLED = 0x2a;
public static readonly nuint IFLA_BR_MCAST_IGMP_VERSION = 0x2b;
public static readonly nuint IFLA_BR_MCAST_MLD_VERSION = 0x2c;
public static readonly nuint IFLA_BR_VLAN_STATS_PER_PORT = 0x2d;
public static readonly nuint IFLA_BR_MULTI_BOOLOPT = 0x2e;
public static readonly nuint IFLA_BRPORT_UNSPEC = 0x0;
public static readonly nuint IFLA_BRPORT_STATE = 0x1;
public static readonly nuint IFLA_BRPORT_PRIORITY = 0x2;
public static readonly nuint IFLA_BRPORT_COST = 0x3;
public static readonly nuint IFLA_BRPORT_MODE = 0x4;
public static readonly nuint IFLA_BRPORT_GUARD = 0x5;
public static readonly nuint IFLA_BRPORT_PROTECT = 0x6;
public static readonly nuint IFLA_BRPORT_FAST_LEAVE = 0x7;
public static readonly nuint IFLA_BRPORT_LEARNING = 0x8;
public static readonly nuint IFLA_BRPORT_UNICAST_FLOOD = 0x9;
public static readonly nuint IFLA_BRPORT_PROXYARP = 0xa;
public static readonly nuint IFLA_BRPORT_LEARNING_SYNC = 0xb;
public static readonly nuint IFLA_BRPORT_PROXYARP_WIFI = 0xc;
public static readonly nuint IFLA_BRPORT_ROOT_ID = 0xd;
public static readonly nuint IFLA_BRPORT_BRIDGE_ID = 0xe;
public static readonly nuint IFLA_BRPORT_DESIGNATED_PORT = 0xf;
public static readonly nuint IFLA_BRPORT_DESIGNATED_COST = 0x10;
public static readonly nuint IFLA_BRPORT_ID = 0x11;
public static readonly nuint IFLA_BRPORT_NO = 0x12;
public static readonly nuint IFLA_BRPORT_TOPOLOGY_CHANGE_ACK = 0x13;
public static readonly nuint IFLA_BRPORT_CONFIG_PENDING = 0x14;
public static readonly nuint IFLA_BRPORT_MESSAGE_AGE_TIMER = 0x15;
public static readonly nuint IFLA_BRPORT_FORWARD_DELAY_TIMER = 0x16;
public static readonly nuint IFLA_BRPORT_HOLD_TIMER = 0x17;
public static readonly nuint IFLA_BRPORT_FLUSH = 0x18;
public static readonly nuint IFLA_BRPORT_MULTICAST_ROUTER = 0x19;
public static readonly nuint IFLA_BRPORT_PAD = 0x1a;
public static readonly nuint IFLA_BRPORT_MCAST_FLOOD = 0x1b;
public static readonly nuint IFLA_BRPORT_MCAST_TO_UCAST = 0x1c;
public static readonly nuint IFLA_BRPORT_VLAN_TUNNEL = 0x1d;
public static readonly nuint IFLA_BRPORT_BCAST_FLOOD = 0x1e;
public static readonly nuint IFLA_BRPORT_GROUP_FWD_MASK = 0x1f;
public static readonly nuint IFLA_BRPORT_NEIGH_SUPPRESS = 0x20;
public static readonly nuint IFLA_BRPORT_ISOLATED = 0x21;
public static readonly nuint IFLA_BRPORT_BACKUP_PORT = 0x22;
public static readonly nuint IFLA_BRPORT_MRP_RING_OPEN = 0x23;
public static readonly nuint IFLA_BRPORT_MRP_IN_OPEN = 0x24;
public static readonly nuint IFLA_INFO_UNSPEC = 0x0;
public static readonly nuint IFLA_INFO_KIND = 0x1;
public static readonly nuint IFLA_INFO_DATA = 0x2;
public static readonly nuint IFLA_INFO_XSTATS = 0x3;
public static readonly nuint IFLA_INFO_SLAVE_KIND = 0x4;
public static readonly nuint IFLA_INFO_SLAVE_DATA = 0x5;
public static readonly nuint IFLA_VLAN_UNSPEC = 0x0;
public static readonly nuint IFLA_VLAN_ID = 0x1;
public static readonly nuint IFLA_VLAN_FLAGS = 0x2;
public static readonly nuint IFLA_VLAN_EGRESS_QOS = 0x3;
public static readonly nuint IFLA_VLAN_INGRESS_QOS = 0x4;
public static readonly nuint IFLA_VLAN_PROTOCOL = 0x5;
public static readonly nuint IFLA_VLAN_QOS_UNSPEC = 0x0;
public static readonly nuint IFLA_VLAN_QOS_MAPPING = 0x1;
public static readonly nuint IFLA_MACVLAN_UNSPEC = 0x0;
public static readonly nuint IFLA_MACVLAN_MODE = 0x1;
public static readonly nuint IFLA_MACVLAN_FLAGS = 0x2;
public static readonly nuint IFLA_MACVLAN_MACADDR_MODE = 0x3;
public static readonly nuint IFLA_MACVLAN_MACADDR = 0x4;
public static readonly nuint IFLA_MACVLAN_MACADDR_DATA = 0x5;
public static readonly nuint IFLA_MACVLAN_MACADDR_COUNT = 0x6;
public static readonly nuint IFLA_VRF_UNSPEC = 0x0;
public static readonly nuint IFLA_VRF_TABLE = 0x1;
public static readonly nuint IFLA_VRF_PORT_UNSPEC = 0x0;
public static readonly nuint IFLA_VRF_PORT_TABLE = 0x1;
public static readonly nuint IFLA_MACSEC_UNSPEC = 0x0;
public static readonly nuint IFLA_MACSEC_SCI = 0x1;
public static readonly nuint IFLA_MACSEC_PORT = 0x2;
public static readonly nuint IFLA_MACSEC_ICV_LEN = 0x3;
public static readonly nuint IFLA_MACSEC_CIPHER_SUITE = 0x4;
public static readonly nuint IFLA_MACSEC_WINDOW = 0x5;
public static readonly nuint IFLA_MACSEC_ENCODING_SA = 0x6;
public static readonly nuint IFLA_MACSEC_ENCRYPT = 0x7;
public static readonly nuint IFLA_MACSEC_PROTECT = 0x8;
public static readonly nuint IFLA_MACSEC_INC_SCI = 0x9;
public static readonly nuint IFLA_MACSEC_ES = 0xa;
public static readonly nuint IFLA_MACSEC_SCB = 0xb;
public static readonly nuint IFLA_MACSEC_REPLAY_PROTECT = 0xc;
public static readonly nuint IFLA_MACSEC_VALIDATION = 0xd;
public static readonly nuint IFLA_MACSEC_PAD = 0xe;
public static readonly nuint IFLA_MACSEC_OFFLOAD = 0xf;
public static readonly nuint IFLA_XFRM_UNSPEC = 0x0;
public static readonly nuint IFLA_XFRM_LINK = 0x1;
public static readonly nuint IFLA_XFRM_IF_ID = 0x2;
public static readonly nuint IFLA_IPVLAN_UNSPEC = 0x0;
public static readonly nuint IFLA_IPVLAN_MODE = 0x1;
public static readonly nuint IFLA_IPVLAN_FLAGS = 0x2;
public static readonly nuint IFLA_VXLAN_UNSPEC = 0x0;
public static readonly nuint IFLA_VXLAN_ID = 0x1;
public static readonly nuint IFLA_VXLAN_GROUP = 0x2;
public static readonly nuint IFLA_VXLAN_LINK = 0x3;
public static readonly nuint IFLA_VXLAN_LOCAL = 0x4;
public static readonly nuint IFLA_VXLAN_TTL = 0x5;
public static readonly nuint IFLA_VXLAN_TOS = 0x6;
public static readonly nuint IFLA_VXLAN_LEARNING = 0x7;
public static readonly nuint IFLA_VXLAN_AGEING = 0x8;
public static readonly nuint IFLA_VXLAN_LIMIT = 0x9;
public static readonly nuint IFLA_VXLAN_PORT_RANGE = 0xa;
public static readonly nuint IFLA_VXLAN_PROXY = 0xb;
public static readonly nuint IFLA_VXLAN_RSC = 0xc;
public static readonly nuint IFLA_VXLAN_L2MISS = 0xd;
public static readonly nuint IFLA_VXLAN_L3MISS = 0xe;
public static readonly nuint IFLA_VXLAN_PORT = 0xf;
public static readonly nuint IFLA_VXLAN_GROUP6 = 0x10;
public static readonly nuint IFLA_VXLAN_LOCAL6 = 0x11;
public static readonly nuint IFLA_VXLAN_UDP_CSUM = 0x12;
public static readonly nuint IFLA_VXLAN_UDP_ZERO_CSUM6_TX = 0x13;
public static readonly nuint IFLA_VXLAN_UDP_ZERO_CSUM6_RX = 0x14;
public static readonly nuint IFLA_VXLAN_REMCSUM_TX = 0x15;
public static readonly nuint IFLA_VXLAN_REMCSUM_RX = 0x16;
public static readonly nuint IFLA_VXLAN_GBP = 0x17;
public static readonly nuint IFLA_VXLAN_REMCSUM_NOPARTIAL = 0x18;
public static readonly nuint IFLA_VXLAN_COLLECT_METADATA = 0x19;
public static readonly nuint IFLA_VXLAN_LABEL = 0x1a;
public static readonly nuint IFLA_VXLAN_GPE = 0x1b;
public static readonly nuint IFLA_VXLAN_TTL_INHERIT = 0x1c;
public static readonly nuint IFLA_VXLAN_DF = 0x1d;
public static readonly nuint IFLA_GENEVE_UNSPEC = 0x0;
public static readonly nuint IFLA_GENEVE_ID = 0x1;
public static readonly nuint IFLA_GENEVE_REMOTE = 0x2;
public static readonly nuint IFLA_GENEVE_TTL = 0x3;
public static readonly nuint IFLA_GENEVE_TOS = 0x4;
public static readonly nuint IFLA_GENEVE_PORT = 0x5;
public static readonly nuint IFLA_GENEVE_COLLECT_METADATA = 0x6;
public static readonly nuint IFLA_GENEVE_REMOTE6 = 0x7;
public static readonly nuint IFLA_GENEVE_UDP_CSUM = 0x8;
public static readonly nuint IFLA_GENEVE_UDP_ZERO_CSUM6_TX = 0x9;
public static readonly nuint IFLA_GENEVE_UDP_ZERO_CSUM6_RX = 0xa;
public static readonly nuint IFLA_GENEVE_LABEL = 0xb;
public static readonly nuint IFLA_GENEVE_TTL_INHERIT = 0xc;
public static readonly nuint IFLA_GENEVE_DF = 0xd;
public static readonly nuint IFLA_BAREUDP_UNSPEC = 0x0;
public static readonly nuint IFLA_BAREUDP_PORT = 0x1;
public static readonly nuint IFLA_BAREUDP_ETHERTYPE = 0x2;
public static readonly nuint IFLA_BAREUDP_SRCPORT_MIN = 0x3;
public static readonly nuint IFLA_BAREUDP_MULTIPROTO_MODE = 0x4;
public static readonly nuint IFLA_PPP_UNSPEC = 0x0;
public static readonly nuint IFLA_PPP_DEV_FD = 0x1;
public static readonly nuint IFLA_GTP_UNSPEC = 0x0;
public static readonly nuint IFLA_GTP_FD0 = 0x1;
public static readonly nuint IFLA_GTP_FD1 = 0x2;
public static readonly nuint IFLA_GTP_PDP_HASHSIZE = 0x3;
public static readonly nuint IFLA_GTP_ROLE = 0x4;
public static readonly nuint IFLA_BOND_UNSPEC = 0x0;
public static readonly nuint IFLA_BOND_MODE = 0x1;
public static readonly nuint IFLA_BOND_ACTIVE_SLAVE = 0x2;
public static readonly nuint IFLA_BOND_MIIMON = 0x3;
public static readonly nuint IFLA_BOND_UPDELAY = 0x4;
public static readonly nuint IFLA_BOND_DOWNDELAY = 0x5;
public static readonly nuint IFLA_BOND_USE_CARRIER = 0x6;
public static readonly nuint IFLA_BOND_ARP_INTERVAL = 0x7;
public static readonly nuint IFLA_BOND_ARP_IP_TARGET = 0x8;
public static readonly nuint IFLA_BOND_ARP_VALIDATE = 0x9;
public static readonly nuint IFLA_BOND_ARP_ALL_TARGETS = 0xa;
public static readonly nuint IFLA_BOND_PRIMARY = 0xb;
public static readonly nuint IFLA_BOND_PRIMARY_RESELECT = 0xc;
public static readonly nuint IFLA_BOND_FAIL_OVER_MAC = 0xd;
public static readonly nuint IFLA_BOND_XMIT_HASH_POLICY = 0xe;
public static readonly nuint IFLA_BOND_RESEND_IGMP = 0xf;
public static readonly nuint IFLA_BOND_NUM_PEER_NOTIF = 0x10;
public static readonly nuint IFLA_BOND_ALL_SLAVES_ACTIVE = 0x11;
public static readonly nuint IFLA_BOND_MIN_LINKS = 0x12;
public static readonly nuint IFLA_BOND_LP_INTERVAL = 0x13;
public static readonly nuint IFLA_BOND_PACKETS_PER_SLAVE = 0x14;
public static readonly nuint IFLA_BOND_AD_LACP_RATE = 0x15;
public static readonly nuint IFLA_BOND_AD_SELECT = 0x16;
public static readonly nuint IFLA_BOND_AD_INFO = 0x17;
public static readonly nuint IFLA_BOND_AD_ACTOR_SYS_PRIO = 0x18;
public static readonly nuint IFLA_BOND_AD_USER_PORT_KEY = 0x19;
public static readonly nuint IFLA_BOND_AD_ACTOR_SYSTEM = 0x1a;
public static readonly nuint IFLA_BOND_TLB_DYNAMIC_LB = 0x1b;
public static readonly nuint IFLA_BOND_PEER_NOTIF_DELAY = 0x1c;
public static readonly nuint IFLA_BOND_AD_INFO_UNSPEC = 0x0;
public static readonly nuint IFLA_BOND_AD_INFO_AGGREGATOR = 0x1;
public static readonly nuint IFLA_BOND_AD_INFO_NUM_PORTS = 0x2;
public static readonly nuint IFLA_BOND_AD_INFO_ACTOR_KEY = 0x3;
public static readonly nuint IFLA_BOND_AD_INFO_PARTNER_KEY = 0x4;
public static readonly nuint IFLA_BOND_AD_INFO_PARTNER_MAC = 0x5;
public static readonly nuint IFLA_BOND_SLAVE_UNSPEC = 0x0;
public static readonly nuint IFLA_BOND_SLAVE_STATE = 0x1;
public static readonly nuint IFLA_BOND_SLAVE_MII_STATUS = 0x2;
public static readonly nuint IFLA_BOND_SLAVE_LINK_FAILURE_COUNT = 0x3;
public static readonly nuint IFLA_BOND_SLAVE_PERM_HWADDR = 0x4;
public static readonly nuint IFLA_BOND_SLAVE_QUEUE_ID = 0x5;
public static readonly nuint IFLA_BOND_SLAVE_AD_AGGREGATOR_ID = 0x6;
public static readonly nuint IFLA_BOND_SLAVE_AD_ACTOR_OPER_PORT_STATE = 0x7;
public static readonly nuint IFLA_BOND_SLAVE_AD_PARTNER_OPER_PORT_STATE = 0x8;
public static readonly nuint IFLA_VF_INFO_UNSPEC = 0x0;
public static readonly nuint IFLA_VF_INFO = 0x1;
public static readonly nuint IFLA_VF_UNSPEC = 0x0;
public static readonly nuint IFLA_VF_MAC = 0x1;
public static readonly nuint IFLA_VF_VLAN = 0x2;
public static readonly nuint IFLA_VF_TX_RATE = 0x3;
public static readonly nuint IFLA_VF_SPOOFCHK = 0x4;
public static readonly nuint IFLA_VF_LINK_STATE = 0x5;
public static readonly nuint IFLA_VF_RATE = 0x6;
public static readonly nuint IFLA_VF_RSS_QUERY_EN = 0x7;
public static readonly nuint IFLA_VF_STATS = 0x8;
public static readonly nuint IFLA_VF_TRUST = 0x9;
public static readonly nuint IFLA_VF_IB_NODE_GUID = 0xa;
public static readonly nuint IFLA_VF_IB_PORT_GUID = 0xb;
public static readonly nuint IFLA_VF_VLAN_LIST = 0xc;
public static readonly nuint IFLA_VF_BROADCAST = 0xd;
public static readonly nuint IFLA_VF_VLAN_INFO_UNSPEC = 0x0;
public static readonly nuint IFLA_VF_VLAN_INFO = 0x1;
public static readonly nuint IFLA_VF_LINK_STATE_AUTO = 0x0;
public static readonly nuint IFLA_VF_LINK_STATE_ENABLE = 0x1;
public static readonly nuint IFLA_VF_LINK_STATE_DISABLE = 0x2;
public static readonly nuint IFLA_VF_STATS_RX_PACKETS = 0x0;
public static readonly nuint IFLA_VF_STATS_TX_PACKETS = 0x1;
public static readonly nuint IFLA_VF_STATS_RX_BYTES = 0x2;
public static readonly nuint IFLA_VF_STATS_TX_BYTES = 0x3;
public static readonly nuint IFLA_VF_STATS_BROADCAST = 0x4;
public static readonly nuint IFLA_VF_STATS_MULTICAST = 0x5;
public static readonly nuint IFLA_VF_STATS_PAD = 0x6;
public static readonly nuint IFLA_VF_STATS_RX_DROPPED = 0x7;
public static readonly nuint IFLA_VF_STATS_TX_DROPPED = 0x8;
public static readonly nuint IFLA_VF_PORT_UNSPEC = 0x0;
public static readonly nuint IFLA_VF_PORT = 0x1;
public static readonly nuint IFLA_PORT_UNSPEC = 0x0;
public static readonly nuint IFLA_PORT_VF = 0x1;
public static readonly nuint IFLA_PORT_PROFILE = 0x2;
public static readonly nuint IFLA_PORT_VSI_TYPE = 0x3;
public static readonly nuint IFLA_PORT_INSTANCE_UUID = 0x4;
public static readonly nuint IFLA_PORT_HOST_UUID = 0x5;
public static readonly nuint IFLA_PORT_REQUEST = 0x6;
public static readonly nuint IFLA_PORT_RESPONSE = 0x7;
public static readonly nuint IFLA_IPOIB_UNSPEC = 0x0;
public static readonly nuint IFLA_IPOIB_PKEY = 0x1;
public static readonly nuint IFLA_IPOIB_MODE = 0x2;
public static readonly nuint IFLA_IPOIB_UMCAST = 0x3;
public static readonly nuint IFLA_HSR_UNSPEC = 0x0;
public static readonly nuint IFLA_HSR_SLAVE1 = 0x1;
public static readonly nuint IFLA_HSR_SLAVE2 = 0x2;
public static readonly nuint IFLA_HSR_MULTICAST_SPEC = 0x3;
public static readonly nuint IFLA_HSR_SUPERVISION_ADDR = 0x4;
public static readonly nuint IFLA_HSR_SEQ_NR = 0x5;
public static readonly nuint IFLA_HSR_VERSION = 0x6;
public static readonly nuint IFLA_HSR_PROTOCOL = 0x7;
public static readonly nuint IFLA_STATS_UNSPEC = 0x0;
public static readonly nuint IFLA_STATS_LINK_64 = 0x1;
public static readonly nuint IFLA_STATS_LINK_XSTATS = 0x2;
public static readonly nuint IFLA_STATS_LINK_XSTATS_SLAVE = 0x3;
public static readonly nuint IFLA_STATS_LINK_OFFLOAD_XSTATS = 0x4;
public static readonly nuint IFLA_STATS_AF_SPEC = 0x5;
public static readonly nuint IFLA_OFFLOAD_XSTATS_UNSPEC = 0x0;
public static readonly nuint IFLA_OFFLOAD_XSTATS_CPU_HIT = 0x1;
public static readonly nuint IFLA_XDP_UNSPEC = 0x0;
public static readonly nuint IFLA_XDP_FD = 0x1;
public static readonly nuint IFLA_XDP_ATTACHED = 0x2;
public static readonly nuint IFLA_XDP_FLAGS = 0x3;
public static readonly nuint IFLA_XDP_PROG_ID = 0x4;
public static readonly nuint IFLA_XDP_DRV_PROG_ID = 0x5;
public static readonly nuint IFLA_XDP_SKB_PROG_ID = 0x6;
public static readonly nuint IFLA_XDP_HW_PROG_ID = 0x7;
public static readonly nuint IFLA_XDP_EXPECTED_FD = 0x8;
public static readonly nuint IFLA_EVENT_NONE = 0x0;
public static readonly nuint IFLA_EVENT_REBOOT = 0x1;
public static readonly nuint IFLA_EVENT_FEATURES = 0x2;
public static readonly nuint IFLA_EVENT_BONDING_FAILOVER = 0x3;
public static readonly nuint IFLA_EVENT_NOTIFY_PEERS = 0x4;
public static readonly nuint IFLA_EVENT_IGMP_RESEND = 0x5;
public static readonly nuint IFLA_EVENT_BONDING_OPTIONS = 0x6;
public static readonly nuint IFLA_TUN_UNSPEC = 0x0;
public static readonly nuint IFLA_TUN_OWNER = 0x1;
public static readonly nuint IFLA_TUN_GROUP = 0x2;
public static readonly nuint IFLA_TUN_TYPE = 0x3;
public static readonly nuint IFLA_TUN_PI = 0x4;
public static readonly nuint IFLA_TUN_VNET_HDR = 0x5;
public static readonly nuint IFLA_TUN_PERSIST = 0x6;
public static readonly nuint IFLA_TUN_MULTI_QUEUE = 0x7;
public static readonly nuint IFLA_TUN_NUM_QUEUES = 0x8;
public static readonly nuint IFLA_TUN_NUM_DISABLED_QUEUES = 0x9;
public static readonly nuint IFLA_RMNET_UNSPEC = 0x0;
public static readonly nuint IFLA_RMNET_MUX_ID = 0x1;
public static readonly nuint IFLA_RMNET_FLAGS = 0x2;


public static readonly nuint NF_INET_PRE_ROUTING = 0x0;
public static readonly nuint NF_INET_LOCAL_IN = 0x1;
public static readonly nuint NF_INET_FORWARD = 0x2;
public static readonly nuint NF_INET_LOCAL_OUT = 0x3;
public static readonly nuint NF_INET_POST_ROUTING = 0x4;
public static readonly nuint NF_INET_NUMHOOKS = 0x5;


public static readonly nuint NF_NETDEV_INGRESS = 0x0;
public static readonly nuint NF_NETDEV_NUMHOOKS = 0x1;


public static readonly nuint NFPROTO_UNSPEC = 0x0;
public static readonly nuint NFPROTO_INET = 0x1;
public static readonly nuint NFPROTO_IPV4 = 0x2;
public static readonly nuint NFPROTO_ARP = 0x3;
public static readonly nuint NFPROTO_NETDEV = 0x5;
public static readonly nuint NFPROTO_BRIDGE = 0x7;
public static readonly nuint NFPROTO_IPV6 = 0xa;
public static readonly nuint NFPROTO_DECNET = 0xc;
public static readonly nuint NFPROTO_NUMPROTO = 0xd;


public partial struct Nfgenmsg {
    public byte Nfgen_family;
    public byte Version;
    public ushort Res_id;
}

public static readonly nuint NFNL_BATCH_UNSPEC = 0x0;
public static readonly nuint NFNL_BATCH_GENID = 0x1;


public static readonly nuint NFT_REG_VERDICT = 0x0;
public static readonly nuint NFT_REG_1 = 0x1;
public static readonly nuint NFT_REG_2 = 0x2;
public static readonly nuint NFT_REG_3 = 0x3;
public static readonly nuint NFT_REG_4 = 0x4;
public static readonly nuint NFT_REG32_00 = 0x8;
public static readonly nuint NFT_REG32_01 = 0x9;
public static readonly nuint NFT_REG32_02 = 0xa;
public static readonly nuint NFT_REG32_03 = 0xb;
public static readonly nuint NFT_REG32_04 = 0xc;
public static readonly nuint NFT_REG32_05 = 0xd;
public static readonly nuint NFT_REG32_06 = 0xe;
public static readonly nuint NFT_REG32_07 = 0xf;
public static readonly nuint NFT_REG32_08 = 0x10;
public static readonly nuint NFT_REG32_09 = 0x11;
public static readonly nuint NFT_REG32_10 = 0x12;
public static readonly nuint NFT_REG32_11 = 0x13;
public static readonly nuint NFT_REG32_12 = 0x14;
public static readonly nuint NFT_REG32_13 = 0x15;
public static readonly nuint NFT_REG32_14 = 0x16;
public static readonly nuint NFT_REG32_15 = 0x17;
public static readonly nuint NFT_CONTINUE = -0x1;
public static readonly nuint NFT_BREAK = -0x2;
public static readonly nuint NFT_JUMP = -0x3;
public static readonly nuint NFT_GOTO = -0x4;
public static readonly nuint NFT_RETURN = -0x5;
public static readonly nuint NFT_MSG_NEWTABLE = 0x0;
public static readonly nuint NFT_MSG_GETTABLE = 0x1;
public static readonly nuint NFT_MSG_DELTABLE = 0x2;
public static readonly nuint NFT_MSG_NEWCHAIN = 0x3;
public static readonly nuint NFT_MSG_GETCHAIN = 0x4;
public static readonly nuint NFT_MSG_DELCHAIN = 0x5;
public static readonly nuint NFT_MSG_NEWRULE = 0x6;
public static readonly nuint NFT_MSG_GETRULE = 0x7;
public static readonly nuint NFT_MSG_DELRULE = 0x8;
public static readonly nuint NFT_MSG_NEWSET = 0x9;
public static readonly nuint NFT_MSG_GETSET = 0xa;
public static readonly nuint NFT_MSG_DELSET = 0xb;
public static readonly nuint NFT_MSG_NEWSETELEM = 0xc;
public static readonly nuint NFT_MSG_GETSETELEM = 0xd;
public static readonly nuint NFT_MSG_DELSETELEM = 0xe;
public static readonly nuint NFT_MSG_NEWGEN = 0xf;
public static readonly nuint NFT_MSG_GETGEN = 0x10;
public static readonly nuint NFT_MSG_TRACE = 0x11;
public static readonly nuint NFT_MSG_NEWOBJ = 0x12;
public static readonly nuint NFT_MSG_GETOBJ = 0x13;
public static readonly nuint NFT_MSG_DELOBJ = 0x14;
public static readonly nuint NFT_MSG_GETOBJ_RESET = 0x15;
public static readonly nuint NFT_MSG_MAX = 0x19;
public static readonly nuint NFTA_LIST_UNSPEC = 0x0;
public static readonly nuint NFTA_LIST_ELEM = 0x1;
public static readonly nuint NFTA_HOOK_UNSPEC = 0x0;
public static readonly nuint NFTA_HOOK_HOOKNUM = 0x1;
public static readonly nuint NFTA_HOOK_PRIORITY = 0x2;
public static readonly nuint NFTA_HOOK_DEV = 0x3;
public static readonly nuint NFT_TABLE_F_DORMANT = 0x1;
public static readonly nuint NFTA_TABLE_UNSPEC = 0x0;
public static readonly nuint NFTA_TABLE_NAME = 0x1;
public static readonly nuint NFTA_TABLE_FLAGS = 0x2;
public static readonly nuint NFTA_TABLE_USE = 0x3;
public static readonly nuint NFTA_CHAIN_UNSPEC = 0x0;
public static readonly nuint NFTA_CHAIN_TABLE = 0x1;
public static readonly nuint NFTA_CHAIN_HANDLE = 0x2;
public static readonly nuint NFTA_CHAIN_NAME = 0x3;
public static readonly nuint NFTA_CHAIN_HOOK = 0x4;
public static readonly nuint NFTA_CHAIN_POLICY = 0x5;
public static readonly nuint NFTA_CHAIN_USE = 0x6;
public static readonly nuint NFTA_CHAIN_TYPE = 0x7;
public static readonly nuint NFTA_CHAIN_COUNTERS = 0x8;
public static readonly nuint NFTA_CHAIN_PAD = 0x9;
public static readonly nuint NFTA_RULE_UNSPEC = 0x0;
public static readonly nuint NFTA_RULE_TABLE = 0x1;
public static readonly nuint NFTA_RULE_CHAIN = 0x2;
public static readonly nuint NFTA_RULE_HANDLE = 0x3;
public static readonly nuint NFTA_RULE_EXPRESSIONS = 0x4;
public static readonly nuint NFTA_RULE_COMPAT = 0x5;
public static readonly nuint NFTA_RULE_POSITION = 0x6;
public static readonly nuint NFTA_RULE_USERDATA = 0x7;
public static readonly nuint NFTA_RULE_PAD = 0x8;
public static readonly nuint NFTA_RULE_ID = 0x9;
public static readonly nuint NFT_RULE_COMPAT_F_INV = 0x2;
public static readonly nuint NFT_RULE_COMPAT_F_MASK = 0x2;
public static readonly nuint NFTA_RULE_COMPAT_UNSPEC = 0x0;
public static readonly nuint NFTA_RULE_COMPAT_PROTO = 0x1;
public static readonly nuint NFTA_RULE_COMPAT_FLAGS = 0x2;
public static readonly nuint NFT_SET_ANONYMOUS = 0x1;
public static readonly nuint NFT_SET_CONSTANT = 0x2;
public static readonly nuint NFT_SET_INTERVAL = 0x4;
public static readonly nuint NFT_SET_MAP = 0x8;
public static readonly nuint NFT_SET_TIMEOUT = 0x10;
public static readonly nuint NFT_SET_EVAL = 0x20;
public static readonly nuint NFT_SET_OBJECT = 0x40;
public static readonly nuint NFT_SET_POL_PERFORMANCE = 0x0;
public static readonly nuint NFT_SET_POL_MEMORY = 0x1;
public static readonly nuint NFTA_SET_DESC_UNSPEC = 0x0;
public static readonly nuint NFTA_SET_DESC_SIZE = 0x1;
public static readonly nuint NFTA_SET_UNSPEC = 0x0;
public static readonly nuint NFTA_SET_TABLE = 0x1;
public static readonly nuint NFTA_SET_NAME = 0x2;
public static readonly nuint NFTA_SET_FLAGS = 0x3;
public static readonly nuint NFTA_SET_KEY_TYPE = 0x4;
public static readonly nuint NFTA_SET_KEY_LEN = 0x5;
public static readonly nuint NFTA_SET_DATA_TYPE = 0x6;
public static readonly nuint NFTA_SET_DATA_LEN = 0x7;
public static readonly nuint NFTA_SET_POLICY = 0x8;
public static readonly nuint NFTA_SET_DESC = 0x9;
public static readonly nuint NFTA_SET_ID = 0xa;
public static readonly nuint NFTA_SET_TIMEOUT = 0xb;
public static readonly nuint NFTA_SET_GC_INTERVAL = 0xc;
public static readonly nuint NFTA_SET_USERDATA = 0xd;
public static readonly nuint NFTA_SET_PAD = 0xe;
public static readonly nuint NFTA_SET_OBJ_TYPE = 0xf;
public static readonly nuint NFT_SET_ELEM_INTERVAL_END = 0x1;
public static readonly nuint NFTA_SET_ELEM_UNSPEC = 0x0;
public static readonly nuint NFTA_SET_ELEM_KEY = 0x1;
public static readonly nuint NFTA_SET_ELEM_DATA = 0x2;
public static readonly nuint NFTA_SET_ELEM_FLAGS = 0x3;
public static readonly nuint NFTA_SET_ELEM_TIMEOUT = 0x4;
public static readonly nuint NFTA_SET_ELEM_EXPIRATION = 0x5;
public static readonly nuint NFTA_SET_ELEM_USERDATA = 0x6;
public static readonly nuint NFTA_SET_ELEM_EXPR = 0x7;
public static readonly nuint NFTA_SET_ELEM_PAD = 0x8;
public static readonly nuint NFTA_SET_ELEM_OBJREF = 0x9;
public static readonly nuint NFTA_SET_ELEM_LIST_UNSPEC = 0x0;
public static readonly nuint NFTA_SET_ELEM_LIST_TABLE = 0x1;
public static readonly nuint NFTA_SET_ELEM_LIST_SET = 0x2;
public static readonly nuint NFTA_SET_ELEM_LIST_ELEMENTS = 0x3;
public static readonly nuint NFTA_SET_ELEM_LIST_SET_ID = 0x4;
public static readonly nuint NFT_DATA_VALUE = 0x0;
public static readonly nuint NFT_DATA_VERDICT = 0xffffff00;
public static readonly nuint NFTA_DATA_UNSPEC = 0x0;
public static readonly nuint NFTA_DATA_VALUE = 0x1;
public static readonly nuint NFTA_DATA_VERDICT = 0x2;
public static readonly nuint NFTA_VERDICT_UNSPEC = 0x0;
public static readonly nuint NFTA_VERDICT_CODE = 0x1;
public static readonly nuint NFTA_VERDICT_CHAIN = 0x2;
public static readonly nuint NFTA_EXPR_UNSPEC = 0x0;
public static readonly nuint NFTA_EXPR_NAME = 0x1;
public static readonly nuint NFTA_EXPR_DATA = 0x2;
public static readonly nuint NFTA_IMMEDIATE_UNSPEC = 0x0;
public static readonly nuint NFTA_IMMEDIATE_DREG = 0x1;
public static readonly nuint NFTA_IMMEDIATE_DATA = 0x2;
public static readonly nuint NFTA_BITWISE_UNSPEC = 0x0;
public static readonly nuint NFTA_BITWISE_SREG = 0x1;
public static readonly nuint NFTA_BITWISE_DREG = 0x2;
public static readonly nuint NFTA_BITWISE_LEN = 0x3;
public static readonly nuint NFTA_BITWISE_MASK = 0x4;
public static readonly nuint NFTA_BITWISE_XOR = 0x5;
public static readonly nuint NFT_BYTEORDER_NTOH = 0x0;
public static readonly nuint NFT_BYTEORDER_HTON = 0x1;
public static readonly nuint NFTA_BYTEORDER_UNSPEC = 0x0;
public static readonly nuint NFTA_BYTEORDER_SREG = 0x1;
public static readonly nuint NFTA_BYTEORDER_DREG = 0x2;
public static readonly nuint NFTA_BYTEORDER_OP = 0x3;
public static readonly nuint NFTA_BYTEORDER_LEN = 0x4;
public static readonly nuint NFTA_BYTEORDER_SIZE = 0x5;
public static readonly nuint NFT_CMP_EQ = 0x0;
public static readonly nuint NFT_CMP_NEQ = 0x1;
public static readonly nuint NFT_CMP_LT = 0x2;
public static readonly nuint NFT_CMP_LTE = 0x3;
public static readonly nuint NFT_CMP_GT = 0x4;
public static readonly nuint NFT_CMP_GTE = 0x5;
public static readonly nuint NFTA_CMP_UNSPEC = 0x0;
public static readonly nuint NFTA_CMP_SREG = 0x1;
public static readonly nuint NFTA_CMP_OP = 0x2;
public static readonly nuint NFTA_CMP_DATA = 0x3;
public static readonly nuint NFT_RANGE_EQ = 0x0;
public static readonly nuint NFT_RANGE_NEQ = 0x1;
public static readonly nuint NFTA_RANGE_UNSPEC = 0x0;
public static readonly nuint NFTA_RANGE_SREG = 0x1;
public static readonly nuint NFTA_RANGE_OP = 0x2;
public static readonly nuint NFTA_RANGE_FROM_DATA = 0x3;
public static readonly nuint NFTA_RANGE_TO_DATA = 0x4;
public static readonly nuint NFT_LOOKUP_F_INV = 0x1;
public static readonly nuint NFTA_LOOKUP_UNSPEC = 0x0;
public static readonly nuint NFTA_LOOKUP_SET = 0x1;
public static readonly nuint NFTA_LOOKUP_SREG = 0x2;
public static readonly nuint NFTA_LOOKUP_DREG = 0x3;
public static readonly nuint NFTA_LOOKUP_SET_ID = 0x4;
public static readonly nuint NFTA_LOOKUP_FLAGS = 0x5;
public static readonly nuint NFT_DYNSET_OP_ADD = 0x0;
public static readonly nuint NFT_DYNSET_OP_UPDATE = 0x1;
public static readonly nuint NFT_DYNSET_F_INV = 0x1;
public static readonly nuint NFTA_DYNSET_UNSPEC = 0x0;
public static readonly nuint NFTA_DYNSET_SET_NAME = 0x1;
public static readonly nuint NFTA_DYNSET_SET_ID = 0x2;
public static readonly nuint NFTA_DYNSET_OP = 0x3;
public static readonly nuint NFTA_DYNSET_SREG_KEY = 0x4;
public static readonly nuint NFTA_DYNSET_SREG_DATA = 0x5;
public static readonly nuint NFTA_DYNSET_TIMEOUT = 0x6;
public static readonly nuint NFTA_DYNSET_EXPR = 0x7;
public static readonly nuint NFTA_DYNSET_PAD = 0x8;
public static readonly nuint NFTA_DYNSET_FLAGS = 0x9;
public static readonly nuint NFT_PAYLOAD_LL_HEADER = 0x0;
public static readonly nuint NFT_PAYLOAD_NETWORK_HEADER = 0x1;
public static readonly nuint NFT_PAYLOAD_TRANSPORT_HEADER = 0x2;
public static readonly nuint NFT_PAYLOAD_CSUM_NONE = 0x0;
public static readonly nuint NFT_PAYLOAD_CSUM_INET = 0x1;
public static readonly nuint NFT_PAYLOAD_L4CSUM_PSEUDOHDR = 0x1;
public static readonly nuint NFTA_PAYLOAD_UNSPEC = 0x0;
public static readonly nuint NFTA_PAYLOAD_DREG = 0x1;
public static readonly nuint NFTA_PAYLOAD_BASE = 0x2;
public static readonly nuint NFTA_PAYLOAD_OFFSET = 0x3;
public static readonly nuint NFTA_PAYLOAD_LEN = 0x4;
public static readonly nuint NFTA_PAYLOAD_SREG = 0x5;
public static readonly nuint NFTA_PAYLOAD_CSUM_TYPE = 0x6;
public static readonly nuint NFTA_PAYLOAD_CSUM_OFFSET = 0x7;
public static readonly nuint NFTA_PAYLOAD_CSUM_FLAGS = 0x8;
public static readonly nuint NFT_EXTHDR_F_PRESENT = 0x1;
public static readonly nuint NFT_EXTHDR_OP_IPV6 = 0x0;
public static readonly nuint NFT_EXTHDR_OP_TCPOPT = 0x1;
public static readonly nuint NFTA_EXTHDR_UNSPEC = 0x0;
public static readonly nuint NFTA_EXTHDR_DREG = 0x1;
public static readonly nuint NFTA_EXTHDR_TYPE = 0x2;
public static readonly nuint NFTA_EXTHDR_OFFSET = 0x3;
public static readonly nuint NFTA_EXTHDR_LEN = 0x4;
public static readonly nuint NFTA_EXTHDR_FLAGS = 0x5;
public static readonly nuint NFTA_EXTHDR_OP = 0x6;
public static readonly nuint NFTA_EXTHDR_SREG = 0x7;
public static readonly nuint NFT_META_LEN = 0x0;
public static readonly nuint NFT_META_PROTOCOL = 0x1;
public static readonly nuint NFT_META_PRIORITY = 0x2;
public static readonly nuint NFT_META_MARK = 0x3;
public static readonly nuint NFT_META_IIF = 0x4;
public static readonly nuint NFT_META_OIF = 0x5;
public static readonly nuint NFT_META_IIFNAME = 0x6;
public static readonly nuint NFT_META_OIFNAME = 0x7;
public static readonly nuint NFT_META_IIFTYPE = 0x8;
public static readonly nuint NFT_META_OIFTYPE = 0x9;
public static readonly nuint NFT_META_SKUID = 0xa;
public static readonly nuint NFT_META_SKGID = 0xb;
public static readonly nuint NFT_META_NFTRACE = 0xc;
public static readonly nuint NFT_META_RTCLASSID = 0xd;
public static readonly nuint NFT_META_SECMARK = 0xe;
public static readonly nuint NFT_META_NFPROTO = 0xf;
public static readonly nuint NFT_META_L4PROTO = 0x10;
public static readonly nuint NFT_META_BRI_IIFNAME = 0x11;
public static readonly nuint NFT_META_BRI_OIFNAME = 0x12;
public static readonly nuint NFT_META_PKTTYPE = 0x13;
public static readonly nuint NFT_META_CPU = 0x14;
public static readonly nuint NFT_META_IIFGROUP = 0x15;
public static readonly nuint NFT_META_OIFGROUP = 0x16;
public static readonly nuint NFT_META_CGROUP = 0x17;
public static readonly nuint NFT_META_PRANDOM = 0x18;
public static readonly nuint NFT_RT_CLASSID = 0x0;
public static readonly nuint NFT_RT_NEXTHOP4 = 0x1;
public static readonly nuint NFT_RT_NEXTHOP6 = 0x2;
public static readonly nuint NFT_RT_TCPMSS = 0x3;
public static readonly nuint NFT_HASH_JENKINS = 0x0;
public static readonly nuint NFT_HASH_SYM = 0x1;
public static readonly nuint NFTA_HASH_UNSPEC = 0x0;
public static readonly nuint NFTA_HASH_SREG = 0x1;
public static readonly nuint NFTA_HASH_DREG = 0x2;
public static readonly nuint NFTA_HASH_LEN = 0x3;
public static readonly nuint NFTA_HASH_MODULUS = 0x4;
public static readonly nuint NFTA_HASH_SEED = 0x5;
public static readonly nuint NFTA_HASH_OFFSET = 0x6;
public static readonly nuint NFTA_HASH_TYPE = 0x7;
public static readonly nuint NFTA_META_UNSPEC = 0x0;
public static readonly nuint NFTA_META_DREG = 0x1;
public static readonly nuint NFTA_META_KEY = 0x2;
public static readonly nuint NFTA_META_SREG = 0x3;
public static readonly nuint NFTA_RT_UNSPEC = 0x0;
public static readonly nuint NFTA_RT_DREG = 0x1;
public static readonly nuint NFTA_RT_KEY = 0x2;
public static readonly nuint NFT_CT_STATE = 0x0;
public static readonly nuint NFT_CT_DIRECTION = 0x1;
public static readonly nuint NFT_CT_STATUS = 0x2;
public static readonly nuint NFT_CT_MARK = 0x3;
public static readonly nuint NFT_CT_SECMARK = 0x4;
public static readonly nuint NFT_CT_EXPIRATION = 0x5;
public static readonly nuint NFT_CT_HELPER = 0x6;
public static readonly nuint NFT_CT_L3PROTOCOL = 0x7;
public static readonly nuint NFT_CT_SRC = 0x8;
public static readonly nuint NFT_CT_DST = 0x9;
public static readonly nuint NFT_CT_PROTOCOL = 0xa;
public static readonly nuint NFT_CT_PROTO_SRC = 0xb;
public static readonly nuint NFT_CT_PROTO_DST = 0xc;
public static readonly nuint NFT_CT_LABELS = 0xd;
public static readonly nuint NFT_CT_PKTS = 0xe;
public static readonly nuint NFT_CT_BYTES = 0xf;
public static readonly nuint NFT_CT_AVGPKT = 0x10;
public static readonly nuint NFT_CT_ZONE = 0x11;
public static readonly nuint NFT_CT_EVENTMASK = 0x12;
public static readonly nuint NFTA_CT_UNSPEC = 0x0;
public static readonly nuint NFTA_CT_DREG = 0x1;
public static readonly nuint NFTA_CT_KEY = 0x2;
public static readonly nuint NFTA_CT_DIRECTION = 0x3;
public static readonly nuint NFTA_CT_SREG = 0x4;
public static readonly nuint NFT_LIMIT_PKTS = 0x0;
public static readonly nuint NFT_LIMIT_PKT_BYTES = 0x1;
public static readonly nuint NFT_LIMIT_F_INV = 0x1;
public static readonly nuint NFTA_LIMIT_UNSPEC = 0x0;
public static readonly nuint NFTA_LIMIT_RATE = 0x1;
public static readonly nuint NFTA_LIMIT_UNIT = 0x2;
public static readonly nuint NFTA_LIMIT_BURST = 0x3;
public static readonly nuint NFTA_LIMIT_TYPE = 0x4;
public static readonly nuint NFTA_LIMIT_FLAGS = 0x5;
public static readonly nuint NFTA_LIMIT_PAD = 0x6;
public static readonly nuint NFTA_COUNTER_UNSPEC = 0x0;
public static readonly nuint NFTA_COUNTER_BYTES = 0x1;
public static readonly nuint NFTA_COUNTER_PACKETS = 0x2;
public static readonly nuint NFTA_COUNTER_PAD = 0x3;
public static readonly nuint NFTA_LOG_UNSPEC = 0x0;
public static readonly nuint NFTA_LOG_GROUP = 0x1;
public static readonly nuint NFTA_LOG_PREFIX = 0x2;
public static readonly nuint NFTA_LOG_SNAPLEN = 0x3;
public static readonly nuint NFTA_LOG_QTHRESHOLD = 0x4;
public static readonly nuint NFTA_LOG_LEVEL = 0x5;
public static readonly nuint NFTA_LOG_FLAGS = 0x6;
public static readonly nuint NFTA_QUEUE_UNSPEC = 0x0;
public static readonly nuint NFTA_QUEUE_NUM = 0x1;
public static readonly nuint NFTA_QUEUE_TOTAL = 0x2;
public static readonly nuint NFTA_QUEUE_FLAGS = 0x3;
public static readonly nuint NFTA_QUEUE_SREG_QNUM = 0x4;
public static readonly nuint NFT_QUOTA_F_INV = 0x1;
public static readonly nuint NFT_QUOTA_F_DEPLETED = 0x2;
public static readonly nuint NFTA_QUOTA_UNSPEC = 0x0;
public static readonly nuint NFTA_QUOTA_BYTES = 0x1;
public static readonly nuint NFTA_QUOTA_FLAGS = 0x2;
public static readonly nuint NFTA_QUOTA_PAD = 0x3;
public static readonly nuint NFTA_QUOTA_CONSUMED = 0x4;
public static readonly nuint NFT_REJECT_ICMP_UNREACH = 0x0;
public static readonly nuint NFT_REJECT_TCP_RST = 0x1;
public static readonly nuint NFT_REJECT_ICMPX_UNREACH = 0x2;
public static readonly nuint NFT_REJECT_ICMPX_NO_ROUTE = 0x0;
public static readonly nuint NFT_REJECT_ICMPX_PORT_UNREACH = 0x1;
public static readonly nuint NFT_REJECT_ICMPX_HOST_UNREACH = 0x2;
public static readonly nuint NFT_REJECT_ICMPX_ADMIN_PROHIBITED = 0x3;
public static readonly nuint NFTA_REJECT_UNSPEC = 0x0;
public static readonly nuint NFTA_REJECT_TYPE = 0x1;
public static readonly nuint NFTA_REJECT_ICMP_CODE = 0x2;
public static readonly nuint NFT_NAT_SNAT = 0x0;
public static readonly nuint NFT_NAT_DNAT = 0x1;
public static readonly nuint NFTA_NAT_UNSPEC = 0x0;
public static readonly nuint NFTA_NAT_TYPE = 0x1;
public static readonly nuint NFTA_NAT_FAMILY = 0x2;
public static readonly nuint NFTA_NAT_REG_ADDR_MIN = 0x3;
public static readonly nuint NFTA_NAT_REG_ADDR_MAX = 0x4;
public static readonly nuint NFTA_NAT_REG_PROTO_MIN = 0x5;
public static readonly nuint NFTA_NAT_REG_PROTO_MAX = 0x6;
public static readonly nuint NFTA_NAT_FLAGS = 0x7;
public static readonly nuint NFTA_MASQ_UNSPEC = 0x0;
public static readonly nuint NFTA_MASQ_FLAGS = 0x1;
public static readonly nuint NFTA_MASQ_REG_PROTO_MIN = 0x2;
public static readonly nuint NFTA_MASQ_REG_PROTO_MAX = 0x3;
public static readonly nuint NFTA_REDIR_UNSPEC = 0x0;
public static readonly nuint NFTA_REDIR_REG_PROTO_MIN = 0x1;
public static readonly nuint NFTA_REDIR_REG_PROTO_MAX = 0x2;
public static readonly nuint NFTA_REDIR_FLAGS = 0x3;
public static readonly nuint NFTA_DUP_UNSPEC = 0x0;
public static readonly nuint NFTA_DUP_SREG_ADDR = 0x1;
public static readonly nuint NFTA_DUP_SREG_DEV = 0x2;
public static readonly nuint NFTA_FWD_UNSPEC = 0x0;
public static readonly nuint NFTA_FWD_SREG_DEV = 0x1;
public static readonly nuint NFTA_OBJREF_UNSPEC = 0x0;
public static readonly nuint NFTA_OBJREF_IMM_TYPE = 0x1;
public static readonly nuint NFTA_OBJREF_IMM_NAME = 0x2;
public static readonly nuint NFTA_OBJREF_SET_SREG = 0x3;
public static readonly nuint NFTA_OBJREF_SET_NAME = 0x4;
public static readonly nuint NFTA_OBJREF_SET_ID = 0x5;
public static readonly nuint NFTA_GEN_UNSPEC = 0x0;
public static readonly nuint NFTA_GEN_ID = 0x1;
public static readonly nuint NFTA_GEN_PROC_PID = 0x2;
public static readonly nuint NFTA_GEN_PROC_NAME = 0x3;
public static readonly nuint NFTA_FIB_UNSPEC = 0x0;
public static readonly nuint NFTA_FIB_DREG = 0x1;
public static readonly nuint NFTA_FIB_RESULT = 0x2;
public static readonly nuint NFTA_FIB_FLAGS = 0x3;
public static readonly nuint NFT_FIB_RESULT_UNSPEC = 0x0;
public static readonly nuint NFT_FIB_RESULT_OIF = 0x1;
public static readonly nuint NFT_FIB_RESULT_OIFNAME = 0x2;
public static readonly nuint NFT_FIB_RESULT_ADDRTYPE = 0x3;
public static readonly nuint NFTA_FIB_F_SADDR = 0x1;
public static readonly nuint NFTA_FIB_F_DADDR = 0x2;
public static readonly nuint NFTA_FIB_F_MARK = 0x4;
public static readonly nuint NFTA_FIB_F_IIF = 0x8;
public static readonly nuint NFTA_FIB_F_OIF = 0x10;
public static readonly nuint NFTA_FIB_F_PRESENT = 0x20;
public static readonly nuint NFTA_CT_HELPER_UNSPEC = 0x0;
public static readonly nuint NFTA_CT_HELPER_NAME = 0x1;
public static readonly nuint NFTA_CT_HELPER_L3PROTO = 0x2;
public static readonly nuint NFTA_CT_HELPER_L4PROTO = 0x3;
public static readonly nuint NFTA_OBJ_UNSPEC = 0x0;
public static readonly nuint NFTA_OBJ_TABLE = 0x1;
public static readonly nuint NFTA_OBJ_NAME = 0x2;
public static readonly nuint NFTA_OBJ_TYPE = 0x3;
public static readonly nuint NFTA_OBJ_DATA = 0x4;
public static readonly nuint NFTA_OBJ_USE = 0x5;
public static readonly nuint NFTA_TRACE_UNSPEC = 0x0;
public static readonly nuint NFTA_TRACE_TABLE = 0x1;
public static readonly nuint NFTA_TRACE_CHAIN = 0x2;
public static readonly nuint NFTA_TRACE_RULE_HANDLE = 0x3;
public static readonly nuint NFTA_TRACE_TYPE = 0x4;
public static readonly nuint NFTA_TRACE_VERDICT = 0x5;
public static readonly nuint NFTA_TRACE_ID = 0x6;
public static readonly nuint NFTA_TRACE_LL_HEADER = 0x7;
public static readonly nuint NFTA_TRACE_NETWORK_HEADER = 0x8;
public static readonly nuint NFTA_TRACE_TRANSPORT_HEADER = 0x9;
public static readonly nuint NFTA_TRACE_IIF = 0xa;
public static readonly nuint NFTA_TRACE_IIFTYPE = 0xb;
public static readonly nuint NFTA_TRACE_OIF = 0xc;
public static readonly nuint NFTA_TRACE_OIFTYPE = 0xd;
public static readonly nuint NFTA_TRACE_MARK = 0xe;
public static readonly nuint NFTA_TRACE_NFPROTO = 0xf;
public static readonly nuint NFTA_TRACE_POLICY = 0x10;
public static readonly nuint NFTA_TRACE_PAD = 0x11;
public static readonly nuint NFT_TRACETYPE_UNSPEC = 0x0;
public static readonly nuint NFT_TRACETYPE_POLICY = 0x1;
public static readonly nuint NFT_TRACETYPE_RETURN = 0x2;
public static readonly nuint NFT_TRACETYPE_RULE = 0x3;
public static readonly nuint NFTA_NG_UNSPEC = 0x0;
public static readonly nuint NFTA_NG_DREG = 0x1;
public static readonly nuint NFTA_NG_MODULUS = 0x2;
public static readonly nuint NFTA_NG_TYPE = 0x3;
public static readonly nuint NFTA_NG_OFFSET = 0x4;
public static readonly nuint NFT_NG_INCREMENTAL = 0x0;
public static readonly nuint NFT_NG_RANDOM = 0x1;


public static readonly nuint NFTA_TARGET_UNSPEC = 0x0;
public static readonly nuint NFTA_TARGET_NAME = 0x1;
public static readonly nuint NFTA_TARGET_REV = 0x2;
public static readonly nuint NFTA_TARGET_INFO = 0x3;
public static readonly nuint NFTA_MATCH_UNSPEC = 0x0;
public static readonly nuint NFTA_MATCH_NAME = 0x1;
public static readonly nuint NFTA_MATCH_REV = 0x2;
public static readonly nuint NFTA_MATCH_INFO = 0x3;
public static readonly nuint NFTA_COMPAT_UNSPEC = 0x0;
public static readonly nuint NFTA_COMPAT_NAME = 0x1;
public static readonly nuint NFTA_COMPAT_REV = 0x2;
public static readonly nuint NFTA_COMPAT_TYPE = 0x3;


public partial struct RTCTime {
    public int Sec;
    public int Min;
    public int Hour;
    public int Mday;
    public int Mon;
    public int Year;
    public int Wday;
    public int Yday;
    public int Isdst;
}

public partial struct RTCWkAlrm {
    public byte Enabled;
    public byte Pending;
    public RTCTime Time;
}

public partial struct BlkpgIoctlArg {
    public int Op;
    public int Flags;
    public int Datalen;
    public ptr<byte> Data;
}

public static readonly nuint BLKPG_ADD_PARTITION = 0x1;
public static readonly nuint BLKPG_DEL_PARTITION = 0x2;
public static readonly nuint BLKPG_RESIZE_PARTITION = 0x3;


public static readonly nuint NETNSA_NONE = 0x0;
public static readonly nuint NETNSA_NSID = 0x1;
public static readonly nuint NETNSA_PID = 0x2;
public static readonly nuint NETNSA_FD = 0x3;
public static readonly nuint NETNSA_TARGET_NSID = 0x4;
public static readonly nuint NETNSA_CURRENT_NSID = 0x5;


public partial struct XDPRingOffset {
    public ulong Producer;
    public ulong Consumer;
    public ulong Desc;
    public ulong Flags;
}

public partial struct XDPMmapOffsets {
    public XDPRingOffset Rx;
    public XDPRingOffset Tx;
    public XDPRingOffset Fr;
    public XDPRingOffset Cr;
}

public partial struct XDPStatistics {
    public ulong Rx_dropped;
    public ulong Rx_invalid_descs;
    public ulong Tx_invalid_descs;
    public ulong Rx_ring_full;
    public ulong Rx_fill_ring_empty_descs;
    public ulong Tx_ring_empty_descs;
}

public partial struct XDPDesc {
    public ulong Addr;
    public uint Len;
    public uint Options;
}

public static readonly nuint NCSI_CMD_UNSPEC = 0x0;
public static readonly nuint NCSI_CMD_PKG_INFO = 0x1;
public static readonly nuint NCSI_CMD_SET_INTERFACE = 0x2;
public static readonly nuint NCSI_CMD_CLEAR_INTERFACE = 0x3;
public static readonly nuint NCSI_ATTR_UNSPEC = 0x0;
public static readonly nuint NCSI_ATTR_IFINDEX = 0x1;
public static readonly nuint NCSI_ATTR_PACKAGE_LIST = 0x2;
public static readonly nuint NCSI_ATTR_PACKAGE_ID = 0x3;
public static readonly nuint NCSI_ATTR_CHANNEL_ID = 0x4;
public static readonly nuint NCSI_PKG_ATTR_UNSPEC = 0x0;
public static readonly nuint NCSI_PKG_ATTR = 0x1;
public static readonly nuint NCSI_PKG_ATTR_ID = 0x2;
public static readonly nuint NCSI_PKG_ATTR_FORCED = 0x3;
public static readonly nuint NCSI_PKG_ATTR_CHANNEL_LIST = 0x4;
public static readonly nuint NCSI_CHANNEL_ATTR_UNSPEC = 0x0;
public static readonly nuint NCSI_CHANNEL_ATTR = 0x1;
public static readonly nuint NCSI_CHANNEL_ATTR_ID = 0x2;
public static readonly nuint NCSI_CHANNEL_ATTR_VERSION_MAJOR = 0x3;
public static readonly nuint NCSI_CHANNEL_ATTR_VERSION_MINOR = 0x4;
public static readonly nuint NCSI_CHANNEL_ATTR_VERSION_STR = 0x5;
public static readonly nuint NCSI_CHANNEL_ATTR_LINK_STATE = 0x6;
public static readonly nuint NCSI_CHANNEL_ATTR_ACTIVE = 0x7;
public static readonly nuint NCSI_CHANNEL_ATTR_FORCED = 0x8;
public static readonly nuint NCSI_CHANNEL_ATTR_VLAN_LIST = 0x9;
public static readonly nuint NCSI_CHANNEL_ATTR_VLAN_ID = 0xa;


public partial struct ScmTimestamping {
    public array<Timespec> Ts;
}

public static readonly nuint SOF_TIMESTAMPING_TX_HARDWARE = 0x1;
public static readonly nuint SOF_TIMESTAMPING_TX_SOFTWARE = 0x2;
public static readonly nuint SOF_TIMESTAMPING_RX_HARDWARE = 0x4;
public static readonly nuint SOF_TIMESTAMPING_RX_SOFTWARE = 0x8;
public static readonly nuint SOF_TIMESTAMPING_SOFTWARE = 0x10;
public static readonly nuint SOF_TIMESTAMPING_SYS_HARDWARE = 0x20;
public static readonly nuint SOF_TIMESTAMPING_RAW_HARDWARE = 0x40;
public static readonly nuint SOF_TIMESTAMPING_OPT_ID = 0x80;
public static readonly nuint SOF_TIMESTAMPING_TX_SCHED = 0x100;
public static readonly nuint SOF_TIMESTAMPING_TX_ACK = 0x200;
public static readonly nuint SOF_TIMESTAMPING_OPT_CMSG = 0x400;
public static readonly nuint SOF_TIMESTAMPING_OPT_TSONLY = 0x800;
public static readonly nuint SOF_TIMESTAMPING_OPT_STATS = 0x1000;
public static readonly nuint SOF_TIMESTAMPING_OPT_PKTINFO = 0x2000;
public static readonly nuint SOF_TIMESTAMPING_OPT_TX_SWHW = 0x4000;

public static readonly nuint SOF_TIMESTAMPING_LAST = 0x4000;
public static readonly nuint SOF_TIMESTAMPING_MASK = 0x7fff;

public static readonly nuint SCM_TSTAMP_SND = 0x0;
public static readonly nuint SCM_TSTAMP_SCHED = 0x1;
public static readonly nuint SCM_TSTAMP_ACK = 0x2;


public partial struct SockExtendedErr {
    public uint Errno;
    public byte Origin;
    public byte Type;
    public byte Code;
    public byte Pad;
    public uint Info;
    public uint Data;
}

public partial struct FanotifyEventMetadata {
    public uint Event_len;
    public byte Vers;
    public byte Reserved;
    public ushort Metadata_len;
    public ulong Mask;
    public int Fd;
    public int Pid;
}

public partial struct FanotifyResponse {
    public int Fd;
    public uint Response;
}

public static readonly nuint CRYPTO_MSG_BASE = 0x10;
public static readonly nuint CRYPTO_MSG_NEWALG = 0x10;
public static readonly nuint CRYPTO_MSG_DELALG = 0x11;
public static readonly nuint CRYPTO_MSG_UPDATEALG = 0x12;
public static readonly nuint CRYPTO_MSG_GETALG = 0x13;
public static readonly nuint CRYPTO_MSG_DELRNG = 0x14;
public static readonly nuint CRYPTO_MSG_GETSTAT = 0x15;


public static readonly nuint CRYPTOCFGA_UNSPEC = 0x0;
public static readonly nuint CRYPTOCFGA_PRIORITY_VAL = 0x1;
public static readonly nuint CRYPTOCFGA_REPORT_LARVAL = 0x2;
public static readonly nuint CRYPTOCFGA_REPORT_HASH = 0x3;
public static readonly nuint CRYPTOCFGA_REPORT_BLKCIPHER = 0x4;
public static readonly nuint CRYPTOCFGA_REPORT_AEAD = 0x5;
public static readonly nuint CRYPTOCFGA_REPORT_COMPRESS = 0x6;
public static readonly nuint CRYPTOCFGA_REPORT_RNG = 0x7;
public static readonly nuint CRYPTOCFGA_REPORT_CIPHER = 0x8;
public static readonly nuint CRYPTOCFGA_REPORT_AKCIPHER = 0x9;
public static readonly nuint CRYPTOCFGA_REPORT_KPP = 0xa;
public static readonly nuint CRYPTOCFGA_REPORT_ACOMP = 0xb;
public static readonly nuint CRYPTOCFGA_STAT_LARVAL = 0xc;
public static readonly nuint CRYPTOCFGA_STAT_HASH = 0xd;
public static readonly nuint CRYPTOCFGA_STAT_BLKCIPHER = 0xe;
public static readonly nuint CRYPTOCFGA_STAT_AEAD = 0xf;
public static readonly nuint CRYPTOCFGA_STAT_COMPRESS = 0x10;
public static readonly nuint CRYPTOCFGA_STAT_RNG = 0x11;
public static readonly nuint CRYPTOCFGA_STAT_CIPHER = 0x12;
public static readonly nuint CRYPTOCFGA_STAT_AKCIPHER = 0x13;
public static readonly nuint CRYPTOCFGA_STAT_KPP = 0x14;
public static readonly nuint CRYPTOCFGA_STAT_ACOMP = 0x15;


public static readonly nuint BPF_REG_0 = 0x0;
public static readonly nuint BPF_REG_1 = 0x1;
public static readonly nuint BPF_REG_2 = 0x2;
public static readonly nuint BPF_REG_3 = 0x3;
public static readonly nuint BPF_REG_4 = 0x4;
public static readonly nuint BPF_REG_5 = 0x5;
public static readonly nuint BPF_REG_6 = 0x6;
public static readonly nuint BPF_REG_7 = 0x7;
public static readonly nuint BPF_REG_8 = 0x8;
public static readonly nuint BPF_REG_9 = 0x9;
public static readonly nuint BPF_REG_10 = 0xa;
public static readonly nuint BPF_MAP_CREATE = 0x0;
public static readonly nuint BPF_MAP_LOOKUP_ELEM = 0x1;
public static readonly nuint BPF_MAP_UPDATE_ELEM = 0x2;
public static readonly nuint BPF_MAP_DELETE_ELEM = 0x3;
public static readonly nuint BPF_MAP_GET_NEXT_KEY = 0x4;
public static readonly nuint BPF_PROG_LOAD = 0x5;
public static readonly nuint BPF_OBJ_PIN = 0x6;
public static readonly nuint BPF_OBJ_GET = 0x7;
public static readonly nuint BPF_PROG_ATTACH = 0x8;
public static readonly nuint BPF_PROG_DETACH = 0x9;
public static readonly nuint BPF_PROG_TEST_RUN = 0xa;
public static readonly nuint BPF_PROG_GET_NEXT_ID = 0xb;
public static readonly nuint BPF_MAP_GET_NEXT_ID = 0xc;
public static readonly nuint BPF_PROG_GET_FD_BY_ID = 0xd;
public static readonly nuint BPF_MAP_GET_FD_BY_ID = 0xe;
public static readonly nuint BPF_OBJ_GET_INFO_BY_FD = 0xf;
public static readonly nuint BPF_PROG_QUERY = 0x10;
public static readonly nuint BPF_RAW_TRACEPOINT_OPEN = 0x11;
public static readonly nuint BPF_BTF_LOAD = 0x12;
public static readonly nuint BPF_BTF_GET_FD_BY_ID = 0x13;
public static readonly nuint BPF_TASK_FD_QUERY = 0x14;
public static readonly nuint BPF_MAP_LOOKUP_AND_DELETE_ELEM = 0x15;
public static readonly nuint BPF_MAP_FREEZE = 0x16;
public static readonly nuint BPF_BTF_GET_NEXT_ID = 0x17;
public static readonly nuint BPF_MAP_LOOKUP_BATCH = 0x18;
public static readonly nuint BPF_MAP_LOOKUP_AND_DELETE_BATCH = 0x19;
public static readonly nuint BPF_MAP_UPDATE_BATCH = 0x1a;
public static readonly nuint BPF_MAP_DELETE_BATCH = 0x1b;
public static readonly nuint BPF_LINK_CREATE = 0x1c;
public static readonly nuint BPF_LINK_UPDATE = 0x1d;
public static readonly nuint BPF_LINK_GET_FD_BY_ID = 0x1e;
public static readonly nuint BPF_LINK_GET_NEXT_ID = 0x1f;
public static readonly nuint BPF_ENABLE_STATS = 0x20;
public static readonly nuint BPF_ITER_CREATE = 0x21;
public static readonly nuint BPF_LINK_DETACH = 0x22;
public static readonly nuint BPF_PROG_BIND_MAP = 0x23;
public static readonly nuint BPF_MAP_TYPE_UNSPEC = 0x0;
public static readonly nuint BPF_MAP_TYPE_HASH = 0x1;
public static readonly nuint BPF_MAP_TYPE_ARRAY = 0x2;
public static readonly nuint BPF_MAP_TYPE_PROG_ARRAY = 0x3;
public static readonly nuint BPF_MAP_TYPE_PERF_EVENT_ARRAY = 0x4;
public static readonly nuint BPF_MAP_TYPE_PERCPU_HASH = 0x5;
public static readonly nuint BPF_MAP_TYPE_PERCPU_ARRAY = 0x6;
public static readonly nuint BPF_MAP_TYPE_STACK_TRACE = 0x7;
public static readonly nuint BPF_MAP_TYPE_CGROUP_ARRAY = 0x8;
public static readonly nuint BPF_MAP_TYPE_LRU_HASH = 0x9;
public static readonly nuint BPF_MAP_TYPE_LRU_PERCPU_HASH = 0xa;
public static readonly nuint BPF_MAP_TYPE_LPM_TRIE = 0xb;
public static readonly nuint BPF_MAP_TYPE_ARRAY_OF_MAPS = 0xc;
public static readonly nuint BPF_MAP_TYPE_HASH_OF_MAPS = 0xd;
public static readonly nuint BPF_MAP_TYPE_DEVMAP = 0xe;
public static readonly nuint BPF_MAP_TYPE_SOCKMAP = 0xf;
public static readonly nuint BPF_MAP_TYPE_CPUMAP = 0x10;
public static readonly nuint BPF_MAP_TYPE_XSKMAP = 0x11;
public static readonly nuint BPF_MAP_TYPE_SOCKHASH = 0x12;
public static readonly nuint BPF_MAP_TYPE_CGROUP_STORAGE = 0x13;
public static readonly nuint BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = 0x14;
public static readonly nuint BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = 0x15;
public static readonly nuint BPF_MAP_TYPE_QUEUE = 0x16;
public static readonly nuint BPF_MAP_TYPE_STACK = 0x17;
public static readonly nuint BPF_MAP_TYPE_SK_STORAGE = 0x18;
public static readonly nuint BPF_MAP_TYPE_DEVMAP_HASH = 0x19;
public static readonly nuint BPF_MAP_TYPE_STRUCT_OPS = 0x1a;
public static readonly nuint BPF_MAP_TYPE_RINGBUF = 0x1b;
public static readonly nuint BPF_MAP_TYPE_INODE_STORAGE = 0x1c;
public static readonly nuint BPF_PROG_TYPE_UNSPEC = 0x0;
public static readonly nuint BPF_PROG_TYPE_SOCKET_FILTER = 0x1;
public static readonly nuint BPF_PROG_TYPE_KPROBE = 0x2;
public static readonly nuint BPF_PROG_TYPE_SCHED_CLS = 0x3;
public static readonly nuint BPF_PROG_TYPE_SCHED_ACT = 0x4;
public static readonly nuint BPF_PROG_TYPE_TRACEPOINT = 0x5;
public static readonly nuint BPF_PROG_TYPE_XDP = 0x6;
public static readonly nuint BPF_PROG_TYPE_PERF_EVENT = 0x7;
public static readonly nuint BPF_PROG_TYPE_CGROUP_SKB = 0x8;
public static readonly nuint BPF_PROG_TYPE_CGROUP_SOCK = 0x9;
public static readonly nuint BPF_PROG_TYPE_LWT_IN = 0xa;
public static readonly nuint BPF_PROG_TYPE_LWT_OUT = 0xb;
public static readonly nuint BPF_PROG_TYPE_LWT_XMIT = 0xc;
public static readonly nuint BPF_PROG_TYPE_SOCK_OPS = 0xd;
public static readonly nuint BPF_PROG_TYPE_SK_SKB = 0xe;
public static readonly nuint BPF_PROG_TYPE_CGROUP_DEVICE = 0xf;
public static readonly nuint BPF_PROG_TYPE_SK_MSG = 0x10;
public static readonly nuint BPF_PROG_TYPE_RAW_TRACEPOINT = 0x11;
public static readonly nuint BPF_PROG_TYPE_CGROUP_SOCK_ADDR = 0x12;
public static readonly nuint BPF_PROG_TYPE_LWT_SEG6LOCAL = 0x13;
public static readonly nuint BPF_PROG_TYPE_LIRC_MODE2 = 0x14;
public static readonly nuint BPF_PROG_TYPE_SK_REUSEPORT = 0x15;
public static readonly nuint BPF_PROG_TYPE_FLOW_DISSECTOR = 0x16;
public static readonly nuint BPF_PROG_TYPE_CGROUP_SYSCTL = 0x17;
public static readonly nuint BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = 0x18;
public static readonly nuint BPF_PROG_TYPE_CGROUP_SOCKOPT = 0x19;
public static readonly nuint BPF_PROG_TYPE_TRACING = 0x1a;
public static readonly nuint BPF_PROG_TYPE_STRUCT_OPS = 0x1b;
public static readonly nuint BPF_PROG_TYPE_EXT = 0x1c;
public static readonly nuint BPF_PROG_TYPE_LSM = 0x1d;
public static readonly nuint BPF_PROG_TYPE_SK_LOOKUP = 0x1e;
public static readonly nuint BPF_CGROUP_INET_INGRESS = 0x0;
public static readonly nuint BPF_CGROUP_INET_EGRESS = 0x1;
public static readonly nuint BPF_CGROUP_INET_SOCK_CREATE = 0x2;
public static readonly nuint BPF_CGROUP_SOCK_OPS = 0x3;
public static readonly nuint BPF_SK_SKB_STREAM_PARSER = 0x4;
public static readonly nuint BPF_SK_SKB_STREAM_VERDICT = 0x5;
public static readonly nuint BPF_CGROUP_DEVICE = 0x6;
public static readonly nuint BPF_SK_MSG_VERDICT = 0x7;
public static readonly nuint BPF_CGROUP_INET4_BIND = 0x8;
public static readonly nuint BPF_CGROUP_INET6_BIND = 0x9;
public static readonly nuint BPF_CGROUP_INET4_CONNECT = 0xa;
public static readonly nuint BPF_CGROUP_INET6_CONNECT = 0xb;
public static readonly nuint BPF_CGROUP_INET4_POST_BIND = 0xc;
public static readonly nuint BPF_CGROUP_INET6_POST_BIND = 0xd;
public static readonly nuint BPF_CGROUP_UDP4_SENDMSG = 0xe;
public static readonly nuint BPF_CGROUP_UDP6_SENDMSG = 0xf;
public static readonly nuint BPF_LIRC_MODE2 = 0x10;
public static readonly nuint BPF_FLOW_DISSECTOR = 0x11;
public static readonly nuint BPF_CGROUP_SYSCTL = 0x12;
public static readonly nuint BPF_CGROUP_UDP4_RECVMSG = 0x13;
public static readonly nuint BPF_CGROUP_UDP6_RECVMSG = 0x14;
public static readonly nuint BPF_CGROUP_GETSOCKOPT = 0x15;
public static readonly nuint BPF_CGROUP_SETSOCKOPT = 0x16;
public static readonly nuint BPF_TRACE_RAW_TP = 0x17;
public static readonly nuint BPF_TRACE_FENTRY = 0x18;
public static readonly nuint BPF_TRACE_FEXIT = 0x19;
public static readonly nuint BPF_MODIFY_RETURN = 0x1a;
public static readonly nuint BPF_LSM_MAC = 0x1b;
public static readonly nuint BPF_TRACE_ITER = 0x1c;
public static readonly nuint BPF_CGROUP_INET4_GETPEERNAME = 0x1d;
public static readonly nuint BPF_CGROUP_INET6_GETPEERNAME = 0x1e;
public static readonly nuint BPF_CGROUP_INET4_GETSOCKNAME = 0x1f;
public static readonly nuint BPF_CGROUP_INET6_GETSOCKNAME = 0x20;
public static readonly nuint BPF_XDP_DEVMAP = 0x21;
public static readonly nuint BPF_CGROUP_INET_SOCK_RELEASE = 0x22;
public static readonly nuint BPF_XDP_CPUMAP = 0x23;
public static readonly nuint BPF_SK_LOOKUP = 0x24;
public static readonly nuint BPF_XDP = 0x25;
public static readonly nuint BPF_LINK_TYPE_UNSPEC = 0x0;
public static readonly nuint BPF_LINK_TYPE_RAW_TRACEPOINT = 0x1;
public static readonly nuint BPF_LINK_TYPE_TRACING = 0x2;
public static readonly nuint BPF_LINK_TYPE_CGROUP = 0x3;
public static readonly nuint BPF_LINK_TYPE_ITER = 0x4;
public static readonly nuint BPF_LINK_TYPE_NETNS = 0x5;
public static readonly nuint BPF_LINK_TYPE_XDP = 0x6;
public static readonly nuint BPF_ANY = 0x0;
public static readonly nuint BPF_NOEXIST = 0x1;
public static readonly nuint BPF_EXIST = 0x2;
public static readonly nuint BPF_F_LOCK = 0x4;
public static readonly nuint BPF_F_NO_PREALLOC = 0x1;
public static readonly nuint BPF_F_NO_COMMON_LRU = 0x2;
public static readonly nuint BPF_F_NUMA_NODE = 0x4;
public static readonly nuint BPF_F_RDONLY = 0x8;
public static readonly nuint BPF_F_WRONLY = 0x10;
public static readonly nuint BPF_F_STACK_BUILD_ID = 0x20;
public static readonly nuint BPF_F_ZERO_SEED = 0x40;
public static readonly nuint BPF_F_RDONLY_PROG = 0x80;
public static readonly nuint BPF_F_WRONLY_PROG = 0x100;
public static readonly nuint BPF_F_CLONE = 0x200;
public static readonly nuint BPF_F_MMAPABLE = 0x400;
public static readonly nuint BPF_F_PRESERVE_ELEMS = 0x800;
public static readonly nuint BPF_F_INNER_MAP = 0x1000;
public static readonly nuint BPF_STATS_RUN_TIME = 0x0;
public static readonly nuint BPF_STACK_BUILD_ID_EMPTY = 0x0;
public static readonly nuint BPF_STACK_BUILD_ID_VALID = 0x1;
public static readonly nuint BPF_STACK_BUILD_ID_IP = 0x2;
public static readonly nuint BPF_F_RECOMPUTE_CSUM = 0x1;
public static readonly nuint BPF_F_INVALIDATE_HASH = 0x2;
public static readonly nuint BPF_F_HDR_FIELD_MASK = 0xf;
public static readonly nuint BPF_F_PSEUDO_HDR = 0x10;
public static readonly nuint BPF_F_MARK_MANGLED_0 = 0x20;
public static readonly nuint BPF_F_MARK_ENFORCE = 0x40;
public static readonly nuint BPF_F_INGRESS = 0x1;
public static readonly nuint BPF_F_TUNINFO_IPV6 = 0x1;
public static readonly nuint BPF_F_SKIP_FIELD_MASK = 0xff;
public static readonly nuint BPF_F_USER_STACK = 0x100;
public static readonly nuint BPF_F_FAST_STACK_CMP = 0x200;
public static readonly nuint BPF_F_REUSE_STACKID = 0x400;
public static readonly nuint BPF_F_USER_BUILD_ID = 0x800;
public static readonly nuint BPF_F_ZERO_CSUM_TX = 0x2;
public static readonly nuint BPF_F_DONT_FRAGMENT = 0x4;
public static readonly nuint BPF_F_SEQ_NUMBER = 0x8;
public static readonly nuint BPF_F_INDEX_MASK = 0xffffffff;
public static readonly nuint BPF_F_CURRENT_CPU = 0xffffffff;
public static readonly nuint BPF_F_CTXLEN_MASK = 0xfffff00000000;
public static readonly nuint BPF_F_CURRENT_NETNS = -0x1;
public static readonly nuint BPF_CSUM_LEVEL_QUERY = 0x0;
public static readonly nuint BPF_CSUM_LEVEL_INC = 0x1;
public static readonly nuint BPF_CSUM_LEVEL_DEC = 0x2;
public static readonly nuint BPF_CSUM_LEVEL_RESET = 0x3;
public static readonly nuint BPF_F_ADJ_ROOM_FIXED_GSO = 0x1;
public static readonly nuint BPF_F_ADJ_ROOM_ENCAP_L3_IPV4 = 0x2;
public static readonly nuint BPF_F_ADJ_ROOM_ENCAP_L3_IPV6 = 0x4;
public static readonly nuint BPF_F_ADJ_ROOM_ENCAP_L4_GRE = 0x8;
public static readonly nuint BPF_F_ADJ_ROOM_ENCAP_L4_UDP = 0x10;
public static readonly nuint BPF_F_ADJ_ROOM_NO_CSUM_RESET = 0x20;
public static readonly nuint BPF_ADJ_ROOM_ENCAP_L2_MASK = 0xff;
public static readonly nuint BPF_ADJ_ROOM_ENCAP_L2_SHIFT = 0x38;
public static readonly nuint BPF_F_SYSCTL_BASE_NAME = 0x1;
public static readonly nuint BPF_LOCAL_STORAGE_GET_F_CREATE = 0x1;
public static readonly nuint BPF_SK_STORAGE_GET_F_CREATE = 0x1;
public static readonly nuint BPF_F_GET_BRANCH_RECORDS_SIZE = 0x1;
public static readonly nuint BPF_RB_NO_WAKEUP = 0x1;
public static readonly nuint BPF_RB_FORCE_WAKEUP = 0x2;
public static readonly nuint BPF_RB_AVAIL_DATA = 0x0;
public static readonly nuint BPF_RB_RING_SIZE = 0x1;
public static readonly nuint BPF_RB_CONS_POS = 0x2;
public static readonly nuint BPF_RB_PROD_POS = 0x3;
public static readonly nuint BPF_RINGBUF_BUSY_BIT = 0x80000000;
public static readonly nuint BPF_RINGBUF_DISCARD_BIT = 0x40000000;
public static readonly nuint BPF_RINGBUF_HDR_SZ = 0x8;
public static readonly nuint BPF_SK_LOOKUP_F_REPLACE = 0x1;
public static readonly nuint BPF_SK_LOOKUP_F_NO_REUSEPORT = 0x2;
public static readonly nuint BPF_ADJ_ROOM_NET = 0x0;
public static readonly nuint BPF_ADJ_ROOM_MAC = 0x1;
public static readonly nuint BPF_HDR_START_MAC = 0x0;
public static readonly nuint BPF_HDR_START_NET = 0x1;
public static readonly nuint BPF_LWT_ENCAP_SEG6 = 0x0;
public static readonly nuint BPF_LWT_ENCAP_SEG6_INLINE = 0x1;
public static readonly nuint BPF_LWT_ENCAP_IP = 0x2;
public static readonly nuint BPF_OK = 0x0;
public static readonly nuint BPF_DROP = 0x2;
public static readonly nuint BPF_REDIRECT = 0x7;
public static readonly nuint BPF_LWT_REROUTE = 0x80;
public static readonly nuint BPF_SOCK_OPS_RTO_CB_FLAG = 0x1;
public static readonly nuint BPF_SOCK_OPS_RETRANS_CB_FLAG = 0x2;
public static readonly nuint BPF_SOCK_OPS_STATE_CB_FLAG = 0x4;
public static readonly nuint BPF_SOCK_OPS_RTT_CB_FLAG = 0x8;
public static readonly nuint BPF_SOCK_OPS_PARSE_ALL_HDR_OPT_CB_FLAG = 0x10;
public static readonly nuint BPF_SOCK_OPS_PARSE_UNKNOWN_HDR_OPT_CB_FLAG = 0x20;
public static readonly nuint BPF_SOCK_OPS_WRITE_HDR_OPT_CB_FLAG = 0x40;
public static readonly nuint BPF_SOCK_OPS_ALL_CB_FLAGS = 0x7f;
public static readonly nuint BPF_SOCK_OPS_VOID = 0x0;
public static readonly nuint BPF_SOCK_OPS_TIMEOUT_INIT = 0x1;
public static readonly nuint BPF_SOCK_OPS_RWND_INIT = 0x2;
public static readonly nuint BPF_SOCK_OPS_TCP_CONNECT_CB = 0x3;
public static readonly nuint BPF_SOCK_OPS_ACTIVE_ESTABLISHED_CB = 0x4;
public static readonly nuint BPF_SOCK_OPS_PASSIVE_ESTABLISHED_CB = 0x5;
public static readonly nuint BPF_SOCK_OPS_NEEDS_ECN = 0x6;
public static readonly nuint BPF_SOCK_OPS_BASE_RTT = 0x7;
public static readonly nuint BPF_SOCK_OPS_RTO_CB = 0x8;
public static readonly nuint BPF_SOCK_OPS_RETRANS_CB = 0x9;
public static readonly nuint BPF_SOCK_OPS_STATE_CB = 0xa;
public static readonly nuint BPF_SOCK_OPS_TCP_LISTEN_CB = 0xb;
public static readonly nuint BPF_SOCK_OPS_RTT_CB = 0xc;
public static readonly nuint BPF_SOCK_OPS_PARSE_HDR_OPT_CB = 0xd;
public static readonly nuint BPF_SOCK_OPS_HDR_OPT_LEN_CB = 0xe;
public static readonly nuint BPF_SOCK_OPS_WRITE_HDR_OPT_CB = 0xf;
public static readonly nuint BPF_TCP_ESTABLISHED = 0x1;
public static readonly nuint BPF_TCP_SYN_SENT = 0x2;
public static readonly nuint BPF_TCP_SYN_RECV = 0x3;
public static readonly nuint BPF_TCP_FIN_WAIT1 = 0x4;
public static readonly nuint BPF_TCP_FIN_WAIT2 = 0x5;
public static readonly nuint BPF_TCP_TIME_WAIT = 0x6;
public static readonly nuint BPF_TCP_CLOSE = 0x7;
public static readonly nuint BPF_TCP_CLOSE_WAIT = 0x8;
public static readonly nuint BPF_TCP_LAST_ACK = 0x9;
public static readonly nuint BPF_TCP_LISTEN = 0xa;
public static readonly nuint BPF_TCP_CLOSING = 0xb;
public static readonly nuint BPF_TCP_NEW_SYN_RECV = 0xc;
public static readonly nuint BPF_TCP_MAX_STATES = 0xd;
public static readonly nuint TCP_BPF_IW = 0x3e9;
public static readonly nuint TCP_BPF_SNDCWND_CLAMP = 0x3ea;
public static readonly nuint TCP_BPF_DELACK_MAX = 0x3eb;
public static readonly nuint TCP_BPF_RTO_MIN = 0x3ec;
public static readonly nuint TCP_BPF_SYN = 0x3ed;
public static readonly nuint TCP_BPF_SYN_IP = 0x3ee;
public static readonly nuint TCP_BPF_SYN_MAC = 0x3ef;
public static readonly nuint BPF_LOAD_HDR_OPT_TCP_SYN = 0x1;
public static readonly nuint BPF_WRITE_HDR_TCP_CURRENT_MSS = 0x1;
public static readonly nuint BPF_WRITE_HDR_TCP_SYNACK_COOKIE = 0x2;
public static readonly nuint BPF_DEVCG_ACC_MKNOD = 0x1;
public static readonly nuint BPF_DEVCG_ACC_READ = 0x2;
public static readonly nuint BPF_DEVCG_ACC_WRITE = 0x4;
public static readonly nuint BPF_DEVCG_DEV_BLOCK = 0x1;
public static readonly nuint BPF_DEVCG_DEV_CHAR = 0x2;
public static readonly nuint BPF_FIB_LOOKUP_DIRECT = 0x1;
public static readonly nuint BPF_FIB_LOOKUP_OUTPUT = 0x2;
public static readonly nuint BPF_FIB_LKUP_RET_SUCCESS = 0x0;
public static readonly nuint BPF_FIB_LKUP_RET_BLACKHOLE = 0x1;
public static readonly nuint BPF_FIB_LKUP_RET_UNREACHABLE = 0x2;
public static readonly nuint BPF_FIB_LKUP_RET_PROHIBIT = 0x3;
public static readonly nuint BPF_FIB_LKUP_RET_NOT_FWDED = 0x4;
public static readonly nuint BPF_FIB_LKUP_RET_FWD_DISABLED = 0x5;
public static readonly nuint BPF_FIB_LKUP_RET_UNSUPP_LWT = 0x6;
public static readonly nuint BPF_FIB_LKUP_RET_NO_NEIGH = 0x7;
public static readonly nuint BPF_FIB_LKUP_RET_FRAG_NEEDED = 0x8;
public static readonly nuint BPF_FD_TYPE_RAW_TRACEPOINT = 0x0;
public static readonly nuint BPF_FD_TYPE_TRACEPOINT = 0x1;
public static readonly nuint BPF_FD_TYPE_KPROBE = 0x2;
public static readonly nuint BPF_FD_TYPE_KRETPROBE = 0x3;
public static readonly nuint BPF_FD_TYPE_UPROBE = 0x4;
public static readonly nuint BPF_FD_TYPE_URETPROBE = 0x5;
public static readonly nuint BPF_FLOW_DISSECTOR_F_PARSE_1ST_FRAG = 0x1;
public static readonly nuint BPF_FLOW_DISSECTOR_F_STOP_AT_FLOW_LABEL = 0x2;
public static readonly nuint BPF_FLOW_DISSECTOR_F_STOP_AT_ENCAP = 0x4;


public static readonly nuint RTNLGRP_NONE = 0x0;
public static readonly nuint RTNLGRP_LINK = 0x1;
public static readonly nuint RTNLGRP_NOTIFY = 0x2;
public static readonly nuint RTNLGRP_NEIGH = 0x3;
public static readonly nuint RTNLGRP_TC = 0x4;
public static readonly nuint RTNLGRP_IPV4_IFADDR = 0x5;
public static readonly nuint RTNLGRP_IPV4_MROUTE = 0x6;
public static readonly nuint RTNLGRP_IPV4_ROUTE = 0x7;
public static readonly nuint RTNLGRP_IPV4_RULE = 0x8;
public static readonly nuint RTNLGRP_IPV6_IFADDR = 0x9;
public static readonly nuint RTNLGRP_IPV6_MROUTE = 0xa;
public static readonly nuint RTNLGRP_IPV6_ROUTE = 0xb;
public static readonly nuint RTNLGRP_IPV6_IFINFO = 0xc;
public static readonly nuint RTNLGRP_DECnet_IFADDR = 0xd;
public static readonly nuint RTNLGRP_NOP2 = 0xe;
public static readonly nuint RTNLGRP_DECnet_ROUTE = 0xf;
public static readonly nuint RTNLGRP_DECnet_RULE = 0x10;
public static readonly nuint RTNLGRP_NOP4 = 0x11;
public static readonly nuint RTNLGRP_IPV6_PREFIX = 0x12;
public static readonly nuint RTNLGRP_IPV6_RULE = 0x13;
public static readonly nuint RTNLGRP_ND_USEROPT = 0x14;
public static readonly nuint RTNLGRP_PHONET_IFADDR = 0x15;
public static readonly nuint RTNLGRP_PHONET_ROUTE = 0x16;
public static readonly nuint RTNLGRP_DCB = 0x17;
public static readonly nuint RTNLGRP_IPV4_NETCONF = 0x18;
public static readonly nuint RTNLGRP_IPV6_NETCONF = 0x19;
public static readonly nuint RTNLGRP_MDB = 0x1a;
public static readonly nuint RTNLGRP_MPLS_ROUTE = 0x1b;
public static readonly nuint RTNLGRP_NSID = 0x1c;
public static readonly nuint RTNLGRP_MPLS_NETCONF = 0x1d;
public static readonly nuint RTNLGRP_IPV4_MROUTE_R = 0x1e;
public static readonly nuint RTNLGRP_IPV6_MROUTE_R = 0x1f;
public static readonly nuint RTNLGRP_NEXTHOP = 0x20;
public static readonly nuint RTNLGRP_BRVLAN = 0x21;


public partial struct CapUserHeader {
    public uint Version;
    public int Pid;
}

public partial struct CapUserData {
    public uint Effective;
    public uint Permitted;
    public uint Inheritable;
}

public static readonly nuint LINUX_CAPABILITY_VERSION_1 = 0x19980330;
public static readonly nuint LINUX_CAPABILITY_VERSION_2 = 0x20071026;
public static readonly nuint LINUX_CAPABILITY_VERSION_3 = 0x20080522;


public static readonly nuint LO_FLAGS_READ_ONLY = 0x1;
public static readonly nuint LO_FLAGS_AUTOCLEAR = 0x4;
public static readonly nuint LO_FLAGS_PARTSCAN = 0x8;
public static readonly nuint LO_FLAGS_DIRECT_IO = 0x10;


public partial struct LoopInfo64 {
    public ulong Device;
    public ulong Inode;
    public ulong Rdevice;
    public ulong Offset;
    public ulong Sizelimit;
    public uint Number;
    public uint Encrypt_type;
    public uint Encrypt_key_size;
    public uint Flags;
    public array<byte> File_name;
    public array<byte> Crypt_name;
    public array<byte> Encrypt_key;
    public array<ulong> Init;
}

public partial struct TIPCSocketAddr {
    public uint Ref;
    public uint Node;
}

public partial struct TIPCServiceRange {
    public uint Type;
    public uint Lower;
    public uint Upper;
}

public partial struct TIPCServiceName {
    public uint Type;
    public uint Instance;
    public uint Domain;
}

public partial struct TIPCEvent {
    public uint Event;
    public uint Lower;
    public uint Upper;
    public TIPCSocketAddr Port;
    public TIPCSubscr S;
}

public partial struct TIPCGroupReq {
    public uint Type;
    public uint Instance;
    public uint Scope;
    public uint Flags;
}

public static readonly nuint TIPC_CLUSTER_SCOPE = 0x2;
public static readonly nuint TIPC_NODE_SCOPE = 0x3;


public static readonly nint SYSLOG_ACTION_CLOSE = 0;
public static readonly nint SYSLOG_ACTION_OPEN = 1;
public static readonly nint SYSLOG_ACTION_READ = 2;
public static readonly nint SYSLOG_ACTION_READ_ALL = 3;
public static readonly nint SYSLOG_ACTION_READ_CLEAR = 4;
public static readonly nint SYSLOG_ACTION_CLEAR = 5;
public static readonly nint SYSLOG_ACTION_CONSOLE_OFF = 6;
public static readonly nint SYSLOG_ACTION_CONSOLE_ON = 7;
public static readonly nint SYSLOG_ACTION_CONSOLE_LEVEL = 8;
public static readonly nint SYSLOG_ACTION_SIZE_UNREAD = 9;
public static readonly nint SYSLOG_ACTION_SIZE_BUFFER = 10;


public static readonly nuint DEVLINK_CMD_UNSPEC = 0x0;
public static readonly nuint DEVLINK_CMD_GET = 0x1;
public static readonly nuint DEVLINK_CMD_SET = 0x2;
public static readonly nuint DEVLINK_CMD_NEW = 0x3;
public static readonly nuint DEVLINK_CMD_DEL = 0x4;
public static readonly nuint DEVLINK_CMD_PORT_GET = 0x5;
public static readonly nuint DEVLINK_CMD_PORT_SET = 0x6;
public static readonly nuint DEVLINK_CMD_PORT_NEW = 0x7;
public static readonly nuint DEVLINK_CMD_PORT_DEL = 0x8;
public static readonly nuint DEVLINK_CMD_PORT_SPLIT = 0x9;
public static readonly nuint DEVLINK_CMD_PORT_UNSPLIT = 0xa;
public static readonly nuint DEVLINK_CMD_SB_GET = 0xb;
public static readonly nuint DEVLINK_CMD_SB_SET = 0xc;
public static readonly nuint DEVLINK_CMD_SB_NEW = 0xd;
public static readonly nuint DEVLINK_CMD_SB_DEL = 0xe;
public static readonly nuint DEVLINK_CMD_SB_POOL_GET = 0xf;
public static readonly nuint DEVLINK_CMD_SB_POOL_SET = 0x10;
public static readonly nuint DEVLINK_CMD_SB_POOL_NEW = 0x11;
public static readonly nuint DEVLINK_CMD_SB_POOL_DEL = 0x12;
public static readonly nuint DEVLINK_CMD_SB_PORT_POOL_GET = 0x13;
public static readonly nuint DEVLINK_CMD_SB_PORT_POOL_SET = 0x14;
public static readonly nuint DEVLINK_CMD_SB_PORT_POOL_NEW = 0x15;
public static readonly nuint DEVLINK_CMD_SB_PORT_POOL_DEL = 0x16;
public static readonly nuint DEVLINK_CMD_SB_TC_POOL_BIND_GET = 0x17;
public static readonly nuint DEVLINK_CMD_SB_TC_POOL_BIND_SET = 0x18;
public static readonly nuint DEVLINK_CMD_SB_TC_POOL_BIND_NEW = 0x19;
public static readonly nuint DEVLINK_CMD_SB_TC_POOL_BIND_DEL = 0x1a;
public static readonly nuint DEVLINK_CMD_SB_OCC_SNAPSHOT = 0x1b;
public static readonly nuint DEVLINK_CMD_SB_OCC_MAX_CLEAR = 0x1c;
public static readonly nuint DEVLINK_CMD_ESWITCH_GET = 0x1d;
public static readonly nuint DEVLINK_CMD_ESWITCH_SET = 0x1e;
public static readonly nuint DEVLINK_CMD_DPIPE_TABLE_GET = 0x1f;
public static readonly nuint DEVLINK_CMD_DPIPE_ENTRIES_GET = 0x20;
public static readonly nuint DEVLINK_CMD_DPIPE_HEADERS_GET = 0x21;
public static readonly nuint DEVLINK_CMD_DPIPE_TABLE_COUNTERS_SET = 0x22;
public static readonly nuint DEVLINK_CMD_RESOURCE_SET = 0x23;
public static readonly nuint DEVLINK_CMD_RESOURCE_DUMP = 0x24;
public static readonly nuint DEVLINK_CMD_RELOAD = 0x25;
public static readonly nuint DEVLINK_CMD_PARAM_GET = 0x26;
public static readonly nuint DEVLINK_CMD_PARAM_SET = 0x27;
public static readonly nuint DEVLINK_CMD_PARAM_NEW = 0x28;
public static readonly nuint DEVLINK_CMD_PARAM_DEL = 0x29;
public static readonly nuint DEVLINK_CMD_REGION_GET = 0x2a;
public static readonly nuint DEVLINK_CMD_REGION_SET = 0x2b;
public static readonly nuint DEVLINK_CMD_REGION_NEW = 0x2c;
public static readonly nuint DEVLINK_CMD_REGION_DEL = 0x2d;
public static readonly nuint DEVLINK_CMD_REGION_READ = 0x2e;
public static readonly nuint DEVLINK_CMD_PORT_PARAM_GET = 0x2f;
public static readonly nuint DEVLINK_CMD_PORT_PARAM_SET = 0x30;
public static readonly nuint DEVLINK_CMD_PORT_PARAM_NEW = 0x31;
public static readonly nuint DEVLINK_CMD_PORT_PARAM_DEL = 0x32;
public static readonly nuint DEVLINK_CMD_INFO_GET = 0x33;
public static readonly nuint DEVLINK_CMD_HEALTH_REPORTER_GET = 0x34;
public static readonly nuint DEVLINK_CMD_HEALTH_REPORTER_SET = 0x35;
public static readonly nuint DEVLINK_CMD_HEALTH_REPORTER_RECOVER = 0x36;
public static readonly nuint DEVLINK_CMD_HEALTH_REPORTER_DIAGNOSE = 0x37;
public static readonly nuint DEVLINK_CMD_HEALTH_REPORTER_DUMP_GET = 0x38;
public static readonly nuint DEVLINK_CMD_HEALTH_REPORTER_DUMP_CLEAR = 0x39;
public static readonly nuint DEVLINK_CMD_FLASH_UPDATE = 0x3a;
public static readonly nuint DEVLINK_CMD_FLASH_UPDATE_END = 0x3b;
public static readonly nuint DEVLINK_CMD_FLASH_UPDATE_STATUS = 0x3c;
public static readonly nuint DEVLINK_CMD_TRAP_GET = 0x3d;
public static readonly nuint DEVLINK_CMD_TRAP_SET = 0x3e;
public static readonly nuint DEVLINK_CMD_TRAP_NEW = 0x3f;
public static readonly nuint DEVLINK_CMD_TRAP_DEL = 0x40;
public static readonly nuint DEVLINK_CMD_TRAP_GROUP_GET = 0x41;
public static readonly nuint DEVLINK_CMD_TRAP_GROUP_SET = 0x42;
public static readonly nuint DEVLINK_CMD_TRAP_GROUP_NEW = 0x43;
public static readonly nuint DEVLINK_CMD_TRAP_GROUP_DEL = 0x44;
public static readonly nuint DEVLINK_CMD_TRAP_POLICER_GET = 0x45;
public static readonly nuint DEVLINK_CMD_TRAP_POLICER_SET = 0x46;
public static readonly nuint DEVLINK_CMD_TRAP_POLICER_NEW = 0x47;
public static readonly nuint DEVLINK_CMD_TRAP_POLICER_DEL = 0x48;
public static readonly nuint DEVLINK_CMD_HEALTH_REPORTER_TEST = 0x49;
public static readonly nuint DEVLINK_CMD_MAX = 0x49;
public static readonly nuint DEVLINK_PORT_TYPE_NOTSET = 0x0;
public static readonly nuint DEVLINK_PORT_TYPE_AUTO = 0x1;
public static readonly nuint DEVLINK_PORT_TYPE_ETH = 0x2;
public static readonly nuint DEVLINK_PORT_TYPE_IB = 0x3;
public static readonly nuint DEVLINK_SB_POOL_TYPE_INGRESS = 0x0;
public static readonly nuint DEVLINK_SB_POOL_TYPE_EGRESS = 0x1;
public static readonly nuint DEVLINK_SB_THRESHOLD_TYPE_STATIC = 0x0;
public static readonly nuint DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC = 0x1;
public static readonly nuint DEVLINK_ESWITCH_MODE_LEGACY = 0x0;
public static readonly nuint DEVLINK_ESWITCH_MODE_SWITCHDEV = 0x1;
public static readonly nuint DEVLINK_ESWITCH_INLINE_MODE_NONE = 0x0;
public static readonly nuint DEVLINK_ESWITCH_INLINE_MODE_LINK = 0x1;
public static readonly nuint DEVLINK_ESWITCH_INLINE_MODE_NETWORK = 0x2;
public static readonly nuint DEVLINK_ESWITCH_INLINE_MODE_TRANSPORT = 0x3;
public static readonly nuint DEVLINK_ESWITCH_ENCAP_MODE_NONE = 0x0;
public static readonly nuint DEVLINK_ESWITCH_ENCAP_MODE_BASIC = 0x1;
public static readonly nuint DEVLINK_PORT_FLAVOUR_PHYSICAL = 0x0;
public static readonly nuint DEVLINK_PORT_FLAVOUR_CPU = 0x1;
public static readonly nuint DEVLINK_PORT_FLAVOUR_DSA = 0x2;
public static readonly nuint DEVLINK_PORT_FLAVOUR_PCI_PF = 0x3;
public static readonly nuint DEVLINK_PORT_FLAVOUR_PCI_VF = 0x4;
public static readonly nuint DEVLINK_PORT_FLAVOUR_VIRTUAL = 0x5;
public static readonly nuint DEVLINK_PORT_FLAVOUR_UNUSED = 0x6;
public static readonly nuint DEVLINK_PARAM_CMODE_RUNTIME = 0x0;
public static readonly nuint DEVLINK_PARAM_CMODE_DRIVERINIT = 0x1;
public static readonly nuint DEVLINK_PARAM_CMODE_PERMANENT = 0x2;
public static readonly nuint DEVLINK_PARAM_CMODE_MAX = 0x2;
public static readonly nuint DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_DRIVER = 0x0;
public static readonly nuint DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_FLASH = 0x1;
public static readonly nuint DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_DISK = 0x2;
public static readonly nuint DEVLINK_PARAM_FW_LOAD_POLICY_VALUE_UNKNOWN = 0x3;
public static readonly nuint DEVLINK_PARAM_RESET_DEV_ON_DRV_PROBE_VALUE_UNKNOWN = 0x0;
public static readonly nuint DEVLINK_PARAM_RESET_DEV_ON_DRV_PROBE_VALUE_ALWAYS = 0x1;
public static readonly nuint DEVLINK_PARAM_RESET_DEV_ON_DRV_PROBE_VALUE_NEVER = 0x2;
public static readonly nuint DEVLINK_PARAM_RESET_DEV_ON_DRV_PROBE_VALUE_DISK = 0x3;
public static readonly nuint DEVLINK_ATTR_STATS_RX_PACKETS = 0x0;
public static readonly nuint DEVLINK_ATTR_STATS_RX_BYTES = 0x1;
public static readonly nuint DEVLINK_ATTR_STATS_RX_DROPPED = 0x2;
public static readonly nuint DEVLINK_ATTR_STATS_MAX = 0x2;
public static readonly nuint DEVLINK_FLASH_OVERWRITE_SETTINGS_BIT = 0x0;
public static readonly nuint DEVLINK_FLASH_OVERWRITE_IDENTIFIERS_BIT = 0x1;
public static readonly nuint DEVLINK_FLASH_OVERWRITE_MAX_BIT = 0x1;
public static readonly nuint DEVLINK_TRAP_ACTION_DROP = 0x0;
public static readonly nuint DEVLINK_TRAP_ACTION_TRAP = 0x1;
public static readonly nuint DEVLINK_TRAP_ACTION_MIRROR = 0x2;
public static readonly nuint DEVLINK_TRAP_TYPE_DROP = 0x0;
public static readonly nuint DEVLINK_TRAP_TYPE_EXCEPTION = 0x1;
public static readonly nuint DEVLINK_TRAP_TYPE_CONTROL = 0x2;
public static readonly nuint DEVLINK_ATTR_TRAP_METADATA_TYPE_IN_PORT = 0x0;
public static readonly nuint DEVLINK_ATTR_TRAP_METADATA_TYPE_FA_COOKIE = 0x1;
public static readonly nuint DEVLINK_RELOAD_ACTION_UNSPEC = 0x0;
public static readonly nuint DEVLINK_RELOAD_ACTION_DRIVER_REINIT = 0x1;
public static readonly nuint DEVLINK_RELOAD_ACTION_FW_ACTIVATE = 0x2;
public static readonly nuint DEVLINK_RELOAD_ACTION_MAX = 0x2;
public static readonly nuint DEVLINK_RELOAD_LIMIT_UNSPEC = 0x0;
public static readonly nuint DEVLINK_RELOAD_LIMIT_NO_RESET = 0x1;
public static readonly nuint DEVLINK_RELOAD_LIMIT_MAX = 0x1;
public static readonly nuint DEVLINK_ATTR_UNSPEC = 0x0;
public static readonly nuint DEVLINK_ATTR_BUS_NAME = 0x1;
public static readonly nuint DEVLINK_ATTR_DEV_NAME = 0x2;
public static readonly nuint DEVLINK_ATTR_PORT_INDEX = 0x3;
public static readonly nuint DEVLINK_ATTR_PORT_TYPE = 0x4;
public static readonly nuint DEVLINK_ATTR_PORT_DESIRED_TYPE = 0x5;
public static readonly nuint DEVLINK_ATTR_PORT_NETDEV_IFINDEX = 0x6;
public static readonly nuint DEVLINK_ATTR_PORT_NETDEV_NAME = 0x7;
public static readonly nuint DEVLINK_ATTR_PORT_IBDEV_NAME = 0x8;
public static readonly nuint DEVLINK_ATTR_PORT_SPLIT_COUNT = 0x9;
public static readonly nuint DEVLINK_ATTR_PORT_SPLIT_GROUP = 0xa;
public static readonly nuint DEVLINK_ATTR_SB_INDEX = 0xb;
public static readonly nuint DEVLINK_ATTR_SB_SIZE = 0xc;
public static readonly nuint DEVLINK_ATTR_SB_INGRESS_POOL_COUNT = 0xd;
public static readonly nuint DEVLINK_ATTR_SB_EGRESS_POOL_COUNT = 0xe;
public static readonly nuint DEVLINK_ATTR_SB_INGRESS_TC_COUNT = 0xf;
public static readonly nuint DEVLINK_ATTR_SB_EGRESS_TC_COUNT = 0x10;
public static readonly nuint DEVLINK_ATTR_SB_POOL_INDEX = 0x11;
public static readonly nuint DEVLINK_ATTR_SB_POOL_TYPE = 0x12;
public static readonly nuint DEVLINK_ATTR_SB_POOL_SIZE = 0x13;
public static readonly nuint DEVLINK_ATTR_SB_POOL_THRESHOLD_TYPE = 0x14;
public static readonly nuint DEVLINK_ATTR_SB_THRESHOLD = 0x15;
public static readonly nuint DEVLINK_ATTR_SB_TC_INDEX = 0x16;
public static readonly nuint DEVLINK_ATTR_SB_OCC_CUR = 0x17;
public static readonly nuint DEVLINK_ATTR_SB_OCC_MAX = 0x18;
public static readonly nuint DEVLINK_ATTR_ESWITCH_MODE = 0x19;
public static readonly nuint DEVLINK_ATTR_ESWITCH_INLINE_MODE = 0x1a;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLES = 0x1b;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE = 0x1c;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE_NAME = 0x1d;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE_SIZE = 0x1e;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE_MATCHES = 0x1f;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE_ACTIONS = 0x20;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE_COUNTERS_ENABLED = 0x21;
public static readonly nuint DEVLINK_ATTR_DPIPE_ENTRIES = 0x22;
public static readonly nuint DEVLINK_ATTR_DPIPE_ENTRY = 0x23;
public static readonly nuint DEVLINK_ATTR_DPIPE_ENTRY_INDEX = 0x24;
public static readonly nuint DEVLINK_ATTR_DPIPE_ENTRY_MATCH_VALUES = 0x25;
public static readonly nuint DEVLINK_ATTR_DPIPE_ENTRY_ACTION_VALUES = 0x26;
public static readonly nuint DEVLINK_ATTR_DPIPE_ENTRY_COUNTER = 0x27;
public static readonly nuint DEVLINK_ATTR_DPIPE_MATCH = 0x28;
public static readonly nuint DEVLINK_ATTR_DPIPE_MATCH_VALUE = 0x29;
public static readonly nuint DEVLINK_ATTR_DPIPE_MATCH_TYPE = 0x2a;
public static readonly nuint DEVLINK_ATTR_DPIPE_ACTION = 0x2b;
public static readonly nuint DEVLINK_ATTR_DPIPE_ACTION_VALUE = 0x2c;
public static readonly nuint DEVLINK_ATTR_DPIPE_ACTION_TYPE = 0x2d;
public static readonly nuint DEVLINK_ATTR_DPIPE_VALUE = 0x2e;
public static readonly nuint DEVLINK_ATTR_DPIPE_VALUE_MASK = 0x2f;
public static readonly nuint DEVLINK_ATTR_DPIPE_VALUE_MAPPING = 0x30;
public static readonly nuint DEVLINK_ATTR_DPIPE_HEADERS = 0x31;
public static readonly nuint DEVLINK_ATTR_DPIPE_HEADER = 0x32;
public static readonly nuint DEVLINK_ATTR_DPIPE_HEADER_NAME = 0x33;
public static readonly nuint DEVLINK_ATTR_DPIPE_HEADER_ID = 0x34;
public static readonly nuint DEVLINK_ATTR_DPIPE_HEADER_FIELDS = 0x35;
public static readonly nuint DEVLINK_ATTR_DPIPE_HEADER_GLOBAL = 0x36;
public static readonly nuint DEVLINK_ATTR_DPIPE_HEADER_INDEX = 0x37;
public static readonly nuint DEVLINK_ATTR_DPIPE_FIELD = 0x38;
public static readonly nuint DEVLINK_ATTR_DPIPE_FIELD_NAME = 0x39;
public static readonly nuint DEVLINK_ATTR_DPIPE_FIELD_ID = 0x3a;
public static readonly nuint DEVLINK_ATTR_DPIPE_FIELD_BITWIDTH = 0x3b;
public static readonly nuint DEVLINK_ATTR_DPIPE_FIELD_MAPPING_TYPE = 0x3c;
public static readonly nuint DEVLINK_ATTR_PAD = 0x3d;
public static readonly nuint DEVLINK_ATTR_ESWITCH_ENCAP_MODE = 0x3e;
public static readonly nuint DEVLINK_ATTR_RESOURCE_LIST = 0x3f;
public static readonly nuint DEVLINK_ATTR_RESOURCE = 0x40;
public static readonly nuint DEVLINK_ATTR_RESOURCE_NAME = 0x41;
public static readonly nuint DEVLINK_ATTR_RESOURCE_ID = 0x42;
public static readonly nuint DEVLINK_ATTR_RESOURCE_SIZE = 0x43;
public static readonly nuint DEVLINK_ATTR_RESOURCE_SIZE_NEW = 0x44;
public static readonly nuint DEVLINK_ATTR_RESOURCE_SIZE_VALID = 0x45;
public static readonly nuint DEVLINK_ATTR_RESOURCE_SIZE_MIN = 0x46;
public static readonly nuint DEVLINK_ATTR_RESOURCE_SIZE_MAX = 0x47;
public static readonly nuint DEVLINK_ATTR_RESOURCE_SIZE_GRAN = 0x48;
public static readonly nuint DEVLINK_ATTR_RESOURCE_UNIT = 0x49;
public static readonly nuint DEVLINK_ATTR_RESOURCE_OCC = 0x4a;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE_RESOURCE_ID = 0x4b;
public static readonly nuint DEVLINK_ATTR_DPIPE_TABLE_RESOURCE_UNITS = 0x4c;
public static readonly nuint DEVLINK_ATTR_PORT_FLAVOUR = 0x4d;
public static readonly nuint DEVLINK_ATTR_PORT_NUMBER = 0x4e;
public static readonly nuint DEVLINK_ATTR_PORT_SPLIT_SUBPORT_NUMBER = 0x4f;
public static readonly nuint DEVLINK_ATTR_PARAM = 0x50;
public static readonly nuint DEVLINK_ATTR_PARAM_NAME = 0x51;
public static readonly nuint DEVLINK_ATTR_PARAM_GENERIC = 0x52;
public static readonly nuint DEVLINK_ATTR_PARAM_TYPE = 0x53;
public static readonly nuint DEVLINK_ATTR_PARAM_VALUES_LIST = 0x54;
public static readonly nuint DEVLINK_ATTR_PARAM_VALUE = 0x55;
public static readonly nuint DEVLINK_ATTR_PARAM_VALUE_DATA = 0x56;
public static readonly nuint DEVLINK_ATTR_PARAM_VALUE_CMODE = 0x57;
public static readonly nuint DEVLINK_ATTR_REGION_NAME = 0x58;
public static readonly nuint DEVLINK_ATTR_REGION_SIZE = 0x59;
public static readonly nuint DEVLINK_ATTR_REGION_SNAPSHOTS = 0x5a;
public static readonly nuint DEVLINK_ATTR_REGION_SNAPSHOT = 0x5b;
public static readonly nuint DEVLINK_ATTR_REGION_SNAPSHOT_ID = 0x5c;
public static readonly nuint DEVLINK_ATTR_REGION_CHUNKS = 0x5d;
public static readonly nuint DEVLINK_ATTR_REGION_CHUNK = 0x5e;
public static readonly nuint DEVLINK_ATTR_REGION_CHUNK_DATA = 0x5f;
public static readonly nuint DEVLINK_ATTR_REGION_CHUNK_ADDR = 0x60;
public static readonly nuint DEVLINK_ATTR_REGION_CHUNK_LEN = 0x61;
public static readonly nuint DEVLINK_ATTR_INFO_DRIVER_NAME = 0x62;
public static readonly nuint DEVLINK_ATTR_INFO_SERIAL_NUMBER = 0x63;
public static readonly nuint DEVLINK_ATTR_INFO_VERSION_FIXED = 0x64;
public static readonly nuint DEVLINK_ATTR_INFO_VERSION_RUNNING = 0x65;
public static readonly nuint DEVLINK_ATTR_INFO_VERSION_STORED = 0x66;
public static readonly nuint DEVLINK_ATTR_INFO_VERSION_NAME = 0x67;
public static readonly nuint DEVLINK_ATTR_INFO_VERSION_VALUE = 0x68;
public static readonly nuint DEVLINK_ATTR_SB_POOL_CELL_SIZE = 0x69;
public static readonly nuint DEVLINK_ATTR_FMSG = 0x6a;
public static readonly nuint DEVLINK_ATTR_FMSG_OBJ_NEST_START = 0x6b;
public static readonly nuint DEVLINK_ATTR_FMSG_PAIR_NEST_START = 0x6c;
public static readonly nuint DEVLINK_ATTR_FMSG_ARR_NEST_START = 0x6d;
public static readonly nuint DEVLINK_ATTR_FMSG_NEST_END = 0x6e;
public static readonly nuint DEVLINK_ATTR_FMSG_OBJ_NAME = 0x6f;
public static readonly nuint DEVLINK_ATTR_FMSG_OBJ_VALUE_TYPE = 0x70;
public static readonly nuint DEVLINK_ATTR_FMSG_OBJ_VALUE_DATA = 0x71;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER = 0x72;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_NAME = 0x73;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_STATE = 0x74;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_ERR_COUNT = 0x75;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_RECOVER_COUNT = 0x76;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_DUMP_TS = 0x77;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_GRACEFUL_PERIOD = 0x78;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_AUTO_RECOVER = 0x79;
public static readonly nuint DEVLINK_ATTR_FLASH_UPDATE_FILE_NAME = 0x7a;
public static readonly nuint DEVLINK_ATTR_FLASH_UPDATE_COMPONENT = 0x7b;
public static readonly nuint DEVLINK_ATTR_FLASH_UPDATE_STATUS_MSG = 0x7c;
public static readonly nuint DEVLINK_ATTR_FLASH_UPDATE_STATUS_DONE = 0x7d;
public static readonly nuint DEVLINK_ATTR_FLASH_UPDATE_STATUS_TOTAL = 0x7e;
public static readonly nuint DEVLINK_ATTR_PORT_PCI_PF_NUMBER = 0x7f;
public static readonly nuint DEVLINK_ATTR_PORT_PCI_VF_NUMBER = 0x80;
public static readonly nuint DEVLINK_ATTR_STATS = 0x81;
public static readonly nuint DEVLINK_ATTR_TRAP_NAME = 0x82;
public static readonly nuint DEVLINK_ATTR_TRAP_ACTION = 0x83;
public static readonly nuint DEVLINK_ATTR_TRAP_TYPE = 0x84;
public static readonly nuint DEVLINK_ATTR_TRAP_GENERIC = 0x85;
public static readonly nuint DEVLINK_ATTR_TRAP_METADATA = 0x86;
public static readonly nuint DEVLINK_ATTR_TRAP_GROUP_NAME = 0x87;
public static readonly nuint DEVLINK_ATTR_RELOAD_FAILED = 0x88;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_DUMP_TS_NS = 0x89;
public static readonly nuint DEVLINK_ATTR_NETNS_FD = 0x8a;
public static readonly nuint DEVLINK_ATTR_NETNS_PID = 0x8b;
public static readonly nuint DEVLINK_ATTR_NETNS_ID = 0x8c;
public static readonly nuint DEVLINK_ATTR_HEALTH_REPORTER_AUTO_DUMP = 0x8d;
public static readonly nuint DEVLINK_ATTR_TRAP_POLICER_ID = 0x8e;
public static readonly nuint DEVLINK_ATTR_TRAP_POLICER_RATE = 0x8f;
public static readonly nuint DEVLINK_ATTR_TRAP_POLICER_BURST = 0x90;
public static readonly nuint DEVLINK_ATTR_PORT_FUNCTION = 0x91;
public static readonly nuint DEVLINK_ATTR_INFO_BOARD_SERIAL_NUMBER = 0x92;
public static readonly nuint DEVLINK_ATTR_PORT_LANES = 0x93;
public static readonly nuint DEVLINK_ATTR_PORT_SPLITTABLE = 0x94;
public static readonly nuint DEVLINK_ATTR_PORT_EXTERNAL = 0x95;
public static readonly nuint DEVLINK_ATTR_PORT_CONTROLLER_NUMBER = 0x96;
public static readonly nuint DEVLINK_ATTR_FLASH_UPDATE_STATUS_TIMEOUT = 0x97;
public static readonly nuint DEVLINK_ATTR_FLASH_UPDATE_OVERWRITE_MASK = 0x98;
public static readonly nuint DEVLINK_ATTR_RELOAD_ACTION = 0x99;
public static readonly nuint DEVLINK_ATTR_RELOAD_ACTIONS_PERFORMED = 0x9a;
public static readonly nuint DEVLINK_ATTR_RELOAD_LIMITS = 0x9b;
public static readonly nuint DEVLINK_ATTR_DEV_STATS = 0x9c;
public static readonly nuint DEVLINK_ATTR_RELOAD_STATS = 0x9d;
public static readonly nuint DEVLINK_ATTR_RELOAD_STATS_ENTRY = 0x9e;
public static readonly nuint DEVLINK_ATTR_RELOAD_STATS_LIMIT = 0x9f;
public static readonly nuint DEVLINK_ATTR_RELOAD_STATS_VALUE = 0xa0;
public static readonly nuint DEVLINK_ATTR_REMOTE_RELOAD_STATS = 0xa1;
public static readonly nuint DEVLINK_ATTR_RELOAD_ACTION_INFO = 0xa2;
public static readonly nuint DEVLINK_ATTR_RELOAD_ACTION_STATS = 0xa3;
public static readonly nuint DEVLINK_ATTR_PORT_PCI_SF_NUMBER = 0xa4;
public static readonly nuint DEVLINK_ATTR_MAX = 0xa4;
public static readonly nuint DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE = 0x0;
public static readonly nuint DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX = 0x1;
public static readonly nuint DEVLINK_DPIPE_MATCH_TYPE_FIELD_EXACT = 0x0;
public static readonly nuint DEVLINK_DPIPE_ACTION_TYPE_FIELD_MODIFY = 0x0;
public static readonly nuint DEVLINK_DPIPE_FIELD_ETHERNET_DST_MAC = 0x0;
public static readonly nuint DEVLINK_DPIPE_FIELD_IPV4_DST_IP = 0x0;
public static readonly nuint DEVLINK_DPIPE_FIELD_IPV6_DST_IP = 0x0;
public static readonly nuint DEVLINK_DPIPE_HEADER_ETHERNET = 0x0;
public static readonly nuint DEVLINK_DPIPE_HEADER_IPV4 = 0x1;
public static readonly nuint DEVLINK_DPIPE_HEADER_IPV6 = 0x2;
public static readonly nuint DEVLINK_RESOURCE_UNIT_ENTRY = 0x0;
public static readonly nuint DEVLINK_PORT_FUNCTION_ATTR_UNSPEC = 0x0;
public static readonly nuint DEVLINK_PORT_FUNCTION_ATTR_HW_ADDR = 0x1;
public static readonly nuint DEVLINK_PORT_FN_ATTR_STATE = 0x2;
public static readonly nuint DEVLINK_PORT_FN_ATTR_OPSTATE = 0x3;
public static readonly nuint DEVLINK_PORT_FUNCTION_ATTR_MAX = 0x3;


public partial struct FsverityDigest {
    public ushort Algorithm;
    public ushort Size;
}

public partial struct FsverityEnableArg {
    public uint Version;
    public uint Hash_algorithm;
    public uint Block_size;
    public uint Salt_size;
    public ulong Salt_ptr;
    public uint Sig_size;
    public uint _;
    public ulong Sig_ptr;
    public array<ulong> _;
}

public partial struct Nhmsg {
    public byte Family;
    public byte Scope;
    public byte Protocol;
    public byte Resvd;
    public uint Flags;
}

public partial struct NexthopGrp {
    public uint Id;
    public byte Weight;
    public byte Resvd1;
    public ushort Resvd2;
}

public static readonly nuint NHA_UNSPEC = 0x0;
public static readonly nuint NHA_ID = 0x1;
public static readonly nuint NHA_GROUP = 0x2;
public static readonly nuint NHA_GROUP_TYPE = 0x3;
public static readonly nuint NHA_BLACKHOLE = 0x4;
public static readonly nuint NHA_OIF = 0x5;
public static readonly nuint NHA_GATEWAY = 0x6;
public static readonly nuint NHA_ENCAP_TYPE = 0x7;
public static readonly nuint NHA_ENCAP = 0x8;
public static readonly nuint NHA_GROUPS = 0x9;
public static readonly nuint NHA_MASTER = 0xa;


public static readonly nuint CAN_RAW_FILTER = 0x1;
public static readonly nuint CAN_RAW_ERR_FILTER = 0x2;
public static readonly nuint CAN_RAW_LOOPBACK = 0x3;
public static readonly nuint CAN_RAW_RECV_OWN_MSGS = 0x4;
public static readonly nuint CAN_RAW_FD_FRAMES = 0x5;
public static readonly nuint CAN_RAW_JOIN_FILTERS = 0x6;


public partial struct WatchdogInfo {
    public uint Options;
    public uint Version;
    public array<byte> Identity;
}

public partial struct PPSFData {
    public PPSKInfo Info;
    public PPSKTime Timeout;
}

public partial struct PPSKParams {
    public int Api_version;
    public int Mode;
    public PPSKTime Assert_off_tu;
    public PPSKTime Clear_off_tu;
}

public partial struct PPSKTime {
    public long Sec;
    public int Nsec;
    public uint Flags;
}

public static readonly nuint LWTUNNEL_ENCAP_NONE = 0x0;
public static readonly nuint LWTUNNEL_ENCAP_MPLS = 0x1;
public static readonly nuint LWTUNNEL_ENCAP_IP = 0x2;
public static readonly nuint LWTUNNEL_ENCAP_ILA = 0x3;
public static readonly nuint LWTUNNEL_ENCAP_IP6 = 0x4;
public static readonly nuint LWTUNNEL_ENCAP_SEG6 = 0x5;
public static readonly nuint LWTUNNEL_ENCAP_BPF = 0x6;
public static readonly nuint LWTUNNEL_ENCAP_SEG6_LOCAL = 0x7;
public static readonly nuint LWTUNNEL_ENCAP_RPL = 0x8;
public static readonly nuint LWTUNNEL_ENCAP_MAX = 0x8;

public static readonly nuint MPLS_IPTUNNEL_UNSPEC = 0x0;
public static readonly nuint MPLS_IPTUNNEL_DST = 0x1;
public static readonly nuint MPLS_IPTUNNEL_TTL = 0x2;
public static readonly nuint MPLS_IPTUNNEL_MAX = 0x2;


public static readonly nuint ETHTOOL_ID_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_RX_COPYBREAK = 0x1;
public static readonly nuint ETHTOOL_TX_COPYBREAK = 0x2;
public static readonly nuint ETHTOOL_PFC_PREVENTION_TOUT = 0x3;
public static readonly nuint ETHTOOL_TUNABLE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_TUNABLE_U8 = 0x1;
public static readonly nuint ETHTOOL_TUNABLE_U16 = 0x2;
public static readonly nuint ETHTOOL_TUNABLE_U32 = 0x3;
public static readonly nuint ETHTOOL_TUNABLE_U64 = 0x4;
public static readonly nuint ETHTOOL_TUNABLE_STRING = 0x5;
public static readonly nuint ETHTOOL_TUNABLE_S8 = 0x6;
public static readonly nuint ETHTOOL_TUNABLE_S16 = 0x7;
public static readonly nuint ETHTOOL_TUNABLE_S32 = 0x8;
public static readonly nuint ETHTOOL_TUNABLE_S64 = 0x9;
public static readonly nuint ETHTOOL_PHY_ID_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_PHY_DOWNSHIFT = 0x1;
public static readonly nuint ETHTOOL_PHY_FAST_LINK_DOWN = 0x2;
public static readonly nuint ETHTOOL_PHY_EDPD = 0x3;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_AUTONEG = 0x0;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE = 0x1;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH = 0x2;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY = 0x3;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_NO_CABLE = 0x4;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE = 0x5;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE = 0x6;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE = 0x7;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED = 0x8;
public static readonly nuint ETHTOOL_LINK_EXT_STATE_OVERHEAT = 0x9;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED = 0x1;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED = 0x2;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED = 0x3;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE = 0x4;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE = 0x5;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD = 0x6;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED = 0x1;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT = 0x2;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY = 0x3;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT = 0x4;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK = 0x1;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK = 0x2;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS = 0x3;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED = 0x4;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED = 0x5;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS = 0x1;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE = 0x2;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE = 0x1;
public static readonly nuint ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE = 0x2;
public static readonly nuint ETHTOOL_FLASH_ALL_REGIONS = 0x0;
public static readonly nuint ETHTOOL_F_UNSUPPORTED__BIT = 0x0;
public static readonly nuint ETHTOOL_F_WISH__BIT = 0x1;
public static readonly nuint ETHTOOL_F_COMPAT__BIT = 0x2;
public static readonly nuint ETHTOOL_FEC_NONE_BIT = 0x0;
public static readonly nuint ETHTOOL_FEC_AUTO_BIT = 0x1;
public static readonly nuint ETHTOOL_FEC_OFF_BIT = 0x2;
public static readonly nuint ETHTOOL_FEC_RS_BIT = 0x3;
public static readonly nuint ETHTOOL_FEC_BASER_BIT = 0x4;
public static readonly nuint ETHTOOL_FEC_LLRS_BIT = 0x5;
public static readonly nuint ETHTOOL_LINK_MODE_10baseT_Half_BIT = 0x0;
public static readonly nuint ETHTOOL_LINK_MODE_10baseT_Full_BIT = 0x1;
public static readonly nuint ETHTOOL_LINK_MODE_100baseT_Half_BIT = 0x2;
public static readonly nuint ETHTOOL_LINK_MODE_100baseT_Full_BIT = 0x3;
public static readonly nuint ETHTOOL_LINK_MODE_1000baseT_Half_BIT = 0x4;
public static readonly nuint ETHTOOL_LINK_MODE_1000baseT_Full_BIT = 0x5;
public static readonly nuint ETHTOOL_LINK_MODE_Autoneg_BIT = 0x6;
public static readonly nuint ETHTOOL_LINK_MODE_TP_BIT = 0x7;
public static readonly nuint ETHTOOL_LINK_MODE_AUI_BIT = 0x8;
public static readonly nuint ETHTOOL_LINK_MODE_MII_BIT = 0x9;
public static readonly nuint ETHTOOL_LINK_MODE_FIBRE_BIT = 0xa;
public static readonly nuint ETHTOOL_LINK_MODE_BNC_BIT = 0xb;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseT_Full_BIT = 0xc;
public static readonly nuint ETHTOOL_LINK_MODE_Pause_BIT = 0xd;
public static readonly nuint ETHTOOL_LINK_MODE_Asym_Pause_BIT = 0xe;
public static readonly nuint ETHTOOL_LINK_MODE_2500baseX_Full_BIT = 0xf;
public static readonly nuint ETHTOOL_LINK_MODE_Backplane_BIT = 0x10;
public static readonly nuint ETHTOOL_LINK_MODE_1000baseKX_Full_BIT = 0x11;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT = 0x12;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseKR_Full_BIT = 0x13;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseR_FEC_BIT = 0x14;
public static readonly nuint ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT = 0x15;
public static readonly nuint ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT = 0x16;
public static readonly nuint ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT = 0x17;
public static readonly nuint ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT = 0x18;
public static readonly nuint ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT = 0x19;
public static readonly nuint ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT = 0x1a;
public static readonly nuint ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT = 0x1b;
public static readonly nuint ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT = 0x1c;
public static readonly nuint ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT = 0x1d;
public static readonly nuint ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT = 0x1e;
public static readonly nuint ETHTOOL_LINK_MODE_25000baseCR_Full_BIT = 0x1f;
public static readonly nuint ETHTOOL_LINK_MODE_25000baseKR_Full_BIT = 0x20;
public static readonly nuint ETHTOOL_LINK_MODE_25000baseSR_Full_BIT = 0x21;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT = 0x22;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT = 0x23;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT = 0x24;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT = 0x25;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT = 0x26;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT = 0x27;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT = 0x28;
public static readonly nuint ETHTOOL_LINK_MODE_1000baseX_Full_BIT = 0x29;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseCR_Full_BIT = 0x2a;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseSR_Full_BIT = 0x2b;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseLR_Full_BIT = 0x2c;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT = 0x2d;
public static readonly nuint ETHTOOL_LINK_MODE_10000baseER_Full_BIT = 0x2e;
public static readonly nuint ETHTOOL_LINK_MODE_2500baseT_Full_BIT = 0x2f;
public static readonly nuint ETHTOOL_LINK_MODE_5000baseT_Full_BIT = 0x30;
public static readonly nuint ETHTOOL_LINK_MODE_FEC_NONE_BIT = 0x31;
public static readonly nuint ETHTOOL_LINK_MODE_FEC_RS_BIT = 0x32;
public static readonly nuint ETHTOOL_LINK_MODE_FEC_BASER_BIT = 0x33;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseKR_Full_BIT = 0x34;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseSR_Full_BIT = 0x35;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseCR_Full_BIT = 0x36;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT = 0x37;
public static readonly nuint ETHTOOL_LINK_MODE_50000baseDR_Full_BIT = 0x38;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT = 0x39;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT = 0x3a;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT = 0x3b;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT = 0x3c;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT = 0x3d;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT = 0x3e;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT = 0x3f;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT = 0x40;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT = 0x41;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT = 0x42;
public static readonly nuint ETHTOOL_LINK_MODE_100baseT1_Full_BIT = 0x43;
public static readonly nuint ETHTOOL_LINK_MODE_1000baseT1_Full_BIT = 0x44;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT = 0x45;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT = 0x46;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT = 0x47;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT = 0x48;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT = 0x49;
public static readonly nuint ETHTOOL_LINK_MODE_FEC_LLRS_BIT = 0x4a;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseKR_Full_BIT = 0x4b;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseSR_Full_BIT = 0x4c;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT = 0x4d;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseCR_Full_BIT = 0x4e;
public static readonly nuint ETHTOOL_LINK_MODE_100000baseDR_Full_BIT = 0x4f;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT = 0x50;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT = 0x51;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT = 0x52;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT = 0x53;
public static readonly nuint ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT = 0x54;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT = 0x55;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT = 0x56;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT = 0x57;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT = 0x58;
public static readonly nuint ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT = 0x59;
public static readonly nuint ETHTOOL_LINK_MODE_100baseFX_Half_BIT = 0x5a;
public static readonly nuint ETHTOOL_LINK_MODE_100baseFX_Full_BIT = 0x5b;

public static readonly nuint ETHTOOL_MSG_USER_NONE = 0x0;
public static readonly nuint ETHTOOL_MSG_STRSET_GET = 0x1;
public static readonly nuint ETHTOOL_MSG_LINKINFO_GET = 0x2;
public static readonly nuint ETHTOOL_MSG_LINKINFO_SET = 0x3;
public static readonly nuint ETHTOOL_MSG_LINKMODES_GET = 0x4;
public static readonly nuint ETHTOOL_MSG_LINKMODES_SET = 0x5;
public static readonly nuint ETHTOOL_MSG_LINKSTATE_GET = 0x6;
public static readonly nuint ETHTOOL_MSG_DEBUG_GET = 0x7;
public static readonly nuint ETHTOOL_MSG_DEBUG_SET = 0x8;
public static readonly nuint ETHTOOL_MSG_WOL_GET = 0x9;
public static readonly nuint ETHTOOL_MSG_WOL_SET = 0xa;
public static readonly nuint ETHTOOL_MSG_FEATURES_GET = 0xb;
public static readonly nuint ETHTOOL_MSG_FEATURES_SET = 0xc;
public static readonly nuint ETHTOOL_MSG_PRIVFLAGS_GET = 0xd;
public static readonly nuint ETHTOOL_MSG_PRIVFLAGS_SET = 0xe;
public static readonly nuint ETHTOOL_MSG_RINGS_GET = 0xf;
public static readonly nuint ETHTOOL_MSG_RINGS_SET = 0x10;
public static readonly nuint ETHTOOL_MSG_CHANNELS_GET = 0x11;
public static readonly nuint ETHTOOL_MSG_CHANNELS_SET = 0x12;
public static readonly nuint ETHTOOL_MSG_COALESCE_GET = 0x13;
public static readonly nuint ETHTOOL_MSG_COALESCE_SET = 0x14;
public static readonly nuint ETHTOOL_MSG_PAUSE_GET = 0x15;
public static readonly nuint ETHTOOL_MSG_PAUSE_SET = 0x16;
public static readonly nuint ETHTOOL_MSG_EEE_GET = 0x17;
public static readonly nuint ETHTOOL_MSG_EEE_SET = 0x18;
public static readonly nuint ETHTOOL_MSG_TSINFO_GET = 0x19;
public static readonly nuint ETHTOOL_MSG_CABLE_TEST_ACT = 0x1a;
public static readonly nuint ETHTOOL_MSG_CABLE_TEST_TDR_ACT = 0x1b;
public static readonly nuint ETHTOOL_MSG_TUNNEL_INFO_GET = 0x1c;
public static readonly nuint ETHTOOL_MSG_USER_MAX = 0x1c;
public static readonly nuint ETHTOOL_MSG_KERNEL_NONE = 0x0;
public static readonly nuint ETHTOOL_MSG_STRSET_GET_REPLY = 0x1;
public static readonly nuint ETHTOOL_MSG_LINKINFO_GET_REPLY = 0x2;
public static readonly nuint ETHTOOL_MSG_LINKINFO_NTF = 0x3;
public static readonly nuint ETHTOOL_MSG_LINKMODES_GET_REPLY = 0x4;
public static readonly nuint ETHTOOL_MSG_LINKMODES_NTF = 0x5;
public static readonly nuint ETHTOOL_MSG_LINKSTATE_GET_REPLY = 0x6;
public static readonly nuint ETHTOOL_MSG_DEBUG_GET_REPLY = 0x7;
public static readonly nuint ETHTOOL_MSG_DEBUG_NTF = 0x8;
public static readonly nuint ETHTOOL_MSG_WOL_GET_REPLY = 0x9;
public static readonly nuint ETHTOOL_MSG_WOL_NTF = 0xa;
public static readonly nuint ETHTOOL_MSG_FEATURES_GET_REPLY = 0xb;
public static readonly nuint ETHTOOL_MSG_FEATURES_SET_REPLY = 0xc;
public static readonly nuint ETHTOOL_MSG_FEATURES_NTF = 0xd;
public static readonly nuint ETHTOOL_MSG_PRIVFLAGS_GET_REPLY = 0xe;
public static readonly nuint ETHTOOL_MSG_PRIVFLAGS_NTF = 0xf;
public static readonly nuint ETHTOOL_MSG_RINGS_GET_REPLY = 0x10;
public static readonly nuint ETHTOOL_MSG_RINGS_NTF = 0x11;
public static readonly nuint ETHTOOL_MSG_CHANNELS_GET_REPLY = 0x12;
public static readonly nuint ETHTOOL_MSG_CHANNELS_NTF = 0x13;
public static readonly nuint ETHTOOL_MSG_COALESCE_GET_REPLY = 0x14;
public static readonly nuint ETHTOOL_MSG_COALESCE_NTF = 0x15;
public static readonly nuint ETHTOOL_MSG_PAUSE_GET_REPLY = 0x16;
public static readonly nuint ETHTOOL_MSG_PAUSE_NTF = 0x17;
public static readonly nuint ETHTOOL_MSG_EEE_GET_REPLY = 0x18;
public static readonly nuint ETHTOOL_MSG_EEE_NTF = 0x19;
public static readonly nuint ETHTOOL_MSG_TSINFO_GET_REPLY = 0x1a;
public static readonly nuint ETHTOOL_MSG_CABLE_TEST_NTF = 0x1b;
public static readonly nuint ETHTOOL_MSG_CABLE_TEST_TDR_NTF = 0x1c;
public static readonly nuint ETHTOOL_MSG_TUNNEL_INFO_GET_REPLY = 0x1d;
public static readonly nuint ETHTOOL_MSG_KERNEL_MAX = 0x1d;
public static readonly nuint ETHTOOL_A_HEADER_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_HEADER_DEV_INDEX = 0x1;
public static readonly nuint ETHTOOL_A_HEADER_DEV_NAME = 0x2;
public static readonly nuint ETHTOOL_A_HEADER_FLAGS = 0x3;
public static readonly nuint ETHTOOL_A_HEADER_MAX = 0x3;
public static readonly nuint ETHTOOL_A_BITSET_BIT_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_BITSET_BIT_INDEX = 0x1;
public static readonly nuint ETHTOOL_A_BITSET_BIT_NAME = 0x2;
public static readonly nuint ETHTOOL_A_BITSET_BIT_VALUE = 0x3;
public static readonly nuint ETHTOOL_A_BITSET_BIT_MAX = 0x3;
public static readonly nuint ETHTOOL_A_BITSET_BITS_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_BITSET_BITS_BIT = 0x1;
public static readonly nuint ETHTOOL_A_BITSET_BITS_MAX = 0x1;
public static readonly nuint ETHTOOL_A_BITSET_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_BITSET_NOMASK = 0x1;
public static readonly nuint ETHTOOL_A_BITSET_SIZE = 0x2;
public static readonly nuint ETHTOOL_A_BITSET_BITS = 0x3;
public static readonly nuint ETHTOOL_A_BITSET_VALUE = 0x4;
public static readonly nuint ETHTOOL_A_BITSET_MASK = 0x5;
public static readonly nuint ETHTOOL_A_BITSET_MAX = 0x5;
public static readonly nuint ETHTOOL_A_STRING_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_STRING_INDEX = 0x1;
public static readonly nuint ETHTOOL_A_STRING_VALUE = 0x2;
public static readonly nuint ETHTOOL_A_STRING_MAX = 0x2;
public static readonly nuint ETHTOOL_A_STRINGS_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_STRINGS_STRING = 0x1;
public static readonly nuint ETHTOOL_A_STRINGS_MAX = 0x1;
public static readonly nuint ETHTOOL_A_STRINGSET_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_STRINGSET_ID = 0x1;
public static readonly nuint ETHTOOL_A_STRINGSET_COUNT = 0x2;
public static readonly nuint ETHTOOL_A_STRINGSET_STRINGS = 0x3;
public static readonly nuint ETHTOOL_A_STRINGSET_MAX = 0x3;
public static readonly nuint ETHTOOL_A_STRINGSETS_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_STRINGSETS_STRINGSET = 0x1;
public static readonly nuint ETHTOOL_A_STRINGSETS_MAX = 0x1;
public static readonly nuint ETHTOOL_A_STRSET_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_STRSET_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_STRSET_STRINGSETS = 0x2;
public static readonly nuint ETHTOOL_A_STRSET_COUNTS_ONLY = 0x3;
public static readonly nuint ETHTOOL_A_STRSET_MAX = 0x3;
public static readonly nuint ETHTOOL_A_LINKINFO_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_LINKINFO_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_LINKINFO_PORT = 0x2;
public static readonly nuint ETHTOOL_A_LINKINFO_PHYADDR = 0x3;
public static readonly nuint ETHTOOL_A_LINKINFO_TP_MDIX = 0x4;
public static readonly nuint ETHTOOL_A_LINKINFO_TP_MDIX_CTRL = 0x5;
public static readonly nuint ETHTOOL_A_LINKINFO_TRANSCEIVER = 0x6;
public static readonly nuint ETHTOOL_A_LINKINFO_MAX = 0x6;
public static readonly nuint ETHTOOL_A_LINKMODES_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_LINKMODES_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_LINKMODES_AUTONEG = 0x2;
public static readonly nuint ETHTOOL_A_LINKMODES_OURS = 0x3;
public static readonly nuint ETHTOOL_A_LINKMODES_PEER = 0x4;
public static readonly nuint ETHTOOL_A_LINKMODES_SPEED = 0x5;
public static readonly nuint ETHTOOL_A_LINKMODES_DUPLEX = 0x6;
public static readonly nuint ETHTOOL_A_LINKMODES_MASTER_SLAVE_CFG = 0x7;
public static readonly nuint ETHTOOL_A_LINKMODES_MASTER_SLAVE_STATE = 0x8;
public static readonly nuint ETHTOOL_A_LINKMODES_LANES = 0x9;
public static readonly nuint ETHTOOL_A_LINKMODES_MAX = 0x9;
public static readonly nuint ETHTOOL_A_LINKSTATE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_LINKSTATE_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_LINKSTATE_LINK = 0x2;
public static readonly nuint ETHTOOL_A_LINKSTATE_SQI = 0x3;
public static readonly nuint ETHTOOL_A_LINKSTATE_SQI_MAX = 0x4;
public static readonly nuint ETHTOOL_A_LINKSTATE_EXT_STATE = 0x5;
public static readonly nuint ETHTOOL_A_LINKSTATE_EXT_SUBSTATE = 0x6;
public static readonly nuint ETHTOOL_A_LINKSTATE_MAX = 0x6;
public static readonly nuint ETHTOOL_A_DEBUG_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_DEBUG_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_DEBUG_MSGMASK = 0x2;
public static readonly nuint ETHTOOL_A_DEBUG_MAX = 0x2;
public static readonly nuint ETHTOOL_A_WOL_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_WOL_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_WOL_MODES = 0x2;
public static readonly nuint ETHTOOL_A_WOL_SOPASS = 0x3;
public static readonly nuint ETHTOOL_A_WOL_MAX = 0x3;
public static readonly nuint ETHTOOL_A_FEATURES_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_FEATURES_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_FEATURES_HW = 0x2;
public static readonly nuint ETHTOOL_A_FEATURES_WANTED = 0x3;
public static readonly nuint ETHTOOL_A_FEATURES_ACTIVE = 0x4;
public static readonly nuint ETHTOOL_A_FEATURES_NOCHANGE = 0x5;
public static readonly nuint ETHTOOL_A_FEATURES_MAX = 0x5;
public static readonly nuint ETHTOOL_A_PRIVFLAGS_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_PRIVFLAGS_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_PRIVFLAGS_FLAGS = 0x2;
public static readonly nuint ETHTOOL_A_PRIVFLAGS_MAX = 0x2;
public static readonly nuint ETHTOOL_A_RINGS_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_RINGS_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_RINGS_RX_MAX = 0x2;
public static readonly nuint ETHTOOL_A_RINGS_RX_MINI_MAX = 0x3;
public static readonly nuint ETHTOOL_A_RINGS_RX_JUMBO_MAX = 0x4;
public static readonly nuint ETHTOOL_A_RINGS_TX_MAX = 0x5;
public static readonly nuint ETHTOOL_A_RINGS_RX = 0x6;
public static readonly nuint ETHTOOL_A_RINGS_RX_MINI = 0x7;
public static readonly nuint ETHTOOL_A_RINGS_RX_JUMBO = 0x8;
public static readonly nuint ETHTOOL_A_RINGS_TX = 0x9;
public static readonly nuint ETHTOOL_A_RINGS_MAX = 0x9;
public static readonly nuint ETHTOOL_A_CHANNELS_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CHANNELS_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_CHANNELS_RX_MAX = 0x2;
public static readonly nuint ETHTOOL_A_CHANNELS_TX_MAX = 0x3;
public static readonly nuint ETHTOOL_A_CHANNELS_OTHER_MAX = 0x4;
public static readonly nuint ETHTOOL_A_CHANNELS_COMBINED_MAX = 0x5;
public static readonly nuint ETHTOOL_A_CHANNELS_RX_COUNT = 0x6;
public static readonly nuint ETHTOOL_A_CHANNELS_TX_COUNT = 0x7;
public static readonly nuint ETHTOOL_A_CHANNELS_OTHER_COUNT = 0x8;
public static readonly nuint ETHTOOL_A_CHANNELS_COMBINED_COUNT = 0x9;
public static readonly nuint ETHTOOL_A_CHANNELS_MAX = 0x9;
public static readonly nuint ETHTOOL_A_COALESCE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_COALESCE_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_COALESCE_RX_USECS = 0x2;
public static readonly nuint ETHTOOL_A_COALESCE_RX_MAX_FRAMES = 0x3;
public static readonly nuint ETHTOOL_A_COALESCE_RX_USECS_IRQ = 0x4;
public static readonly nuint ETHTOOL_A_COALESCE_RX_MAX_FRAMES_IRQ = 0x5;
public static readonly nuint ETHTOOL_A_COALESCE_TX_USECS = 0x6;
public static readonly nuint ETHTOOL_A_COALESCE_TX_MAX_FRAMES = 0x7;
public static readonly nuint ETHTOOL_A_COALESCE_TX_USECS_IRQ = 0x8;
public static readonly nuint ETHTOOL_A_COALESCE_TX_MAX_FRAMES_IRQ = 0x9;
public static readonly nuint ETHTOOL_A_COALESCE_STATS_BLOCK_USECS = 0xa;
public static readonly nuint ETHTOOL_A_COALESCE_USE_ADAPTIVE_RX = 0xb;
public static readonly nuint ETHTOOL_A_COALESCE_USE_ADAPTIVE_TX = 0xc;
public static readonly nuint ETHTOOL_A_COALESCE_PKT_RATE_LOW = 0xd;
public static readonly nuint ETHTOOL_A_COALESCE_RX_USECS_LOW = 0xe;
public static readonly nuint ETHTOOL_A_COALESCE_RX_MAX_FRAMES_LOW = 0xf;
public static readonly nuint ETHTOOL_A_COALESCE_TX_USECS_LOW = 0x10;
public static readonly nuint ETHTOOL_A_COALESCE_TX_MAX_FRAMES_LOW = 0x11;
public static readonly nuint ETHTOOL_A_COALESCE_PKT_RATE_HIGH = 0x12;
public static readonly nuint ETHTOOL_A_COALESCE_RX_USECS_HIGH = 0x13;
public static readonly nuint ETHTOOL_A_COALESCE_RX_MAX_FRAMES_HIGH = 0x14;
public static readonly nuint ETHTOOL_A_COALESCE_TX_USECS_HIGH = 0x15;
public static readonly nuint ETHTOOL_A_COALESCE_TX_MAX_FRAMES_HIGH = 0x16;
public static readonly nuint ETHTOOL_A_COALESCE_RATE_SAMPLE_INTERVAL = 0x17;
public static readonly nuint ETHTOOL_A_COALESCE_MAX = 0x17;
public static readonly nuint ETHTOOL_A_PAUSE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_PAUSE_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_PAUSE_AUTONEG = 0x2;
public static readonly nuint ETHTOOL_A_PAUSE_RX = 0x3;
public static readonly nuint ETHTOOL_A_PAUSE_TX = 0x4;
public static readonly nuint ETHTOOL_A_PAUSE_STATS = 0x5;
public static readonly nuint ETHTOOL_A_PAUSE_MAX = 0x5;
public static readonly nuint ETHTOOL_A_PAUSE_STAT_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_PAUSE_STAT_PAD = 0x1;
public static readonly nuint ETHTOOL_A_PAUSE_STAT_TX_FRAMES = 0x2;
public static readonly nuint ETHTOOL_A_PAUSE_STAT_RX_FRAMES = 0x3;
public static readonly nuint ETHTOOL_A_PAUSE_STAT_MAX = 0x3;
public static readonly nuint ETHTOOL_A_EEE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_EEE_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_EEE_MODES_OURS = 0x2;
public static readonly nuint ETHTOOL_A_EEE_MODES_PEER = 0x3;
public static readonly nuint ETHTOOL_A_EEE_ACTIVE = 0x4;
public static readonly nuint ETHTOOL_A_EEE_ENABLED = 0x5;
public static readonly nuint ETHTOOL_A_EEE_TX_LPI_ENABLED = 0x6;
public static readonly nuint ETHTOOL_A_EEE_TX_LPI_TIMER = 0x7;
public static readonly nuint ETHTOOL_A_EEE_MAX = 0x7;
public static readonly nuint ETHTOOL_A_TSINFO_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_TSINFO_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_TSINFO_TIMESTAMPING = 0x2;
public static readonly nuint ETHTOOL_A_TSINFO_TX_TYPES = 0x3;
public static readonly nuint ETHTOOL_A_TSINFO_RX_FILTERS = 0x4;
public static readonly nuint ETHTOOL_A_TSINFO_PHC_INDEX = 0x5;
public static readonly nuint ETHTOOL_A_TSINFO_MAX = 0x5;
public static readonly nuint ETHTOOL_A_CABLE_TEST_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_TEST_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_TEST_MAX = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_CODE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_CODE_OK = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_CODE_OPEN = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_CODE_SAME_SHORT = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_CODE_CROSS_SHORT = 0x4;
public static readonly nuint ETHTOOL_A_CABLE_PAIR_A = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_PAIR_B = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_PAIR_C = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_PAIR_D = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_PAIR = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_CODE = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_RESULT_MAX = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_FAULT_LENGTH_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_FAULT_LENGTH_PAIR = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_FAULT_LENGTH_CM = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_FAULT_LENGTH_MAX = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_STATUS_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_STATUS_STARTED = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_STATUS_COMPLETED = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_NEST_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_NEST_RESULT = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_NEST_FAULT_LENGTH = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_NEST_MAX = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_STATUS = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_NEST = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_TEST_NTF_MAX = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_CFG_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_CFG_FIRST = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_CFG_LAST = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_CFG_STEP = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_CFG_PAIR = 0x4;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_CFG_MAX = 0x4;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_CFG = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_MAX = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_AMPLITUDE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_AMPLITUDE_PAIR = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_AMPLITUDE_mV = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_AMPLITUDE_MAX = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_PULSE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_PULSE_mV = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_PULSE_MAX = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_STEP_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_STEP_FIRST_DISTANCE = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_STEP_LAST_DISTANCE = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_STEP_STEP_DISTANCE = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_STEP_MAX = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_TDR_NEST_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_TDR_NEST_STEP = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_TDR_NEST_AMPLITUDE = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_TDR_NEST_PULSE = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_TDR_NEST_MAX = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_NTF_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_NTF_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_NTF_STATUS = 0x2;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_NTF_NEST = 0x3;
public static readonly nuint ETHTOOL_A_CABLE_TEST_TDR_NTF_MAX = 0x3;
public static readonly nuint ETHTOOL_UDP_TUNNEL_TYPE_VXLAN = 0x0;
public static readonly nuint ETHTOOL_UDP_TUNNEL_TYPE_GENEVE = 0x1;
public static readonly nuint ETHTOOL_UDP_TUNNEL_TYPE_VXLAN_GPE = 0x2;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_ENTRY_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_ENTRY_PORT = 0x1;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_ENTRY_TYPE = 0x2;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_ENTRY_MAX = 0x2;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_TABLE_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_TABLE_SIZE = 0x1;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_TABLE_TYPES = 0x2;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_TABLE_ENTRY = 0x3;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_TABLE_MAX = 0x3;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_TABLE = 0x1;
public static readonly nuint ETHTOOL_A_TUNNEL_UDP_MAX = 0x1;
public static readonly nuint ETHTOOL_A_TUNNEL_INFO_UNSPEC = 0x0;
public static readonly nuint ETHTOOL_A_TUNNEL_INFO_HEADER = 0x1;
public static readonly nuint ETHTOOL_A_TUNNEL_INFO_UDP_PORTS = 0x2;
public static readonly nuint ETHTOOL_A_TUNNEL_INFO_MAX = 0x2;


public partial struct EthtoolDrvinfo {
    public uint Cmd;
    public array<byte> Driver;
    public array<byte> Version;
    public array<byte> Fw_version;
    public array<byte> Bus_info;
    public array<byte> Erom_version;
    public array<byte> Reserved2;
    public uint N_priv_flags;
    public uint N_stats;
    public uint Testinfo_len;
    public uint Eedump_len;
    public uint Regdump_len;
}

public partial struct HIDRawReportDescriptor {
    public uint Size;
    public array<byte> Value;
}
public partial struct HIDRawDevInfo {
    public uint Bustype;
    public short Vendor;
    public short Product;
}
public static readonly nuint CLOSE_RANGE_UNSHARE = 0x2;
public static readonly nuint CLOSE_RANGE_CLOEXEC = 0x4;


public static readonly nuint NLMSGERR_ATTR_MSG = 0x1;
public static readonly nuint NLMSGERR_ATTR_OFFS = 0x2;
public static readonly nuint NLMSGERR_ATTR_COOKIE = 0x3;


} // end unix_package
