// Code generated by mkmerge.go; DO NOT EDIT.

// +build linux

// package unix -- go2cs converted at 2020 October 08 04:53:31 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Go\src\cmd\vendor\golang.org\x\sys\unix\ztypes_linux.go

using static go.builtin;

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace sys
{
    public static partial class unix_package
    {
        public static readonly ulong SizeofShort = (ulong)0x2UL;
        public static readonly ulong SizeofInt = (ulong)0x4UL;
        public static readonly ulong SizeofLongLong = (ulong)0x8UL;
        public static readonly ulong PathMax = (ulong)0x1000UL;


        private partial struct _C_short // : short
        {
        }
        private partial struct _C_int // : int
        {
        }

        private partial struct _C_long_long // : long
        {
        }
        public partial struct ItimerSpec
        {
            public Timespec Interval;
            public Timespec Value;
        }

        public static readonly ulong TIME_OK = (ulong)0x0UL;
        public static readonly ulong TIME_INS = (ulong)0x1UL;
        public static readonly ulong TIME_DEL = (ulong)0x2UL;
        public static readonly ulong TIME_OOP = (ulong)0x3UL;
        public static readonly ulong TIME_WAIT = (ulong)0x4UL;
        public static readonly ulong TIME_ERROR = (ulong)0x5UL;
        public static readonly ulong TIME_BAD = (ulong)0x5UL;


        public partial struct Rlimit
        {
            public ulong Cur;
            public ulong Max;
        }

        private partial struct _Gid_t // : uint
        {
        }

        public partial struct StatxTimestamp
        {
            public long Sec;
            public uint Nsec;
            public int _;
        }

        public partial struct Statx_t
        {
            public uint Mask;
            public uint Blksize;
            public ulong Attributes;
            public uint Nlink;
            public uint Uid;
            public uint Gid;
            public ushort Mode;
            public array<ushort> _;
            public ulong Ino;
            public ulong Size;
            public ulong Blocks;
            public ulong Attributes_mask;
            public StatxTimestamp Atime;
            public StatxTimestamp Btime;
            public StatxTimestamp Ctime;
            public StatxTimestamp Mtime;
            public uint Rdev_major;
            public uint Rdev_minor;
            public uint Dev_major;
            public uint Dev_minor;
            public array<ulong> _;
        }

        public partial struct Fsid
        {
            public array<int> Val;
        }

        public partial struct FscryptPolicy
        {
            public byte Version;
            public byte Contents_encryption_mode;
            public byte Filenames_encryption_mode;
            public byte Flags;
            public array<byte> Master_key_descriptor;
        }

        public partial struct FscryptKey
        {
            public uint Mode;
            public array<byte> Raw;
            public uint Size;
        }

        public partial struct FscryptPolicyV1
        {
            public byte Version;
            public byte Contents_encryption_mode;
            public byte Filenames_encryption_mode;
            public byte Flags;
            public array<byte> Master_key_descriptor;
        }

        public partial struct FscryptPolicyV2
        {
            public byte Version;
            public byte Contents_encryption_mode;
            public byte Filenames_encryption_mode;
            public byte Flags;
            public array<byte> _;
            public array<byte> Master_key_identifier;
        }

        public partial struct FscryptGetPolicyExArg
        {
            public ulong Size;
            public array<byte> Policy;
        }

        public partial struct FscryptKeySpecifier
        {
            public uint Type;
            public uint _;
            public array<byte> U;
        }

        public partial struct FscryptAddKeyArg
        {
            public FscryptKeySpecifier Key_spec;
            public uint Raw_size;
            public uint Key_id;
            public array<uint> _;
        }

        public partial struct FscryptRemoveKeyArg
        {
            public FscryptKeySpecifier Key_spec;
            public uint Removal_status_flags;
            public array<uint> _;
        }

        public partial struct FscryptGetKeyStatusArg
        {
            public FscryptKeySpecifier Key_spec;
            public array<uint> _;
            public uint Status;
            public uint Status_flags;
            public uint User_count;
            public array<uint> _;
        }

        public partial struct KeyctlDHParams
        {
            public int Private;
            public int Prime;
            public int Base;
        }

        public static readonly ulong FADV_NORMAL = (ulong)0x0UL;
        public static readonly ulong FADV_RANDOM = (ulong)0x1UL;
        public static readonly ulong FADV_SEQUENTIAL = (ulong)0x2UL;
        public static readonly ulong FADV_WILLNEED = (ulong)0x3UL;


        public partial struct RawSockaddrInet4
        {
            public ushort Family;
            public ushort Port;
            public array<byte> Addr; /* in_addr */
            public array<byte> Zero;
        }

        public partial struct RawSockaddrInet6
        {
            public ushort Family;
            public ushort Port;
            public uint Flowinfo;
            public array<byte> Addr; /* in6_addr */
            public uint Scope_id;
        }

        public partial struct RawSockaddrUnix
        {
            public ushort Family;
            public array<sbyte> Path;
        }

        public partial struct RawSockaddrLinklayer
        {
            public ushort Family;
            public ushort Protocol;
            public int Ifindex;
            public ushort Hatype;
            public byte Pkttype;
            public byte Halen;
            public array<byte> Addr;
        }

        public partial struct RawSockaddrNetlink
        {
            public ushort Family;
            public ushort Pad;
            public uint Pid;
            public uint Groups;
        }

        public partial struct RawSockaddrHCI
        {
            public ushort Family;
            public ushort Dev;
            public ushort Channel;
        }

        public partial struct RawSockaddrL2
        {
            public ushort Family;
            public ushort Psm;
            public array<byte> Bdaddr;
            public ushort Cid;
            public byte Bdaddr_type;
            public array<byte> _;
        }

        public partial struct RawSockaddrRFCOMM
        {
            public ushort Family;
            public array<byte> Bdaddr;
            public byte Channel;
            public array<byte> _;
        }

        public partial struct RawSockaddrCAN
        {
            public ushort Family;
            public int Ifindex;
            public array<byte> Addr;
        }

        public partial struct RawSockaddrALG
        {
            public ushort Family;
            public array<byte> Type;
            public uint Feat;
            public uint Mask;
            public array<byte> Name;
        }

        public partial struct RawSockaddrVM
        {
            public ushort Family;
            public ushort Reserved1;
            public uint Port;
            public uint Cid;
            public array<byte> Zero;
        }

        public partial struct RawSockaddrXDP
        {
            public ushort Family;
            public ushort Flags;
            public uint Ifindex;
            public uint Queue_id;
            public uint Shared_umem_fd;
        }

        public partial struct RawSockaddrPPPoX // : array<byte>
        {
        }

        public partial struct RawSockaddrTIPC
        {
            public ushort Family;
            public byte Addrtype;
            public sbyte Scope;
            public array<byte> Addr;
        }

        public partial struct RawSockaddrL2TPIP
        {
            public ushort Family;
            public ushort Unused;
            public array<byte> Addr; /* in_addr */
            public uint Conn_id;
            public array<byte> _;
        }

        public partial struct RawSockaddrL2TPIP6
        {
            public ushort Family;
            public ushort Unused;
            public uint Flowinfo;
            public array<byte> Addr; /* in6_addr */
            public uint Scope_id;
            public uint Conn_id;
        }

        private partial struct _Socklen // : uint
        {
        }

        public partial struct Linger
        {
            public int Onoff;
            public int Linger;
        }

        public partial struct IPMreq
        {
            public array<byte> Multiaddr; /* in_addr */
            public array<byte> Interface; /* in_addr */
        }

        public partial struct IPMreqn
        {
            public array<byte> Multiaddr; /* in_addr */
            public array<byte> Address; /* in_addr */
            public int Ifindex;
        }

        public partial struct IPv6Mreq
        {
            public array<byte> Multiaddr; /* in6_addr */
            public uint Interface;
        }

        public partial struct PacketMreq
        {
            public int Ifindex;
            public ushort Type;
            public ushort Alen;
            public array<byte> Address;
        }

        public partial struct Inet4Pktinfo
        {
            public int Ifindex;
            public array<byte> Spec_dst; /* in_addr */
            public array<byte> Addr; /* in_addr */
        }

        public partial struct Inet6Pktinfo
        {
            public array<byte> Addr; /* in6_addr */
            public uint Ifindex;
        }

        public partial struct IPv6MTUInfo
        {
            public RawSockaddrInet6 Addr;
            public uint Mtu;
        }

        public partial struct ICMPv6Filter
        {
            public array<uint> Data;
        }

        public partial struct Ucred
        {
            public int Pid;
            public uint Uid;
            public uint Gid;
        }

        public partial struct TCPInfo
        {
            public byte State;
            public byte Ca_state;
            public byte Retransmits;
            public byte Probes;
            public byte Backoff;
            public byte Options;
            public uint Rto;
            public uint Ato;
            public uint Snd_mss;
            public uint Rcv_mss;
            public uint Unacked;
            public uint Sacked;
            public uint Lost;
            public uint Retrans;
            public uint Fackets;
            public uint Last_data_sent;
            public uint Last_ack_sent;
            public uint Last_data_recv;
            public uint Last_ack_recv;
            public uint Pmtu;
            public uint Rcv_ssthresh;
            public uint Rtt;
            public uint Rttvar;
            public uint Snd_ssthresh;
            public uint Snd_cwnd;
            public uint Advmss;
            public uint Reordering;
            public uint Rcv_rtt;
            public uint Rcv_space;
            public uint Total_retrans;
        }

        public partial struct CanFilter
        {
            public uint Id;
            public uint Mask;
        }

        public static readonly ulong SizeofSockaddrInet4 = (ulong)0x10UL;
        public static readonly ulong SizeofSockaddrInet6 = (ulong)0x1cUL;
        public static readonly ulong SizeofSockaddrAny = (ulong)0x70UL;
        public static readonly ulong SizeofSockaddrUnix = (ulong)0x6eUL;
        public static readonly ulong SizeofSockaddrLinklayer = (ulong)0x14UL;
        public static readonly ulong SizeofSockaddrNetlink = (ulong)0xcUL;
        public static readonly ulong SizeofSockaddrHCI = (ulong)0x6UL;
        public static readonly ulong SizeofSockaddrL2 = (ulong)0xeUL;
        public static readonly ulong SizeofSockaddrRFCOMM = (ulong)0xaUL;
        public static readonly ulong SizeofSockaddrCAN = (ulong)0x18UL;
        public static readonly ulong SizeofSockaddrALG = (ulong)0x58UL;
        public static readonly ulong SizeofSockaddrVM = (ulong)0x10UL;
        public static readonly ulong SizeofSockaddrXDP = (ulong)0x10UL;
        public static readonly ulong SizeofSockaddrPPPoX = (ulong)0x1eUL;
        public static readonly ulong SizeofSockaddrTIPC = (ulong)0x10UL;
        public static readonly ulong SizeofSockaddrL2TPIP = (ulong)0x10UL;
        public static readonly ulong SizeofSockaddrL2TPIP6 = (ulong)0x20UL;
        public static readonly ulong SizeofLinger = (ulong)0x8UL;
        public static readonly ulong SizeofIPMreq = (ulong)0x8UL;
        public static readonly ulong SizeofIPMreqn = (ulong)0xcUL;
        public static readonly ulong SizeofIPv6Mreq = (ulong)0x14UL;
        public static readonly ulong SizeofPacketMreq = (ulong)0x10UL;
        public static readonly ulong SizeofInet4Pktinfo = (ulong)0xcUL;
        public static readonly ulong SizeofInet6Pktinfo = (ulong)0x14UL;
        public static readonly ulong SizeofIPv6MTUInfo = (ulong)0x20UL;
        public static readonly ulong SizeofICMPv6Filter = (ulong)0x20UL;
        public static readonly ulong SizeofUcred = (ulong)0xcUL;
        public static readonly ulong SizeofTCPInfo = (ulong)0x68UL;
        public static readonly ulong SizeofCanFilter = (ulong)0x8UL;


        public static readonly ulong NDA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NDA_DST = (ulong)0x1UL;
        public static readonly ulong NDA_LLADDR = (ulong)0x2UL;
        public static readonly ulong NDA_CACHEINFO = (ulong)0x3UL;
        public static readonly ulong NDA_PROBES = (ulong)0x4UL;
        public static readonly ulong NDA_VLAN = (ulong)0x5UL;
        public static readonly ulong NDA_PORT = (ulong)0x6UL;
        public static readonly ulong NDA_VNI = (ulong)0x7UL;
        public static readonly ulong NDA_IFINDEX = (ulong)0x8UL;
        public static readonly ulong NDA_MASTER = (ulong)0x9UL;
        public static readonly ulong NDA_LINK_NETNSID = (ulong)0xaUL;
        public static readonly ulong NDA_SRC_VNI = (ulong)0xbUL;
        public static readonly ulong NTF_USE = (ulong)0x1UL;
        public static readonly ulong NTF_SELF = (ulong)0x2UL;
        public static readonly ulong NTF_MASTER = (ulong)0x4UL;
        public static readonly ulong NTF_PROXY = (ulong)0x8UL;
        public static readonly ulong NTF_EXT_LEARNED = (ulong)0x10UL;
        public static readonly ulong NTF_OFFLOADED = (ulong)0x20UL;
        public static readonly ulong NTF_ROUTER = (ulong)0x80UL;
        public static readonly ulong NUD_INCOMPLETE = (ulong)0x1UL;
        public static readonly ulong NUD_REACHABLE = (ulong)0x2UL;
        public static readonly ulong NUD_STALE = (ulong)0x4UL;
        public static readonly ulong NUD_DELAY = (ulong)0x8UL;
        public static readonly ulong NUD_PROBE = (ulong)0x10UL;
        public static readonly ulong NUD_FAILED = (ulong)0x20UL;
        public static readonly ulong NUD_NOARP = (ulong)0x40UL;
        public static readonly ulong NUD_PERMANENT = (ulong)0x80UL;
        public static readonly ulong NUD_NONE = (ulong)0x0UL;
        public static readonly ulong IFA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong IFA_ADDRESS = (ulong)0x1UL;
        public static readonly ulong IFA_LOCAL = (ulong)0x2UL;
        public static readonly ulong IFA_LABEL = (ulong)0x3UL;
        public static readonly ulong IFA_BROADCAST = (ulong)0x4UL;
        public static readonly ulong IFA_ANYCAST = (ulong)0x5UL;
        public static readonly ulong IFA_CACHEINFO = (ulong)0x6UL;
        public static readonly ulong IFA_MULTICAST = (ulong)0x7UL;
        public static readonly ulong IFA_FLAGS = (ulong)0x8UL;
        public static readonly ulong IFA_RT_PRIORITY = (ulong)0x9UL;
        public static readonly ulong IFA_TARGET_NETNSID = (ulong)0xaUL;
        public static readonly ulong IFLA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong IFLA_ADDRESS = (ulong)0x1UL;
        public static readonly ulong IFLA_BROADCAST = (ulong)0x2UL;
        public static readonly ulong IFLA_IFNAME = (ulong)0x3UL;
        public static readonly ulong IFLA_MTU = (ulong)0x4UL;
        public static readonly ulong IFLA_LINK = (ulong)0x5UL;
        public static readonly ulong IFLA_QDISC = (ulong)0x6UL;
        public static readonly ulong IFLA_STATS = (ulong)0x7UL;
        public static readonly ulong IFLA_COST = (ulong)0x8UL;
        public static readonly ulong IFLA_PRIORITY = (ulong)0x9UL;
        public static readonly ulong IFLA_MASTER = (ulong)0xaUL;
        public static readonly ulong IFLA_WIRELESS = (ulong)0xbUL;
        public static readonly ulong IFLA_PROTINFO = (ulong)0xcUL;
        public static readonly ulong IFLA_TXQLEN = (ulong)0xdUL;
        public static readonly ulong IFLA_MAP = (ulong)0xeUL;
        public static readonly ulong IFLA_WEIGHT = (ulong)0xfUL;
        public static readonly ulong IFLA_OPERSTATE = (ulong)0x10UL;
        public static readonly ulong IFLA_LINKMODE = (ulong)0x11UL;
        public static readonly ulong IFLA_LINKINFO = (ulong)0x12UL;
        public static readonly ulong IFLA_NET_NS_PID = (ulong)0x13UL;
        public static readonly ulong IFLA_IFALIAS = (ulong)0x14UL;
        public static readonly ulong IFLA_NUM_VF = (ulong)0x15UL;
        public static readonly ulong IFLA_VFINFO_LIST = (ulong)0x16UL;
        public static readonly ulong IFLA_STATS64 = (ulong)0x17UL;
        public static readonly ulong IFLA_VF_PORTS = (ulong)0x18UL;
        public static readonly ulong IFLA_PORT_SELF = (ulong)0x19UL;
        public static readonly ulong IFLA_AF_SPEC = (ulong)0x1aUL;
        public static readonly ulong IFLA_GROUP = (ulong)0x1bUL;
        public static readonly ulong IFLA_NET_NS_FD = (ulong)0x1cUL;
        public static readonly ulong IFLA_EXT_MASK = (ulong)0x1dUL;
        public static readonly ulong IFLA_PROMISCUITY = (ulong)0x1eUL;
        public static readonly ulong IFLA_NUM_TX_QUEUES = (ulong)0x1fUL;
        public static readonly ulong IFLA_NUM_RX_QUEUES = (ulong)0x20UL;
        public static readonly ulong IFLA_CARRIER = (ulong)0x21UL;
        public static readonly ulong IFLA_PHYS_PORT_ID = (ulong)0x22UL;
        public static readonly ulong IFLA_CARRIER_CHANGES = (ulong)0x23UL;
        public static readonly ulong IFLA_PHYS_SWITCH_ID = (ulong)0x24UL;
        public static readonly ulong IFLA_LINK_NETNSID = (ulong)0x25UL;
        public static readonly ulong IFLA_PHYS_PORT_NAME = (ulong)0x26UL;
        public static readonly ulong IFLA_PROTO_DOWN = (ulong)0x27UL;
        public static readonly ulong IFLA_GSO_MAX_SEGS = (ulong)0x28UL;
        public static readonly ulong IFLA_GSO_MAX_SIZE = (ulong)0x29UL;
        public static readonly ulong IFLA_PAD = (ulong)0x2aUL;
        public static readonly ulong IFLA_XDP = (ulong)0x2bUL;
        public static readonly ulong IFLA_EVENT = (ulong)0x2cUL;
        public static readonly ulong IFLA_NEW_NETNSID = (ulong)0x2dUL;
        public static readonly ulong IFLA_IF_NETNSID = (ulong)0x2eUL;
        public static readonly ulong IFLA_TARGET_NETNSID = (ulong)0x2eUL;
        public static readonly ulong IFLA_CARRIER_UP_COUNT = (ulong)0x2fUL;
        public static readonly ulong IFLA_CARRIER_DOWN_COUNT = (ulong)0x30UL;
        public static readonly ulong IFLA_NEW_IFINDEX = (ulong)0x31UL;
        public static readonly ulong IFLA_MIN_MTU = (ulong)0x32UL;
        public static readonly ulong IFLA_MAX_MTU = (ulong)0x33UL;
        public static readonly ulong IFLA_MAX = (ulong)0x36UL;
        public static readonly ulong IFLA_INFO_KIND = (ulong)0x1UL;
        public static readonly ulong IFLA_INFO_DATA = (ulong)0x2UL;
        public static readonly ulong IFLA_INFO_XSTATS = (ulong)0x3UL;
        public static readonly ulong IFLA_INFO_SLAVE_KIND = (ulong)0x4UL;
        public static readonly ulong IFLA_INFO_SLAVE_DATA = (ulong)0x5UL;
        public static readonly ulong RT_SCOPE_UNIVERSE = (ulong)0x0UL;
        public static readonly ulong RT_SCOPE_SITE = (ulong)0xc8UL;
        public static readonly ulong RT_SCOPE_LINK = (ulong)0xfdUL;
        public static readonly ulong RT_SCOPE_HOST = (ulong)0xfeUL;
        public static readonly ulong RT_SCOPE_NOWHERE = (ulong)0xffUL;
        public static readonly ulong RT_TABLE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong RT_TABLE_COMPAT = (ulong)0xfcUL;
        public static readonly ulong RT_TABLE_DEFAULT = (ulong)0xfdUL;
        public static readonly ulong RT_TABLE_MAIN = (ulong)0xfeUL;
        public static readonly ulong RT_TABLE_LOCAL = (ulong)0xffUL;
        public static readonly ulong RT_TABLE_MAX = (ulong)0xffffffffUL;
        public static readonly ulong RTA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong RTA_DST = (ulong)0x1UL;
        public static readonly ulong RTA_SRC = (ulong)0x2UL;
        public static readonly ulong RTA_IIF = (ulong)0x3UL;
        public static readonly ulong RTA_OIF = (ulong)0x4UL;
        public static readonly ulong RTA_GATEWAY = (ulong)0x5UL;
        public static readonly ulong RTA_PRIORITY = (ulong)0x6UL;
        public static readonly ulong RTA_PREFSRC = (ulong)0x7UL;
        public static readonly ulong RTA_METRICS = (ulong)0x8UL;
        public static readonly ulong RTA_MULTIPATH = (ulong)0x9UL;
        public static readonly ulong RTA_FLOW = (ulong)0xbUL;
        public static readonly ulong RTA_CACHEINFO = (ulong)0xcUL;
        public static readonly ulong RTA_TABLE = (ulong)0xfUL;
        public static readonly ulong RTA_MARK = (ulong)0x10UL;
        public static readonly ulong RTA_MFC_STATS = (ulong)0x11UL;
        public static readonly ulong RTA_VIA = (ulong)0x12UL;
        public static readonly ulong RTA_NEWDST = (ulong)0x13UL;
        public static readonly ulong RTA_PREF = (ulong)0x14UL;
        public static readonly ulong RTA_ENCAP_TYPE = (ulong)0x15UL;
        public static readonly ulong RTA_ENCAP = (ulong)0x16UL;
        public static readonly ulong RTA_EXPIRES = (ulong)0x17UL;
        public static readonly ulong RTA_PAD = (ulong)0x18UL;
        public static readonly ulong RTA_UID = (ulong)0x19UL;
        public static readonly ulong RTA_TTL_PROPAGATE = (ulong)0x1aUL;
        public static readonly ulong RTA_IP_PROTO = (ulong)0x1bUL;
        public static readonly ulong RTA_SPORT = (ulong)0x1cUL;
        public static readonly ulong RTA_DPORT = (ulong)0x1dUL;
        public static readonly ulong RTN_UNSPEC = (ulong)0x0UL;
        public static readonly ulong RTN_UNICAST = (ulong)0x1UL;
        public static readonly ulong RTN_LOCAL = (ulong)0x2UL;
        public static readonly ulong RTN_BROADCAST = (ulong)0x3UL;
        public static readonly ulong RTN_ANYCAST = (ulong)0x4UL;
        public static readonly ulong RTN_MULTICAST = (ulong)0x5UL;
        public static readonly ulong RTN_BLACKHOLE = (ulong)0x6UL;
        public static readonly ulong RTN_UNREACHABLE = (ulong)0x7UL;
        public static readonly ulong RTN_PROHIBIT = (ulong)0x8UL;
        public static readonly ulong RTN_THROW = (ulong)0x9UL;
        public static readonly ulong RTN_NAT = (ulong)0xaUL;
        public static readonly ulong RTN_XRESOLVE = (ulong)0xbUL;
        public static readonly ulong SizeofNlMsghdr = (ulong)0x10UL;
        public static readonly ulong SizeofNlMsgerr = (ulong)0x14UL;
        public static readonly ulong SizeofRtGenmsg = (ulong)0x1UL;
        public static readonly ulong SizeofNlAttr = (ulong)0x4UL;
        public static readonly ulong SizeofRtAttr = (ulong)0x4UL;
        public static readonly ulong SizeofIfInfomsg = (ulong)0x10UL;
        public static readonly ulong SizeofIfAddrmsg = (ulong)0x8UL;
        public static readonly ulong SizeofIfaCacheinfo = (ulong)0x10UL;
        public static readonly ulong SizeofRtMsg = (ulong)0xcUL;
        public static readonly ulong SizeofRtNexthop = (ulong)0x8UL;
        public static readonly ulong SizeofNdUseroptmsg = (ulong)0x10UL;
        public static readonly ulong SizeofNdMsg = (ulong)0xcUL;


        public partial struct NlMsghdr
        {
            public uint Len;
            public ushort Type;
            public ushort Flags;
            public uint Seq;
            public uint Pid;
        }

        public partial struct NlMsgerr
        {
            public int Error;
            public NlMsghdr Msg;
        }

        public partial struct RtGenmsg
        {
            public byte Family;
        }

        public partial struct NlAttr
        {
            public ushort Len;
            public ushort Type;
        }

        public partial struct RtAttr
        {
            public ushort Len;
            public ushort Type;
        }

        public partial struct IfInfomsg
        {
            public byte Family;
            public byte _;
            public ushort Type;
            public int Index;
            public uint Flags;
            public uint Change;
        }

        public partial struct IfAddrmsg
        {
            public byte Family;
            public byte Prefixlen;
            public byte Flags;
            public byte Scope;
            public uint Index;
        }

        public partial struct IfaCacheinfo
        {
            public uint Prefered;
            public uint Valid;
            public uint Cstamp;
            public uint Tstamp;
        }

        public partial struct RtMsg
        {
            public byte Family;
            public byte Dst_len;
            public byte Src_len;
            public byte Tos;
            public byte Table;
            public byte Protocol;
            public byte Scope;
            public byte Type;
            public uint Flags;
        }

        public partial struct RtNexthop
        {
            public ushort Len;
            public byte Flags;
            public byte Hops;
            public int Ifindex;
        }

        public partial struct NdUseroptmsg
        {
            public byte Family;
            public byte Pad1;
            public ushort Opts_len;
            public int Ifindex;
            public byte Icmp_type;
            public byte Icmp_code;
            public ushort Pad2;
            public uint Pad3;
        }

        public partial struct NdMsg
        {
            public byte Family;
            public byte Pad1;
            public ushort Pad2;
            public int Ifindex;
            public ushort State;
            public byte Flags;
            public byte Type;
        }

        public static readonly ulong SizeofSockFilter = (ulong)0x8UL;


        public partial struct SockFilter
        {
            public ushort Code;
            public byte Jt;
            public byte Jf;
            public uint K;
        }

        public partial struct SockFprog
        {
            public ushort Len;
            public ptr<SockFilter> Filter;
        }

        public partial struct InotifyEvent
        {
            public int Wd;
            public uint Mask;
            public uint Cookie;
            public uint Len;
        }

        public static readonly ulong SizeofInotifyEvent = (ulong)0x10UL;



        public partial struct Utsname
        {
            public array<byte> Sysname;
            public array<byte> Nodename;
            public array<byte> Release;
            public array<byte> Version;
            public array<byte> Machine;
            public array<byte> Domainname;
        }

        public static readonly ulong AT_EMPTY_PATH = (ulong)0x1000UL;
        public static readonly ulong AT_FDCWD = (ulong)-0x64UL;
        public static readonly ulong AT_NO_AUTOMOUNT = (ulong)0x800UL;
        public static readonly ulong AT_REMOVEDIR = (ulong)0x200UL;

        public static readonly ulong AT_STATX_SYNC_AS_STAT = (ulong)0x0UL;
        public static readonly ulong AT_STATX_FORCE_SYNC = (ulong)0x2000UL;
        public static readonly ulong AT_STATX_DONT_SYNC = (ulong)0x4000UL;

        public static readonly ulong AT_SYMLINK_FOLLOW = (ulong)0x400UL;
        public static readonly ulong AT_SYMLINK_NOFOLLOW = (ulong)0x100UL;

        public static readonly ulong AT_EACCESS = (ulong)0x200UL;


        public partial struct PollFd
        {
            public int Fd;
            public short Events;
            public short Revents;
        }

        public static readonly ulong POLLIN = (ulong)0x1UL;
        public static readonly ulong POLLPRI = (ulong)0x2UL;
        public static readonly ulong POLLOUT = (ulong)0x4UL;
        public static readonly ulong POLLERR = (ulong)0x8UL;
        public static readonly ulong POLLHUP = (ulong)0x10UL;
        public static readonly ulong POLLNVAL = (ulong)0x20UL;


        public partial struct SignalfdSiginfo
        {
            public uint Signo;
            public int Errno;
            public int Code;
            public uint Pid;
            public uint Uid;
            public int Fd;
            public uint Tid;
            public uint Band;
            public uint Overrun;
            public uint Trapno;
            public int Status;
            public int Int;
            public ulong Ptr;
            public ulong Utime;
            public ulong Stime;
            public ulong Addr;
            public ushort Addr_lsb;
            public ushort _;
            public int Syscall;
            public ulong Call_addr;
            public uint Arch;
            public array<byte> _;
        }

        public static readonly ulong PERF_IOC_FLAG_GROUP = (ulong)0x1UL;



        public partial struct Winsize
        {
            public ushort Row;
            public ushort Col;
            public ushort Xpixel;
            public ushort Ypixel;
        }

        public static readonly ulong TASKSTATS_CMD_UNSPEC = (ulong)0x0UL;
        public static readonly ulong TASKSTATS_CMD_GET = (ulong)0x1UL;
        public static readonly ulong TASKSTATS_CMD_NEW = (ulong)0x2UL;
        public static readonly ulong TASKSTATS_TYPE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong TASKSTATS_TYPE_PID = (ulong)0x1UL;
        public static readonly ulong TASKSTATS_TYPE_TGID = (ulong)0x2UL;
        public static readonly ulong TASKSTATS_TYPE_STATS = (ulong)0x3UL;
        public static readonly ulong TASKSTATS_TYPE_AGGR_PID = (ulong)0x4UL;
        public static readonly ulong TASKSTATS_TYPE_AGGR_TGID = (ulong)0x5UL;
        public static readonly ulong TASKSTATS_TYPE_NULL = (ulong)0x6UL;
        public static readonly ulong TASKSTATS_CMD_ATTR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong TASKSTATS_CMD_ATTR_PID = (ulong)0x1UL;
        public static readonly ulong TASKSTATS_CMD_ATTR_TGID = (ulong)0x2UL;
        public static readonly ulong TASKSTATS_CMD_ATTR_REGISTER_CPUMASK = (ulong)0x3UL;
        public static readonly ulong TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK = (ulong)0x4UL;


        public partial struct CGroupStats
        {
            public ulong Sleeping;
            public ulong Running;
            public ulong Stopped;
            public ulong Uninterruptible;
            public ulong Io_wait;
        }

        public static readonly ulong CGROUPSTATS_CMD_UNSPEC = (ulong)0x3UL;
        public static readonly ulong CGROUPSTATS_CMD_GET = (ulong)0x4UL;
        public static readonly ulong CGROUPSTATS_CMD_NEW = (ulong)0x5UL;
        public static readonly ulong CGROUPSTATS_TYPE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong CGROUPSTATS_TYPE_CGROUP_STATS = (ulong)0x1UL;
        public static readonly ulong CGROUPSTATS_CMD_ATTR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong CGROUPSTATS_CMD_ATTR_FD = (ulong)0x1UL;


        public partial struct Genlmsghdr
        {
            public byte Cmd;
            public byte Version;
            public ushort Reserved;
        }

        public static readonly ulong CTRL_CMD_UNSPEC = (ulong)0x0UL;
        public static readonly ulong CTRL_CMD_NEWFAMILY = (ulong)0x1UL;
        public static readonly ulong CTRL_CMD_DELFAMILY = (ulong)0x2UL;
        public static readonly ulong CTRL_CMD_GETFAMILY = (ulong)0x3UL;
        public static readonly ulong CTRL_CMD_NEWOPS = (ulong)0x4UL;
        public static readonly ulong CTRL_CMD_DELOPS = (ulong)0x5UL;
        public static readonly ulong CTRL_CMD_GETOPS = (ulong)0x6UL;
        public static readonly ulong CTRL_CMD_NEWMCAST_GRP = (ulong)0x7UL;
        public static readonly ulong CTRL_CMD_DELMCAST_GRP = (ulong)0x8UL;
        public static readonly ulong CTRL_CMD_GETMCAST_GRP = (ulong)0x9UL;
        public static readonly ulong CTRL_ATTR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong CTRL_ATTR_FAMILY_ID = (ulong)0x1UL;
        public static readonly ulong CTRL_ATTR_FAMILY_NAME = (ulong)0x2UL;
        public static readonly ulong CTRL_ATTR_VERSION = (ulong)0x3UL;
        public static readonly ulong CTRL_ATTR_HDRSIZE = (ulong)0x4UL;
        public static readonly ulong CTRL_ATTR_MAXATTR = (ulong)0x5UL;
        public static readonly ulong CTRL_ATTR_OPS = (ulong)0x6UL;
        public static readonly ulong CTRL_ATTR_MCAST_GROUPS = (ulong)0x7UL;
        public static readonly ulong CTRL_ATTR_OP_UNSPEC = (ulong)0x0UL;
        public static readonly ulong CTRL_ATTR_OP_ID = (ulong)0x1UL;
        public static readonly ulong CTRL_ATTR_OP_FLAGS = (ulong)0x2UL;
        public static readonly ulong CTRL_ATTR_MCAST_GRP_UNSPEC = (ulong)0x0UL;
        public static readonly ulong CTRL_ATTR_MCAST_GRP_NAME = (ulong)0x1UL;
        public static readonly ulong CTRL_ATTR_MCAST_GRP_ID = (ulong)0x2UL;


        private static readonly ulong _CPU_SETSIZE = (ulong)0x400UL;


        public static readonly ulong BDADDR_BREDR = (ulong)0x0UL;
        public static readonly ulong BDADDR_LE_PUBLIC = (ulong)0x1UL;
        public static readonly ulong BDADDR_LE_RANDOM = (ulong)0x2UL;


        public partial struct PerfEventAttr
        {
            public uint Type;
            public uint Size;
            public ulong Config;
            public ulong Sample;
            public ulong Sample_type;
            public ulong Read_format;
            public ulong Bits;
            public uint Wakeup;
            public uint Bp_type;
            public ulong Ext1;
            public ulong Ext2;
            public ulong Branch_sample_type;
            public ulong Sample_regs_user;
            public uint Sample_stack_user;
            public int Clockid;
            public ulong Sample_regs_intr;
            public uint Aux_watermark;
            public ushort Sample_max_stack;
            public ushort _;
        }

        public partial struct PerfEventMmapPage
        {
            public uint Version;
            public uint Compat_version;
            public uint Lock;
            public uint Index;
            public long Offset;
            public ulong Time_enabled;
            public ulong Time_running;
            public ulong Capabilities;
            public ushort Pmc_width;
            public ushort Time_shift;
            public uint Time_mult;
            public ulong Time_offset;
            public ulong Time_zero;
            public uint Size;
            public array<byte> _;
            public ulong Data_head;
            public ulong Data_tail;
            public ulong Data_offset;
            public ulong Data_size;
            public ulong Aux_head;
            public ulong Aux_tail;
            public ulong Aux_offset;
            public ulong Aux_size;
        }

        public static readonly ulong PerfBitDisabled = (ulong)CBitFieldMaskBit0;
        public static readonly var PerfBitInherit = (var)CBitFieldMaskBit1;
        public static readonly var PerfBitPinned = (var)CBitFieldMaskBit2;
        public static readonly var PerfBitExclusive = (var)CBitFieldMaskBit3;
        public static readonly var PerfBitExcludeUser = (var)CBitFieldMaskBit4;
        public static readonly var PerfBitExcludeKernel = (var)CBitFieldMaskBit5;
        public static readonly var PerfBitExcludeHv = (var)CBitFieldMaskBit6;
        public static readonly var PerfBitExcludeIdle = (var)CBitFieldMaskBit7;
        public static readonly var PerfBitMmap = (var)CBitFieldMaskBit8;
        public static readonly var PerfBitComm = (var)CBitFieldMaskBit9;
        public static readonly var PerfBitFreq = (var)CBitFieldMaskBit10;
        public static readonly var PerfBitInheritStat = (var)CBitFieldMaskBit11;
        public static readonly var PerfBitEnableOnExec = (var)CBitFieldMaskBit12;
        public static readonly var PerfBitTask = (var)CBitFieldMaskBit13;
        public static readonly var PerfBitWatermark = (var)CBitFieldMaskBit14;
        public static readonly var PerfBitPreciseIPBit1 = (var)CBitFieldMaskBit15;
        public static readonly var PerfBitPreciseIPBit2 = (var)CBitFieldMaskBit16;
        public static readonly var PerfBitMmapData = (var)CBitFieldMaskBit17;
        public static readonly var PerfBitSampleIDAll = (var)CBitFieldMaskBit18;
        public static readonly var PerfBitExcludeHost = (var)CBitFieldMaskBit19;
        public static readonly var PerfBitExcludeGuest = (var)CBitFieldMaskBit20;
        public static readonly var PerfBitExcludeCallchainKernel = (var)CBitFieldMaskBit21;
        public static readonly var PerfBitExcludeCallchainUser = (var)CBitFieldMaskBit22;
        public static readonly var PerfBitMmap2 = (var)CBitFieldMaskBit23;
        public static readonly var PerfBitCommExec = (var)CBitFieldMaskBit24;
        public static readonly var PerfBitUseClockID = (var)CBitFieldMaskBit25;
        public static readonly var PerfBitContextSwitch = (var)CBitFieldMaskBit26;


        public static readonly ulong PERF_TYPE_HARDWARE = (ulong)0x0UL;
        public static readonly ulong PERF_TYPE_SOFTWARE = (ulong)0x1UL;
        public static readonly ulong PERF_TYPE_TRACEPOINT = (ulong)0x2UL;
        public static readonly ulong PERF_TYPE_HW_CACHE = (ulong)0x3UL;
        public static readonly ulong PERF_TYPE_RAW = (ulong)0x4UL;
        public static readonly ulong PERF_TYPE_BREAKPOINT = (ulong)0x5UL;

        public static readonly ulong PERF_COUNT_HW_CPU_CYCLES = (ulong)0x0UL;
        public static readonly ulong PERF_COUNT_HW_INSTRUCTIONS = (ulong)0x1UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_REFERENCES = (ulong)0x2UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_MISSES = (ulong)0x3UL;
        public static readonly ulong PERF_COUNT_HW_BRANCH_INSTRUCTIONS = (ulong)0x4UL;
        public static readonly ulong PERF_COUNT_HW_BRANCH_MISSES = (ulong)0x5UL;
        public static readonly ulong PERF_COUNT_HW_BUS_CYCLES = (ulong)0x6UL;
        public static readonly ulong PERF_COUNT_HW_STALLED_CYCLES_FRONTEND = (ulong)0x7UL;
        public static readonly ulong PERF_COUNT_HW_STALLED_CYCLES_BACKEND = (ulong)0x8UL;
        public static readonly ulong PERF_COUNT_HW_REF_CPU_CYCLES = (ulong)0x9UL;

        public static readonly ulong PERF_COUNT_HW_CACHE_L1D = (ulong)0x0UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_L1I = (ulong)0x1UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_LL = (ulong)0x2UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_DTLB = (ulong)0x3UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_ITLB = (ulong)0x4UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_BPU = (ulong)0x5UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_NODE = (ulong)0x6UL;

        public static readonly ulong PERF_COUNT_HW_CACHE_OP_READ = (ulong)0x0UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_OP_WRITE = (ulong)0x1UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_OP_PREFETCH = (ulong)0x2UL;

        public static readonly ulong PERF_COUNT_HW_CACHE_RESULT_ACCESS = (ulong)0x0UL;
        public static readonly ulong PERF_COUNT_HW_CACHE_RESULT_MISS = (ulong)0x1UL;

        public static readonly ulong PERF_COUNT_SW_CPU_CLOCK = (ulong)0x0UL;
        public static readonly ulong PERF_COUNT_SW_TASK_CLOCK = (ulong)0x1UL;
        public static readonly ulong PERF_COUNT_SW_PAGE_FAULTS = (ulong)0x2UL;
        public static readonly ulong PERF_COUNT_SW_CONTEXT_SWITCHES = (ulong)0x3UL;
        public static readonly ulong PERF_COUNT_SW_CPU_MIGRATIONS = (ulong)0x4UL;
        public static readonly ulong PERF_COUNT_SW_PAGE_FAULTS_MIN = (ulong)0x5UL;
        public static readonly ulong PERF_COUNT_SW_PAGE_FAULTS_MAJ = (ulong)0x6UL;
        public static readonly ulong PERF_COUNT_SW_ALIGNMENT_FAULTS = (ulong)0x7UL;
        public static readonly ulong PERF_COUNT_SW_EMULATION_FAULTS = (ulong)0x8UL;
        public static readonly ulong PERF_COUNT_SW_DUMMY = (ulong)0x9UL;
        public static readonly ulong PERF_COUNT_SW_BPF_OUTPUT = (ulong)0xaUL;

        public static readonly ulong PERF_SAMPLE_IP = (ulong)0x1UL;
        public static readonly ulong PERF_SAMPLE_TID = (ulong)0x2UL;
        public static readonly ulong PERF_SAMPLE_TIME = (ulong)0x4UL;
        public static readonly ulong PERF_SAMPLE_ADDR = (ulong)0x8UL;
        public static readonly ulong PERF_SAMPLE_READ = (ulong)0x10UL;
        public static readonly ulong PERF_SAMPLE_CALLCHAIN = (ulong)0x20UL;
        public static readonly ulong PERF_SAMPLE_ID = (ulong)0x40UL;
        public static readonly ulong PERF_SAMPLE_CPU = (ulong)0x80UL;
        public static readonly ulong PERF_SAMPLE_PERIOD = (ulong)0x100UL;
        public static readonly ulong PERF_SAMPLE_STREAM_ID = (ulong)0x200UL;
        public static readonly ulong PERF_SAMPLE_RAW = (ulong)0x400UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_STACK = (ulong)0x800UL;

        public static readonly ulong PERF_SAMPLE_BRANCH_USER = (ulong)0x1UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_KERNEL = (ulong)0x2UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_HV = (ulong)0x4UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_ANY = (ulong)0x8UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_ANY_CALL = (ulong)0x10UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_ANY_RETURN = (ulong)0x20UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_IND_CALL = (ulong)0x40UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_ABORT_TX = (ulong)0x80UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_IN_TX = (ulong)0x100UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_NO_TX = (ulong)0x200UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_COND = (ulong)0x400UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_CALL_STACK = (ulong)0x800UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_IND_JUMP = (ulong)0x1000UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_CALL = (ulong)0x2000UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_NO_FLAGS = (ulong)0x4000UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_NO_CYCLES = (ulong)0x8000UL;
        public static readonly ulong PERF_SAMPLE_BRANCH_TYPE_SAVE = (ulong)0x10000UL;

        public static readonly ulong PERF_FORMAT_TOTAL_TIME_ENABLED = (ulong)0x1UL;
        public static readonly ulong PERF_FORMAT_TOTAL_TIME_RUNNING = (ulong)0x2UL;
        public static readonly ulong PERF_FORMAT_ID = (ulong)0x4UL;
        public static readonly ulong PERF_FORMAT_GROUP = (ulong)0x8UL;

        public static readonly ulong PERF_RECORD_MMAP = (ulong)0x1UL;
        public static readonly ulong PERF_RECORD_LOST = (ulong)0x2UL;
        public static readonly ulong PERF_RECORD_COMM = (ulong)0x3UL;
        public static readonly ulong PERF_RECORD_EXIT = (ulong)0x4UL;
        public static readonly ulong PERF_RECORD_THROTTLE = (ulong)0x5UL;
        public static readonly ulong PERF_RECORD_UNTHROTTLE = (ulong)0x6UL;
        public static readonly ulong PERF_RECORD_FORK = (ulong)0x7UL;
        public static readonly ulong PERF_RECORD_READ = (ulong)0x8UL;
        public static readonly ulong PERF_RECORD_SAMPLE = (ulong)0x9UL;
        public static readonly ulong PERF_RECORD_MMAP2 = (ulong)0xaUL;
        public static readonly ulong PERF_RECORD_AUX = (ulong)0xbUL;
        public static readonly ulong PERF_RECORD_ITRACE_START = (ulong)0xcUL;
        public static readonly ulong PERF_RECORD_LOST_SAMPLES = (ulong)0xdUL;
        public static readonly ulong PERF_RECORD_SWITCH = (ulong)0xeUL;
        public static readonly ulong PERF_RECORD_SWITCH_CPU_WIDE = (ulong)0xfUL;
        public static readonly ulong PERF_RECORD_NAMESPACES = (ulong)0x10UL;

        public static readonly ulong PERF_CONTEXT_HV = (ulong)-0x20UL;
        public static readonly ulong PERF_CONTEXT_KERNEL = (ulong)-0x80UL;
        public static readonly ulong PERF_CONTEXT_USER = (ulong)-0x200UL;

        public static readonly ulong PERF_CONTEXT_GUEST = (ulong)-0x800UL;
        public static readonly ulong PERF_CONTEXT_GUEST_KERNEL = (ulong)-0x880UL;
        public static readonly ulong PERF_CONTEXT_GUEST_USER = (ulong)-0xa00UL;

        public static readonly ulong PERF_FLAG_FD_NO_GROUP = (ulong)0x1UL;
        public static readonly ulong PERF_FLAG_FD_OUTPUT = (ulong)0x2UL;
        public static readonly ulong PERF_FLAG_PID_CGROUP = (ulong)0x4UL;
        public static readonly ulong PERF_FLAG_FD_CLOEXEC = (ulong)0x8UL;


        public partial struct TCPMD5Sig
        {
            public SockaddrStorage Addr;
            public byte Flags;
            public byte Prefixlen;
            public ushort Keylen;
            public uint _;
            public array<byte> Key;
        }

        public partial struct HDDriveCmdHdr
        {
            public byte Command;
            public byte Number;
            public byte Feature;
            public byte Count;
        }

        public partial struct HDDriveID
        {
            public ushort Config;
            public ushort Cyls;
            public ushort Reserved2;
            public ushort Heads;
            public ushort Track_bytes;
            public ushort Sector_bytes;
            public ushort Sectors;
            public ushort Vendor0;
            public ushort Vendor1;
            public ushort Vendor2;
            public array<byte> Serial_no;
            public ushort Buf_type;
            public ushort Buf_size;
            public ushort Ecc_bytes;
            public array<byte> Fw_rev;
            public array<byte> Model;
            public byte Max_multsect;
            public byte Vendor3;
            public ushort Dword_io;
            public byte Vendor4;
            public byte Capability;
            public ushort Reserved50;
            public byte Vendor5;
            public byte TPIO;
            public byte Vendor6;
            public byte TDMA;
            public ushort Field_valid;
            public ushort Cur_cyls;
            public ushort Cur_heads;
            public ushort Cur_sectors;
            public ushort Cur_capacity0;
            public ushort Cur_capacity1;
            public byte Multsect;
            public byte Multsect_valid;
            public uint Lba_capacity;
            public ushort Dma_1word;
            public ushort Dma_mword;
            public ushort Eide_pio_modes;
            public ushort Eide_dma_min;
            public ushort Eide_dma_time;
            public ushort Eide_pio;
            public ushort Eide_pio_iordy;
            public array<ushort> Words69_70;
            public array<ushort> Words71_74;
            public ushort Queue_depth;
            public array<ushort> Words76_79;
            public ushort Major_rev_num;
            public ushort Minor_rev_num;
            public ushort Command_set_1;
            public ushort Command_set_2;
            public ushort Cfsse;
            public ushort Cfs_enable_1;
            public ushort Cfs_enable_2;
            public ushort Csf_default;
            public ushort Dma_ultra;
            public ushort Trseuc;
            public ushort TrsEuc;
            public ushort CurAPMvalues;
            public ushort Mprc;
            public ushort Hw_config;
            public ushort Acoustic;
            public ushort Msrqs;
            public ushort Sxfert;
            public ushort Sal;
            public uint Spg;
            public ulong Lba_capacity_2;
            public array<ushort> Words104_125;
            public ushort Last_lun;
            public ushort Word127;
            public ushort Dlf;
            public ushort Csfo;
            public array<ushort> Words130_155;
            public ushort Word156;
            public array<ushort> Words157_159;
            public ushort Cfa_power;
            public array<ushort> Words161_175;
            public array<ushort> Words176_205;
            public array<ushort> Words206_254;
            public ushort Integrity_word;
        }

        public static readonly ulong ST_MANDLOCK = (ulong)0x40UL;
        public static readonly ulong ST_NOATIME = (ulong)0x400UL;
        public static readonly ulong ST_NODEV = (ulong)0x4UL;
        public static readonly ulong ST_NODIRATIME = (ulong)0x800UL;
        public static readonly ulong ST_NOEXEC = (ulong)0x8UL;
        public static readonly ulong ST_NOSUID = (ulong)0x2UL;
        public static readonly ulong ST_RDONLY = (ulong)0x1UL;
        public static readonly ulong ST_RELATIME = (ulong)0x1000UL;
        public static readonly ulong ST_SYNCHRONOUS = (ulong)0x10UL;


        public partial struct Tpacket2Hdr
        {
            public uint Status;
            public uint Len;
            public uint Snaplen;
            public ushort Mac;
            public ushort Net;
            public uint Sec;
            public uint Nsec;
            public ushort Vlan_tci;
            public ushort Vlan_tpid;
            public array<byte> _;
        }

        public partial struct Tpacket3Hdr
        {
            public uint Next_offset;
            public uint Sec;
            public uint Nsec;
            public uint Snaplen;
            public uint Len;
            public uint Status;
            public ushort Mac;
            public ushort Net;
            public TpacketHdrVariant1 Hv1;
            public array<byte> _;
        }

        public partial struct TpacketHdrVariant1
        {
            public uint Rxhash;
            public uint Vlan_tci;
            public ushort Vlan_tpid;
            public ushort _;
        }

        public partial struct TpacketBlockDesc
        {
            public uint Version;
            public uint To_priv;
            public array<byte> Hdr;
        }

        public partial struct TpacketBDTS
        {
            public uint Sec;
            public uint Usec;
        }

        public partial struct TpacketHdrV1
        {
            public uint Block_status;
            public uint Num_pkts;
            public uint Offset_to_first_pkt;
            public uint Blk_len;
            public ulong Seq_num;
            public TpacketBDTS Ts_first_pkt;
            public TpacketBDTS Ts_last_pkt;
        }

        public partial struct TpacketReq
        {
            public uint Block_size;
            public uint Block_nr;
            public uint Frame_size;
            public uint Frame_nr;
        }

        public partial struct TpacketReq3
        {
            public uint Block_size;
            public uint Block_nr;
            public uint Frame_size;
            public uint Frame_nr;
            public uint Retire_blk_tov;
            public uint Sizeof_priv;
            public uint Feature_req_word;
        }

        public partial struct TpacketStats
        {
            public uint Packets;
            public uint Drops;
        }

        public partial struct TpacketStatsV3
        {
            public uint Packets;
            public uint Drops;
            public uint Freeze_q_cnt;
        }

        public partial struct TpacketAuxdata
        {
            public uint Status;
            public uint Len;
            public uint Snaplen;
            public ushort Mac;
            public ushort Net;
            public ushort Vlan_tci;
            public ushort Vlan_tpid;
        }

        public static readonly ulong TPACKET_V1 = (ulong)0x0UL;
        public static readonly ulong TPACKET_V2 = (ulong)0x1UL;
        public static readonly ulong TPACKET_V3 = (ulong)0x2UL;


        public static readonly ulong SizeofTpacket2Hdr = (ulong)0x20UL;
        public static readonly ulong SizeofTpacket3Hdr = (ulong)0x30UL;

        public static readonly ulong SizeofTpacketStats = (ulong)0x8UL;
        public static readonly ulong SizeofTpacketStatsV3 = (ulong)0xcUL;


        public static readonly ulong NF_INET_PRE_ROUTING = (ulong)0x0UL;
        public static readonly ulong NF_INET_LOCAL_IN = (ulong)0x1UL;
        public static readonly ulong NF_INET_FORWARD = (ulong)0x2UL;
        public static readonly ulong NF_INET_LOCAL_OUT = (ulong)0x3UL;
        public static readonly ulong NF_INET_POST_ROUTING = (ulong)0x4UL;
        public static readonly ulong NF_INET_NUMHOOKS = (ulong)0x5UL;


        public static readonly ulong NF_NETDEV_INGRESS = (ulong)0x0UL;
        public static readonly ulong NF_NETDEV_NUMHOOKS = (ulong)0x1UL;


        public static readonly ulong NFPROTO_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFPROTO_INET = (ulong)0x1UL;
        public static readonly ulong NFPROTO_IPV4 = (ulong)0x2UL;
        public static readonly ulong NFPROTO_ARP = (ulong)0x3UL;
        public static readonly ulong NFPROTO_NETDEV = (ulong)0x5UL;
        public static readonly ulong NFPROTO_BRIDGE = (ulong)0x7UL;
        public static readonly ulong NFPROTO_IPV6 = (ulong)0xaUL;
        public static readonly ulong NFPROTO_DECNET = (ulong)0xcUL;
        public static readonly ulong NFPROTO_NUMPROTO = (ulong)0xdUL;


        public partial struct Nfgenmsg
        {
            public byte Nfgen_family;
            public byte Version;
            public ushort Res_id;
        }

        public static readonly ulong NFNL_BATCH_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFNL_BATCH_GENID = (ulong)0x1UL;


        public static readonly ulong NFT_REG_VERDICT = (ulong)0x0UL;
        public static readonly ulong NFT_REG_1 = (ulong)0x1UL;
        public static readonly ulong NFT_REG_2 = (ulong)0x2UL;
        public static readonly ulong NFT_REG_3 = (ulong)0x3UL;
        public static readonly ulong NFT_REG_4 = (ulong)0x4UL;
        public static readonly ulong NFT_REG32_00 = (ulong)0x8UL;
        public static readonly ulong NFT_REG32_01 = (ulong)0x9UL;
        public static readonly ulong NFT_REG32_02 = (ulong)0xaUL;
        public static readonly ulong NFT_REG32_03 = (ulong)0xbUL;
        public static readonly ulong NFT_REG32_04 = (ulong)0xcUL;
        public static readonly ulong NFT_REG32_05 = (ulong)0xdUL;
        public static readonly ulong NFT_REG32_06 = (ulong)0xeUL;
        public static readonly ulong NFT_REG32_07 = (ulong)0xfUL;
        public static readonly ulong NFT_REG32_08 = (ulong)0x10UL;
        public static readonly ulong NFT_REG32_09 = (ulong)0x11UL;
        public static readonly ulong NFT_REG32_10 = (ulong)0x12UL;
        public static readonly ulong NFT_REG32_11 = (ulong)0x13UL;
        public static readonly ulong NFT_REG32_12 = (ulong)0x14UL;
        public static readonly ulong NFT_REG32_13 = (ulong)0x15UL;
        public static readonly ulong NFT_REG32_14 = (ulong)0x16UL;
        public static readonly ulong NFT_REG32_15 = (ulong)0x17UL;
        public static readonly ulong NFT_CONTINUE = (ulong)-0x1UL;
        public static readonly ulong NFT_BREAK = (ulong)-0x2UL;
        public static readonly ulong NFT_JUMP = (ulong)-0x3UL;
        public static readonly ulong NFT_GOTO = (ulong)-0x4UL;
        public static readonly ulong NFT_RETURN = (ulong)-0x5UL;
        public static readonly ulong NFT_MSG_NEWTABLE = (ulong)0x0UL;
        public static readonly ulong NFT_MSG_GETTABLE = (ulong)0x1UL;
        public static readonly ulong NFT_MSG_DELTABLE = (ulong)0x2UL;
        public static readonly ulong NFT_MSG_NEWCHAIN = (ulong)0x3UL;
        public static readonly ulong NFT_MSG_GETCHAIN = (ulong)0x4UL;
        public static readonly ulong NFT_MSG_DELCHAIN = (ulong)0x5UL;
        public static readonly ulong NFT_MSG_NEWRULE = (ulong)0x6UL;
        public static readonly ulong NFT_MSG_GETRULE = (ulong)0x7UL;
        public static readonly ulong NFT_MSG_DELRULE = (ulong)0x8UL;
        public static readonly ulong NFT_MSG_NEWSET = (ulong)0x9UL;
        public static readonly ulong NFT_MSG_GETSET = (ulong)0xaUL;
        public static readonly ulong NFT_MSG_DELSET = (ulong)0xbUL;
        public static readonly ulong NFT_MSG_NEWSETELEM = (ulong)0xcUL;
        public static readonly ulong NFT_MSG_GETSETELEM = (ulong)0xdUL;
        public static readonly ulong NFT_MSG_DELSETELEM = (ulong)0xeUL;
        public static readonly ulong NFT_MSG_NEWGEN = (ulong)0xfUL;
        public static readonly ulong NFT_MSG_GETGEN = (ulong)0x10UL;
        public static readonly ulong NFT_MSG_TRACE = (ulong)0x11UL;
        public static readonly ulong NFT_MSG_NEWOBJ = (ulong)0x12UL;
        public static readonly ulong NFT_MSG_GETOBJ = (ulong)0x13UL;
        public static readonly ulong NFT_MSG_DELOBJ = (ulong)0x14UL;
        public static readonly ulong NFT_MSG_GETOBJ_RESET = (ulong)0x15UL;
        public static readonly ulong NFT_MSG_MAX = (ulong)0x19UL;
        public static readonly ulong NFTA_LIST_UNPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_LIST_ELEM = (ulong)0x1UL;
        public static readonly ulong NFTA_HOOK_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_HOOK_HOOKNUM = (ulong)0x1UL;
        public static readonly ulong NFTA_HOOK_PRIORITY = (ulong)0x2UL;
        public static readonly ulong NFTA_HOOK_DEV = (ulong)0x3UL;
        public static readonly ulong NFT_TABLE_F_DORMANT = (ulong)0x1UL;
        public static readonly ulong NFTA_TABLE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_TABLE_NAME = (ulong)0x1UL;
        public static readonly ulong NFTA_TABLE_FLAGS = (ulong)0x2UL;
        public static readonly ulong NFTA_TABLE_USE = (ulong)0x3UL;
        public static readonly ulong NFTA_CHAIN_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_CHAIN_TABLE = (ulong)0x1UL;
        public static readonly ulong NFTA_CHAIN_HANDLE = (ulong)0x2UL;
        public static readonly ulong NFTA_CHAIN_NAME = (ulong)0x3UL;
        public static readonly ulong NFTA_CHAIN_HOOK = (ulong)0x4UL;
        public static readonly ulong NFTA_CHAIN_POLICY = (ulong)0x5UL;
        public static readonly ulong NFTA_CHAIN_USE = (ulong)0x6UL;
        public static readonly ulong NFTA_CHAIN_TYPE = (ulong)0x7UL;
        public static readonly ulong NFTA_CHAIN_COUNTERS = (ulong)0x8UL;
        public static readonly ulong NFTA_CHAIN_PAD = (ulong)0x9UL;
        public static readonly ulong NFTA_RULE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_RULE_TABLE = (ulong)0x1UL;
        public static readonly ulong NFTA_RULE_CHAIN = (ulong)0x2UL;
        public static readonly ulong NFTA_RULE_HANDLE = (ulong)0x3UL;
        public static readonly ulong NFTA_RULE_EXPRESSIONS = (ulong)0x4UL;
        public static readonly ulong NFTA_RULE_COMPAT = (ulong)0x5UL;
        public static readonly ulong NFTA_RULE_POSITION = (ulong)0x6UL;
        public static readonly ulong NFTA_RULE_USERDATA = (ulong)0x7UL;
        public static readonly ulong NFTA_RULE_PAD = (ulong)0x8UL;
        public static readonly ulong NFTA_RULE_ID = (ulong)0x9UL;
        public static readonly ulong NFT_RULE_COMPAT_F_INV = (ulong)0x2UL;
        public static readonly ulong NFT_RULE_COMPAT_F_MASK = (ulong)0x2UL;
        public static readonly ulong NFTA_RULE_COMPAT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_RULE_COMPAT_PROTO = (ulong)0x1UL;
        public static readonly ulong NFTA_RULE_COMPAT_FLAGS = (ulong)0x2UL;
        public static readonly ulong NFT_SET_ANONYMOUS = (ulong)0x1UL;
        public static readonly ulong NFT_SET_CONSTANT = (ulong)0x2UL;
        public static readonly ulong NFT_SET_INTERVAL = (ulong)0x4UL;
        public static readonly ulong NFT_SET_MAP = (ulong)0x8UL;
        public static readonly ulong NFT_SET_TIMEOUT = (ulong)0x10UL;
        public static readonly ulong NFT_SET_EVAL = (ulong)0x20UL;
        public static readonly ulong NFT_SET_OBJECT = (ulong)0x40UL;
        public static readonly ulong NFT_SET_POL_PERFORMANCE = (ulong)0x0UL;
        public static readonly ulong NFT_SET_POL_MEMORY = (ulong)0x1UL;
        public static readonly ulong NFTA_SET_DESC_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_SET_DESC_SIZE = (ulong)0x1UL;
        public static readonly ulong NFTA_SET_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_SET_TABLE = (ulong)0x1UL;
        public static readonly ulong NFTA_SET_NAME = (ulong)0x2UL;
        public static readonly ulong NFTA_SET_FLAGS = (ulong)0x3UL;
        public static readonly ulong NFTA_SET_KEY_TYPE = (ulong)0x4UL;
        public static readonly ulong NFTA_SET_KEY_LEN = (ulong)0x5UL;
        public static readonly ulong NFTA_SET_DATA_TYPE = (ulong)0x6UL;
        public static readonly ulong NFTA_SET_DATA_LEN = (ulong)0x7UL;
        public static readonly ulong NFTA_SET_POLICY = (ulong)0x8UL;
        public static readonly ulong NFTA_SET_DESC = (ulong)0x9UL;
        public static readonly ulong NFTA_SET_ID = (ulong)0xaUL;
        public static readonly ulong NFTA_SET_TIMEOUT = (ulong)0xbUL;
        public static readonly ulong NFTA_SET_GC_INTERVAL = (ulong)0xcUL;
        public static readonly ulong NFTA_SET_USERDATA = (ulong)0xdUL;
        public static readonly ulong NFTA_SET_PAD = (ulong)0xeUL;
        public static readonly ulong NFTA_SET_OBJ_TYPE = (ulong)0xfUL;
        public static readonly ulong NFT_SET_ELEM_INTERVAL_END = (ulong)0x1UL;
        public static readonly ulong NFTA_SET_ELEM_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_SET_ELEM_KEY = (ulong)0x1UL;
        public static readonly ulong NFTA_SET_ELEM_DATA = (ulong)0x2UL;
        public static readonly ulong NFTA_SET_ELEM_FLAGS = (ulong)0x3UL;
        public static readonly ulong NFTA_SET_ELEM_TIMEOUT = (ulong)0x4UL;
        public static readonly ulong NFTA_SET_ELEM_EXPIRATION = (ulong)0x5UL;
        public static readonly ulong NFTA_SET_ELEM_USERDATA = (ulong)0x6UL;
        public static readonly ulong NFTA_SET_ELEM_EXPR = (ulong)0x7UL;
        public static readonly ulong NFTA_SET_ELEM_PAD = (ulong)0x8UL;
        public static readonly ulong NFTA_SET_ELEM_OBJREF = (ulong)0x9UL;
        public static readonly ulong NFTA_SET_ELEM_LIST_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_SET_ELEM_LIST_TABLE = (ulong)0x1UL;
        public static readonly ulong NFTA_SET_ELEM_LIST_SET = (ulong)0x2UL;
        public static readonly ulong NFTA_SET_ELEM_LIST_ELEMENTS = (ulong)0x3UL;
        public static readonly ulong NFTA_SET_ELEM_LIST_SET_ID = (ulong)0x4UL;
        public static readonly ulong NFT_DATA_VALUE = (ulong)0x0UL;
        public static readonly ulong NFT_DATA_VERDICT = (ulong)0xffffff00UL;
        public static readonly ulong NFTA_DATA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_DATA_VALUE = (ulong)0x1UL;
        public static readonly ulong NFTA_DATA_VERDICT = (ulong)0x2UL;
        public static readonly ulong NFTA_VERDICT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_VERDICT_CODE = (ulong)0x1UL;
        public static readonly ulong NFTA_VERDICT_CHAIN = (ulong)0x2UL;
        public static readonly ulong NFTA_EXPR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_EXPR_NAME = (ulong)0x1UL;
        public static readonly ulong NFTA_EXPR_DATA = (ulong)0x2UL;
        public static readonly ulong NFTA_IMMEDIATE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_IMMEDIATE_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_IMMEDIATE_DATA = (ulong)0x2UL;
        public static readonly ulong NFTA_BITWISE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_BITWISE_SREG = (ulong)0x1UL;
        public static readonly ulong NFTA_BITWISE_DREG = (ulong)0x2UL;
        public static readonly ulong NFTA_BITWISE_LEN = (ulong)0x3UL;
        public static readonly ulong NFTA_BITWISE_MASK = (ulong)0x4UL;
        public static readonly ulong NFTA_BITWISE_XOR = (ulong)0x5UL;
        public static readonly ulong NFT_BYTEORDER_NTOH = (ulong)0x0UL;
        public static readonly ulong NFT_BYTEORDER_HTON = (ulong)0x1UL;
        public static readonly ulong NFTA_BYTEORDER_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_BYTEORDER_SREG = (ulong)0x1UL;
        public static readonly ulong NFTA_BYTEORDER_DREG = (ulong)0x2UL;
        public static readonly ulong NFTA_BYTEORDER_OP = (ulong)0x3UL;
        public static readonly ulong NFTA_BYTEORDER_LEN = (ulong)0x4UL;
        public static readonly ulong NFTA_BYTEORDER_SIZE = (ulong)0x5UL;
        public static readonly ulong NFT_CMP_EQ = (ulong)0x0UL;
        public static readonly ulong NFT_CMP_NEQ = (ulong)0x1UL;
        public static readonly ulong NFT_CMP_LT = (ulong)0x2UL;
        public static readonly ulong NFT_CMP_LTE = (ulong)0x3UL;
        public static readonly ulong NFT_CMP_GT = (ulong)0x4UL;
        public static readonly ulong NFT_CMP_GTE = (ulong)0x5UL;
        public static readonly ulong NFTA_CMP_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_CMP_SREG = (ulong)0x1UL;
        public static readonly ulong NFTA_CMP_OP = (ulong)0x2UL;
        public static readonly ulong NFTA_CMP_DATA = (ulong)0x3UL;
        public static readonly ulong NFT_RANGE_EQ = (ulong)0x0UL;
        public static readonly ulong NFT_RANGE_NEQ = (ulong)0x1UL;
        public static readonly ulong NFTA_RANGE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_RANGE_SREG = (ulong)0x1UL;
        public static readonly ulong NFTA_RANGE_OP = (ulong)0x2UL;
        public static readonly ulong NFTA_RANGE_FROM_DATA = (ulong)0x3UL;
        public static readonly ulong NFTA_RANGE_TO_DATA = (ulong)0x4UL;
        public static readonly ulong NFT_LOOKUP_F_INV = (ulong)0x1UL;
        public static readonly ulong NFTA_LOOKUP_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_LOOKUP_SET = (ulong)0x1UL;
        public static readonly ulong NFTA_LOOKUP_SREG = (ulong)0x2UL;
        public static readonly ulong NFTA_LOOKUP_DREG = (ulong)0x3UL;
        public static readonly ulong NFTA_LOOKUP_SET_ID = (ulong)0x4UL;
        public static readonly ulong NFTA_LOOKUP_FLAGS = (ulong)0x5UL;
        public static readonly ulong NFT_DYNSET_OP_ADD = (ulong)0x0UL;
        public static readonly ulong NFT_DYNSET_OP_UPDATE = (ulong)0x1UL;
        public static readonly ulong NFT_DYNSET_F_INV = (ulong)0x1UL;
        public static readonly ulong NFTA_DYNSET_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_DYNSET_SET_NAME = (ulong)0x1UL;
        public static readonly ulong NFTA_DYNSET_SET_ID = (ulong)0x2UL;
        public static readonly ulong NFTA_DYNSET_OP = (ulong)0x3UL;
        public static readonly ulong NFTA_DYNSET_SREG_KEY = (ulong)0x4UL;
        public static readonly ulong NFTA_DYNSET_SREG_DATA = (ulong)0x5UL;
        public static readonly ulong NFTA_DYNSET_TIMEOUT = (ulong)0x6UL;
        public static readonly ulong NFTA_DYNSET_EXPR = (ulong)0x7UL;
        public static readonly ulong NFTA_DYNSET_PAD = (ulong)0x8UL;
        public static readonly ulong NFTA_DYNSET_FLAGS = (ulong)0x9UL;
        public static readonly ulong NFT_PAYLOAD_LL_HEADER = (ulong)0x0UL;
        public static readonly ulong NFT_PAYLOAD_NETWORK_HEADER = (ulong)0x1UL;
        public static readonly ulong NFT_PAYLOAD_TRANSPORT_HEADER = (ulong)0x2UL;
        public static readonly ulong NFT_PAYLOAD_CSUM_NONE = (ulong)0x0UL;
        public static readonly ulong NFT_PAYLOAD_CSUM_INET = (ulong)0x1UL;
        public static readonly ulong NFT_PAYLOAD_L4CSUM_PSEUDOHDR = (ulong)0x1UL;
        public static readonly ulong NFTA_PAYLOAD_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_PAYLOAD_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_PAYLOAD_BASE = (ulong)0x2UL;
        public static readonly ulong NFTA_PAYLOAD_OFFSET = (ulong)0x3UL;
        public static readonly ulong NFTA_PAYLOAD_LEN = (ulong)0x4UL;
        public static readonly ulong NFTA_PAYLOAD_SREG = (ulong)0x5UL;
        public static readonly ulong NFTA_PAYLOAD_CSUM_TYPE = (ulong)0x6UL;
        public static readonly ulong NFTA_PAYLOAD_CSUM_OFFSET = (ulong)0x7UL;
        public static readonly ulong NFTA_PAYLOAD_CSUM_FLAGS = (ulong)0x8UL;
        public static readonly ulong NFT_EXTHDR_F_PRESENT = (ulong)0x1UL;
        public static readonly ulong NFT_EXTHDR_OP_IPV6 = (ulong)0x0UL;
        public static readonly ulong NFT_EXTHDR_OP_TCPOPT = (ulong)0x1UL;
        public static readonly ulong NFTA_EXTHDR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_EXTHDR_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_EXTHDR_TYPE = (ulong)0x2UL;
        public static readonly ulong NFTA_EXTHDR_OFFSET = (ulong)0x3UL;
        public static readonly ulong NFTA_EXTHDR_LEN = (ulong)0x4UL;
        public static readonly ulong NFTA_EXTHDR_FLAGS = (ulong)0x5UL;
        public static readonly ulong NFTA_EXTHDR_OP = (ulong)0x6UL;
        public static readonly ulong NFTA_EXTHDR_SREG = (ulong)0x7UL;
        public static readonly ulong NFT_META_LEN = (ulong)0x0UL;
        public static readonly ulong NFT_META_PROTOCOL = (ulong)0x1UL;
        public static readonly ulong NFT_META_PRIORITY = (ulong)0x2UL;
        public static readonly ulong NFT_META_MARK = (ulong)0x3UL;
        public static readonly ulong NFT_META_IIF = (ulong)0x4UL;
        public static readonly ulong NFT_META_OIF = (ulong)0x5UL;
        public static readonly ulong NFT_META_IIFNAME = (ulong)0x6UL;
        public static readonly ulong NFT_META_OIFNAME = (ulong)0x7UL;
        public static readonly ulong NFT_META_IIFTYPE = (ulong)0x8UL;
        public static readonly ulong NFT_META_OIFTYPE = (ulong)0x9UL;
        public static readonly ulong NFT_META_SKUID = (ulong)0xaUL;
        public static readonly ulong NFT_META_SKGID = (ulong)0xbUL;
        public static readonly ulong NFT_META_NFTRACE = (ulong)0xcUL;
        public static readonly ulong NFT_META_RTCLASSID = (ulong)0xdUL;
        public static readonly ulong NFT_META_SECMARK = (ulong)0xeUL;
        public static readonly ulong NFT_META_NFPROTO = (ulong)0xfUL;
        public static readonly ulong NFT_META_L4PROTO = (ulong)0x10UL;
        public static readonly ulong NFT_META_BRI_IIFNAME = (ulong)0x11UL;
        public static readonly ulong NFT_META_BRI_OIFNAME = (ulong)0x12UL;
        public static readonly ulong NFT_META_PKTTYPE = (ulong)0x13UL;
        public static readonly ulong NFT_META_CPU = (ulong)0x14UL;
        public static readonly ulong NFT_META_IIFGROUP = (ulong)0x15UL;
        public static readonly ulong NFT_META_OIFGROUP = (ulong)0x16UL;
        public static readonly ulong NFT_META_CGROUP = (ulong)0x17UL;
        public static readonly ulong NFT_META_PRANDOM = (ulong)0x18UL;
        public static readonly ulong NFT_RT_CLASSID = (ulong)0x0UL;
        public static readonly ulong NFT_RT_NEXTHOP4 = (ulong)0x1UL;
        public static readonly ulong NFT_RT_NEXTHOP6 = (ulong)0x2UL;
        public static readonly ulong NFT_RT_TCPMSS = (ulong)0x3UL;
        public static readonly ulong NFT_HASH_JENKINS = (ulong)0x0UL;
        public static readonly ulong NFT_HASH_SYM = (ulong)0x1UL;
        public static readonly ulong NFTA_HASH_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_HASH_SREG = (ulong)0x1UL;
        public static readonly ulong NFTA_HASH_DREG = (ulong)0x2UL;
        public static readonly ulong NFTA_HASH_LEN = (ulong)0x3UL;
        public static readonly ulong NFTA_HASH_MODULUS = (ulong)0x4UL;
        public static readonly ulong NFTA_HASH_SEED = (ulong)0x5UL;
        public static readonly ulong NFTA_HASH_OFFSET = (ulong)0x6UL;
        public static readonly ulong NFTA_HASH_TYPE = (ulong)0x7UL;
        public static readonly ulong NFTA_META_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_META_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_META_KEY = (ulong)0x2UL;
        public static readonly ulong NFTA_META_SREG = (ulong)0x3UL;
        public static readonly ulong NFTA_RT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_RT_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_RT_KEY = (ulong)0x2UL;
        public static readonly ulong NFT_CT_STATE = (ulong)0x0UL;
        public static readonly ulong NFT_CT_DIRECTION = (ulong)0x1UL;
        public static readonly ulong NFT_CT_STATUS = (ulong)0x2UL;
        public static readonly ulong NFT_CT_MARK = (ulong)0x3UL;
        public static readonly ulong NFT_CT_SECMARK = (ulong)0x4UL;
        public static readonly ulong NFT_CT_EXPIRATION = (ulong)0x5UL;
        public static readonly ulong NFT_CT_HELPER = (ulong)0x6UL;
        public static readonly ulong NFT_CT_L3PROTOCOL = (ulong)0x7UL;
        public static readonly ulong NFT_CT_SRC = (ulong)0x8UL;
        public static readonly ulong NFT_CT_DST = (ulong)0x9UL;
        public static readonly ulong NFT_CT_PROTOCOL = (ulong)0xaUL;
        public static readonly ulong NFT_CT_PROTO_SRC = (ulong)0xbUL;
        public static readonly ulong NFT_CT_PROTO_DST = (ulong)0xcUL;
        public static readonly ulong NFT_CT_LABELS = (ulong)0xdUL;
        public static readonly ulong NFT_CT_PKTS = (ulong)0xeUL;
        public static readonly ulong NFT_CT_BYTES = (ulong)0xfUL;
        public static readonly ulong NFT_CT_AVGPKT = (ulong)0x10UL;
        public static readonly ulong NFT_CT_ZONE = (ulong)0x11UL;
        public static readonly ulong NFT_CT_EVENTMASK = (ulong)0x12UL;
        public static readonly ulong NFTA_CT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_CT_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_CT_KEY = (ulong)0x2UL;
        public static readonly ulong NFTA_CT_DIRECTION = (ulong)0x3UL;
        public static readonly ulong NFTA_CT_SREG = (ulong)0x4UL;
        public static readonly ulong NFT_LIMIT_PKTS = (ulong)0x0UL;
        public static readonly ulong NFT_LIMIT_PKT_BYTES = (ulong)0x1UL;
        public static readonly ulong NFT_LIMIT_F_INV = (ulong)0x1UL;
        public static readonly ulong NFTA_LIMIT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_LIMIT_RATE = (ulong)0x1UL;
        public static readonly ulong NFTA_LIMIT_UNIT = (ulong)0x2UL;
        public static readonly ulong NFTA_LIMIT_BURST = (ulong)0x3UL;
        public static readonly ulong NFTA_LIMIT_TYPE = (ulong)0x4UL;
        public static readonly ulong NFTA_LIMIT_FLAGS = (ulong)0x5UL;
        public static readonly ulong NFTA_LIMIT_PAD = (ulong)0x6UL;
        public static readonly ulong NFTA_COUNTER_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_COUNTER_BYTES = (ulong)0x1UL;
        public static readonly ulong NFTA_COUNTER_PACKETS = (ulong)0x2UL;
        public static readonly ulong NFTA_COUNTER_PAD = (ulong)0x3UL;
        public static readonly ulong NFTA_LOG_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_LOG_GROUP = (ulong)0x1UL;
        public static readonly ulong NFTA_LOG_PREFIX = (ulong)0x2UL;
        public static readonly ulong NFTA_LOG_SNAPLEN = (ulong)0x3UL;
        public static readonly ulong NFTA_LOG_QTHRESHOLD = (ulong)0x4UL;
        public static readonly ulong NFTA_LOG_LEVEL = (ulong)0x5UL;
        public static readonly ulong NFTA_LOG_FLAGS = (ulong)0x6UL;
        public static readonly ulong NFTA_QUEUE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_QUEUE_NUM = (ulong)0x1UL;
        public static readonly ulong NFTA_QUEUE_TOTAL = (ulong)0x2UL;
        public static readonly ulong NFTA_QUEUE_FLAGS = (ulong)0x3UL;
        public static readonly ulong NFTA_QUEUE_SREG_QNUM = (ulong)0x4UL;
        public static readonly ulong NFT_QUOTA_F_INV = (ulong)0x1UL;
        public static readonly ulong NFT_QUOTA_F_DEPLETED = (ulong)0x2UL;
        public static readonly ulong NFTA_QUOTA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_QUOTA_BYTES = (ulong)0x1UL;
        public static readonly ulong NFTA_QUOTA_FLAGS = (ulong)0x2UL;
        public static readonly ulong NFTA_QUOTA_PAD = (ulong)0x3UL;
        public static readonly ulong NFTA_QUOTA_CONSUMED = (ulong)0x4UL;
        public static readonly ulong NFT_REJECT_ICMP_UNREACH = (ulong)0x0UL;
        public static readonly ulong NFT_REJECT_TCP_RST = (ulong)0x1UL;
        public static readonly ulong NFT_REJECT_ICMPX_UNREACH = (ulong)0x2UL;
        public static readonly ulong NFT_REJECT_ICMPX_NO_ROUTE = (ulong)0x0UL;
        public static readonly ulong NFT_REJECT_ICMPX_PORT_UNREACH = (ulong)0x1UL;
        public static readonly ulong NFT_REJECT_ICMPX_HOST_UNREACH = (ulong)0x2UL;
        public static readonly ulong NFT_REJECT_ICMPX_ADMIN_PROHIBITED = (ulong)0x3UL;
        public static readonly ulong NFTA_REJECT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_REJECT_TYPE = (ulong)0x1UL;
        public static readonly ulong NFTA_REJECT_ICMP_CODE = (ulong)0x2UL;
        public static readonly ulong NFT_NAT_SNAT = (ulong)0x0UL;
        public static readonly ulong NFT_NAT_DNAT = (ulong)0x1UL;
        public static readonly ulong NFTA_NAT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_NAT_TYPE = (ulong)0x1UL;
        public static readonly ulong NFTA_NAT_FAMILY = (ulong)0x2UL;
        public static readonly ulong NFTA_NAT_REG_ADDR_MIN = (ulong)0x3UL;
        public static readonly ulong NFTA_NAT_REG_ADDR_MAX = (ulong)0x4UL;
        public static readonly ulong NFTA_NAT_REG_PROTO_MIN = (ulong)0x5UL;
        public static readonly ulong NFTA_NAT_REG_PROTO_MAX = (ulong)0x6UL;
        public static readonly ulong NFTA_NAT_FLAGS = (ulong)0x7UL;
        public static readonly ulong NFTA_MASQ_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_MASQ_FLAGS = (ulong)0x1UL;
        public static readonly ulong NFTA_MASQ_REG_PROTO_MIN = (ulong)0x2UL;
        public static readonly ulong NFTA_MASQ_REG_PROTO_MAX = (ulong)0x3UL;
        public static readonly ulong NFTA_REDIR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_REDIR_REG_PROTO_MIN = (ulong)0x1UL;
        public static readonly ulong NFTA_REDIR_REG_PROTO_MAX = (ulong)0x2UL;
        public static readonly ulong NFTA_REDIR_FLAGS = (ulong)0x3UL;
        public static readonly ulong NFTA_DUP_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_DUP_SREG_ADDR = (ulong)0x1UL;
        public static readonly ulong NFTA_DUP_SREG_DEV = (ulong)0x2UL;
        public static readonly ulong NFTA_FWD_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_FWD_SREG_DEV = (ulong)0x1UL;
        public static readonly ulong NFTA_OBJREF_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_OBJREF_IMM_TYPE = (ulong)0x1UL;
        public static readonly ulong NFTA_OBJREF_IMM_NAME = (ulong)0x2UL;
        public static readonly ulong NFTA_OBJREF_SET_SREG = (ulong)0x3UL;
        public static readonly ulong NFTA_OBJREF_SET_NAME = (ulong)0x4UL;
        public static readonly ulong NFTA_OBJREF_SET_ID = (ulong)0x5UL;
        public static readonly ulong NFTA_GEN_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_GEN_ID = (ulong)0x1UL;
        public static readonly ulong NFTA_GEN_PROC_PID = (ulong)0x2UL;
        public static readonly ulong NFTA_GEN_PROC_NAME = (ulong)0x3UL;
        public static readonly ulong NFTA_FIB_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_FIB_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_FIB_RESULT = (ulong)0x2UL;
        public static readonly ulong NFTA_FIB_FLAGS = (ulong)0x3UL;
        public static readonly ulong NFT_FIB_RESULT_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFT_FIB_RESULT_OIF = (ulong)0x1UL;
        public static readonly ulong NFT_FIB_RESULT_OIFNAME = (ulong)0x2UL;
        public static readonly ulong NFT_FIB_RESULT_ADDRTYPE = (ulong)0x3UL;
        public static readonly ulong NFTA_FIB_F_SADDR = (ulong)0x1UL;
        public static readonly ulong NFTA_FIB_F_DADDR = (ulong)0x2UL;
        public static readonly ulong NFTA_FIB_F_MARK = (ulong)0x4UL;
        public static readonly ulong NFTA_FIB_F_IIF = (ulong)0x8UL;
        public static readonly ulong NFTA_FIB_F_OIF = (ulong)0x10UL;
        public static readonly ulong NFTA_FIB_F_PRESENT = (ulong)0x20UL;
        public static readonly ulong NFTA_CT_HELPER_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_CT_HELPER_NAME = (ulong)0x1UL;
        public static readonly ulong NFTA_CT_HELPER_L3PROTO = (ulong)0x2UL;
        public static readonly ulong NFTA_CT_HELPER_L4PROTO = (ulong)0x3UL;
        public static readonly ulong NFTA_OBJ_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_OBJ_TABLE = (ulong)0x1UL;
        public static readonly ulong NFTA_OBJ_NAME = (ulong)0x2UL;
        public static readonly ulong NFTA_OBJ_TYPE = (ulong)0x3UL;
        public static readonly ulong NFTA_OBJ_DATA = (ulong)0x4UL;
        public static readonly ulong NFTA_OBJ_USE = (ulong)0x5UL;
        public static readonly ulong NFTA_TRACE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_TRACE_TABLE = (ulong)0x1UL;
        public static readonly ulong NFTA_TRACE_CHAIN = (ulong)0x2UL;
        public static readonly ulong NFTA_TRACE_RULE_HANDLE = (ulong)0x3UL;
        public static readonly ulong NFTA_TRACE_TYPE = (ulong)0x4UL;
        public static readonly ulong NFTA_TRACE_VERDICT = (ulong)0x5UL;
        public static readonly ulong NFTA_TRACE_ID = (ulong)0x6UL;
        public static readonly ulong NFTA_TRACE_LL_HEADER = (ulong)0x7UL;
        public static readonly ulong NFTA_TRACE_NETWORK_HEADER = (ulong)0x8UL;
        public static readonly ulong NFTA_TRACE_TRANSPORT_HEADER = (ulong)0x9UL;
        public static readonly ulong NFTA_TRACE_IIF = (ulong)0xaUL;
        public static readonly ulong NFTA_TRACE_IIFTYPE = (ulong)0xbUL;
        public static readonly ulong NFTA_TRACE_OIF = (ulong)0xcUL;
        public static readonly ulong NFTA_TRACE_OIFTYPE = (ulong)0xdUL;
        public static readonly ulong NFTA_TRACE_MARK = (ulong)0xeUL;
        public static readonly ulong NFTA_TRACE_NFPROTO = (ulong)0xfUL;
        public static readonly ulong NFTA_TRACE_POLICY = (ulong)0x10UL;
        public static readonly ulong NFTA_TRACE_PAD = (ulong)0x11UL;
        public static readonly ulong NFT_TRACETYPE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFT_TRACETYPE_POLICY = (ulong)0x1UL;
        public static readonly ulong NFT_TRACETYPE_RETURN = (ulong)0x2UL;
        public static readonly ulong NFT_TRACETYPE_RULE = (ulong)0x3UL;
        public static readonly ulong NFTA_NG_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NFTA_NG_DREG = (ulong)0x1UL;
        public static readonly ulong NFTA_NG_MODULUS = (ulong)0x2UL;
        public static readonly ulong NFTA_NG_TYPE = (ulong)0x3UL;
        public static readonly ulong NFTA_NG_OFFSET = (ulong)0x4UL;
        public static readonly ulong NFT_NG_INCREMENTAL = (ulong)0x0UL;
        public static readonly ulong NFT_NG_RANDOM = (ulong)0x1UL;


        public partial struct RTCTime
        {
            public int Sec;
            public int Min;
            public int Hour;
            public int Mday;
            public int Mon;
            public int Year;
            public int Wday;
            public int Yday;
            public int Isdst;
        }

        public partial struct RTCWkAlrm
        {
            public byte Enabled;
            public byte Pending;
            public RTCTime Time;
        }

        public partial struct BlkpgIoctlArg
        {
            public int Op;
            public int Flags;
            public int Datalen;
            public ptr<byte> Data;
        }

        public static readonly ulong BLKPG_ADD_PARTITION = (ulong)0x1UL;
        public static readonly ulong BLKPG_DEL_PARTITION = (ulong)0x2UL;
        public static readonly ulong BLKPG_RESIZE_PARTITION = (ulong)0x3UL;


        public static readonly ulong NETNSA_NONE = (ulong)0x0UL;
        public static readonly ulong NETNSA_NSID = (ulong)0x1UL;
        public static readonly ulong NETNSA_PID = (ulong)0x2UL;
        public static readonly ulong NETNSA_FD = (ulong)0x3UL;


        public partial struct XDPRingOffset
        {
            public ulong Producer;
            public ulong Consumer;
            public ulong Desc;
            public ulong Flags;
        }

        public partial struct XDPMmapOffsets
        {
            public XDPRingOffset Rx;
            public XDPRingOffset Tx;
            public XDPRingOffset Fr;
            public XDPRingOffset Cr;
        }

        public partial struct XDPStatistics
        {
            public ulong Rx_dropped;
            public ulong Rx_invalid_descs;
            public ulong Tx_invalid_descs;
        }

        public partial struct XDPDesc
        {
            public ulong Addr;
            public uint Len;
            public uint Options;
        }

        public static readonly ulong NCSI_CMD_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NCSI_CMD_PKG_INFO = (ulong)0x1UL;
        public static readonly ulong NCSI_CMD_SET_INTERFACE = (ulong)0x2UL;
        public static readonly ulong NCSI_CMD_CLEAR_INTERFACE = (ulong)0x3UL;
        public static readonly ulong NCSI_ATTR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NCSI_ATTR_IFINDEX = (ulong)0x1UL;
        public static readonly ulong NCSI_ATTR_PACKAGE_LIST = (ulong)0x2UL;
        public static readonly ulong NCSI_ATTR_PACKAGE_ID = (ulong)0x3UL;
        public static readonly ulong NCSI_ATTR_CHANNEL_ID = (ulong)0x4UL;
        public static readonly ulong NCSI_PKG_ATTR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NCSI_PKG_ATTR = (ulong)0x1UL;
        public static readonly ulong NCSI_PKG_ATTR_ID = (ulong)0x2UL;
        public static readonly ulong NCSI_PKG_ATTR_FORCED = (ulong)0x3UL;
        public static readonly ulong NCSI_PKG_ATTR_CHANNEL_LIST = (ulong)0x4UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NCSI_CHANNEL_ATTR = (ulong)0x1UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_ID = (ulong)0x2UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_VERSION_MAJOR = (ulong)0x3UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_VERSION_MINOR = (ulong)0x4UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_VERSION_STR = (ulong)0x5UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_LINK_STATE = (ulong)0x6UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_ACTIVE = (ulong)0x7UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_FORCED = (ulong)0x8UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_VLAN_LIST = (ulong)0x9UL;
        public static readonly ulong NCSI_CHANNEL_ATTR_VLAN_ID = (ulong)0xaUL;


        public partial struct ScmTimestamping
        {
            public array<Timespec> Ts;
        }

        public static readonly ulong SOF_TIMESTAMPING_TX_HARDWARE = (ulong)0x1UL;
        public static readonly ulong SOF_TIMESTAMPING_TX_SOFTWARE = (ulong)0x2UL;
        public static readonly ulong SOF_TIMESTAMPING_RX_HARDWARE = (ulong)0x4UL;
        public static readonly ulong SOF_TIMESTAMPING_RX_SOFTWARE = (ulong)0x8UL;
        public static readonly ulong SOF_TIMESTAMPING_SOFTWARE = (ulong)0x10UL;
        public static readonly ulong SOF_TIMESTAMPING_SYS_HARDWARE = (ulong)0x20UL;
        public static readonly ulong SOF_TIMESTAMPING_RAW_HARDWARE = (ulong)0x40UL;
        public static readonly ulong SOF_TIMESTAMPING_OPT_ID = (ulong)0x80UL;
        public static readonly ulong SOF_TIMESTAMPING_TX_SCHED = (ulong)0x100UL;
        public static readonly ulong SOF_TIMESTAMPING_TX_ACK = (ulong)0x200UL;
        public static readonly ulong SOF_TIMESTAMPING_OPT_CMSG = (ulong)0x400UL;
        public static readonly ulong SOF_TIMESTAMPING_OPT_TSONLY = (ulong)0x800UL;
        public static readonly ulong SOF_TIMESTAMPING_OPT_STATS = (ulong)0x1000UL;
        public static readonly ulong SOF_TIMESTAMPING_OPT_PKTINFO = (ulong)0x2000UL;
        public static readonly ulong SOF_TIMESTAMPING_OPT_TX_SWHW = (ulong)0x4000UL;

        public static readonly ulong SOF_TIMESTAMPING_LAST = (ulong)0x4000UL;
        public static readonly ulong SOF_TIMESTAMPING_MASK = (ulong)0x7fffUL;

        public static readonly ulong SCM_TSTAMP_SND = (ulong)0x0UL;
        public static readonly ulong SCM_TSTAMP_SCHED = (ulong)0x1UL;
        public static readonly ulong SCM_TSTAMP_ACK = (ulong)0x2UL;


        public partial struct SockExtendedErr
        {
            public uint Errno;
            public byte Origin;
            public byte Type;
            public byte Code;
            public byte Pad;
            public uint Info;
            public uint Data;
        }

        public partial struct FanotifyEventMetadata
        {
            public uint Event_len;
            public byte Vers;
            public byte Reserved;
            public ushort Metadata_len;
            public ulong Mask;
            public int Fd;
            public int Pid;
        }

        public partial struct FanotifyResponse
        {
            public int Fd;
            public uint Response;
        }

        public static readonly ulong CRYPTO_MSG_BASE = (ulong)0x10UL;
        public static readonly ulong CRYPTO_MSG_NEWALG = (ulong)0x10UL;
        public static readonly ulong CRYPTO_MSG_DELALG = (ulong)0x11UL;
        public static readonly ulong CRYPTO_MSG_UPDATEALG = (ulong)0x12UL;
        public static readonly ulong CRYPTO_MSG_GETALG = (ulong)0x13UL;
        public static readonly ulong CRYPTO_MSG_DELRNG = (ulong)0x14UL;
        public static readonly ulong CRYPTO_MSG_GETSTAT = (ulong)0x15UL;


        public static readonly ulong CRYPTOCFGA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong CRYPTOCFGA_PRIORITY_VAL = (ulong)0x1UL;
        public static readonly ulong CRYPTOCFGA_REPORT_LARVAL = (ulong)0x2UL;
        public static readonly ulong CRYPTOCFGA_REPORT_HASH = (ulong)0x3UL;
        public static readonly ulong CRYPTOCFGA_REPORT_BLKCIPHER = (ulong)0x4UL;
        public static readonly ulong CRYPTOCFGA_REPORT_AEAD = (ulong)0x5UL;
        public static readonly ulong CRYPTOCFGA_REPORT_COMPRESS = (ulong)0x6UL;
        public static readonly ulong CRYPTOCFGA_REPORT_RNG = (ulong)0x7UL;
        public static readonly ulong CRYPTOCFGA_REPORT_CIPHER = (ulong)0x8UL;
        public static readonly ulong CRYPTOCFGA_REPORT_AKCIPHER = (ulong)0x9UL;
        public static readonly ulong CRYPTOCFGA_REPORT_KPP = (ulong)0xaUL;
        public static readonly ulong CRYPTOCFGA_REPORT_ACOMP = (ulong)0xbUL;
        public static readonly ulong CRYPTOCFGA_STAT_LARVAL = (ulong)0xcUL;
        public static readonly ulong CRYPTOCFGA_STAT_HASH = (ulong)0xdUL;
        public static readonly ulong CRYPTOCFGA_STAT_BLKCIPHER = (ulong)0xeUL;
        public static readonly ulong CRYPTOCFGA_STAT_AEAD = (ulong)0xfUL;
        public static readonly ulong CRYPTOCFGA_STAT_COMPRESS = (ulong)0x10UL;
        public static readonly ulong CRYPTOCFGA_STAT_RNG = (ulong)0x11UL;
        public static readonly ulong CRYPTOCFGA_STAT_CIPHER = (ulong)0x12UL;
        public static readonly ulong CRYPTOCFGA_STAT_AKCIPHER = (ulong)0x13UL;
        public static readonly ulong CRYPTOCFGA_STAT_KPP = (ulong)0x14UL;
        public static readonly ulong CRYPTOCFGA_STAT_ACOMP = (ulong)0x15UL;


        public static readonly ulong BPF_REG_0 = (ulong)0x0UL;
        public static readonly ulong BPF_REG_1 = (ulong)0x1UL;
        public static readonly ulong BPF_REG_2 = (ulong)0x2UL;
        public static readonly ulong BPF_REG_3 = (ulong)0x3UL;
        public static readonly ulong BPF_REG_4 = (ulong)0x4UL;
        public static readonly ulong BPF_REG_5 = (ulong)0x5UL;
        public static readonly ulong BPF_REG_6 = (ulong)0x6UL;
        public static readonly ulong BPF_REG_7 = (ulong)0x7UL;
        public static readonly ulong BPF_REG_8 = (ulong)0x8UL;
        public static readonly ulong BPF_REG_9 = (ulong)0x9UL;
        public static readonly ulong BPF_REG_10 = (ulong)0xaUL;
        public static readonly ulong BPF_MAP_CREATE = (ulong)0x0UL;
        public static readonly ulong BPF_MAP_LOOKUP_ELEM = (ulong)0x1UL;
        public static readonly ulong BPF_MAP_UPDATE_ELEM = (ulong)0x2UL;
        public static readonly ulong BPF_MAP_DELETE_ELEM = (ulong)0x3UL;
        public static readonly ulong BPF_MAP_GET_NEXT_KEY = (ulong)0x4UL;
        public static readonly ulong BPF_PROG_LOAD = (ulong)0x5UL;
        public static readonly ulong BPF_OBJ_PIN = (ulong)0x6UL;
        public static readonly ulong BPF_OBJ_GET = (ulong)0x7UL;
        public static readonly ulong BPF_PROG_ATTACH = (ulong)0x8UL;
        public static readonly ulong BPF_PROG_DETACH = (ulong)0x9UL;
        public static readonly ulong BPF_PROG_TEST_RUN = (ulong)0xaUL;
        public static readonly ulong BPF_PROG_GET_NEXT_ID = (ulong)0xbUL;
        public static readonly ulong BPF_MAP_GET_NEXT_ID = (ulong)0xcUL;
        public static readonly ulong BPF_PROG_GET_FD_BY_ID = (ulong)0xdUL;
        public static readonly ulong BPF_MAP_GET_FD_BY_ID = (ulong)0xeUL;
        public static readonly ulong BPF_OBJ_GET_INFO_BY_FD = (ulong)0xfUL;
        public static readonly ulong BPF_PROG_QUERY = (ulong)0x10UL;
        public static readonly ulong BPF_RAW_TRACEPOINT_OPEN = (ulong)0x11UL;
        public static readonly ulong BPF_BTF_LOAD = (ulong)0x12UL;
        public static readonly ulong BPF_BTF_GET_FD_BY_ID = (ulong)0x13UL;
        public static readonly ulong BPF_TASK_FD_QUERY = (ulong)0x14UL;
        public static readonly ulong BPF_MAP_LOOKUP_AND_DELETE_ELEM = (ulong)0x15UL;
        public static readonly ulong BPF_MAP_FREEZE = (ulong)0x16UL;
        public static readonly ulong BPF_BTF_GET_NEXT_ID = (ulong)0x17UL;
        public static readonly ulong BPF_MAP_TYPE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong BPF_MAP_TYPE_HASH = (ulong)0x1UL;
        public static readonly ulong BPF_MAP_TYPE_ARRAY = (ulong)0x2UL;
        public static readonly ulong BPF_MAP_TYPE_PROG_ARRAY = (ulong)0x3UL;
        public static readonly ulong BPF_MAP_TYPE_PERF_EVENT_ARRAY = (ulong)0x4UL;
        public static readonly ulong BPF_MAP_TYPE_PERCPU_HASH = (ulong)0x5UL;
        public static readonly ulong BPF_MAP_TYPE_PERCPU_ARRAY = (ulong)0x6UL;
        public static readonly ulong BPF_MAP_TYPE_STACK_TRACE = (ulong)0x7UL;
        public static readonly ulong BPF_MAP_TYPE_CGROUP_ARRAY = (ulong)0x8UL;
        public static readonly ulong BPF_MAP_TYPE_LRU_HASH = (ulong)0x9UL;
        public static readonly ulong BPF_MAP_TYPE_LRU_PERCPU_HASH = (ulong)0xaUL;
        public static readonly ulong BPF_MAP_TYPE_LPM_TRIE = (ulong)0xbUL;
        public static readonly ulong BPF_MAP_TYPE_ARRAY_OF_MAPS = (ulong)0xcUL;
        public static readonly ulong BPF_MAP_TYPE_HASH_OF_MAPS = (ulong)0xdUL;
        public static readonly ulong BPF_MAP_TYPE_DEVMAP = (ulong)0xeUL;
        public static readonly ulong BPF_MAP_TYPE_SOCKMAP = (ulong)0xfUL;
        public static readonly ulong BPF_MAP_TYPE_CPUMAP = (ulong)0x10UL;
        public static readonly ulong BPF_MAP_TYPE_XSKMAP = (ulong)0x11UL;
        public static readonly ulong BPF_MAP_TYPE_SOCKHASH = (ulong)0x12UL;
        public static readonly ulong BPF_MAP_TYPE_CGROUP_STORAGE = (ulong)0x13UL;
        public static readonly ulong BPF_MAP_TYPE_REUSEPORT_SOCKARRAY = (ulong)0x14UL;
        public static readonly ulong BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE = (ulong)0x15UL;
        public static readonly ulong BPF_MAP_TYPE_QUEUE = (ulong)0x16UL;
        public static readonly ulong BPF_MAP_TYPE_STACK = (ulong)0x17UL;
        public static readonly ulong BPF_MAP_TYPE_SK_STORAGE = (ulong)0x18UL;
        public static readonly ulong BPF_MAP_TYPE_DEVMAP_HASH = (ulong)0x19UL;
        public static readonly ulong BPF_PROG_TYPE_UNSPEC = (ulong)0x0UL;
        public static readonly ulong BPF_PROG_TYPE_SOCKET_FILTER = (ulong)0x1UL;
        public static readonly ulong BPF_PROG_TYPE_KPROBE = (ulong)0x2UL;
        public static readonly ulong BPF_PROG_TYPE_SCHED_CLS = (ulong)0x3UL;
        public static readonly ulong BPF_PROG_TYPE_SCHED_ACT = (ulong)0x4UL;
        public static readonly ulong BPF_PROG_TYPE_TRACEPOINT = (ulong)0x5UL;
        public static readonly ulong BPF_PROG_TYPE_XDP = (ulong)0x6UL;
        public static readonly ulong BPF_PROG_TYPE_PERF_EVENT = (ulong)0x7UL;
        public static readonly ulong BPF_PROG_TYPE_CGROUP_SKB = (ulong)0x8UL;
        public static readonly ulong BPF_PROG_TYPE_CGROUP_SOCK = (ulong)0x9UL;
        public static readonly ulong BPF_PROG_TYPE_LWT_IN = (ulong)0xaUL;
        public static readonly ulong BPF_PROG_TYPE_LWT_OUT = (ulong)0xbUL;
        public static readonly ulong BPF_PROG_TYPE_LWT_XMIT = (ulong)0xcUL;
        public static readonly ulong BPF_PROG_TYPE_SOCK_OPS = (ulong)0xdUL;
        public static readonly ulong BPF_PROG_TYPE_SK_SKB = (ulong)0xeUL;
        public static readonly ulong BPF_PROG_TYPE_CGROUP_DEVICE = (ulong)0xfUL;
        public static readonly ulong BPF_PROG_TYPE_SK_MSG = (ulong)0x10UL;
        public static readonly ulong BPF_PROG_TYPE_RAW_TRACEPOINT = (ulong)0x11UL;
        public static readonly ulong BPF_PROG_TYPE_CGROUP_SOCK_ADDR = (ulong)0x12UL;
        public static readonly ulong BPF_PROG_TYPE_LWT_SEG6LOCAL = (ulong)0x13UL;
        public static readonly ulong BPF_PROG_TYPE_LIRC_MODE2 = (ulong)0x14UL;
        public static readonly ulong BPF_PROG_TYPE_SK_REUSEPORT = (ulong)0x15UL;
        public static readonly ulong BPF_PROG_TYPE_FLOW_DISSECTOR = (ulong)0x16UL;
        public static readonly ulong BPF_PROG_TYPE_CGROUP_SYSCTL = (ulong)0x17UL;
        public static readonly ulong BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE = (ulong)0x18UL;
        public static readonly ulong BPF_PROG_TYPE_CGROUP_SOCKOPT = (ulong)0x19UL;
        public static readonly ulong BPF_PROG_TYPE_TRACING = (ulong)0x1aUL;
        public static readonly ulong BPF_CGROUP_INET_INGRESS = (ulong)0x0UL;
        public static readonly ulong BPF_CGROUP_INET_EGRESS = (ulong)0x1UL;
        public static readonly ulong BPF_CGROUP_INET_SOCK_CREATE = (ulong)0x2UL;
        public static readonly ulong BPF_CGROUP_SOCK_OPS = (ulong)0x3UL;
        public static readonly ulong BPF_SK_SKB_STREAM_PARSER = (ulong)0x4UL;
        public static readonly ulong BPF_SK_SKB_STREAM_VERDICT = (ulong)0x5UL;
        public static readonly ulong BPF_CGROUP_DEVICE = (ulong)0x6UL;
        public static readonly ulong BPF_SK_MSG_VERDICT = (ulong)0x7UL;
        public static readonly ulong BPF_CGROUP_INET4_BIND = (ulong)0x8UL;
        public static readonly ulong BPF_CGROUP_INET6_BIND = (ulong)0x9UL;
        public static readonly ulong BPF_CGROUP_INET4_CONNECT = (ulong)0xaUL;
        public static readonly ulong BPF_CGROUP_INET6_CONNECT = (ulong)0xbUL;
        public static readonly ulong BPF_CGROUP_INET4_POST_BIND = (ulong)0xcUL;
        public static readonly ulong BPF_CGROUP_INET6_POST_BIND = (ulong)0xdUL;
        public static readonly ulong BPF_CGROUP_UDP4_SENDMSG = (ulong)0xeUL;
        public static readonly ulong BPF_CGROUP_UDP6_SENDMSG = (ulong)0xfUL;
        public static readonly ulong BPF_LIRC_MODE2 = (ulong)0x10UL;
        public static readonly ulong BPF_FLOW_DISSECTOR = (ulong)0x11UL;
        public static readonly ulong BPF_CGROUP_SYSCTL = (ulong)0x12UL;
        public static readonly ulong BPF_CGROUP_UDP4_RECVMSG = (ulong)0x13UL;
        public static readonly ulong BPF_CGROUP_UDP6_RECVMSG = (ulong)0x14UL;
        public static readonly ulong BPF_CGROUP_GETSOCKOPT = (ulong)0x15UL;
        public static readonly ulong BPF_CGROUP_SETSOCKOPT = (ulong)0x16UL;
        public static readonly ulong BPF_TRACE_RAW_TP = (ulong)0x17UL;
        public static readonly ulong BPF_TRACE_FENTRY = (ulong)0x18UL;
        public static readonly ulong BPF_TRACE_FEXIT = (ulong)0x19UL;
        public static readonly ulong BPF_STACK_BUILD_ID_EMPTY = (ulong)0x0UL;
        public static readonly ulong BPF_STACK_BUILD_ID_VALID = (ulong)0x1UL;
        public static readonly ulong BPF_STACK_BUILD_ID_IP = (ulong)0x2UL;
        public static readonly ulong BPF_ADJ_ROOM_NET = (ulong)0x0UL;
        public static readonly ulong BPF_ADJ_ROOM_MAC = (ulong)0x1UL;
        public static readonly ulong BPF_HDR_START_MAC = (ulong)0x0UL;
        public static readonly ulong BPF_HDR_START_NET = (ulong)0x1UL;
        public static readonly ulong BPF_LWT_ENCAP_SEG6 = (ulong)0x0UL;
        public static readonly ulong BPF_LWT_ENCAP_SEG6_INLINE = (ulong)0x1UL;
        public static readonly ulong BPF_LWT_ENCAP_IP = (ulong)0x2UL;
        public static readonly ulong BPF_OK = (ulong)0x0UL;
        public static readonly ulong BPF_DROP = (ulong)0x2UL;
        public static readonly ulong BPF_REDIRECT = (ulong)0x7UL;
        public static readonly ulong BPF_LWT_REROUTE = (ulong)0x80UL;
        public static readonly ulong BPF_SOCK_OPS_VOID = (ulong)0x0UL;
        public static readonly ulong BPF_SOCK_OPS_TIMEOUT_INIT = (ulong)0x1UL;
        public static readonly ulong BPF_SOCK_OPS_RWND_INIT = (ulong)0x2UL;
        public static readonly ulong BPF_SOCK_OPS_TCP_CONNECT_CB = (ulong)0x3UL;
        public static readonly ulong BPF_SOCK_OPS_ACTIVE_ESTABLISHED_CB = (ulong)0x4UL;
        public static readonly ulong BPF_SOCK_OPS_PASSIVE_ESTABLISHED_CB = (ulong)0x5UL;
        public static readonly ulong BPF_SOCK_OPS_NEEDS_ECN = (ulong)0x6UL;
        public static readonly ulong BPF_SOCK_OPS_BASE_RTT = (ulong)0x7UL;
        public static readonly ulong BPF_SOCK_OPS_RTO_CB = (ulong)0x8UL;
        public static readonly ulong BPF_SOCK_OPS_RETRANS_CB = (ulong)0x9UL;
        public static readonly ulong BPF_SOCK_OPS_STATE_CB = (ulong)0xaUL;
        public static readonly ulong BPF_SOCK_OPS_TCP_LISTEN_CB = (ulong)0xbUL;
        public static readonly ulong BPF_SOCK_OPS_RTT_CB = (ulong)0xcUL;
        public static readonly ulong BPF_TCP_ESTABLISHED = (ulong)0x1UL;
        public static readonly ulong BPF_TCP_SYN_SENT = (ulong)0x2UL;
        public static readonly ulong BPF_TCP_SYN_RECV = (ulong)0x3UL;
        public static readonly ulong BPF_TCP_FIN_WAIT1 = (ulong)0x4UL;
        public static readonly ulong BPF_TCP_FIN_WAIT2 = (ulong)0x5UL;
        public static readonly ulong BPF_TCP_TIME_WAIT = (ulong)0x6UL;
        public static readonly ulong BPF_TCP_CLOSE = (ulong)0x7UL;
        public static readonly ulong BPF_TCP_CLOSE_WAIT = (ulong)0x8UL;
        public static readonly ulong BPF_TCP_LAST_ACK = (ulong)0x9UL;
        public static readonly ulong BPF_TCP_LISTEN = (ulong)0xaUL;
        public static readonly ulong BPF_TCP_CLOSING = (ulong)0xbUL;
        public static readonly ulong BPF_TCP_NEW_SYN_RECV = (ulong)0xcUL;
        public static readonly ulong BPF_TCP_MAX_STATES = (ulong)0xdUL;
        public static readonly ulong BPF_FIB_LKUP_RET_SUCCESS = (ulong)0x0UL;
        public static readonly ulong BPF_FIB_LKUP_RET_BLACKHOLE = (ulong)0x1UL;
        public static readonly ulong BPF_FIB_LKUP_RET_UNREACHABLE = (ulong)0x2UL;
        public static readonly ulong BPF_FIB_LKUP_RET_PROHIBIT = (ulong)0x3UL;
        public static readonly ulong BPF_FIB_LKUP_RET_NOT_FWDED = (ulong)0x4UL;
        public static readonly ulong BPF_FIB_LKUP_RET_FWD_DISABLED = (ulong)0x5UL;
        public static readonly ulong BPF_FIB_LKUP_RET_UNSUPP_LWT = (ulong)0x6UL;
        public static readonly ulong BPF_FIB_LKUP_RET_NO_NEIGH = (ulong)0x7UL;
        public static readonly ulong BPF_FIB_LKUP_RET_FRAG_NEEDED = (ulong)0x8UL;
        public static readonly ulong BPF_FD_TYPE_RAW_TRACEPOINT = (ulong)0x0UL;
        public static readonly ulong BPF_FD_TYPE_TRACEPOINT = (ulong)0x1UL;
        public static readonly ulong BPF_FD_TYPE_KPROBE = (ulong)0x2UL;
        public static readonly ulong BPF_FD_TYPE_KRETPROBE = (ulong)0x3UL;
        public static readonly ulong BPF_FD_TYPE_UPROBE = (ulong)0x4UL;
        public static readonly ulong BPF_FD_TYPE_URETPROBE = (ulong)0x5UL;


        public static readonly ulong RTNLGRP_NONE = (ulong)0x0UL;
        public static readonly ulong RTNLGRP_LINK = (ulong)0x1UL;
        public static readonly ulong RTNLGRP_NOTIFY = (ulong)0x2UL;
        public static readonly ulong RTNLGRP_NEIGH = (ulong)0x3UL;
        public static readonly ulong RTNLGRP_TC = (ulong)0x4UL;
        public static readonly ulong RTNLGRP_IPV4_IFADDR = (ulong)0x5UL;
        public static readonly ulong RTNLGRP_IPV4_MROUTE = (ulong)0x6UL;
        public static readonly ulong RTNLGRP_IPV4_ROUTE = (ulong)0x7UL;
        public static readonly ulong RTNLGRP_IPV4_RULE = (ulong)0x8UL;
        public static readonly ulong RTNLGRP_IPV6_IFADDR = (ulong)0x9UL;
        public static readonly ulong RTNLGRP_IPV6_MROUTE = (ulong)0xaUL;
        public static readonly ulong RTNLGRP_IPV6_ROUTE = (ulong)0xbUL;
        public static readonly ulong RTNLGRP_IPV6_IFINFO = (ulong)0xcUL;
        public static readonly ulong RTNLGRP_DECnet_IFADDR = (ulong)0xdUL;
        public static readonly ulong RTNLGRP_NOP2 = (ulong)0xeUL;
        public static readonly ulong RTNLGRP_DECnet_ROUTE = (ulong)0xfUL;
        public static readonly ulong RTNLGRP_DECnet_RULE = (ulong)0x10UL;
        public static readonly ulong RTNLGRP_NOP4 = (ulong)0x11UL;
        public static readonly ulong RTNLGRP_IPV6_PREFIX = (ulong)0x12UL;
        public static readonly ulong RTNLGRP_IPV6_RULE = (ulong)0x13UL;
        public static readonly ulong RTNLGRP_ND_USEROPT = (ulong)0x14UL;
        public static readonly ulong RTNLGRP_PHONET_IFADDR = (ulong)0x15UL;
        public static readonly ulong RTNLGRP_PHONET_ROUTE = (ulong)0x16UL;
        public static readonly ulong RTNLGRP_DCB = (ulong)0x17UL;
        public static readonly ulong RTNLGRP_IPV4_NETCONF = (ulong)0x18UL;
        public static readonly ulong RTNLGRP_IPV6_NETCONF = (ulong)0x19UL;
        public static readonly ulong RTNLGRP_MDB = (ulong)0x1aUL;
        public static readonly ulong RTNLGRP_MPLS_ROUTE = (ulong)0x1bUL;
        public static readonly ulong RTNLGRP_NSID = (ulong)0x1cUL;
        public static readonly ulong RTNLGRP_MPLS_NETCONF = (ulong)0x1dUL;
        public static readonly ulong RTNLGRP_IPV4_MROUTE_R = (ulong)0x1eUL;
        public static readonly ulong RTNLGRP_IPV6_MROUTE_R = (ulong)0x1fUL;
        public static readonly ulong RTNLGRP_NEXTHOP = (ulong)0x20UL;


        public partial struct CapUserHeader
        {
            public uint Version;
            public int Pid;
        }

        public partial struct CapUserData
        {
            public uint Effective;
            public uint Permitted;
            public uint Inheritable;
        }

        public static readonly ulong LINUX_CAPABILITY_VERSION_1 = (ulong)0x19980330UL;
        public static readonly ulong LINUX_CAPABILITY_VERSION_2 = (ulong)0x20071026UL;
        public static readonly ulong LINUX_CAPABILITY_VERSION_3 = (ulong)0x20080522UL;


        public static readonly ulong LO_FLAGS_READ_ONLY = (ulong)0x1UL;
        public static readonly ulong LO_FLAGS_AUTOCLEAR = (ulong)0x4UL;
        public static readonly ulong LO_FLAGS_PARTSCAN = (ulong)0x8UL;
        public static readonly ulong LO_FLAGS_DIRECT_IO = (ulong)0x10UL;


        public partial struct LoopInfo64
        {
            public ulong Device;
            public ulong Inode;
            public ulong Rdevice;
            public ulong Offset;
            public ulong Sizelimit;
            public uint Number;
            public uint Encrypt_type;
            public uint Encrypt_key_size;
            public uint Flags;
            public array<byte> File_name;
            public array<byte> Crypt_name;
            public array<byte> Encrypt_key;
            public array<ulong> Init;
        }

        public partial struct TIPCSocketAddr
        {
            public uint Ref;
            public uint Node;
        }

        public partial struct TIPCServiceRange
        {
            public uint Type;
            public uint Lower;
            public uint Upper;
        }

        public partial struct TIPCServiceName
        {
            public uint Type;
            public uint Instance;
            public uint Domain;
        }

        public partial struct TIPCEvent
        {
            public uint Event;
            public uint Lower;
            public uint Upper;
            public TIPCSocketAddr Port;
            public TIPCSubscr S;
        }

        public partial struct TIPCGroupReq
        {
            public uint Type;
            public uint Instance;
            public uint Scope;
            public uint Flags;
        }

        public static readonly ulong TIPC_CLUSTER_SCOPE = (ulong)0x2UL;
        public static readonly ulong TIPC_NODE_SCOPE = (ulong)0x3UL;


        public static readonly long SYSLOG_ACTION_CLOSE = (long)0L;
        public static readonly long SYSLOG_ACTION_OPEN = (long)1L;
        public static readonly long SYSLOG_ACTION_READ = (long)2L;
        public static readonly long SYSLOG_ACTION_READ_ALL = (long)3L;
        public static readonly long SYSLOG_ACTION_READ_CLEAR = (long)4L;
        public static readonly long SYSLOG_ACTION_CLEAR = (long)5L;
        public static readonly long SYSLOG_ACTION_CONSOLE_OFF = (long)6L;
        public static readonly long SYSLOG_ACTION_CONSOLE_ON = (long)7L;
        public static readonly long SYSLOG_ACTION_CONSOLE_LEVEL = (long)8L;
        public static readonly long SYSLOG_ACTION_SIZE_UNREAD = (long)9L;
        public static readonly long SYSLOG_ACTION_SIZE_BUFFER = (long)10L;


        public static readonly ulong DEVLINK_CMD_UNSPEC = (ulong)0x0UL;
        public static readonly ulong DEVLINK_CMD_GET = (ulong)0x1UL;
        public static readonly ulong DEVLINK_CMD_SET = (ulong)0x2UL;
        public static readonly ulong DEVLINK_CMD_NEW = (ulong)0x3UL;
        public static readonly ulong DEVLINK_CMD_DEL = (ulong)0x4UL;
        public static readonly ulong DEVLINK_CMD_PORT_GET = (ulong)0x5UL;
        public static readonly ulong DEVLINK_CMD_PORT_SET = (ulong)0x6UL;
        public static readonly ulong DEVLINK_CMD_PORT_NEW = (ulong)0x7UL;
        public static readonly ulong DEVLINK_CMD_PORT_DEL = (ulong)0x8UL;
        public static readonly ulong DEVLINK_CMD_PORT_SPLIT = (ulong)0x9UL;
        public static readonly ulong DEVLINK_CMD_PORT_UNSPLIT = (ulong)0xaUL;
        public static readonly ulong DEVLINK_CMD_SB_GET = (ulong)0xbUL;
        public static readonly ulong DEVLINK_CMD_SB_SET = (ulong)0xcUL;
        public static readonly ulong DEVLINK_CMD_SB_NEW = (ulong)0xdUL;
        public static readonly ulong DEVLINK_CMD_SB_DEL = (ulong)0xeUL;
        public static readonly ulong DEVLINK_CMD_SB_POOL_GET = (ulong)0xfUL;
        public static readonly ulong DEVLINK_CMD_SB_POOL_SET = (ulong)0x10UL;
        public static readonly ulong DEVLINK_CMD_SB_POOL_NEW = (ulong)0x11UL;
        public static readonly ulong DEVLINK_CMD_SB_POOL_DEL = (ulong)0x12UL;
        public static readonly ulong DEVLINK_CMD_SB_PORT_POOL_GET = (ulong)0x13UL;
        public static readonly ulong DEVLINK_CMD_SB_PORT_POOL_SET = (ulong)0x14UL;
        public static readonly ulong DEVLINK_CMD_SB_PORT_POOL_NEW = (ulong)0x15UL;
        public static readonly ulong DEVLINK_CMD_SB_PORT_POOL_DEL = (ulong)0x16UL;
        public static readonly ulong DEVLINK_CMD_SB_TC_POOL_BIND_GET = (ulong)0x17UL;
        public static readonly ulong DEVLINK_CMD_SB_TC_POOL_BIND_SET = (ulong)0x18UL;
        public static readonly ulong DEVLINK_CMD_SB_TC_POOL_BIND_NEW = (ulong)0x19UL;
        public static readonly ulong DEVLINK_CMD_SB_TC_POOL_BIND_DEL = (ulong)0x1aUL;
        public static readonly ulong DEVLINK_CMD_SB_OCC_SNAPSHOT = (ulong)0x1bUL;
        public static readonly ulong DEVLINK_CMD_SB_OCC_MAX_CLEAR = (ulong)0x1cUL;
        public static readonly ulong DEVLINK_CMD_ESWITCH_GET = (ulong)0x1dUL;
        public static readonly ulong DEVLINK_CMD_ESWITCH_SET = (ulong)0x1eUL;
        public static readonly ulong DEVLINK_CMD_DPIPE_TABLE_GET = (ulong)0x1fUL;
        public static readonly ulong DEVLINK_CMD_DPIPE_ENTRIES_GET = (ulong)0x20UL;
        public static readonly ulong DEVLINK_CMD_DPIPE_HEADERS_GET = (ulong)0x21UL;
        public static readonly ulong DEVLINK_CMD_DPIPE_TABLE_COUNTERS_SET = (ulong)0x22UL;
        public static readonly ulong DEVLINK_CMD_MAX = (ulong)0x44UL;
        public static readonly ulong DEVLINK_PORT_TYPE_NOTSET = (ulong)0x0UL;
        public static readonly ulong DEVLINK_PORT_TYPE_AUTO = (ulong)0x1UL;
        public static readonly ulong DEVLINK_PORT_TYPE_ETH = (ulong)0x2UL;
        public static readonly ulong DEVLINK_PORT_TYPE_IB = (ulong)0x3UL;
        public static readonly ulong DEVLINK_SB_POOL_TYPE_INGRESS = (ulong)0x0UL;
        public static readonly ulong DEVLINK_SB_POOL_TYPE_EGRESS = (ulong)0x1UL;
        public static readonly ulong DEVLINK_SB_THRESHOLD_TYPE_STATIC = (ulong)0x0UL;
        public static readonly ulong DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC = (ulong)0x1UL;
        public static readonly ulong DEVLINK_ESWITCH_MODE_LEGACY = (ulong)0x0UL;
        public static readonly ulong DEVLINK_ESWITCH_MODE_SWITCHDEV = (ulong)0x1UL;
        public static readonly ulong DEVLINK_ESWITCH_INLINE_MODE_NONE = (ulong)0x0UL;
        public static readonly ulong DEVLINK_ESWITCH_INLINE_MODE_LINK = (ulong)0x1UL;
        public static readonly ulong DEVLINK_ESWITCH_INLINE_MODE_NETWORK = (ulong)0x2UL;
        public static readonly ulong DEVLINK_ESWITCH_INLINE_MODE_TRANSPORT = (ulong)0x3UL;
        public static readonly ulong DEVLINK_ESWITCH_ENCAP_MODE_NONE = (ulong)0x0UL;
        public static readonly ulong DEVLINK_ESWITCH_ENCAP_MODE_BASIC = (ulong)0x1UL;
        public static readonly ulong DEVLINK_ATTR_UNSPEC = (ulong)0x0UL;
        public static readonly ulong DEVLINK_ATTR_BUS_NAME = (ulong)0x1UL;
        public static readonly ulong DEVLINK_ATTR_DEV_NAME = (ulong)0x2UL;
        public static readonly ulong DEVLINK_ATTR_PORT_INDEX = (ulong)0x3UL;
        public static readonly ulong DEVLINK_ATTR_PORT_TYPE = (ulong)0x4UL;
        public static readonly ulong DEVLINK_ATTR_PORT_DESIRED_TYPE = (ulong)0x5UL;
        public static readonly ulong DEVLINK_ATTR_PORT_NETDEV_IFINDEX = (ulong)0x6UL;
        public static readonly ulong DEVLINK_ATTR_PORT_NETDEV_NAME = (ulong)0x7UL;
        public static readonly ulong DEVLINK_ATTR_PORT_IBDEV_NAME = (ulong)0x8UL;
        public static readonly ulong DEVLINK_ATTR_PORT_SPLIT_COUNT = (ulong)0x9UL;
        public static readonly ulong DEVLINK_ATTR_PORT_SPLIT_GROUP = (ulong)0xaUL;
        public static readonly ulong DEVLINK_ATTR_SB_INDEX = (ulong)0xbUL;
        public static readonly ulong DEVLINK_ATTR_SB_SIZE = (ulong)0xcUL;
        public static readonly ulong DEVLINK_ATTR_SB_INGRESS_POOL_COUNT = (ulong)0xdUL;
        public static readonly ulong DEVLINK_ATTR_SB_EGRESS_POOL_COUNT = (ulong)0xeUL;
        public static readonly ulong DEVLINK_ATTR_SB_INGRESS_TC_COUNT = (ulong)0xfUL;
        public static readonly ulong DEVLINK_ATTR_SB_EGRESS_TC_COUNT = (ulong)0x10UL;
        public static readonly ulong DEVLINK_ATTR_SB_POOL_INDEX = (ulong)0x11UL;
        public static readonly ulong DEVLINK_ATTR_SB_POOL_TYPE = (ulong)0x12UL;
        public static readonly ulong DEVLINK_ATTR_SB_POOL_SIZE = (ulong)0x13UL;
        public static readonly ulong DEVLINK_ATTR_SB_POOL_THRESHOLD_TYPE = (ulong)0x14UL;
        public static readonly ulong DEVLINK_ATTR_SB_THRESHOLD = (ulong)0x15UL;
        public static readonly ulong DEVLINK_ATTR_SB_TC_INDEX = (ulong)0x16UL;
        public static readonly ulong DEVLINK_ATTR_SB_OCC_CUR = (ulong)0x17UL;
        public static readonly ulong DEVLINK_ATTR_SB_OCC_MAX = (ulong)0x18UL;
        public static readonly ulong DEVLINK_ATTR_ESWITCH_MODE = (ulong)0x19UL;
        public static readonly ulong DEVLINK_ATTR_ESWITCH_INLINE_MODE = (ulong)0x1aUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_TABLES = (ulong)0x1bUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_TABLE = (ulong)0x1cUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_TABLE_NAME = (ulong)0x1dUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_TABLE_SIZE = (ulong)0x1eUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_TABLE_MATCHES = (ulong)0x1fUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_TABLE_ACTIONS = (ulong)0x20UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_TABLE_COUNTERS_ENABLED = (ulong)0x21UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ENTRIES = (ulong)0x22UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ENTRY = (ulong)0x23UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ENTRY_INDEX = (ulong)0x24UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ENTRY_MATCH_VALUES = (ulong)0x25UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ENTRY_ACTION_VALUES = (ulong)0x26UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ENTRY_COUNTER = (ulong)0x27UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_MATCH = (ulong)0x28UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_MATCH_VALUE = (ulong)0x29UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_MATCH_TYPE = (ulong)0x2aUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ACTION = (ulong)0x2bUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ACTION_VALUE = (ulong)0x2cUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_ACTION_TYPE = (ulong)0x2dUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_VALUE = (ulong)0x2eUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_VALUE_MASK = (ulong)0x2fUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_VALUE_MAPPING = (ulong)0x30UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_HEADERS = (ulong)0x31UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_HEADER = (ulong)0x32UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_HEADER_NAME = (ulong)0x33UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_HEADER_ID = (ulong)0x34UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_HEADER_FIELDS = (ulong)0x35UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_HEADER_GLOBAL = (ulong)0x36UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_HEADER_INDEX = (ulong)0x37UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_FIELD = (ulong)0x38UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_FIELD_NAME = (ulong)0x39UL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_FIELD_ID = (ulong)0x3aUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_FIELD_BITWIDTH = (ulong)0x3bUL;
        public static readonly ulong DEVLINK_ATTR_DPIPE_FIELD_MAPPING_TYPE = (ulong)0x3cUL;
        public static readonly ulong DEVLINK_ATTR_PAD = (ulong)0x3dUL;
        public static readonly ulong DEVLINK_ATTR_ESWITCH_ENCAP_MODE = (ulong)0x3eUL;
        public static readonly ulong DEVLINK_ATTR_MAX = (ulong)0x8cUL;
        public static readonly ulong DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE = (ulong)0x0UL;
        public static readonly ulong DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX = (ulong)0x1UL;
        public static readonly ulong DEVLINK_DPIPE_MATCH_TYPE_FIELD_EXACT = (ulong)0x0UL;
        public static readonly ulong DEVLINK_DPIPE_ACTION_TYPE_FIELD_MODIFY = (ulong)0x0UL;
        public static readonly ulong DEVLINK_DPIPE_FIELD_ETHERNET_DST_MAC = (ulong)0x0UL;
        public static readonly ulong DEVLINK_DPIPE_FIELD_IPV4_DST_IP = (ulong)0x0UL;
        public static readonly ulong DEVLINK_DPIPE_FIELD_IPV6_DST_IP = (ulong)0x0UL;
        public static readonly ulong DEVLINK_DPIPE_HEADER_ETHERNET = (ulong)0x0UL;
        public static readonly ulong DEVLINK_DPIPE_HEADER_IPV4 = (ulong)0x1UL;
        public static readonly ulong DEVLINK_DPIPE_HEADER_IPV6 = (ulong)0x2UL;


        public partial struct FsverityDigest
        {
            public ushort Algorithm;
            public ushort Size;
        }

        public partial struct FsverityEnableArg
        {
            public uint Version;
            public uint Hash_algorithm;
            public uint Block_size;
            public uint Salt_size;
            public ulong Salt_ptr;
            public uint Sig_size;
            public uint _;
            public ulong Sig_ptr;
            public array<ulong> _;
        }

        public partial struct Nhmsg
        {
            public byte Family;
            public byte Scope;
            public byte Protocol;
            public byte Resvd;
            public uint Flags;
        }

        public partial struct NexthopGrp
        {
            public uint Id;
            public byte Weight;
            public byte Resvd1;
            public ushort Resvd2;
        }

        public static readonly ulong NHA_UNSPEC = (ulong)0x0UL;
        public static readonly ulong NHA_ID = (ulong)0x1UL;
        public static readonly ulong NHA_GROUP = (ulong)0x2UL;
        public static readonly ulong NHA_GROUP_TYPE = (ulong)0x3UL;
        public static readonly ulong NHA_BLACKHOLE = (ulong)0x4UL;
        public static readonly ulong NHA_OIF = (ulong)0x5UL;
        public static readonly ulong NHA_GATEWAY = (ulong)0x6UL;
        public static readonly ulong NHA_ENCAP_TYPE = (ulong)0x7UL;
        public static readonly ulong NHA_ENCAP = (ulong)0x8UL;
        public static readonly ulong NHA_GROUPS = (ulong)0x9UL;
        public static readonly ulong NHA_MASTER = (ulong)0xaUL;

    }
}}}}}}
