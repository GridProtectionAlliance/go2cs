// go run mksyscall.go -tags zos,s390x syscall_zos_s390x.go
// Code generated by the command above; see README.md. DO NOT EDIT.

//go:build zos && s390x
// +build zos,s390x

// package unix -- go2cs converted at 2022 March 06 23:30:24 UTC
// import "cmd/vendor/golang.org/x/sys/unix" ==> using unix = go.cmd.vendor.golang.org.x.sys.unix_package
// Original source: C:\Program Files\Go\src\cmd\vendor\golang.org\x\sys\unix\zsyscall_zos_s390x.go
using @unsafe = go.@unsafe_package;

namespace go.cmd.vendor.golang.org.x.sys;

public static partial class unix_package {

    // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
private static (nint, error) fcntl(nint fd, nint cmd, nint arg) {
    nint val = default;
    error err = default!;

    var (r0, _, e1) = syscall_syscall(SYS_FCNTL, uintptr(fd), uintptr(cmd), uintptr(arg));
    val = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) read(nint fd, slice<byte> p) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = syscall_syscall(SYS_READ, uintptr(fd), uintptr(_p0), uintptr(len(p)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) readlen(nint fd, ptr<byte> _addr_buf, nint nbuf) {
    nint n = default;
    error err = default!;
    ref byte buf = ref _addr_buf.val;

    var (r0, _, e1) = syscall_syscall(SYS_READ, uintptr(fd), uintptr(@unsafe.Pointer(buf)), uintptr(nbuf));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) write(nint fd, slice<byte> p) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = syscall_syscall(SYS_WRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) accept(nint s, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    nint fd = default;
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (r0, _, e1) = syscall_syscall(SYS___ACCEPT_A, uintptr(s), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error bind(nint s, unsafe.Pointer addr, _Socklen addrlen) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS___BIND_A, uintptr(s), uintptr(addr), uintptr(addrlen));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error connect(nint s, unsafe.Pointer addr, _Socklen addrlen) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS___CONNECT_A, uintptr(s), uintptr(addr), uintptr(addrlen));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) getgroups(nint n, ptr<_Gid_t> _addr_list) {
    nint nn = default;
    error err = default!;
    ref _Gid_t list = ref _addr_list.val;

    var (r0, _, e1) = syscall_rawsyscall(SYS_GETGROUPS, uintptr(n), uintptr(@unsafe.Pointer(list)), 0);
    nn = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error setgroups(nint n, ptr<_Gid_t> _addr_list) {
    error err = default!;
    ref _Gid_t list = ref _addr_list.val;

    var (_, _, e1) = syscall_rawsyscall(SYS_SETGROUPS, uintptr(n), uintptr(@unsafe.Pointer(list)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getsockopt(nint s, nint level, nint name, unsafe.Pointer val, ptr<_Socklen> _addr_vallen) {
    error err = default!;
    ref _Socklen vallen = ref _addr_vallen.val;

    var (_, _, e1) = syscall_syscall6(SYS_GETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(@unsafe.Pointer(vallen)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error setsockopt(nint s, nint level, nint name, unsafe.Pointer val, System.UIntPtr vallen) {
    error err = default!;

    var (_, _, e1) = syscall_syscall6(SYS_SETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(vallen), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) socket(nint domain, nint typ, nint proto) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = syscall_rawsyscall(SYS_SOCKET, uintptr(domain), uintptr(typ), uintptr(proto));
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error socketpair(nint domain, nint typ, nint proto, ptr<array<int>> _addr_fd) {
    error err = default!;
    ref array<int> fd = ref _addr_fd.val;

    var (_, _, e1) = syscall_rawsyscall6(SYS_SOCKETPAIR, uintptr(domain), uintptr(typ), uintptr(proto), uintptr(@unsafe.Pointer(fd)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getpeername(nint fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (_, _, e1) = syscall_rawsyscall(SYS___GETPEERNAME_A, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getsockname(nint fd, ptr<RawSockaddrAny> _addr_rsa, ptr<_Socklen> _addr_addrlen) {
    error err = default!;
    ref RawSockaddrAny rsa = ref _addr_rsa.val;
    ref _Socklen addrlen = ref _addr_addrlen.val;

    var (_, _, e1) = syscall_rawsyscall(SYS___GETSOCKNAME_A, uintptr(fd), uintptr(@unsafe.Pointer(rsa)), uintptr(@unsafe.Pointer(addrlen)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) recvfrom(nint fd, slice<byte> p, nint flags, ptr<RawSockaddrAny> _addr_from, ptr<_Socklen> _addr_fromlen) {
    nint n = default;
    error err = default!;
    ref RawSockaddrAny from = ref _addr_from.val;
    ref _Socklen fromlen = ref _addr_fromlen.val;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = syscall_syscall6(SYS___RECVFROM_A, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(flags), uintptr(@unsafe.Pointer(from)), uintptr(@unsafe.Pointer(fromlen)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error sendto(nint s, slice<byte> buf, nint flags, unsafe.Pointer to, _Socklen addrlen) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(buf) > 0) {
        _p0 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = syscall_syscall6(SYS___SENDTO_A, uintptr(s), uintptr(_p0), uintptr(len(buf)), uintptr(flags), uintptr(to), uintptr(addrlen));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) recvmsg(nint s, ptr<Msghdr> _addr_msg, nint flags) {
    nint n = default;
    error err = default!;
    ref Msghdr msg = ref _addr_msg.val;

    var (r0, _, e1) = syscall_syscall(SYS___RECVMSG_A, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) sendmsg(nint s, ptr<Msghdr> _addr_msg, nint flags) {
    nint n = default;
    error err = default!;
    ref Msghdr msg = ref _addr_msg.val;

    var (r0, _, e1) = syscall_syscall(SYS___SENDMSG_A, uintptr(s), uintptr(@unsafe.Pointer(msg)), uintptr(flags));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (System.UIntPtr, error) mmap(System.UIntPtr addr, System.UIntPtr length, nint prot, nint flag, nint fd, long pos) {
    System.UIntPtr ret = default;
    error err = default!;

    var (r0, _, e1) = syscall_syscall6(SYS_MMAP, uintptr(addr), uintptr(length), uintptr(prot), uintptr(flag), uintptr(fd), uintptr(pos));
    ret = uintptr(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error munmap(System.UIntPtr addr, System.UIntPtr length) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_MUNMAP, uintptr(addr), uintptr(length), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error ioctl(nint fd, nuint req, System.UIntPtr arg) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Access(@string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___ACCESS_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chdir(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___CHDIR_A, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chown(@string path, nint uid, nint gid) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___CHOWN_A, uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chmod(@string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___CHMOD_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Creat(@string path, uint mode) {
    nint fd = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (r0, _, e1) = syscall_syscall(SYS___CREAT_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Dup(nint oldfd) {
    nint fd = default;
    error err = default!;

    var (r0, _, e1) = syscall_syscall(SYS_DUP, uintptr(oldfd), 0, 0);
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Dup2(nint oldfd, nint newfd) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Errno2() {
    nint er2 = default;

    var (uer2, _, _) = syscall_syscall(SYS___ERRNO2, 0, 0, 0);
    er2 = int(uer2);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static ptr<nint> Err2ad() {
    ptr<nint> eadd = default!;

    var (ueadd, _, _) = syscall_syscall(SYS___ERR2AD, 0, 0, 0);
    eadd = (int.val)(@unsafe.Pointer(ueadd));
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static void Exit(nint code) {
    syscall_syscall(SYS_EXIT, uintptr(code), 0, 0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchdir(nint fd) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_FCHDIR, uintptr(fd), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchmod(nint fd, uint mode) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_FCHMOD, uintptr(fd), uintptr(mode), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fchown(nint fd, nint uid, nint gid) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_FCHOWN, uintptr(fd), uintptr(uid), uintptr(gid));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) FcntlInt(System.UIntPtr fd, nint cmd, nint arg) {
    nint retval = default;
    error err = default!;

    var (r0, _, e1) = syscall_syscall(SYS_FCNTL, uintptr(fd), uintptr(cmd), uintptr(arg));
    retval = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error fstat(nint fd, ptr<Stat_LE_t> _addr_stat) {
    error err = default!;
    ref Stat_LE_t stat = ref _addr_stat.val;

    var (_, _, e1) = syscall_syscall(SYS_FSTAT, uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fstatvfs(nint fd, ptr<Statvfs_t> _addr_stat) {
    error err = default!;
    ref Statvfs_t stat = ref _addr_stat.val;

    var (_, _, e1) = syscall_syscall(SYS_FSTATVFS, uintptr(fd), uintptr(@unsafe.Pointer(stat)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Fsync(nint fd) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_FSYNC, uintptr(fd), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Ftruncate(nint fd, long length) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_FTRUNCATE, uintptr(fd), uintptr(length), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getpagesize() {
    nint pgsize = default;

    var (r0, _, _) = syscall_syscall(SYS_GETPAGESIZE, 0, 0, 0);
    pgsize = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mprotect(slice<byte> b, nint prot) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(b) > 0) {
        _p0 = @unsafe.Pointer(_addr_b[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = syscall_syscall(SYS_MPROTECT, uintptr(_p0), uintptr(len(b)), uintptr(prot));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Msync(slice<byte> b, nint flags) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(b) > 0) {
        _p0 = @unsafe.Pointer(_addr_b[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = syscall_syscall(SYS_MSYNC, uintptr(_p0), uintptr(len(b)), uintptr(flags));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Poll(slice<PollFd> fds, nint timeout) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(fds) > 0) {
        _p0 = @unsafe.Pointer(_addr_fds[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = syscall_syscall(SYS_POLL, uintptr(_p0), uintptr(len(fds)), uintptr(timeout));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (System.UIntPtr, error) Times(ptr<Tms> _addr_tms) {
    System.UIntPtr ticks = default;
    error err = default!;
    ref Tms tms = ref _addr_tms.val;

    var (r0, _, e1) = syscall_syscall(SYS_TIMES, uintptr(@unsafe.Pointer(tms)), 0, 0);
    ticks = uintptr(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) W_Getmntent(ptr<byte> _addr_buff, nint size) {
    nint lastsys = default;
    error err = default!;
    ref byte buff = ref _addr_buff.val;

    var (r0, _, e1) = syscall_syscall(SYS_W_GETMNTENT, uintptr(@unsafe.Pointer(buff)), uintptr(size), 0);
    lastsys = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) W_Getmntent_A(ptr<byte> _addr_buff, nint size) {
    nint lastsys = default;
    error err = default!;
    ref byte buff = ref _addr_buff.val;

    var (r0, _, e1) = syscall_syscall(SYS___W_GETMNTENT_A, uintptr(@unsafe.Pointer(buff)), uintptr(size), 0);
    lastsys = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error mount_LE(@string path, @string filesystem, @string fstype, uint mtm, int parmlen, @string parm) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(filesystem);
    if (err != null) {
        return ;
    }
    ptr<byte> _p2;
    _p2, err = BytePtrFromString(fstype);
    if (err != null) {
        return ;
    }
    ptr<byte> _p3;
    _p3, err = BytePtrFromString(parm);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall6(SYS___MOUNT_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), uintptr(@unsafe.Pointer(_p2)), uintptr(mtm), uintptr(parmlen), uintptr(@unsafe.Pointer(_p3)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error unmount(@string filesystem, nint mtm) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(filesystem);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___UMOUNT_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mtm), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Chroot(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___CHROOT_A, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Uname(ptr<Utsname> _addr_buf) {
    error err = default!;
    ref Utsname buf = ref _addr_buf.val;

    var (_, _, e1) = syscall_rawsyscall(SYS___UNAME_A, uintptr(@unsafe.Pointer(buf)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Gethostname(slice<byte> buf) {
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(buf) > 0) {
        _p0 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (_, _, e1) = syscall_syscall(SYS___GETHOSTNAME_A, uintptr(_p0), uintptr(len(buf)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getegid() {
    nint egid = default;

    var (r0, _, _) = syscall_rawsyscall(SYS_GETEGID, 0, 0, 0);
    egid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Geteuid() {
    nint uid = default;

    var (r0, _, _) = syscall_rawsyscall(SYS_GETEUID, 0, 0, 0);
    uid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getgid() {
    nint gid = default;

    var (r0, _, _) = syscall_rawsyscall(SYS_GETGID, 0, 0, 0);
    gid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getpid() {
    nint pid = default;

    var (r0, _, _) = syscall_rawsyscall(SYS_GETPID, 0, 0, 0);
    pid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getpgid(nint pid) {
    nint pgid = default;
    error err = default!;

    var (r0, _, e1) = syscall_rawsyscall(SYS_GETPGID, uintptr(pid), 0, 0);
    pgid = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getppid() {
    nint pid = default;

    var (r0, _, _) = syscall_rawsyscall(SYS_GETPPID, 0, 0, 0);
    pid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getpriority(nint which, nint who) {
    nint prio = default;
    error err = default!;

    var (r0, _, e1) = syscall_syscall(SYS_GETPRIORITY, uintptr(which), uintptr(who), 0);
    prio = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Getrlimit(nint resource, ptr<Rlimit> _addr_rlim) {
    error err = default!;
    ref Rlimit rlim = ref _addr_rlim.val;

    var (_, _, e1) = syscall_rawsyscall(SYS_GETRLIMIT, uintptr(resource), uintptr(@unsafe.Pointer(rlim)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error getrusage(nint who, ptr<rusage_zos> _addr_rusage) {
    error err = default!;
    ref rusage_zos rusage = ref _addr_rusage.val;

    var (_, _, e1) = syscall_rawsyscall(SYS_GETRUSAGE, uintptr(who), uintptr(@unsafe.Pointer(rusage)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Getsid(nint pid) {
    nint sid = default;
    error err = default!;

    var (r0, _, e1) = syscall_rawsyscall(SYS_GETSID, uintptr(pid), 0, 0);
    sid = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Getuid() {
    nint uid = default;

    var (r0, _, _) = syscall_rawsyscall(SYS_GETUID, 0, 0, 0);
    uid = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Kill(nint pid, Signal sig) {
    error err = default!;

    var (_, _, e1) = syscall_rawsyscall(SYS_KILL, uintptr(pid), uintptr(sig), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Lchown(@string path, nint uid, nint gid) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___LCHOWN_A, uintptr(@unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Link(@string path, @string link) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(link);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___LINK_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Listen(nint s, nint n) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_LISTEN, uintptr(s), uintptr(n), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error lstat(@string path, ptr<Stat_LE_t> _addr_stat) {
    error err = default!;
    ref Stat_LE_t stat = ref _addr_stat.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___LSTAT_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(stat)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mkdir(@string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___MKDIR_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mkfifo(@string path, uint mode) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___MKFIFO_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Mknod(@string path, uint mode, nint dev) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___MKNOD_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Pread(nint fd, slice<byte> p, long offset) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = syscall_syscall6(SYS_PREAD, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Pwrite(nint fd, slice<byte> p, long offset) {
    nint n = default;
    error err = default!;

    unsafe.Pointer _p0 = default;
    if (len(p) > 0) {
        _p0 = @unsafe.Pointer(_addr_p[0]);
    }
    else
 {
        _p0 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = syscall_syscall6(SYS_PWRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(offset), 0, 0);
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Readlink(@string path, slice<byte> buf) {
    nint n = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    unsafe.Pointer _p1 = default;
    if (len(buf) > 0) {
        _p1 = @unsafe.Pointer(_addr_buf[0]);
    }
    else
 {
        _p1 = @unsafe.Pointer(_addr__zero);
    }
    var (r0, _, e1) = syscall_syscall(SYS___READLINK_A, uintptr(@unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)));
    n = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Rename(@string from, @string to) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(from);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(to);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___RENAME_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Rmdir(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___RMDIR_A, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (long, error) Seek(nint fd, long offset, nint whence) {
    long off = default;
    error err = default!;

    var (r0, _, e1) = syscall_syscall(SYS_LSEEK, uintptr(fd), uintptr(offset), uintptr(whence));
    off = int64(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setpriority(nint which, nint who, nint prio) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_SETPRIORITY, uintptr(which), uintptr(who), uintptr(prio));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setpgid(nint pid, nint pgid) {
    error err = default!;

    var (_, _, e1) = syscall_rawsyscall(SYS_SETPGID, uintptr(pid), uintptr(pgid), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setrlimit(nint resource, ptr<Rlimit> _addr_lim) {
    error err = default!;
    ref Rlimit lim = ref _addr_lim.val;

    var (_, _, e1) = syscall_rawsyscall(SYS_SETRLIMIT, uintptr(resource), uintptr(@unsafe.Pointer(lim)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setregid(nint rgid, nint egid) {
    error err = default!;

    var (_, _, e1) = syscall_rawsyscall(SYS_SETREGID, uintptr(rgid), uintptr(egid), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setreuid(nint ruid, nint euid) {
    error err = default!;

    var (_, _, e1) = syscall_rawsyscall(SYS_SETREUID, uintptr(ruid), uintptr(euid), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Setsid() {
    nint pid = default;
    error err = default!;

    var (r0, _, e1) = syscall_rawsyscall(SYS_SETSID, 0, 0, 0);
    pid = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setuid(nint uid) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_SETUID, uintptr(uid), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Setgid(nint uid) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_SETGID, uintptr(uid), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Shutdown(nint fd, nint how) {
    error err = default!;

    var (_, _, e1) = syscall_syscall(SYS_SHUTDOWN, uintptr(fd), uintptr(how), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error stat(@string path, ptr<Stat_LE_t> _addr_statLE) {
    error err = default!;
    ref Stat_LE_t statLE = ref _addr_statLE.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___STAT_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(statLE)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Symlink(@string path, @string link) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    ptr<byte> _p1;
    _p1, err = BytePtrFromString(link);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___SYMLINK_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(_p1)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static void Sync() {
    syscall_syscall(SYS_SYNC, 0, 0, 0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Truncate(@string path, long length) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___TRUNCATE_A, uintptr(@unsafe.Pointer(_p0)), uintptr(length), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Tcgetattr(nint fildes, ptr<Termios> _addr_termptr) {
    error err = default!;
    ref Termios termptr = ref _addr_termptr.val;

    var (_, _, e1) = syscall_syscall(SYS_TCGETATTR, uintptr(fildes), uintptr(@unsafe.Pointer(termptr)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Tcsetattr(nint fildes, nint when, ptr<Termios> _addr_termptr) {
    error err = default!;
    ref Termios termptr = ref _addr_termptr.val;

    var (_, _, e1) = syscall_syscall(SYS_TCSETATTR, uintptr(fildes), uintptr(when), uintptr(@unsafe.Pointer(termptr)));
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static nint Umask(nint mask) {
    nint oldmask = default;

    var (r0, _, _) = syscall_syscall(SYS_UMASK, uintptr(mask), 0, 0);
    oldmask = int(r0);
    return ;
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Unlink(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___UNLINK_A, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static error Utime(@string path, ptr<Utimbuf> _addr_utim) {
    error err = default!;
    ref Utimbuf utim = ref _addr_utim.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___UTIME_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(utim)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) open(@string path, nint mode, uint perm) {
    nint fd = default;
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (r0, _, e1) = syscall_syscall(SYS___OPEN_A, uintptr(@unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm));
    fd = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error remove(@string path) {
    error err = default!;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS_REMOVE, uintptr(@unsafe.Pointer(_p0)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static (nint, error) waitpid(nint pid, ptr<_C_int> _addr_wstatus, nint options) {
    nint wpid = default;
    error err = default!;
    ref _C_int wstatus = ref _addr_wstatus.val;

    var (r0, _, e1) = syscall_syscall(SYS_WAITPID, uintptr(pid), uintptr(@unsafe.Pointer(wstatus)), uintptr(options));
    wpid = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error gettimeofday(ptr<timeval_zos> _addr_tv) {
    error err = default!;
    ref timeval_zos tv = ref _addr_tv.val;

    var (_, _, e1) = syscall_rawsyscall(SYS_GETTIMEOFDAY, uintptr(@unsafe.Pointer(tv)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error pipe(ptr<array<_C_int>> _addr_p) {
    error err = default!;
    ref array<_C_int> p = ref _addr_p.val;

    var (_, _, e1) = syscall_rawsyscall(SYS_PIPE, uintptr(@unsafe.Pointer(p)), 0, 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

private static error utimes(@string path, ptr<array<Timeval>> _addr_timeval) {
    error err = default!;
    ref array<Timeval> timeval = ref _addr_timeval.val;

    ptr<byte> _p0;
    _p0, err = BytePtrFromString(path);
    if (err != null) {
        return ;
    }
    var (_, _, e1) = syscall_syscall(SYS___UTIMES_A, uintptr(@unsafe.Pointer(_p0)), uintptr(@unsafe.Pointer(timeval)), 0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

public static (nint, error) Select(nint nmsgsfds, ptr<FdSet> _addr_r, ptr<FdSet> _addr_w, ptr<FdSet> _addr_e, ptr<Timeval> _addr_timeout) {
    nint ret = default;
    error err = default!;
    ref FdSet r = ref _addr_r.val;
    ref FdSet w = ref _addr_w.val;
    ref FdSet e = ref _addr_e.val;
    ref Timeval timeout = ref _addr_timeout.val;

    var (r0, _, e1) = syscall_syscall6(SYS_SELECT, uintptr(nmsgsfds), uintptr(@unsafe.Pointer(r)), uintptr(@unsafe.Pointer(w)), uintptr(@unsafe.Pointer(e)), uintptr(@unsafe.Pointer(timeout)), 0);
    ret = int(r0);
    if (e1 != 0) {
        err = errnoErr(e1);
    }
    return ;

}

} // end unix_package
