//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:38:20 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace arch {
namespace ppc64
{
    public static partial class ppc64asm_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Inst
        {
            // Constructors
            public Inst(NilType _)
            {
                this.Op = default;
                this.Enc = default;
                this.Len = default;
                this.SuffixEnc = default;
                this.Args = default;
            }

            public Inst(Op Op = default, uint Enc = default, nint Len = default, uint SuffixEnc = default, Args Args = default)
            {
                this.Op = Op;
                this.Enc = Enc;
                this.Len = Len;
                this.SuffixEnc = SuffixEnc;
                this.Args = Args;
            }

            // Enable comparisons between nil and Inst struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Inst value, NilType nil) => value.Equals(default(Inst));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Inst value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Inst value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Inst value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Inst(NilType nil) => default(Inst);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Inst Inst_cast(dynamic value)
        {
            return new Inst(value.Op, value.Enc, value.Len, value.SuffixEnc, value.Args);
        }
    }
}}}}}}}