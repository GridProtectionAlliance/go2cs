//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:24:58 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace arch {
namespace arm64
{
    public static partial class arm64asm_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct MemExtend
        {
            // Constructors
            public MemExtend(NilType _)
            {
                this.Base = default;
                this.Index = default;
                this.Extend = default;
                this.Amount = default;
                this.ShiftMustBeZero = default;
            }

            public MemExtend(RegSP Base = default, Reg Index = default, ExtShift Extend = default, byte Amount = default, bool ShiftMustBeZero = default)
            {
                this.Base = Base;
                this.Index = Index;
                this.Extend = Extend;
                this.Amount = Amount;
                this.ShiftMustBeZero = ShiftMustBeZero;
            }

            // Enable comparisons between nil and MemExtend struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(MemExtend value, NilType nil) => value.Equals(default(MemExtend));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(MemExtend value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, MemExtend value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, MemExtend value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator MemExtend(NilType nil) => default(MemExtend);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static MemExtend MemExtend_cast(dynamic value)
        {
            return new MemExtend(value.Base, value.Index, value.Extend, value.Amount, value.ShiftMustBeZero);
        }
    }
}}}}}}}