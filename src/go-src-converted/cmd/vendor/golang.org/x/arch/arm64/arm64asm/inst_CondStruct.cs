//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:54:46 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace arch {
namespace arm64
{
    public static partial class arm64asm_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Cond
        {
            // Constructors
            public Cond(NilType _)
            {
                this.Value = default;
                this.Invert = default;
            }

            public Cond(byte Value = default, bool Invert = default)
            {
                this.Value = Value;
                this.Invert = Invert;
            }

            // Enable comparisons between nil and Cond struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Cond value, NilType nil) => value.Equals(default(Cond));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Cond value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Cond value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Cond value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Cond(NilType nil) => default(Cond);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Cond Cond_cast(dynamic value)
        {
            return new Cond(value.Value, value.Invert);
        }
    }
}}}}}}}