//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:37:42 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vendor {
namespace golang.org {
namespace x {
namespace arch {
namespace arm
{
    public static partial class armasm_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct instFormat
        {
            // Constructors
            public instFormat(NilType _)
            {
                this.mask = default;
                this.value = default;
                this.priority = default;
                this.op = default;
                this.opBits = default;
                this.args = default;
            }

            public instFormat(uint mask = default, uint value = default, sbyte priority = default, Op op = default, ulong opBits = default, instArgs args = default)
            {
                this.mask = mask;
                this.value = value;
                this.priority = priority;
                this.op = op;
                this.opBits = opBits;
                this.args = args;
            }

            // Enable comparisons between nil and instFormat struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(instFormat value, NilType nil) => value.Equals(default(instFormat));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(instFormat value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, instFormat value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, instFormat value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator instFormat(NilType nil) => default(instFormat);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static instFormat instFormat_cast(dynamic value)
        {
            return new instFormat(value.mask, value.value, value.priority, value.op, value.opBits, value.args);
        }
    }
}}}}}}}