//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:08:10 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using scanner = go.text.scanner_package;
using src = go.cmd.@internal.src_package;
using go;

namespace go {
namespace cmd {
namespace asm {
namespace @internal
{
    public static partial class lex_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Stack
        {
            // Constructors
            public Stack(NilType _)
            {
                this.tr = default;
            }

            public Stack(slice<TokenReader> tr = default)
            {
                this.tr = tr;
            }

            // Enable comparisons between nil and Stack struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Stack value, NilType nil) => value.Equals(default(Stack));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Stack value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Stack value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Stack value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Stack(NilType nil) => default(Stack);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Stack Stack_cast(dynamic value)
        {
            return new Stack(value.tr);
        }
    }
}}}}