//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:54:23 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using buildcfg = go.@internal.buildcfg_package;
using os = go.os_package;
using filepath = go.path.filepath_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using scanner = go.text.scanner_package;
using flags = go.cmd.asm.@internal.flags_package;
using objabi = go.cmd.@internal.objabi_package;
using src = go.cmd.@internal.src_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace asm {
namespace @internal
{
    public static partial class lex_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Input
        {
            // Constructors
            public Input(NilType _)
            {
                this.Stack = default;
                this.includes = default;
                this.beginningOfLine = default;
                this.ifdefStack = default;
                this.macros = default;
                this.text = default;
                this.peek = default;
                this.peekToken = default;
                this.peekText = default;
            }

            public Input(Stack Stack = default, slice<@string> includes = default, bool beginningOfLine = default, slice<bool> ifdefStack = default, map<@string, ptr<Macro>> macros = default, @string text = default, bool peek = default, ScanToken peekToken = default, @string peekText = default)
            {
                this.Stack = Stack;
                this.includes = includes;
                this.beginningOfLine = beginningOfLine;
                this.ifdefStack = ifdefStack;
                this.macros = macros;
                this.text = text;
                this.peek = peek;
                this.peekToken = peekToken;
                this.peekText = peekText;
            }

            // Enable comparisons between nil and Input struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Input value, NilType nil) => value.Equals(default(Input));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Input value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Input value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Input value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Input(NilType nil) => default(Input);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Input Input_cast(dynamic value)
        {
            return new Input(value.Stack, value.includes, value.beginningOfLine, value.ifdefStack, value.macros, value.text, value.peek, value.peekToken, value.peekText);
        }
    }
}}}}