//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:43:06 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using obj = go.cmd.@internal.obj_package;
using arm = go.cmd.@internal.obj.arm_package;
using arm64 = go.cmd.@internal.obj.arm64_package;
using mips = go.cmd.@internal.obj.mips_package;
using ppc64 = go.cmd.@internal.obj.ppc64_package;
using riscv = go.cmd.@internal.obj.riscv_package;
using s390x = go.cmd.@internal.obj.s390x_package;
using wasm = go.cmd.@internal.obj.wasm_package;
using x86 = go.cmd.@internal.obj.x86_package;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace asm {
namespace @internal
{
    public static partial class arch_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Arch
        {
            // Constructors
            public Arch(NilType _)
            {
                this.LinkArch> = default;
                this.Instructions = default;
                this.Register = default;
                this.RegisterPrefix = default;
                this.RegisterNumber = default;
                this.IsJump = default;
            }

            public Arch(ref ptr<obj.LinkArch> LinkArch> = default, map<@string, obj.As> Instructions = default, map<@string, short> Register = default, map<@string, bool> RegisterPrefix = default, Func<@string, short, (short, bool)> RegisterNumber = default, Func<@string, bool> IsJump = default)
            {
                this.LinkArch> = LinkArch>;
                this.Instructions = Instructions;
                this.Register = Register;
                this.RegisterPrefix = RegisterPrefix;
                this.RegisterNumber = RegisterNumber;
                this.IsJump = IsJump;
            }

            // Enable comparisons between nil and Arch struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Arch value, NilType nil) => value.Equals(default(Arch));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Arch value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Arch value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Arch value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Arch(NilType nil) => default(Arch);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Arch Arch_cast(dynamic value)
        {
            return new Arch(ref value.LinkArch>, value.Instructions, value.Register, value.RegisterPrefix, value.RegisterNumber, value.IsJump);
        }
    }
}}}}