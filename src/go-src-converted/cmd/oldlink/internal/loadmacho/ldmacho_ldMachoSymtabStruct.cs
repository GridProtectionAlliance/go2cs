//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:52:07 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using bio = go.cmd.@internal.bio_package;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using loader = go.cmd.oldlink.@internal.loader_package;
using sym = go.cmd.oldlink.@internal.sym_package;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using io = go.io_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace oldlink {
namespace @internal
{
    public static partial class loadmacho_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct ldMachoSymtab
        {
            // Constructors
            public ldMachoSymtab(NilType _)
            {
                this.symoff = default;
                this.nsym = default;
                this.stroff = default;
                this.strsize = default;
                this.str = default;
                this.sym = default;
            }

            public ldMachoSymtab(uint symoff = default, uint nsym = default, uint stroff = default, uint strsize = default, slice<byte> str = default, slice<ldMachoSym> sym = default)
            {
                this.symoff = symoff;
                this.nsym = nsym;
                this.stroff = stroff;
                this.strsize = strsize;
                this.str = str;
                this.sym = sym;
            }

            // Enable comparisons between nil and ldMachoSymtab struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ldMachoSymtab value, NilType nil) => value.Equals(default(ldMachoSymtab));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ldMachoSymtab value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ldMachoSymtab value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ldMachoSymtab value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ldMachoSymtab(NilType nil) => default(ldMachoSymtab);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static ldMachoSymtab ldMachoSymtab_cast(dynamic value)
        {
            return new ldMachoSymtab(value.symoff, value.nsym, value.stroff, value.strsize, value.str, value.sym);
        }
    }
}}}}