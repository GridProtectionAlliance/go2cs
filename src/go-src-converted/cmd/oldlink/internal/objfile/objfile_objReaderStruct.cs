//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:52:13 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using bio = go.cmd.@internal.bio_package;
using dwarf = go.cmd.@internal.dwarf_package;
using goobj2 = go.cmd.@internal.goobj2_package;
using obj = go.cmd.@internal.obj_package;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using sym = go.cmd.oldlink.@internal.sym_package;
using fmt = go.fmt_package;
using unsafeheader = go.@internal.unsafeheader_package;
using io = go.io_package;
using log = go.log_package;
using os = go.os_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace oldlink {
namespace @internal
{
    public static partial class objfile_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct objReader
        {
            // Constructors
            public objReader(NilType _)
            {
                this.rd = default;
                this.arch = default;
                this.syms = default;
                this.lib = default;
                this.unit = default;
                this.pn = default;
                this.dupSym = default;
                this.localSymVersion = default;
                this.flags = default;
                this.strictDupMsgs = default;
                this.dataSize = default;
                this.rdBuf = default;
                this.refs = default;
                this.data = default;
                this.reloc = default;
                this.pcdata = default;
                this.funcdata = default;
                this.funcdataoff = default;
                this.file = default;
                this.pkgpref = default;
                this.roObject = default;
                this.roOffset = default;
                this.dataReadOnly = default;
            }

            public objReader(ref ptr<bio.Reader> rd = default, ref ptr<sys.Arch> arch = default, ref ptr<sym.Symbols> syms = default, ref ptr<sym.Library> lib = default, ref ptr<sym.CompilationUnit> unit = default, @string pn = default, ref ptr<sym.Symbol> dupSym = default, long localSymVersion = default, long flags = default, long strictDupMsgs = default, long dataSize = default, slice<byte> rdBuf = default, slice<ptr<sym.Symbol>> refs = default, slice<byte> data = default, slice<sym.Reloc> reloc = default, slice<sym.Pcdata> pcdata = default, slice<ptr<sym.Symbol>> funcdata = default, slice<long> funcdataoff = default, slice<ptr<sym.Symbol>> file = default, @string pkgpref = default, slice<byte> roObject = default, long roOffset = default, bool dataReadOnly = default)
            {
                this.rd = rd;
                this.arch = arch;
                this.syms = syms;
                this.lib = lib;
                this.unit = unit;
                this.pn = pn;
                this.dupSym = dupSym;
                this.localSymVersion = localSymVersion;
                this.flags = flags;
                this.strictDupMsgs = strictDupMsgs;
                this.dataSize = dataSize;
                this.rdBuf = rdBuf;
                this.refs = refs;
                this.data = data;
                this.reloc = reloc;
                this.pcdata = pcdata;
                this.funcdata = funcdata;
                this.funcdataoff = funcdataoff;
                this.file = file;
                this.pkgpref = pkgpref;
                this.roObject = roObject;
                this.roOffset = roOffset;
                this.dataReadOnly = dataReadOnly;
            }

            // Enable comparisons between nil and objReader struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(objReader value, NilType nil) => value.Equals(default(objReader));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(objReader value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, objReader value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, objReader value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator objReader(NilType nil) => default(objReader);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static objReader objReader_cast(dynamic value)
        {
            return new objReader(ref value.rd, ref value.arch, ref value.syms, ref value.lib, ref value.unit, value.pn, ref value.dupSym, value.localSymVersion, value.flags, value.strictDupMsgs, value.dataSize, value.rdBuf, value.refs, value.data, value.reloc, value.pcdata, value.funcdata, value.funcdataoff, value.file, value.pkgpref, value.roObject, value.roOffset, value.dataReadOnly);
        }
    }
}}}}