//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:41:26 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using bio = go.cmd.@internal.bio_package;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using loader = go.cmd.oldlink.@internal.loader_package;
using sym = go.cmd.oldlink.@internal.sym_package;
using elf = go.debug.elf_package;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using io = go.io_package;
using log = go.log_package;
using sort = go.sort_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace oldlink {
namespace @internal
{
    public static partial class loadelf_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct ElfHdrBytes64
        {
            // Constructors
            public ElfHdrBytes64(NilType _)
            {
                this.Ident = default;
                this.Type = default;
                this.Machine = default;
                this.Version = default;
                this.Entry = default;
                this.Phoff = default;
                this.Shoff = default;
                this.Flags = default;
                this.Ehsize = default;
                this.Phentsize = default;
                this.Phnum = default;
                this.Shentsize = default;
                this.Shnum = default;
                this.Shstrndx = default;
            }

            public ElfHdrBytes64(array<byte> Ident = default, array<byte> Type = default, array<byte> Machine = default, array<byte> Version = default, array<byte> Entry = default, array<byte> Phoff = default, array<byte> Shoff = default, array<byte> Flags = default, array<byte> Ehsize = default, array<byte> Phentsize = default, array<byte> Phnum = default, array<byte> Shentsize = default, array<byte> Shnum = default, array<byte> Shstrndx = default)
            {
                this.Ident = Ident;
                this.Type = Type;
                this.Machine = Machine;
                this.Version = Version;
                this.Entry = Entry;
                this.Phoff = Phoff;
                this.Shoff = Shoff;
                this.Flags = Flags;
                this.Ehsize = Ehsize;
                this.Phentsize = Phentsize;
                this.Phnum = Phnum;
                this.Shentsize = Shentsize;
                this.Shnum = Shnum;
                this.Shstrndx = Shstrndx;
            }

            // Enable comparisons between nil and ElfHdrBytes64 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ElfHdrBytes64 value, NilType nil) => value.Equals(default(ElfHdrBytes64));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ElfHdrBytes64 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ElfHdrBytes64 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ElfHdrBytes64 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ElfHdrBytes64(NilType nil) => default(ElfHdrBytes64);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static ElfHdrBytes64 ElfHdrBytes64_cast(dynamic value)
        {
            return new ElfHdrBytes64(value.Ident, value.Type, value.Machine, value.Version, value.Entry, value.Phoff, value.Shoff, value.Flags, value.Ehsize, value.Phentsize, value.Phnum, value.Shentsize, value.Shnum, value.Shstrndx);
        }
    }
}}}}