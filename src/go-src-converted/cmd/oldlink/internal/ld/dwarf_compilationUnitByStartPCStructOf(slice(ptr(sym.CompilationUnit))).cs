//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:40:59 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

namespace go {
namespace cmd {
namespace oldlink {
namespace @internal
{
    public static partial class ld_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct compilationUnitByStartPC
        {
            // Value of the compilationUnitByStartPC struct
            private readonly slice<ptr<sym.CompilationUnit>> m_value;

            public compilationUnitByStartPC(slice<ptr<sym.CompilationUnit>> value) => m_value = value;

            // Enable implicit conversions between slice<ptr<sym.CompilationUnit>> and compilationUnitByStartPC struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator compilationUnitByStartPC(slice<ptr<sym.CompilationUnit>> value) => new compilationUnitByStartPC(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator slice<ptr<sym.CompilationUnit>>(compilationUnitByStartPC value) => value.m_value;
            
            // Enable comparisons between nil and compilationUnitByStartPC struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(compilationUnitByStartPC value, NilType nil) => value.Equals(default(compilationUnitByStartPC));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(compilationUnitByStartPC value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, compilationUnitByStartPC value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, compilationUnitByStartPC value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator compilationUnitByStartPC(NilType nil) => default(compilationUnitByStartPC);
        }
    }
}}}}
