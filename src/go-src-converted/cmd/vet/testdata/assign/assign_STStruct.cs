//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:42:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using rand = go.math.rand_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace vet {
namespace testdata
{
    public static partial class assign_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct ST
        {
            // Constructors
            public ST(NilType _)
            {
                this.x = default;
                this.l = default;
            }

            public ST(nint x = default, slice<nint> l = default)
            {
                this.x = x;
                this.l = l;
            }

            // Enable comparisons between nil and ST struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ST value, NilType nil) => value.Equals(default(ST));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ST value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ST value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ST value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ST(NilType nil) => default(ST);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static ST ST_cast(dynamic value)
        {
            return new ST(value.x, value.l);
        }
    }
}}}}