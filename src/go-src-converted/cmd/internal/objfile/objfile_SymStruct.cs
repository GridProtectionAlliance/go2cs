//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:50:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using dwarf = go.debug.dwarf_package;
using gosym = go.debug.gosym_package;
using fmt = go.fmt_package;
using io = go.io_package;
using os = go.os_package;
using sort = go.sort_package;
using go;

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class objfile_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Sym
        {
            // Constructors
            public Sym(NilType _)
            {
                this.Name = default;
                this.Addr = default;
                this.Size = default;
                this.Code = default;
                this.Type = default;
                this.Relocs = default;
            }

            public Sym(@string Name = default, ulong Addr = default, long Size = default, int Code = default, @string Type = default, slice<Reloc> Relocs = default)
            {
                this.Name = Name;
                this.Addr = Addr;
                this.Size = Size;
                this.Code = Code;
                this.Type = Type;
                this.Relocs = Relocs;
            }

            // Enable comparisons between nil and Sym struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Sym value, NilType nil) => value.Equals(default(Sym));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Sym value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Sym value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Sym value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Sym(NilType nil) => default(Sym);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Sym Sym_cast(dynamic value)
        {
            return new Sym(value.Name, value.Addr, value.Size, value.Code, value.Type, value.Relocs);
        }
    }
}}}