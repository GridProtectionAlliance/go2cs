//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:08:46 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using goobj2 = go.cmd.@internal.goobj2_package;
using objabi = go.cmd.@internal.objabi_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using os = go.os_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class goobj_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Func
        {
            // Constructors
            public Func(NilType _)
            {
                this.Args = default;
                this.Frame = default;
                this.Align = default;
                this.Leaf = default;
                this.NoSplit = default;
                this.TopFrame = default;
                this.Var = default;
                this.PCSP = default;
                this.PCFile = default;
                this.PCLine = default;
                this.PCInline = default;
                this.PCData = default;
                this.FuncData = default;
                this.File = default;
                this.InlTree = default;
            }

            public Func(long Args = default, long Frame = default, uint Align = default, bool Leaf = default, bool NoSplit = default, bool TopFrame = default, slice<Var> Var = default, Data PCSP = default, Data PCFile = default, Data PCLine = default, Data PCInline = default, slice<Data> PCData = default, slice<FuncData> FuncData = default, slice<@string> File = default, slice<InlinedCall> InlTree = default)
            {
                this.Args = Args;
                this.Frame = Frame;
                this.Align = Align;
                this.Leaf = Leaf;
                this.NoSplit = NoSplit;
                this.TopFrame = TopFrame;
                this.Var = Var;
                this.PCSP = PCSP;
                this.PCFile = PCFile;
                this.PCLine = PCLine;
                this.PCInline = PCInline;
                this.PCData = PCData;
                this.FuncData = FuncData;
                this.File = File;
                this.InlTree = InlTree;
            }

            // Enable comparisons between nil and Func struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Func value, NilType nil) => value.Equals(default(Func));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Func value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Func value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Func value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Func(NilType nil) => default(Func);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Func Func_cast(dynamic value)
        {
            return new Func(value.Args, value.Frame, value.Align, value.Leaf, value.NoSplit, value.TopFrame, value.Var, value.PCSP, value.PCFile, value.PCLine, value.PCInline, value.PCData, value.FuncData, value.File, value.InlTree);
        }
    }
}}}