//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:08:46 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using binary = go.encoding.binary_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class sys_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Arch
        {
            // Constructors
            public Arch(NilType _)
            {
                this.Name = default;
                this.Family = default;
                this.ByteOrder = default;
                this.PtrSize = default;
                this.RegSize = default;
                this.MinLC = default;
            }

            public Arch(@string Name = default, ArchFamily Family = default, binary.ByteOrder ByteOrder = default, long PtrSize = default, long RegSize = default, long MinLC = default)
            {
                this.Name = Name;
                this.Family = Family;
                this.ByteOrder = ByteOrder;
                this.PtrSize = PtrSize;
                this.RegSize = RegSize;
                this.MinLC = MinLC;
            }

            // Enable comparisons between nil and Arch struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Arch value, NilType nil) => value.Equals(default(Arch));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Arch value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Arch value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Arch value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Arch(NilType nil) => default(Arch);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Arch Arch_cast(dynamic value)
        {
            return new Arch(value.Name, value.Family, value.ByteOrder, value.PtrSize, value.RegSize, value.MinLC);
        }
    }
}}}