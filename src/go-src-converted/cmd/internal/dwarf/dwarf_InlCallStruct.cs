//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:57:23 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using buildcfg = go.@internal.buildcfg_package;
using exec = go.@internal.execabs_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using objabi = go.cmd.@internal.objabi_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class dwarf_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct InlCall
        {
            // Constructors
            public InlCall(NilType _)
            {
                this.InlIndex = default;
                this.CallFile = default;
                this.CallLine = default;
                this.AbsFunSym = default;
                this.Children = default;
                this.InlVars = default;
                this.Ranges = default;
                this.Root = default;
            }

            public InlCall(nint InlIndex = default, Sym CallFile = default, uint CallLine = default, Sym AbsFunSym = default, slice<nint> Children = default, slice<ptr<Var>> InlVars = default, slice<Range> Ranges = default, bool Root = default)
            {
                this.InlIndex = InlIndex;
                this.CallFile = CallFile;
                this.CallLine = CallLine;
                this.AbsFunSym = AbsFunSym;
                this.Children = Children;
                this.InlVars = InlVars;
                this.Ranges = Ranges;
                this.Root = Root;
            }

            // Enable comparisons between nil and InlCall struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(InlCall value, NilType nil) => value.Equals(default(InlCall));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(InlCall value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, InlCall value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, InlCall value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator InlCall(NilType nil) => default(InlCall);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static InlCall InlCall_cast(dynamic value)
        {
            return new InlCall(value.InlIndex, value.CallFile, value.CallLine, value.AbsFunSym, value.Children, value.InlVars, value.Ranges, value.Root);
        }
    }
}}}