//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:57:56 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using sha256 = go.crypto.sha256_package;
using macho = go.debug.macho_package;
using binary = go.encoding.binary_package;
using io = go.io_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class codesign_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct CodeDirectory
        {
            // Constructors
            public CodeDirectory(NilType _)
            {
                this.magic = default;
                this.length = default;
                this.version = default;
                this.flags = default;
                this.hashOffset = default;
                this.identOffset = default;
                this.nSpecialSlots = default;
                this.nCodeSlots = default;
                this.codeLimit = default;
                this.hashSize = default;
                this.hashType = default;
                this._pad1 = default;
                this.pageSize = default;
                this._pad2 = default;
                this.scatterOffset = default;
                this.teamOffset = default;
                this._pad3 = default;
                this.codeLimit64 = default;
                this.execSegBase = default;
                this.execSegLimit = default;
                this.execSegFlags = default;
            }

            public CodeDirectory(uint magic = default, uint length = default, uint version = default, uint flags = default, uint hashOffset = default, uint identOffset = default, uint nSpecialSlots = default, uint nCodeSlots = default, uint codeLimit = default, byte hashSize = default, byte hashType = default, byte _pad1 = default, byte pageSize = default, uint _pad2 = default, uint scatterOffset = default, uint teamOffset = default, uint _pad3 = default, ulong codeLimit64 = default, ulong execSegBase = default, ulong execSegLimit = default, ulong execSegFlags = default)
            {
                this.magic = magic;
                this.length = length;
                this.version = version;
                this.flags = flags;
                this.hashOffset = hashOffset;
                this.identOffset = identOffset;
                this.nSpecialSlots = nSpecialSlots;
                this.nCodeSlots = nCodeSlots;
                this.codeLimit = codeLimit;
                this.hashSize = hashSize;
                this.hashType = hashType;
                this._pad1 = _pad1;
                this.pageSize = pageSize;
                this._pad2 = _pad2;
                this.scatterOffset = scatterOffset;
                this.teamOffset = teamOffset;
                this._pad3 = _pad3;
                this.codeLimit64 = codeLimit64;
                this.execSegBase = execSegBase;
                this.execSegLimit = execSegLimit;
                this.execSegFlags = execSegFlags;
            }

            // Enable comparisons between nil and CodeDirectory struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(CodeDirectory value, NilType nil) => value.Equals(default(CodeDirectory));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(CodeDirectory value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, CodeDirectory value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, CodeDirectory value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator CodeDirectory(NilType nil) => default(CodeDirectory);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static CodeDirectory CodeDirectory_cast(dynamic value)
        {
            return new CodeDirectory(value.magic, value.length, value.version, value.flags, value.hashOffset, value.identOffset, value.nSpecialSlots, value.nCodeSlots, value.codeLimit, value.hashSize, value.hashType, value._pad1, value.pageSize, value._pad2, value.scatterOffset, value.teamOffset, value._pad3, value.codeLimit64, value.execSegBase, value.execSegLimit, value.execSegFlags);
        }
    }
}}}