//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:50:09 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using binary = go.encoding.binary_package;
using go;

namespace go {
namespace cmd {
namespace @internal
{
    public static partial class goobj2_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct FuncInfo
        {
            // Constructors
            public FuncInfo(NilType _)
            {
                this.Args = default;
                this.Locals = default;
                this.Pcsp = default;
                this.Pcfile = default;
                this.Pcline = default;
                this.Pcinline = default;
                this.Pcdata = default;
                this.PcdataEnd = default;
                this.Funcdataoff = default;
                this.File = default;
                this.InlTree = default;
            }

            public FuncInfo(uint Args = default, uint Locals = default, uint Pcsp = default, uint Pcfile = default, uint Pcline = default, uint Pcinline = default, slice<uint> Pcdata = default, uint PcdataEnd = default, slice<uint> Funcdataoff = default, slice<SymRef> File = default, slice<InlTreeNode> InlTree = default)
            {
                this.Args = Args;
                this.Locals = Locals;
                this.Pcsp = Pcsp;
                this.Pcfile = Pcfile;
                this.Pcline = Pcline;
                this.Pcinline = Pcinline;
                this.Pcdata = Pcdata;
                this.PcdataEnd = PcdataEnd;
                this.Funcdataoff = Funcdataoff;
                this.File = File;
                this.InlTree = InlTree;
            }

            // Enable comparisons between nil and FuncInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(FuncInfo value, NilType nil) => value.Equals(default(FuncInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(FuncInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, FuncInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, FuncInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator FuncInfo(NilType nil) => default(FuncInfo);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static FuncInfo FuncInfo_cast(dynamic value)
        {
            return new FuncInfo(value.Args, value.Locals, value.Pcsp, value.Pcfile, value.Pcline, value.Pcinline, value.Pcdata, value.PcdataEnd, value.Funcdataoff, value.File, value.InlTree);
        }
    }
}}}