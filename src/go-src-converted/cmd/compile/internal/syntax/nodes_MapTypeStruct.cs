//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:26:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class syntax_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        [PromotedStruct(typeof(expr))]
        public partial struct MapType
        {
            // expr structure promotion - sourced from value copy
            private readonly ptr<expr> m_exprRef;

            private ref expr expr_val => ref m_exprRef.Value;

            // Constructors
            public MapType(NilType _)
            {
                this.Key = default;
                this.Value = default;
                this.m_exprRef = new ptr<expr>(new expr(nil));
            }

            public MapType(Expr Key = default, Expr Value = default, expr expr = default)
            {
                this.Key = Key;
                this.Value = Value;
                this.m_exprRef = new ptr<expr>(expr);
            }

            // Enable comparisons between nil and MapType struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(MapType value, NilType nil) => value.Equals(default(MapType));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(MapType value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, MapType value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, MapType value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator MapType(NilType nil) => default(MapType);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static MapType MapType_cast(dynamic value)
        {
            return new MapType(value.Key, value.Value, value.expr);
        }
    }
}}}}