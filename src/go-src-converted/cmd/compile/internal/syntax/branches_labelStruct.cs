//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:25:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class syntax_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct label
        {
            // Constructors
            public label(NilType _)
            {
                this.parent = default;
                this.lstmt = default;
                this.used = default;
            }

            public label(ref ptr<block> parent = default, ref ptr<LabeledStmt> lstmt = default, bool used = default)
            {
                this.parent = parent;
                this.lstmt = lstmt;
                this.used = used;
            }

            // Enable comparisons between nil and label struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(label value, NilType nil) => value.Equals(default(label));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(label value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, label value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, label value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator label(NilType nil) => default(label);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static label label_cast(dynamic value)
        {
            return new label(ref value.parent, ref value.lstmt, value.used);
        }
    }
}}}}