//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:13:10 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class syntax_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(simpleStmt))]
        public partial struct RangeClause
        {
            // simpleStmt structure promotion - sourced from value copy
            private readonly ptr<simpleStmt> m_simpleStmtRef;

            private ref simpleStmt simpleStmt_val => ref m_simpleStmtRef.Value;

            // Constructors
            public RangeClause(NilType _)
            {
                this.Lhs = default;
                this.Def = default;
                this.X = default;
                this.m_simpleStmtRef = new ptr<simpleStmt>(new simpleStmt(nil));
            }

            public RangeClause(Expr Lhs = default, bool Def = default, Expr X = default, simpleStmt simpleStmt = default)
            {
                this.Lhs = Lhs;
                this.Def = Def;
                this.X = X;
                this.m_simpleStmtRef = new ptr<simpleStmt>(simpleStmt);
            }

            // Enable comparisons between nil and RangeClause struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(RangeClause value, NilType nil) => value.Equals(default(RangeClause));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(RangeClause value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, RangeClause value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, RangeClause value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator RangeClause(NilType nil) => default(RangeClause);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static RangeClause RangeClause_cast(dynamic value)
        {
            return new RangeClause(value.Lhs, value.Def, value.X, value.simpleStmt);
        }
    }
}}}}