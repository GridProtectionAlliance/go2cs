//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:26:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class syntax_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        [PromotedStruct(typeof(decl))]
        public partial struct FuncDecl
        {
            // decl structure promotion - sourced from value copy
            private readonly ptr<decl> m_declRef;

            private ref decl decl_val => ref m_declRef.Value;

            // Constructors
            public FuncDecl(NilType _)
            {
                this.Pragma = default;
                this.Recv = default;
                this.Name = default;
                this.TParamList = default;
                this.Type = default;
                this.Body = default;
                this.m_declRef = new ptr<decl>(new decl(nil));
            }

            public FuncDecl(Pragma Pragma = default, ref ptr<Field> Recv = default, ref ptr<Name> Name = default, slice<ptr<Field>> TParamList = default, ref ptr<FuncType> Type = default, ref ptr<BlockStmt> Body = default, decl decl = default)
            {
                this.Pragma = Pragma;
                this.Recv = Recv;
                this.Name = Name;
                this.TParamList = TParamList;
                this.Type = Type;
                this.Body = Body;
                this.m_declRef = new ptr<decl>(decl);
            }

            // Enable comparisons between nil and FuncDecl struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(FuncDecl value, NilType nil) => value.Equals(default(FuncDecl));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(FuncDecl value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, FuncDecl value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, FuncDecl value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator FuncDecl(NilType nil) => default(FuncDecl);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static FuncDecl FuncDecl_cast(dynamic value)
        {
            return new FuncDecl(value.Pragma, ref value.Recv, ref value.Name, value.TParamList, ref value.Type, ref value.Body, value.decl);
        }
    }
}}}}