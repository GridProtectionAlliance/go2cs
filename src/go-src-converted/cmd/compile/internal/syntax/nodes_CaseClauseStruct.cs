//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:40:45 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class syntax_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(node))]
        public partial struct CaseClause
        {
            // node structure promotion - sourced from value copy
            private readonly ptr<node> m_nodeRef;

            private ref node node_val => ref m_nodeRef.Value;

            public ref Pos pos => ref m_nodeRef.Value.pos;

            // Constructors
            public CaseClause(NilType _)
            {
                this.Cases = default;
                this.Body = default;
                this.Colon = default;
                this.m_nodeRef = new ptr<node>(new node(nil));
            }

            public CaseClause(Expr Cases = default, slice<Stmt> Body = default, Pos Colon = default, node node = default)
            {
                this.Cases = Cases;
                this.Body = Body;
                this.Colon = Colon;
                this.m_nodeRef = new ptr<node>(node);
            }

            // Enable comparisons between nil and CaseClause struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(CaseClause value, NilType nil) => value.Equals(default(CaseClause));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(CaseClause value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, CaseClause value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, CaseClause value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator CaseClause(NilType nil) => default(CaseClause);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static CaseClause CaseClause_cast(dynamic value)
        {
            return new CaseClause(value.Cases, value.Body, value.Colon, value.node);
        }
    }
}}}}