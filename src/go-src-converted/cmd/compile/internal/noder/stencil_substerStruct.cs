//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:14:13 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using @base = go.cmd.compile.@internal.@base_package;
using ir = go.cmd.compile.@internal.ir_package;
using typecheck = go.cmd.compile.@internal.typecheck_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class noder_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct subster
        {
            // Constructors
            public subster(NilType _)
            {
                this.g = default;
                this.isMethod = default;
                this.newf = default;
                this.tparams = default;
                this.targs = default;
                this.vars = default;
            }

            public subster(ref ptr<irgen> g = default, bool isMethod = default, ref ptr<ir.Func> newf = default, slice<ptr<types.Field>> tparams = default, slice<ir.Node> targs = default, map<ptr<ir.Name>, ptr<ir.Name>> vars = default)
            {
                this.g = g;
                this.isMethod = isMethod;
                this.newf = newf;
                this.tparams = tparams;
                this.targs = targs;
                this.vars = vars;
            }

            // Enable comparisons between nil and subster struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(subster value, NilType nil) => value.Equals(default(subster));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(subster value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, subster value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, subster value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator subster(NilType nil) => default(subster);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static subster subster_cast(dynamic value)
        {
            return new subster(ref value.g, value.isMethod, ref value.newf, value.tparams, value.targs, value.vars);
        }
    }
}}}}