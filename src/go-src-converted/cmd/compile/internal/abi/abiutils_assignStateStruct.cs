//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:00:54 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @base = go.cmd.compile.@internal.@base_package;
using ir = go.cmd.compile.@internal.ir_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using sync = go.sync_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class abi_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct assignState
        {
            // Constructors
            public assignState(NilType _)
            {
                this.rTotal = default;
                this.rUsed = default;
                this.pUsed = default;
                this.stackOffset = default;
                this.spillOffset = default;
            }

            public assignState(RegAmounts rTotal = default, RegAmounts rUsed = default, RegAmounts pUsed = default, long stackOffset = default, long spillOffset = default)
            {
                this.rTotal = rTotal;
                this.rUsed = rUsed;
                this.pUsed = pUsed;
                this.stackOffset = stackOffset;
                this.spillOffset = spillOffset;
            }

            // Enable comparisons between nil and assignState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(assignState value, NilType nil) => value.Equals(default(assignState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(assignState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, assignState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, assignState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator assignState(NilType nil) => default(assignState);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static assignState assignState_cast(dynamic value)
        {
            return new assignState(value.rTotal, value.rUsed, value.pUsed, value.stackOffset, value.spillOffset);
        }
    }
}}}}