//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:09:50 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using heap = go.container.heap_package;
using fmt = go.fmt_package;
using ir = go.cmd.compile.@internal.ir_package;
using ssa = go.cmd.compile.@internal.ssa_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssagen_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct blockHeap
        {
            // Constructors
            public blockHeap(NilType _)
            {
                this.a = default;
                this.level = default;
            }

            public blockHeap(slice<ptr<ssa.Block>> a = default, slice<int> level = default)
            {
                this.a = a;
                this.level = level;
            }

            // Enable comparisons between nil and blockHeap struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(blockHeap value, NilType nil) => value.Equals(default(blockHeap));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(blockHeap value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, blockHeap value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, blockHeap value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator blockHeap(NilType nil) => default(blockHeap);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static blockHeap blockHeap_cast(dynamic value)
        {
            return new blockHeap(value.a, value.level);
        }
    }
}}}}