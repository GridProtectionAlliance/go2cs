//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:23:05 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using heap = go.container.heap_package;
using fmt = go.fmt_package;
using ir = go.cmd.compile.@internal.ir_package;
using ssa = go.cmd.compile.@internal.ssa_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssagen_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct sparseSet
        {
            // Constructors
            public sparseSet(NilType _)
            {
                this.dense = default;
                this.sparse = default;
            }

            public sparseSet(slice<ssa.ID> dense = default, slice<int> sparse = default)
            {
                this.dense = dense;
                this.sparse = sparse;
            }

            // Enable comparisons between nil and sparseSet struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sparseSet value, NilType nil) => value.Equals(default(sparseSet));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sparseSet value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sparseSet value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sparseSet value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sparseSet(NilType nil) => default(sparseSet);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static sparseSet sparseSet_cast(dynamic value)
        {
            return new sparseSet(value.dense, value.sparse);
        }
    }
}}}}