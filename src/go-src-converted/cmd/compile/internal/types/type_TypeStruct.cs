//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:09:51 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using obj = go.cmd.@internal.obj_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class types_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Type
        {
            // Constructors
            public Type(NilType _)
            {
                this.Width = default;
                this.methods = default;
                this.allMethods = default;
                this.Nod = default;
                this.Orig = default;
                this.Sym = default;
                this.Vargen = default;
                this.Etype = default;
                this.Align = default;
                this.flags = default;
            }

            public Type(long Width = default, Fields methods = default, Fields allMethods = default, ref ptr<Node> Nod = default, ref ptr<Type> Orig = default, ref ptr<Sym> Sym = default, int Vargen = default, EType Etype = default, byte Align = default, bitset8 flags = default)
            {
                this.Width = Width;
                this.methods = methods;
                this.allMethods = allMethods;
                this.Nod = Nod;
                this.Orig = Orig;
                this.Sym = Sym;
                this.Vargen = Vargen;
                this.Etype = Etype;
                this.Align = Align;
                this.flags = flags;
            }

            // Enable comparisons between nil and Type struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Type value, NilType nil) => value.Equals(default(Type));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Type value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Type value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Type value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Type(NilType nil) => default(Type);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Type Type_cast(dynamic value)
        {
            return new Type(value.Width, value.methods, value.allMethods, ref value.Nod, ref value.Orig, ref value.Sym, value.Vargen, value.Etype, value.Align, value.flags);
        }
    }
}}}}