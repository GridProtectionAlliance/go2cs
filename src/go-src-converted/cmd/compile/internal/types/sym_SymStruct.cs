//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:47:54 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @base = go.cmd.compile.@internal.@base_package;
using obj = go.cmd.@internal.obj_package;
using src = go.cmd.@internal.src_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class types_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Sym
        {
            // Constructors
            public Sym(NilType _)
            {
                this.Linkname = default;
                this.Pkg = default;
                this.Name = default;
                this.Def = default;
                this.Block = default;
                this.Lastlineno = default;
                this.flags = default;
            }

            public Sym(@string Linkname = default, ref ptr<Pkg> Pkg = default, @string Name = default, Object Def = default, int Block = default, src.XPos Lastlineno = default, bitset8 flags = default)
            {
                this.Linkname = Linkname;
                this.Pkg = Pkg;
                this.Name = Name;
                this.Def = Def;
                this.Block = Block;
                this.Lastlineno = Lastlineno;
                this.flags = flags;
            }

            // Enable comparisons between nil and Sym struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Sym value, NilType nil) => value.Equals(default(Sym));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Sym value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Sym value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Sym value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Sym(NilType nil) => default(Sym);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Sym Sym_cast(dynamic value)
        {
            return new Sym(value.Linkname, ref value.Pkg, value.Name, value.Def, value.Block, value.Lastlineno, value.flags);
        }
    }
}}}}