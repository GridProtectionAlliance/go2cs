// Code generated by "stringer -type Kind -trimprefix T type.go"; DO NOT EDIT.

// package types -- go2cs converted at 2022 March 06 22:47:51 UTC
// import "cmd/compile/internal/types" ==> using types = go.cmd.compile.@internal.types_package
// Original source: C:\Program Files\Go\src\cmd\compile\internal\types\kind_string.go
using strconv = go.strconv_package;

namespace go.cmd.compile.@internal;

public static partial class types_package {

private static void _() { 
    // An "invalid array index" compiler error signifies that the constant values have changed.
    // Re-run the stringer command to generate them again.
    var x = default;
    _ = x[Txxx - 0];
    _ = x[TINT8 - 1];
    _ = x[TUINT8 - 2];
    _ = x[TINT16 - 3];
    _ = x[TUINT16 - 4];
    _ = x[TINT32 - 5];
    _ = x[TUINT32 - 6];
    _ = x[TINT64 - 7];
    _ = x[TUINT64 - 8];
    _ = x[TINT - 9];
    _ = x[TUINT - 10];
    _ = x[TUINTPTR - 11];
    _ = x[TCOMPLEX64 - 12];
    _ = x[TCOMPLEX128 - 13];
    _ = x[TFLOAT32 - 14];
    _ = x[TFLOAT64 - 15];
    _ = x[TBOOL - 16];
    _ = x[TPTR - 17];
    _ = x[TFUNC - 18];
    _ = x[TSLICE - 19];
    _ = x[TARRAY - 20];
    _ = x[TSTRUCT - 21];
    _ = x[TCHAN - 22];
    _ = x[TMAP - 23];
    _ = x[TINTER - 24];
    _ = x[TFORW - 25];
    _ = x[TANY - 26];
    _ = x[TSTRING - 27];
    _ = x[TUNSAFEPTR - 28];
    _ = x[TTYPEPARAM - 29];
    _ = x[TIDEAL - 30];
    _ = x[TNIL - 31];
    _ = x[TBLANK - 32];
    _ = x[TFUNCARGS - 33];
    _ = x[TCHANARGS - 34];
    _ = x[TSSA - 35];
    _ = x[TTUPLE - 36];
    _ = x[TRESULTS - 37];
    _ = x[NTYPE - 38];

}

private static readonly @string _Kind_name = "xxxINT8UINT8INT16UINT16INT32UINT32INT64UINT64INTUINTUINTPTRCOMPLEX64COMPLEX128FLOAT32FLOAT64BOOLPTRFUNCSLICEARRAYSTRUCTCHANMAPINTERFORWANYSTRINGUNSAFEPTRTYPEPARAMIDEALNILBLANKFUNCARGSCHANARGSSSATUPLERESULTSNTYPE";



private static array<byte> _Kind_index = new array<byte>(new byte[] { 0, 3, 7, 12, 17, 23, 28, 34, 39, 45, 48, 52, 59, 68, 78, 85, 92, 96, 99, 103, 108, 113, 119, 123, 126, 131, 135, 138, 144, 153, 162, 167, 170, 175, 183, 191, 194, 199, 206, 211 });

public static @string String(this Kind i) {
    if (i >= Kind(len(_Kind_index) - 1)) {
        return "Kind(" + strconv.FormatInt(int64(i), 10) + ")";
    }
    return _Kind_name[(int)_Kind_index[i]..(int)_Kind_index[i + 1]];

}

} // end types_package
