//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:10:50 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using obj = go.cmd.@internal.obj_package;
using fmt = go.fmt_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct regInfo
        {
            // Constructors
            public regInfo(NilType _)
            {
                this.inputs = default;
                this.clobbers = default;
                this.outputs = default;
            }

            public regInfo(slice<inputInfo> inputs = default, regMask clobbers = default, slice<outputInfo> outputs = default)
            {
                this.inputs = inputs;
                this.clobbers = clobbers;
                this.outputs = outputs;
            }

            // Enable comparisons between nil and regInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(regInfo value, NilType nil) => value.Equals(default(regInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(regInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, regInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, regInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator regInfo(NilType nil) => default(regInfo);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static regInfo regInfo_cast(dynamic value)
        {
            return new regInfo(value.inputs, value.clobbers, value.outputs);
        }
    }
}}}}