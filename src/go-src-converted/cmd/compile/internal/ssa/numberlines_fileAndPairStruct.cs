//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:10:49 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using obj = go.cmd.@internal.obj_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using sort = go.sort_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct fileAndPair
        {
            // Constructors
            public fileAndPair(NilType _)
            {
                this.f = default;
                this.lp = default;
            }

            public fileAndPair(int f = default, lineRange lp = default)
            {
                this.f = f;
                this.lp = lp;
            }

            // Enable comparisons between nil and fileAndPair struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(fileAndPair value, NilType nil) => value.Equals(default(fileAndPair));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(fileAndPair value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, fileAndPair value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, fileAndPair value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator fileAndPair(NilType nil) => default(fileAndPair);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static fileAndPair fileAndPair_cast(dynamic value)
        {
            return new fileAndPair(value.f, value.lp);
        }
    }
}}}}