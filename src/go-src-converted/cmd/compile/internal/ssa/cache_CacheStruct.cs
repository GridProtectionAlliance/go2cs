//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:49:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using obj = go.cmd.@internal.obj_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Cache
        {
            // Constructors
            public Cache(NilType _)
            {
                this.values = default;
                this.blocks = default;
                this.locs = default;
                this.stackAllocState = default;
                this.domblockstore = default;
                this.scrSparseSet = default;
                this.scrSparseMap = default;
                this.scrPoset = default;
                this.regallocValues = default;
                this.ValueToProgAfter = default;
                this.debugState = default;
            }

            public Cache(array<Value> values = default, array<Block> blocks = default, array<Location> locs = default, ref ptr<stackAllocState> stackAllocState = default, slice<ID> domblockstore = default, slice<ptr<sparseSet>> scrSparseSet = default, slice<ptr<sparseMap>> scrSparseMap = default, slice<ptr<poset>> scrPoset = default, slice<valState> regallocValues = default, slice<ptr<obj.Prog>> ValueToProgAfter = default, debugState debugState = default)
            {
                this.values = values;
                this.blocks = blocks;
                this.locs = locs;
                this.stackAllocState = stackAllocState;
                this.domblockstore = domblockstore;
                this.scrSparseSet = scrSparseSet;
                this.scrSparseMap = scrSparseMap;
                this.scrPoset = scrPoset;
                this.regallocValues = regallocValues;
                this.ValueToProgAfter = ValueToProgAfter;
                this.debugState = debugState;
            }

            // Enable comparisons between nil and Cache struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Cache value, NilType nil) => value.Equals(default(Cache));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Cache value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Cache value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Cache value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Cache(NilType nil) => default(Cache);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Cache Cache_cast(dynamic value)
        {
            return new Cache(value.values, value.blocks, value.locs, ref value.stackAllocState, value.domblockstore, value.scrSparseSet, value.scrSparseMap, value.scrPoset, value.regallocValues, value.ValueToProgAfter, value.debugState);
        }
    }
}}}}