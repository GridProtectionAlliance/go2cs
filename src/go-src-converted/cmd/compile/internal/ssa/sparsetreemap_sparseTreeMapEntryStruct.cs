//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:26:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct sparseTreeMapEntry
        {
            // Constructors
            public sparseTreeMapEntry(NilType _)
            {
                this.index = default;
                this.block = default;
                this.sparseParent = default;
                this.adjust = default;
            }

            public sparseTreeMapEntry(ref ptr<SparseTreeNode> index = default, ref ptr<Block> block = default, ref ptr<sparseTreeMapEntry> sparseParent = default, int adjust = default)
            {
                this.index = index;
                this.block = block;
                this.sparseParent = sparseParent;
                this.adjust = adjust;
            }

            // Enable comparisons between nil and sparseTreeMapEntry struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(sparseTreeMapEntry value, NilType nil) => value.Equals(default(sparseTreeMapEntry));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(sparseTreeMapEntry value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, sparseTreeMapEntry value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, sparseTreeMapEntry value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator sparseTreeMapEntry(NilType nil) => default(sparseTreeMapEntry);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static sparseTreeMapEntry sparseTreeMapEntry_cast(dynamic value)
        {
            return new sparseTreeMapEntry(ref value.index, ref value.block, ref value.sparseParent, value.adjust);
        }
    }
}}}}