//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:10:35 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct queueEntry
        {
            // Constructors
            public queueEntry(NilType _)
            {
                this.bid = default;
                this.cid = default;
            }

            public queueEntry(ID bid = default, ID cid = default)
            {
                this.bid = bid;
                this.cid = cid;
            }

            // Enable comparisons between nil and queueEntry struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(queueEntry value, NilType nil) => value.Equals(default(queueEntry));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(queueEntry value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, queueEntry value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, queueEntry value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator queueEntry(NilType nil) => default(queueEntry);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static queueEntry queueEntry_cast(dynamic value)
        {
            return new queueEntry(value.bid, value.cid);
        }
    }
}}}}