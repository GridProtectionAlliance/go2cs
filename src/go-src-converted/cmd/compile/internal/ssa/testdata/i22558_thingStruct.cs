//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:22:53 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using os = go.os_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct thing
        {
            // Constructors
            public thing(NilType _)
            {
                this.name = default;
                this.next = default;
                this.self = default;
                this.stuff = default;
            }

            public thing(@string name = default, ref ptr<thing> next = default, ref ptr<thing> self = default, slice<big> stuff = default)
            {
                this.name = name;
                this.next = next;
                this.self = self;
                this.stuff = stuff;
            }

            // Enable comparisons between nil and thing struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(thing value, NilType nil) => value.Equals(default(thing));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(thing value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, thing value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, thing value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator thing(NilType nil) => default(thing);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static thing thing_cast(dynamic value)
        {
            return new thing(value.name, ref value.next, ref value.self, value.stuff);
        }
    }
}