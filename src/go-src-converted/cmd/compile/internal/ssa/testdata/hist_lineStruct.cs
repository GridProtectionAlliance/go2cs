//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:22:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using fmt = go.fmt_package;
using io = go.io_package;
using os = go.os_package;
using strconv = go.strconv_package;
using strings = go.strings_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct line
        {
            // Constructors
            public line(NilType _)
            {
                this.begin = default;
                this.end = default;
            }

            public line(point begin = default, point end = default)
            {
                this.begin = begin;
                this.end = end;
            }

            // Enable comparisons between nil and line struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(line value, NilType nil) => value.Equals(default(line));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(line value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, line value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, line value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator line(NilType nil) => default(line);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static line line_cast(dynamic value)
        {
            return new line(value.begin, value.end);
        }
    }
}