//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:50:54 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using math = go.math_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct factsTable
        {
            // Constructors
            public factsTable(NilType _)
            {
                this.unsat = default;
                this.unsatDepth = default;
                this.facts = default;
                this.stack = default;
                this.orderS = default;
                this.orderU = default;
                this.limits = default;
                this.limitStack = default;
                this.lens = default;
                this.caps = default;
                this.zero = default;
            }

            public factsTable(bool unsat = default, nint unsatDepth = default, map<pair, relation> facts = default, slice<fact> stack = default, ref ptr<poset> orderS = default, ref ptr<poset> orderU = default, map<ID, limit> limits = default, slice<limitFact> limitStack = default, map<ID, ptr<Value>> lens = default, map<ID, ptr<Value>> caps = default, ref ptr<Value> zero = default)
            {
                this.unsat = unsat;
                this.unsatDepth = unsatDepth;
                this.facts = facts;
                this.stack = stack;
                this.orderS = orderS;
                this.orderU = orderU;
                this.limits = limits;
                this.limitStack = limitStack;
                this.lens = lens;
                this.caps = caps;
                this.zero = zero;
            }

            // Enable comparisons between nil and factsTable struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(factsTable value, NilType nil) => value.Equals(default(factsTable));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(factsTable value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, factsTable value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, factsTable value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator factsTable(NilType nil) => default(factsTable);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static factsTable factsTable_cast(dynamic value)
        {
            return new factsTable(value.unsat, value.unsatDepth, value.facts, value.stack, ref value.orderS, ref value.orderU, value.limits, value.limitStack, value.lens, value.caps, ref value.zero);
        }
    }
}}}}