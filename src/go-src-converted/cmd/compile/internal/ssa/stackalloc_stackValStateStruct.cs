//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:39:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct stackValState
        {
            // Constructors
            public stackValState(NilType _)
            {
                this.typ = default;
                this.spill = default;
                this.needSlot = default;
                this.isArg = default;
            }

            public stackValState(ref ptr<types.Type> typ = default, ref ptr<Value> spill = default, bool needSlot = default, bool isArg = default)
            {
                this.typ = typ;
                this.spill = spill;
                this.needSlot = needSlot;
                this.isArg = isArg;
            }

            // Enable comparisons between nil and stackValState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(stackValState value, NilType nil) => value.Equals(default(stackValState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(stackValState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, stackValState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, stackValState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator stackValState(NilType nil) => default(stackValState);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static stackValState stackValState_cast(dynamic value)
        {
            return new stackValState(ref value.typ, ref value.spill, value.needSlot, value.isArg);
        }
    }
}}}}