//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:01:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using types = go.cmd.compile.@internal.types_package;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct rewrite
        {
            // Constructors
            public rewrite(NilType _)
            {
                this.before = default;
                this.after = default;
                this.rewrites = default;
            }

            public rewrite(ref ptr<Value> before = default, ref ptr<Value> after = default, slice<rewriteTarget> rewrites = default)
            {
                this.before = before;
                this.after = after;
                this.rewrites = rewrites;
            }

            // Enable comparisons between nil and rewrite struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(rewrite value, NilType nil) => value.Equals(default(rewrite));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(rewrite value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, rewrite value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, rewrite value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator rewrite(NilType nil) => default(rewrite);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static rewrite rewrite_cast(dynamic value)
        {
            return new rewrite(ref value.before, ref value.after, value.rewrites);
        }
    }
}}}}