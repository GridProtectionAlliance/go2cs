//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:01:38 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using big = go.math.big_package;
using bits = go.math.bits_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct umagicData
        {
            // Constructors
            public umagicData(NilType _)
            {
                this.s = default;
                this.m = default;
            }

            public umagicData(long s = default, ulong m = default)
            {
                this.s = s;
                this.m = m;
            }

            // Enable comparisons between nil and umagicData struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(umagicData value, NilType nil) => value.Equals(default(umagicData));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(umagicData value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, umagicData value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, umagicData value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator umagicData(NilType nil) => default(umagicData);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static umagicData umagicData_cast(dynamic value)
        {
            return new umagicData(value.s, value.m);
        }
    }
}}}}