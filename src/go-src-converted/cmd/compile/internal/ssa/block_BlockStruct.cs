//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:09:55 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Block
        {
            // Constructors
            public Block(NilType _)
            {
                this.ID = default;
                this.Pos = default;
                this.Kind = default;
                this.Likely = default;
                this.FlagsLiveAtEnd = default;
                this.Succs = default;
                this.Preds = default;
                this.Controls = default;
                this.AuxInt = default;
                this.Values = default;
                this.Func = default;
                this.succstorage = default;
                this.predstorage = default;
                this.valstorage = default;
            }

            public Block(ID ID = default, src.XPos Pos = default, BlockKind Kind = default, BranchPrediction Likely = default, bool FlagsLiveAtEnd = default, slice<Edge> Succs = default, slice<Edge> Preds = default, array<ptr<Value>> Controls = default, long AuxInt = default, slice<ptr<Value>> Values = default, ref ptr<Func> Func = default, array<Edge> succstorage = default, array<Edge> predstorage = default, array<ptr<Value>> valstorage = default)
            {
                this.ID = ID;
                this.Pos = Pos;
                this.Kind = Kind;
                this.Likely = Likely;
                this.FlagsLiveAtEnd = FlagsLiveAtEnd;
                this.Succs = Succs;
                this.Preds = Preds;
                this.Controls = Controls;
                this.AuxInt = AuxInt;
                this.Values = Values;
                this.Func = Func;
                this.succstorage = succstorage;
                this.predstorage = predstorage;
                this.valstorage = valstorage;
            }

            // Enable comparisons between nil and Block struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Block value, NilType nil) => value.Equals(default(Block));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Block value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Block value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Block value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Block(NilType nil) => default(Block);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Block Block_cast(dynamic value)
        {
            return new Block(value.ID, value.Pos, value.Kind, value.Likely, value.FlagsLiveAtEnd, value.Succs, value.Preds, value.Controls, value.AuxInt, value.Values, ref value.Func, value.succstorage, value.predstorage, value.valstorage);
        }
    }
}}}}