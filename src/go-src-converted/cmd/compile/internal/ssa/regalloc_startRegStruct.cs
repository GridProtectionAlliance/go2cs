//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:02:30 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @base = go.cmd.compile.@internal.@base_package;
using ir = go.cmd.compile.@internal.ir_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using sys = go.cmd.@internal.sys_package;
using fmt = go.fmt_package;
using buildcfg = go.@internal.buildcfg_package;
using bits = go.math.bits_package;
using @unsafe = go.@unsafe_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct startReg
        {
            // Constructors
            public startReg(NilType _)
            {
                this.r = default;
                this.v = default;
                this.c = default;
                this.pos = default;
            }

            public startReg(register r = default, ref ptr<Value> v = default, ref ptr<Value> c = default, src.XPos pos = default)
            {
                this.r = r;
                this.v = v;
                this.c = c;
                this.pos = pos;
            }

            // Enable comparisons between nil and startReg struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(startReg value, NilType nil) => value.Equals(default(startReg));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(startReg value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, startReg value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, startReg value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator startReg(NilType nil) => default(startReg);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static startReg startReg_cast(dynamic value)
        {
            return new startReg(value.r, ref value.v, ref value.c, value.pos);
        }
    }
}}}}