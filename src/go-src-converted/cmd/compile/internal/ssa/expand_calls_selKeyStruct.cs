//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:01:21 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using abi = go.cmd.compile.@internal.abi_package;
using @base = go.cmd.compile.@internal.@base_package;
using ir = go.cmd.compile.@internal.ir_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct selKey
        {
            // Constructors
            public selKey(NilType _)
            {
                this.from = default;
                this.offsetOrIndex = default;
                this.size = default;
                this.typ = default;
            }

            public selKey(ref ptr<Value> from = default, long offsetOrIndex = default, long size = default, ref ptr<types.Type> typ = default)
            {
                this.from = from;
                this.offsetOrIndex = offsetOrIndex;
                this.size = size;
                this.typ = typ;
            }

            // Enable comparisons between nil and selKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(selKey value, NilType nil) => value.Equals(default(selKey));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(selKey value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, selKey value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, selKey value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator selKey(NilType nil) => default(selKey);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static selKey selKey_cast(dynamic value)
        {
            return new selKey(ref value.from, value.offsetOrIndex, value.size, ref value.typ);
        }
    }
}}}}