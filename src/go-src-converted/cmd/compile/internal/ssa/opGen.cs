// Code generated from gen/*Ops.go; DO NOT EDIT.

// package ssa -- go2cs converted at 2022 March 13 06:02:06 UTC
// import "cmd/compile/internal/ssa" ==> using ssa = go.cmd.compile.@internal.ssa_package
// Original source: C:\Program Files\Go\src\cmd\compile\internal\ssa\opGen.go
namespace go.cmd.compile.@internal;

using obj = cmd.@internal.obj_package;
using arm = cmd.@internal.obj.arm_package;
using arm64 = cmd.@internal.obj.arm64_package;
using mips = cmd.@internal.obj.mips_package;
using ppc64 = cmd.@internal.obj.ppc64_package;
using riscv = cmd.@internal.obj.riscv_package;
using s390x = cmd.@internal.obj.s390x_package;
using wasm = cmd.@internal.obj.wasm_package;
using x86 = cmd.@internal.obj.x86_package;

public static partial class ssa_package {

public static readonly BlockKind BlockInvalid = iota;

public static readonly var Block386EQ = 0;
public static readonly var Block386NE = 1;
public static readonly var Block386LT = 2;
public static readonly var Block386LE = 3;
public static readonly var Block386GT = 4;
public static readonly var Block386GE = 5;
public static readonly var Block386OS = 6;
public static readonly var Block386OC = 7;
public static readonly var Block386ULT = 8;
public static readonly var Block386ULE = 9;
public static readonly var Block386UGT = 10;
public static readonly var Block386UGE = 11;
public static readonly var Block386EQF = 12;
public static readonly var Block386NEF = 13;
public static readonly var Block386ORD = 14;
public static readonly var Block386NAN = 15;

public static readonly var BlockAMD64EQ = 16;
public static readonly var BlockAMD64NE = 17;
public static readonly var BlockAMD64LT = 18;
public static readonly var BlockAMD64LE = 19;
public static readonly var BlockAMD64GT = 20;
public static readonly var BlockAMD64GE = 21;
public static readonly var BlockAMD64OS = 22;
public static readonly var BlockAMD64OC = 23;
public static readonly var BlockAMD64ULT = 24;
public static readonly var BlockAMD64ULE = 25;
public static readonly var BlockAMD64UGT = 26;
public static readonly var BlockAMD64UGE = 27;
public static readonly var BlockAMD64EQF = 28;
public static readonly var BlockAMD64NEF = 29;
public static readonly var BlockAMD64ORD = 30;
public static readonly var BlockAMD64NAN = 31;

public static readonly var BlockARMEQ = 32;
public static readonly var BlockARMNE = 33;
public static readonly var BlockARMLT = 34;
public static readonly var BlockARMLE = 35;
public static readonly var BlockARMGT = 36;
public static readonly var BlockARMGE = 37;
public static readonly var BlockARMULT = 38;
public static readonly var BlockARMULE = 39;
public static readonly var BlockARMUGT = 40;
public static readonly var BlockARMUGE = 41;
public static readonly var BlockARMLTnoov = 42;
public static readonly var BlockARMLEnoov = 43;
public static readonly var BlockARMGTnoov = 44;
public static readonly var BlockARMGEnoov = 45;

public static readonly var BlockARM64EQ = 46;
public static readonly var BlockARM64NE = 47;
public static readonly var BlockARM64LT = 48;
public static readonly var BlockARM64LE = 49;
public static readonly var BlockARM64GT = 50;
public static readonly var BlockARM64GE = 51;
public static readonly var BlockARM64ULT = 52;
public static readonly var BlockARM64ULE = 53;
public static readonly var BlockARM64UGT = 54;
public static readonly var BlockARM64UGE = 55;
public static readonly var BlockARM64Z = 56;
public static readonly var BlockARM64NZ = 57;
public static readonly var BlockARM64ZW = 58;
public static readonly var BlockARM64NZW = 59;
public static readonly var BlockARM64TBZ = 60;
public static readonly var BlockARM64TBNZ = 61;
public static readonly var BlockARM64FLT = 62;
public static readonly var BlockARM64FLE = 63;
public static readonly var BlockARM64FGT = 64;
public static readonly var BlockARM64FGE = 65;
public static readonly var BlockARM64LTnoov = 66;
public static readonly var BlockARM64LEnoov = 67;
public static readonly var BlockARM64GTnoov = 68;
public static readonly var BlockARM64GEnoov = 69;

public static readonly var BlockMIPSEQ = 70;
public static readonly var BlockMIPSNE = 71;
public static readonly var BlockMIPSLTZ = 72;
public static readonly var BlockMIPSLEZ = 73;
public static readonly var BlockMIPSGTZ = 74;
public static readonly var BlockMIPSGEZ = 75;
public static readonly var BlockMIPSFPT = 76;
public static readonly var BlockMIPSFPF = 77;

public static readonly var BlockMIPS64EQ = 78;
public static readonly var BlockMIPS64NE = 79;
public static readonly var BlockMIPS64LTZ = 80;
public static readonly var BlockMIPS64LEZ = 81;
public static readonly var BlockMIPS64GTZ = 82;
public static readonly var BlockMIPS64GEZ = 83;
public static readonly var BlockMIPS64FPT = 84;
public static readonly var BlockMIPS64FPF = 85;

public static readonly var BlockPPC64EQ = 86;
public static readonly var BlockPPC64NE = 87;
public static readonly var BlockPPC64LT = 88;
public static readonly var BlockPPC64LE = 89;
public static readonly var BlockPPC64GT = 90;
public static readonly var BlockPPC64GE = 91;
public static readonly var BlockPPC64FLT = 92;
public static readonly var BlockPPC64FLE = 93;
public static readonly var BlockPPC64FGT = 94;
public static readonly var BlockPPC64FGE = 95;

public static readonly var BlockRISCV64BEQ = 96;
public static readonly var BlockRISCV64BNE = 97;
public static readonly var BlockRISCV64BLT = 98;
public static readonly var BlockRISCV64BGE = 99;
public static readonly var BlockRISCV64BLTU = 100;
public static readonly var BlockRISCV64BGEU = 101;
public static readonly var BlockRISCV64BEQZ = 102;
public static readonly var BlockRISCV64BNEZ = 103;
public static readonly var BlockRISCV64BLEZ = 104;
public static readonly var BlockRISCV64BGEZ = 105;
public static readonly var BlockRISCV64BLTZ = 106;
public static readonly var BlockRISCV64BGTZ = 107;

public static readonly var BlockS390XBRC = 108;
public static readonly var BlockS390XCRJ = 109;
public static readonly var BlockS390XCGRJ = 110;
public static readonly var BlockS390XCLRJ = 111;
public static readonly var BlockS390XCLGRJ = 112;
public static readonly var BlockS390XCIJ = 113;
public static readonly var BlockS390XCGIJ = 114;
public static readonly var BlockS390XCLIJ = 115;
public static readonly var BlockS390XCLGIJ = 116;

public static readonly var BlockPlain = 117;
public static readonly var BlockIf = 118;
public static readonly var BlockDefer = 119;
public static readonly var BlockRet = 120;
public static readonly var BlockRetJmp = 121;
public static readonly var BlockExit = 122;
public static readonly var BlockFirst = 123;

private static array<@string> blockString = new array<@string>(InitKeyedValues<@string>((BlockInvalid, "BlockInvalid"), (Block386EQ, "EQ"), (Block386NE, "NE"), (Block386LT, "LT"), (Block386LE, "LE"), (Block386GT, "GT"), (Block386GE, "GE"), (Block386OS, "OS"), (Block386OC, "OC"), (Block386ULT, "ULT"), (Block386ULE, "ULE"), (Block386UGT, "UGT"), (Block386UGE, "UGE"), (Block386EQF, "EQF"), (Block386NEF, "NEF"), (Block386ORD, "ORD"), (Block386NAN, "NAN"), (BlockAMD64EQ, "EQ"), (BlockAMD64NE, "NE"), (BlockAMD64LT, "LT"), (BlockAMD64LE, "LE"), (BlockAMD64GT, "GT"), (BlockAMD64GE, "GE"), (BlockAMD64OS, "OS"), (BlockAMD64OC, "OC"), (BlockAMD64ULT, "ULT"), (BlockAMD64ULE, "ULE"), (BlockAMD64UGT, "UGT"), (BlockAMD64UGE, "UGE"), (BlockAMD64EQF, "EQF"), (BlockAMD64NEF, "NEF"), (BlockAMD64ORD, "ORD"), (BlockAMD64NAN, "NAN"), (BlockARMEQ, "EQ"), (BlockARMNE, "NE"), (BlockARMLT, "LT"), (BlockARMLE, "LE"), (BlockARMGT, "GT"), (BlockARMGE, "GE"), (BlockARMULT, "ULT"), (BlockARMULE, "ULE"), (BlockARMUGT, "UGT"), (BlockARMUGE, "UGE"), (BlockARMLTnoov, "LTnoov"), (BlockARMLEnoov, "LEnoov"), (BlockARMGTnoov, "GTnoov"), (BlockARMGEnoov, "GEnoov"), (BlockARM64EQ, "EQ"), (BlockARM64NE, "NE"), (BlockARM64LT, "LT"), (BlockARM64LE, "LE"), (BlockARM64GT, "GT"), (BlockARM64GE, "GE"), (BlockARM64ULT, "ULT"), (BlockARM64ULE, "ULE"), (BlockARM64UGT, "UGT"), (BlockARM64UGE, "UGE"), (BlockARM64Z, "Z"), (BlockARM64NZ, "NZ"), (BlockARM64ZW, "ZW"), (BlockARM64NZW, "NZW"), (BlockARM64TBZ, "TBZ"), (BlockARM64TBNZ, "TBNZ"), (BlockARM64FLT, "FLT"), (BlockARM64FLE, "FLE"), (BlockARM64FGT, "FGT"), (BlockARM64FGE, "FGE"), (BlockARM64LTnoov, "LTnoov"), (BlockARM64LEnoov, "LEnoov"), (BlockARM64GTnoov, "GTnoov"), (BlockARM64GEnoov, "GEnoov"), (BlockMIPSEQ, "EQ"), (BlockMIPSNE, "NE"), (BlockMIPSLTZ, "LTZ"), (BlockMIPSLEZ, "LEZ"), (BlockMIPSGTZ, "GTZ"), (BlockMIPSGEZ, "GEZ"), (BlockMIPSFPT, "FPT"), (BlockMIPSFPF, "FPF"), (BlockMIPS64EQ, "EQ"), (BlockMIPS64NE, "NE"), (BlockMIPS64LTZ, "LTZ"), (BlockMIPS64LEZ, "LEZ"), (BlockMIPS64GTZ, "GTZ"), (BlockMIPS64GEZ, "GEZ"), (BlockMIPS64FPT, "FPT"), (BlockMIPS64FPF, "FPF"), (BlockPPC64EQ, "EQ"), (BlockPPC64NE, "NE"), (BlockPPC64LT, "LT"), (BlockPPC64LE, "LE"), (BlockPPC64GT, "GT"), (BlockPPC64GE, "GE"), (BlockPPC64FLT, "FLT"), (BlockPPC64FLE, "FLE"), (BlockPPC64FGT, "FGT"), (BlockPPC64FGE, "FGE"), (BlockRISCV64BEQ, "BEQ"), (BlockRISCV64BNE, "BNE"), (BlockRISCV64BLT, "BLT"), (BlockRISCV64BGE, "BGE"), (BlockRISCV64BLTU, "BLTU"), (BlockRISCV64BGEU, "BGEU"), (BlockRISCV64BEQZ, "BEQZ"), (BlockRISCV64BNEZ, "BNEZ"), (BlockRISCV64BLEZ, "BLEZ"), (BlockRISCV64BGEZ, "BGEZ"), (BlockRISCV64BLTZ, "BLTZ"), (BlockRISCV64BGTZ, "BGTZ"), (BlockS390XBRC, "BRC"), (BlockS390XCRJ, "CRJ"), (BlockS390XCGRJ, "CGRJ"), (BlockS390XCLRJ, "CLRJ"), (BlockS390XCLGRJ, "CLGRJ"), (BlockS390XCIJ, "CIJ"), (BlockS390XCGIJ, "CGIJ"), (BlockS390XCLIJ, "CLIJ"), (BlockS390XCLGIJ, "CLGIJ"), (BlockPlain, "Plain"), (BlockIf, "If"), (BlockDefer, "Defer"), (BlockRet, "Ret"), (BlockRetJmp, "RetJmp"), (BlockExit, "Exit"), (BlockFirst, "First")));

public static @string String(this BlockKind k) {
    return blockString[k];
}
public static @string AuxIntType(this BlockKind k) {

    if (k == BlockARM64TBZ) 
        return "int64";
    else if (k == BlockARM64TBNZ) 
        return "int64";
    else if (k == BlockS390XCIJ) 
        return "int8";
    else if (k == BlockS390XCGIJ) 
        return "int8";
    else if (k == BlockS390XCLIJ) 
        return "uint8";
    else if (k == BlockS390XCLGIJ) 
        return "uint8";
        return "";
}

public static readonly Op OpInvalid = iota;

public static readonly var Op386ADDSS = 0;
public static readonly var Op386ADDSD = 1;
public static readonly var Op386SUBSS = 2;
public static readonly var Op386SUBSD = 3;
public static readonly var Op386MULSS = 4;
public static readonly var Op386MULSD = 5;
public static readonly var Op386DIVSS = 6;
public static readonly var Op386DIVSD = 7;
public static readonly var Op386MOVSSload = 8;
public static readonly var Op386MOVSDload = 9;
public static readonly var Op386MOVSSconst = 10;
public static readonly var Op386MOVSDconst = 11;
public static readonly var Op386MOVSSloadidx1 = 12;
public static readonly var Op386MOVSSloadidx4 = 13;
public static readonly var Op386MOVSDloadidx1 = 14;
public static readonly var Op386MOVSDloadidx8 = 15;
public static readonly var Op386MOVSSstore = 16;
public static readonly var Op386MOVSDstore = 17;
public static readonly var Op386MOVSSstoreidx1 = 18;
public static readonly var Op386MOVSSstoreidx4 = 19;
public static readonly var Op386MOVSDstoreidx1 = 20;
public static readonly var Op386MOVSDstoreidx8 = 21;
public static readonly var Op386ADDSSload = 22;
public static readonly var Op386ADDSDload = 23;
public static readonly var Op386SUBSSload = 24;
public static readonly var Op386SUBSDload = 25;
public static readonly var Op386MULSSload = 26;
public static readonly var Op386MULSDload = 27;
public static readonly var Op386DIVSSload = 28;
public static readonly var Op386DIVSDload = 29;
public static readonly var Op386ADDL = 30;
public static readonly var Op386ADDLconst = 31;
public static readonly var Op386ADDLcarry = 32;
public static readonly var Op386ADDLconstcarry = 33;
public static readonly var Op386ADCL = 34;
public static readonly var Op386ADCLconst = 35;
public static readonly var Op386SUBL = 36;
public static readonly var Op386SUBLconst = 37;
public static readonly var Op386SUBLcarry = 38;
public static readonly var Op386SUBLconstcarry = 39;
public static readonly var Op386SBBL = 40;
public static readonly var Op386SBBLconst = 41;
public static readonly var Op386MULL = 42;
public static readonly var Op386MULLconst = 43;
public static readonly var Op386MULLU = 44;
public static readonly var Op386HMULL = 45;
public static readonly var Op386HMULLU = 46;
public static readonly var Op386MULLQU = 47;
public static readonly var Op386AVGLU = 48;
public static readonly var Op386DIVL = 49;
public static readonly var Op386DIVW = 50;
public static readonly var Op386DIVLU = 51;
public static readonly var Op386DIVWU = 52;
public static readonly var Op386MODL = 53;
public static readonly var Op386MODW = 54;
public static readonly var Op386MODLU = 55;
public static readonly var Op386MODWU = 56;
public static readonly var Op386ANDL = 57;
public static readonly var Op386ANDLconst = 58;
public static readonly var Op386ORL = 59;
public static readonly var Op386ORLconst = 60;
public static readonly var Op386XORL = 61;
public static readonly var Op386XORLconst = 62;
public static readonly var Op386CMPL = 63;
public static readonly var Op386CMPW = 64;
public static readonly var Op386CMPB = 65;
public static readonly var Op386CMPLconst = 66;
public static readonly var Op386CMPWconst = 67;
public static readonly var Op386CMPBconst = 68;
public static readonly var Op386CMPLload = 69;
public static readonly var Op386CMPWload = 70;
public static readonly var Op386CMPBload = 71;
public static readonly var Op386CMPLconstload = 72;
public static readonly var Op386CMPWconstload = 73;
public static readonly var Op386CMPBconstload = 74;
public static readonly var Op386UCOMISS = 75;
public static readonly var Op386UCOMISD = 76;
public static readonly var Op386TESTL = 77;
public static readonly var Op386TESTW = 78;
public static readonly var Op386TESTB = 79;
public static readonly var Op386TESTLconst = 80;
public static readonly var Op386TESTWconst = 81;
public static readonly var Op386TESTBconst = 82;
public static readonly var Op386SHLL = 83;
public static readonly var Op386SHLLconst = 84;
public static readonly var Op386SHRL = 85;
public static readonly var Op386SHRW = 86;
public static readonly var Op386SHRB = 87;
public static readonly var Op386SHRLconst = 88;
public static readonly var Op386SHRWconst = 89;
public static readonly var Op386SHRBconst = 90;
public static readonly var Op386SARL = 91;
public static readonly var Op386SARW = 92;
public static readonly var Op386SARB = 93;
public static readonly var Op386SARLconst = 94;
public static readonly var Op386SARWconst = 95;
public static readonly var Op386SARBconst = 96;
public static readonly var Op386ROLLconst = 97;
public static readonly var Op386ROLWconst = 98;
public static readonly var Op386ROLBconst = 99;
public static readonly var Op386ADDLload = 100;
public static readonly var Op386SUBLload = 101;
public static readonly var Op386MULLload = 102;
public static readonly var Op386ANDLload = 103;
public static readonly var Op386ORLload = 104;
public static readonly var Op386XORLload = 105;
public static readonly var Op386ADDLloadidx4 = 106;
public static readonly var Op386SUBLloadidx4 = 107;
public static readonly var Op386MULLloadidx4 = 108;
public static readonly var Op386ANDLloadidx4 = 109;
public static readonly var Op386ORLloadidx4 = 110;
public static readonly var Op386XORLloadidx4 = 111;
public static readonly var Op386NEGL = 112;
public static readonly var Op386NOTL = 113;
public static readonly var Op386BSFL = 114;
public static readonly var Op386BSFW = 115;
public static readonly var Op386BSRL = 116;
public static readonly var Op386BSRW = 117;
public static readonly var Op386BSWAPL = 118;
public static readonly var Op386SQRTSD = 119;
public static readonly var Op386SQRTSS = 120;
public static readonly var Op386SBBLcarrymask = 121;
public static readonly var Op386SETEQ = 122;
public static readonly var Op386SETNE = 123;
public static readonly var Op386SETL = 124;
public static readonly var Op386SETLE = 125;
public static readonly var Op386SETG = 126;
public static readonly var Op386SETGE = 127;
public static readonly var Op386SETB = 128;
public static readonly var Op386SETBE = 129;
public static readonly var Op386SETA = 130;
public static readonly var Op386SETAE = 131;
public static readonly var Op386SETO = 132;
public static readonly var Op386SETEQF = 133;
public static readonly var Op386SETNEF = 134;
public static readonly var Op386SETORD = 135;
public static readonly var Op386SETNAN = 136;
public static readonly var Op386SETGF = 137;
public static readonly var Op386SETGEF = 138;
public static readonly var Op386MOVBLSX = 139;
public static readonly var Op386MOVBLZX = 140;
public static readonly var Op386MOVWLSX = 141;
public static readonly var Op386MOVWLZX = 142;
public static readonly var Op386MOVLconst = 143;
public static readonly var Op386CVTTSD2SL = 144;
public static readonly var Op386CVTTSS2SL = 145;
public static readonly var Op386CVTSL2SS = 146;
public static readonly var Op386CVTSL2SD = 147;
public static readonly var Op386CVTSD2SS = 148;
public static readonly var Op386CVTSS2SD = 149;
public static readonly var Op386PXOR = 150;
public static readonly var Op386LEAL = 151;
public static readonly var Op386LEAL1 = 152;
public static readonly var Op386LEAL2 = 153;
public static readonly var Op386LEAL4 = 154;
public static readonly var Op386LEAL8 = 155;
public static readonly var Op386MOVBload = 156;
public static readonly var Op386MOVBLSXload = 157;
public static readonly var Op386MOVWload = 158;
public static readonly var Op386MOVWLSXload = 159;
public static readonly var Op386MOVLload = 160;
public static readonly var Op386MOVBstore = 161;
public static readonly var Op386MOVWstore = 162;
public static readonly var Op386MOVLstore = 163;
public static readonly var Op386ADDLmodify = 164;
public static readonly var Op386SUBLmodify = 165;
public static readonly var Op386ANDLmodify = 166;
public static readonly var Op386ORLmodify = 167;
public static readonly var Op386XORLmodify = 168;
public static readonly var Op386ADDLmodifyidx4 = 169;
public static readonly var Op386SUBLmodifyidx4 = 170;
public static readonly var Op386ANDLmodifyidx4 = 171;
public static readonly var Op386ORLmodifyidx4 = 172;
public static readonly var Op386XORLmodifyidx4 = 173;
public static readonly var Op386ADDLconstmodify = 174;
public static readonly var Op386ANDLconstmodify = 175;
public static readonly var Op386ORLconstmodify = 176;
public static readonly var Op386XORLconstmodify = 177;
public static readonly var Op386ADDLconstmodifyidx4 = 178;
public static readonly var Op386ANDLconstmodifyidx4 = 179;
public static readonly var Op386ORLconstmodifyidx4 = 180;
public static readonly var Op386XORLconstmodifyidx4 = 181;
public static readonly var Op386MOVBloadidx1 = 182;
public static readonly var Op386MOVWloadidx1 = 183;
public static readonly var Op386MOVWloadidx2 = 184;
public static readonly var Op386MOVLloadidx1 = 185;
public static readonly var Op386MOVLloadidx4 = 186;
public static readonly var Op386MOVBstoreidx1 = 187;
public static readonly var Op386MOVWstoreidx1 = 188;
public static readonly var Op386MOVWstoreidx2 = 189;
public static readonly var Op386MOVLstoreidx1 = 190;
public static readonly var Op386MOVLstoreidx4 = 191;
public static readonly var Op386MOVBstoreconst = 192;
public static readonly var Op386MOVWstoreconst = 193;
public static readonly var Op386MOVLstoreconst = 194;
public static readonly var Op386MOVBstoreconstidx1 = 195;
public static readonly var Op386MOVWstoreconstidx1 = 196;
public static readonly var Op386MOVWstoreconstidx2 = 197;
public static readonly var Op386MOVLstoreconstidx1 = 198;
public static readonly var Op386MOVLstoreconstidx4 = 199;
public static readonly var Op386DUFFZERO = 200;
public static readonly var Op386REPSTOSL = 201;
public static readonly var Op386CALLstatic = 202;
public static readonly var Op386CALLclosure = 203;
public static readonly var Op386CALLinter = 204;
public static readonly var Op386DUFFCOPY = 205;
public static readonly var Op386REPMOVSL = 206;
public static readonly var Op386InvertFlags = 207;
public static readonly var Op386LoweredGetG = 208;
public static readonly var Op386LoweredGetClosurePtr = 209;
public static readonly var Op386LoweredGetCallerPC = 210;
public static readonly var Op386LoweredGetCallerSP = 211;
public static readonly var Op386LoweredNilCheck = 212;
public static readonly var Op386LoweredWB = 213;
public static readonly var Op386LoweredPanicBoundsA = 214;
public static readonly var Op386LoweredPanicBoundsB = 215;
public static readonly var Op386LoweredPanicBoundsC = 216;
public static readonly var Op386LoweredPanicExtendA = 217;
public static readonly var Op386LoweredPanicExtendB = 218;
public static readonly var Op386LoweredPanicExtendC = 219;
public static readonly var Op386FlagEQ = 220;
public static readonly var Op386FlagLT_ULT = 221;
public static readonly var Op386FlagLT_UGT = 222;
public static readonly var Op386FlagGT_UGT = 223;
public static readonly var Op386FlagGT_ULT = 224;
public static readonly var Op386MOVSSconst1 = 225;
public static readonly var Op386MOVSDconst1 = 226;
public static readonly var Op386MOVSSconst2 = 227;
public static readonly var Op386MOVSDconst2 = 228;

public static readonly var OpAMD64ADDSS = 229;
public static readonly var OpAMD64ADDSD = 230;
public static readonly var OpAMD64SUBSS = 231;
public static readonly var OpAMD64SUBSD = 232;
public static readonly var OpAMD64MULSS = 233;
public static readonly var OpAMD64MULSD = 234;
public static readonly var OpAMD64DIVSS = 235;
public static readonly var OpAMD64DIVSD = 236;
public static readonly var OpAMD64MOVSSload = 237;
public static readonly var OpAMD64MOVSDload = 238;
public static readonly var OpAMD64MOVSSconst = 239;
public static readonly var OpAMD64MOVSDconst = 240;
public static readonly var OpAMD64MOVSSloadidx1 = 241;
public static readonly var OpAMD64MOVSSloadidx4 = 242;
public static readonly var OpAMD64MOVSDloadidx1 = 243;
public static readonly var OpAMD64MOVSDloadidx8 = 244;
public static readonly var OpAMD64MOVSSstore = 245;
public static readonly var OpAMD64MOVSDstore = 246;
public static readonly var OpAMD64MOVSSstoreidx1 = 247;
public static readonly var OpAMD64MOVSSstoreidx4 = 248;
public static readonly var OpAMD64MOVSDstoreidx1 = 249;
public static readonly var OpAMD64MOVSDstoreidx8 = 250;
public static readonly var OpAMD64ADDSSload = 251;
public static readonly var OpAMD64ADDSDload = 252;
public static readonly var OpAMD64SUBSSload = 253;
public static readonly var OpAMD64SUBSDload = 254;
public static readonly var OpAMD64MULSSload = 255;
public static readonly var OpAMD64MULSDload = 256;
public static readonly var OpAMD64DIVSSload = 257;
public static readonly var OpAMD64DIVSDload = 258;
public static readonly var OpAMD64ADDSSloadidx1 = 259;
public static readonly var OpAMD64ADDSSloadidx4 = 260;
public static readonly var OpAMD64ADDSDloadidx1 = 261;
public static readonly var OpAMD64ADDSDloadidx8 = 262;
public static readonly var OpAMD64SUBSSloadidx1 = 263;
public static readonly var OpAMD64SUBSSloadidx4 = 264;
public static readonly var OpAMD64SUBSDloadidx1 = 265;
public static readonly var OpAMD64SUBSDloadidx8 = 266;
public static readonly var OpAMD64MULSSloadidx1 = 267;
public static readonly var OpAMD64MULSSloadidx4 = 268;
public static readonly var OpAMD64MULSDloadidx1 = 269;
public static readonly var OpAMD64MULSDloadidx8 = 270;
public static readonly var OpAMD64DIVSSloadidx1 = 271;
public static readonly var OpAMD64DIVSSloadidx4 = 272;
public static readonly var OpAMD64DIVSDloadidx1 = 273;
public static readonly var OpAMD64DIVSDloadidx8 = 274;
public static readonly var OpAMD64ADDQ = 275;
public static readonly var OpAMD64ADDL = 276;
public static readonly var OpAMD64ADDQconst = 277;
public static readonly var OpAMD64ADDLconst = 278;
public static readonly var OpAMD64ADDQconstmodify = 279;
public static readonly var OpAMD64ADDLconstmodify = 280;
public static readonly var OpAMD64SUBQ = 281;
public static readonly var OpAMD64SUBL = 282;
public static readonly var OpAMD64SUBQconst = 283;
public static readonly var OpAMD64SUBLconst = 284;
public static readonly var OpAMD64MULQ = 285;
public static readonly var OpAMD64MULL = 286;
public static readonly var OpAMD64MULQconst = 287;
public static readonly var OpAMD64MULLconst = 288;
public static readonly var OpAMD64MULLU = 289;
public static readonly var OpAMD64MULQU = 290;
public static readonly var OpAMD64HMULQ = 291;
public static readonly var OpAMD64HMULL = 292;
public static readonly var OpAMD64HMULQU = 293;
public static readonly var OpAMD64HMULLU = 294;
public static readonly var OpAMD64AVGQU = 295;
public static readonly var OpAMD64DIVQ = 296;
public static readonly var OpAMD64DIVL = 297;
public static readonly var OpAMD64DIVW = 298;
public static readonly var OpAMD64DIVQU = 299;
public static readonly var OpAMD64DIVLU = 300;
public static readonly var OpAMD64DIVWU = 301;
public static readonly var OpAMD64NEGLflags = 302;
public static readonly var OpAMD64ADDQcarry = 303;
public static readonly var OpAMD64ADCQ = 304;
public static readonly var OpAMD64ADDQconstcarry = 305;
public static readonly var OpAMD64ADCQconst = 306;
public static readonly var OpAMD64SUBQborrow = 307;
public static readonly var OpAMD64SBBQ = 308;
public static readonly var OpAMD64SUBQconstborrow = 309;
public static readonly var OpAMD64SBBQconst = 310;
public static readonly var OpAMD64MULQU2 = 311;
public static readonly var OpAMD64DIVQU2 = 312;
public static readonly var OpAMD64ANDQ = 313;
public static readonly var OpAMD64ANDL = 314;
public static readonly var OpAMD64ANDQconst = 315;
public static readonly var OpAMD64ANDLconst = 316;
public static readonly var OpAMD64ANDQconstmodify = 317;
public static readonly var OpAMD64ANDLconstmodify = 318;
public static readonly var OpAMD64ORQ = 319;
public static readonly var OpAMD64ORL = 320;
public static readonly var OpAMD64ORQconst = 321;
public static readonly var OpAMD64ORLconst = 322;
public static readonly var OpAMD64ORQconstmodify = 323;
public static readonly var OpAMD64ORLconstmodify = 324;
public static readonly var OpAMD64XORQ = 325;
public static readonly var OpAMD64XORL = 326;
public static readonly var OpAMD64XORQconst = 327;
public static readonly var OpAMD64XORLconst = 328;
public static readonly var OpAMD64XORQconstmodify = 329;
public static readonly var OpAMD64XORLconstmodify = 330;
public static readonly var OpAMD64CMPQ = 331;
public static readonly var OpAMD64CMPL = 332;
public static readonly var OpAMD64CMPW = 333;
public static readonly var OpAMD64CMPB = 334;
public static readonly var OpAMD64CMPQconst = 335;
public static readonly var OpAMD64CMPLconst = 336;
public static readonly var OpAMD64CMPWconst = 337;
public static readonly var OpAMD64CMPBconst = 338;
public static readonly var OpAMD64CMPQload = 339;
public static readonly var OpAMD64CMPLload = 340;
public static readonly var OpAMD64CMPWload = 341;
public static readonly var OpAMD64CMPBload = 342;
public static readonly var OpAMD64CMPQconstload = 343;
public static readonly var OpAMD64CMPLconstload = 344;
public static readonly var OpAMD64CMPWconstload = 345;
public static readonly var OpAMD64CMPBconstload = 346;
public static readonly var OpAMD64CMPQloadidx8 = 347;
public static readonly var OpAMD64CMPQloadidx1 = 348;
public static readonly var OpAMD64CMPLloadidx4 = 349;
public static readonly var OpAMD64CMPLloadidx1 = 350;
public static readonly var OpAMD64CMPWloadidx2 = 351;
public static readonly var OpAMD64CMPWloadidx1 = 352;
public static readonly var OpAMD64CMPBloadidx1 = 353;
public static readonly var OpAMD64CMPQconstloadidx8 = 354;
public static readonly var OpAMD64CMPQconstloadidx1 = 355;
public static readonly var OpAMD64CMPLconstloadidx4 = 356;
public static readonly var OpAMD64CMPLconstloadidx1 = 357;
public static readonly var OpAMD64CMPWconstloadidx2 = 358;
public static readonly var OpAMD64CMPWconstloadidx1 = 359;
public static readonly var OpAMD64CMPBconstloadidx1 = 360;
public static readonly var OpAMD64UCOMISS = 361;
public static readonly var OpAMD64UCOMISD = 362;
public static readonly var OpAMD64BTL = 363;
public static readonly var OpAMD64BTQ = 364;
public static readonly var OpAMD64BTCL = 365;
public static readonly var OpAMD64BTCQ = 366;
public static readonly var OpAMD64BTRL = 367;
public static readonly var OpAMD64BTRQ = 368;
public static readonly var OpAMD64BTSL = 369;
public static readonly var OpAMD64BTSQ = 370;
public static readonly var OpAMD64BTLconst = 371;
public static readonly var OpAMD64BTQconst = 372;
public static readonly var OpAMD64BTCLconst = 373;
public static readonly var OpAMD64BTCQconst = 374;
public static readonly var OpAMD64BTRLconst = 375;
public static readonly var OpAMD64BTRQconst = 376;
public static readonly var OpAMD64BTSLconst = 377;
public static readonly var OpAMD64BTSQconst = 378;
public static readonly var OpAMD64TESTQ = 379;
public static readonly var OpAMD64TESTL = 380;
public static readonly var OpAMD64TESTW = 381;
public static readonly var OpAMD64TESTB = 382;
public static readonly var OpAMD64TESTQconst = 383;
public static readonly var OpAMD64TESTLconst = 384;
public static readonly var OpAMD64TESTWconst = 385;
public static readonly var OpAMD64TESTBconst = 386;
public static readonly var OpAMD64SHLQ = 387;
public static readonly var OpAMD64SHLL = 388;
public static readonly var OpAMD64SHLQconst = 389;
public static readonly var OpAMD64SHLLconst = 390;
public static readonly var OpAMD64SHRQ = 391;
public static readonly var OpAMD64SHRL = 392;
public static readonly var OpAMD64SHRW = 393;
public static readonly var OpAMD64SHRB = 394;
public static readonly var OpAMD64SHRQconst = 395;
public static readonly var OpAMD64SHRLconst = 396;
public static readonly var OpAMD64SHRWconst = 397;
public static readonly var OpAMD64SHRBconst = 398;
public static readonly var OpAMD64SARQ = 399;
public static readonly var OpAMD64SARL = 400;
public static readonly var OpAMD64SARW = 401;
public static readonly var OpAMD64SARB = 402;
public static readonly var OpAMD64SARQconst = 403;
public static readonly var OpAMD64SARLconst = 404;
public static readonly var OpAMD64SARWconst = 405;
public static readonly var OpAMD64SARBconst = 406;
public static readonly var OpAMD64SHRDQ = 407;
public static readonly var OpAMD64SHLDQ = 408;
public static readonly var OpAMD64ROLQ = 409;
public static readonly var OpAMD64ROLL = 410;
public static readonly var OpAMD64ROLW = 411;
public static readonly var OpAMD64ROLB = 412;
public static readonly var OpAMD64RORQ = 413;
public static readonly var OpAMD64RORL = 414;
public static readonly var OpAMD64RORW = 415;
public static readonly var OpAMD64RORB = 416;
public static readonly var OpAMD64ROLQconst = 417;
public static readonly var OpAMD64ROLLconst = 418;
public static readonly var OpAMD64ROLWconst = 419;
public static readonly var OpAMD64ROLBconst = 420;
public static readonly var OpAMD64ADDLload = 421;
public static readonly var OpAMD64ADDQload = 422;
public static readonly var OpAMD64SUBQload = 423;
public static readonly var OpAMD64SUBLload = 424;
public static readonly var OpAMD64ANDLload = 425;
public static readonly var OpAMD64ANDQload = 426;
public static readonly var OpAMD64ORQload = 427;
public static readonly var OpAMD64ORLload = 428;
public static readonly var OpAMD64XORQload = 429;
public static readonly var OpAMD64XORLload = 430;
public static readonly var OpAMD64ADDLloadidx1 = 431;
public static readonly var OpAMD64ADDLloadidx4 = 432;
public static readonly var OpAMD64ADDLloadidx8 = 433;
public static readonly var OpAMD64ADDQloadidx1 = 434;
public static readonly var OpAMD64ADDQloadidx8 = 435;
public static readonly var OpAMD64SUBLloadidx1 = 436;
public static readonly var OpAMD64SUBLloadidx4 = 437;
public static readonly var OpAMD64SUBLloadidx8 = 438;
public static readonly var OpAMD64SUBQloadidx1 = 439;
public static readonly var OpAMD64SUBQloadidx8 = 440;
public static readonly var OpAMD64ANDLloadidx1 = 441;
public static readonly var OpAMD64ANDLloadidx4 = 442;
public static readonly var OpAMD64ANDLloadidx8 = 443;
public static readonly var OpAMD64ANDQloadidx1 = 444;
public static readonly var OpAMD64ANDQloadidx8 = 445;
public static readonly var OpAMD64ORLloadidx1 = 446;
public static readonly var OpAMD64ORLloadidx4 = 447;
public static readonly var OpAMD64ORLloadidx8 = 448;
public static readonly var OpAMD64ORQloadidx1 = 449;
public static readonly var OpAMD64ORQloadidx8 = 450;
public static readonly var OpAMD64XORLloadidx1 = 451;
public static readonly var OpAMD64XORLloadidx4 = 452;
public static readonly var OpAMD64XORLloadidx8 = 453;
public static readonly var OpAMD64XORQloadidx1 = 454;
public static readonly var OpAMD64XORQloadidx8 = 455;
public static readonly var OpAMD64ADDQmodify = 456;
public static readonly var OpAMD64SUBQmodify = 457;
public static readonly var OpAMD64ANDQmodify = 458;
public static readonly var OpAMD64ORQmodify = 459;
public static readonly var OpAMD64XORQmodify = 460;
public static readonly var OpAMD64ADDLmodify = 461;
public static readonly var OpAMD64SUBLmodify = 462;
public static readonly var OpAMD64ANDLmodify = 463;
public static readonly var OpAMD64ORLmodify = 464;
public static readonly var OpAMD64XORLmodify = 465;
public static readonly var OpAMD64ADDQmodifyidx1 = 466;
public static readonly var OpAMD64ADDQmodifyidx8 = 467;
public static readonly var OpAMD64SUBQmodifyidx1 = 468;
public static readonly var OpAMD64SUBQmodifyidx8 = 469;
public static readonly var OpAMD64ANDQmodifyidx1 = 470;
public static readonly var OpAMD64ANDQmodifyidx8 = 471;
public static readonly var OpAMD64ORQmodifyidx1 = 472;
public static readonly var OpAMD64ORQmodifyidx8 = 473;
public static readonly var OpAMD64XORQmodifyidx1 = 474;
public static readonly var OpAMD64XORQmodifyidx8 = 475;
public static readonly var OpAMD64ADDLmodifyidx1 = 476;
public static readonly var OpAMD64ADDLmodifyidx4 = 477;
public static readonly var OpAMD64ADDLmodifyidx8 = 478;
public static readonly var OpAMD64SUBLmodifyidx1 = 479;
public static readonly var OpAMD64SUBLmodifyidx4 = 480;
public static readonly var OpAMD64SUBLmodifyidx8 = 481;
public static readonly var OpAMD64ANDLmodifyidx1 = 482;
public static readonly var OpAMD64ANDLmodifyidx4 = 483;
public static readonly var OpAMD64ANDLmodifyidx8 = 484;
public static readonly var OpAMD64ORLmodifyidx1 = 485;
public static readonly var OpAMD64ORLmodifyidx4 = 486;
public static readonly var OpAMD64ORLmodifyidx8 = 487;
public static readonly var OpAMD64XORLmodifyidx1 = 488;
public static readonly var OpAMD64XORLmodifyidx4 = 489;
public static readonly var OpAMD64XORLmodifyidx8 = 490;
public static readonly var OpAMD64ADDQconstmodifyidx1 = 491;
public static readonly var OpAMD64ADDQconstmodifyidx8 = 492;
public static readonly var OpAMD64ANDQconstmodifyidx1 = 493;
public static readonly var OpAMD64ANDQconstmodifyidx8 = 494;
public static readonly var OpAMD64ORQconstmodifyidx1 = 495;
public static readonly var OpAMD64ORQconstmodifyidx8 = 496;
public static readonly var OpAMD64XORQconstmodifyidx1 = 497;
public static readonly var OpAMD64XORQconstmodifyidx8 = 498;
public static readonly var OpAMD64ADDLconstmodifyidx1 = 499;
public static readonly var OpAMD64ADDLconstmodifyidx4 = 500;
public static readonly var OpAMD64ADDLconstmodifyidx8 = 501;
public static readonly var OpAMD64ANDLconstmodifyidx1 = 502;
public static readonly var OpAMD64ANDLconstmodifyidx4 = 503;
public static readonly var OpAMD64ANDLconstmodifyidx8 = 504;
public static readonly var OpAMD64ORLconstmodifyidx1 = 505;
public static readonly var OpAMD64ORLconstmodifyidx4 = 506;
public static readonly var OpAMD64ORLconstmodifyidx8 = 507;
public static readonly var OpAMD64XORLconstmodifyidx1 = 508;
public static readonly var OpAMD64XORLconstmodifyidx4 = 509;
public static readonly var OpAMD64XORLconstmodifyidx8 = 510;
public static readonly var OpAMD64NEGQ = 511;
public static readonly var OpAMD64NEGL = 512;
public static readonly var OpAMD64NOTQ = 513;
public static readonly var OpAMD64NOTL = 514;
public static readonly var OpAMD64BSFQ = 515;
public static readonly var OpAMD64BSFL = 516;
public static readonly var OpAMD64BSRQ = 517;
public static readonly var OpAMD64BSRL = 518;
public static readonly var OpAMD64CMOVQEQ = 519;
public static readonly var OpAMD64CMOVQNE = 520;
public static readonly var OpAMD64CMOVQLT = 521;
public static readonly var OpAMD64CMOVQGT = 522;
public static readonly var OpAMD64CMOVQLE = 523;
public static readonly var OpAMD64CMOVQGE = 524;
public static readonly var OpAMD64CMOVQLS = 525;
public static readonly var OpAMD64CMOVQHI = 526;
public static readonly var OpAMD64CMOVQCC = 527;
public static readonly var OpAMD64CMOVQCS = 528;
public static readonly var OpAMD64CMOVLEQ = 529;
public static readonly var OpAMD64CMOVLNE = 530;
public static readonly var OpAMD64CMOVLLT = 531;
public static readonly var OpAMD64CMOVLGT = 532;
public static readonly var OpAMD64CMOVLLE = 533;
public static readonly var OpAMD64CMOVLGE = 534;
public static readonly var OpAMD64CMOVLLS = 535;
public static readonly var OpAMD64CMOVLHI = 536;
public static readonly var OpAMD64CMOVLCC = 537;
public static readonly var OpAMD64CMOVLCS = 538;
public static readonly var OpAMD64CMOVWEQ = 539;
public static readonly var OpAMD64CMOVWNE = 540;
public static readonly var OpAMD64CMOVWLT = 541;
public static readonly var OpAMD64CMOVWGT = 542;
public static readonly var OpAMD64CMOVWLE = 543;
public static readonly var OpAMD64CMOVWGE = 544;
public static readonly var OpAMD64CMOVWLS = 545;
public static readonly var OpAMD64CMOVWHI = 546;
public static readonly var OpAMD64CMOVWCC = 547;
public static readonly var OpAMD64CMOVWCS = 548;
public static readonly var OpAMD64CMOVQEQF = 549;
public static readonly var OpAMD64CMOVQNEF = 550;
public static readonly var OpAMD64CMOVQGTF = 551;
public static readonly var OpAMD64CMOVQGEF = 552;
public static readonly var OpAMD64CMOVLEQF = 553;
public static readonly var OpAMD64CMOVLNEF = 554;
public static readonly var OpAMD64CMOVLGTF = 555;
public static readonly var OpAMD64CMOVLGEF = 556;
public static readonly var OpAMD64CMOVWEQF = 557;
public static readonly var OpAMD64CMOVWNEF = 558;
public static readonly var OpAMD64CMOVWGTF = 559;
public static readonly var OpAMD64CMOVWGEF = 560;
public static readonly var OpAMD64BSWAPQ = 561;
public static readonly var OpAMD64BSWAPL = 562;
public static readonly var OpAMD64POPCNTQ = 563;
public static readonly var OpAMD64POPCNTL = 564;
public static readonly var OpAMD64SQRTSD = 565;
public static readonly var OpAMD64SQRTSS = 566;
public static readonly var OpAMD64ROUNDSD = 567;
public static readonly var OpAMD64VFMADD231SD = 568;
public static readonly var OpAMD64SBBQcarrymask = 569;
public static readonly var OpAMD64SBBLcarrymask = 570;
public static readonly var OpAMD64SETEQ = 571;
public static readonly var OpAMD64SETNE = 572;
public static readonly var OpAMD64SETL = 573;
public static readonly var OpAMD64SETLE = 574;
public static readonly var OpAMD64SETG = 575;
public static readonly var OpAMD64SETGE = 576;
public static readonly var OpAMD64SETB = 577;
public static readonly var OpAMD64SETBE = 578;
public static readonly var OpAMD64SETA = 579;
public static readonly var OpAMD64SETAE = 580;
public static readonly var OpAMD64SETO = 581;
public static readonly var OpAMD64SETEQstore = 582;
public static readonly var OpAMD64SETNEstore = 583;
public static readonly var OpAMD64SETLstore = 584;
public static readonly var OpAMD64SETLEstore = 585;
public static readonly var OpAMD64SETGstore = 586;
public static readonly var OpAMD64SETGEstore = 587;
public static readonly var OpAMD64SETBstore = 588;
public static readonly var OpAMD64SETBEstore = 589;
public static readonly var OpAMD64SETAstore = 590;
public static readonly var OpAMD64SETAEstore = 591;
public static readonly var OpAMD64SETEQF = 592;
public static readonly var OpAMD64SETNEF = 593;
public static readonly var OpAMD64SETORD = 594;
public static readonly var OpAMD64SETNAN = 595;
public static readonly var OpAMD64SETGF = 596;
public static readonly var OpAMD64SETGEF = 597;
public static readonly var OpAMD64MOVBQSX = 598;
public static readonly var OpAMD64MOVBQZX = 599;
public static readonly var OpAMD64MOVWQSX = 600;
public static readonly var OpAMD64MOVWQZX = 601;
public static readonly var OpAMD64MOVLQSX = 602;
public static readonly var OpAMD64MOVLQZX = 603;
public static readonly var OpAMD64MOVLconst = 604;
public static readonly var OpAMD64MOVQconst = 605;
public static readonly var OpAMD64CVTTSD2SL = 606;
public static readonly var OpAMD64CVTTSD2SQ = 607;
public static readonly var OpAMD64CVTTSS2SL = 608;
public static readonly var OpAMD64CVTTSS2SQ = 609;
public static readonly var OpAMD64CVTSL2SS = 610;
public static readonly var OpAMD64CVTSL2SD = 611;
public static readonly var OpAMD64CVTSQ2SS = 612;
public static readonly var OpAMD64CVTSQ2SD = 613;
public static readonly var OpAMD64CVTSD2SS = 614;
public static readonly var OpAMD64CVTSS2SD = 615;
public static readonly var OpAMD64MOVQi2f = 616;
public static readonly var OpAMD64MOVQf2i = 617;
public static readonly var OpAMD64MOVLi2f = 618;
public static readonly var OpAMD64MOVLf2i = 619;
public static readonly var OpAMD64PXOR = 620;
public static readonly var OpAMD64LEAQ = 621;
public static readonly var OpAMD64LEAL = 622;
public static readonly var OpAMD64LEAW = 623;
public static readonly var OpAMD64LEAQ1 = 624;
public static readonly var OpAMD64LEAL1 = 625;
public static readonly var OpAMD64LEAW1 = 626;
public static readonly var OpAMD64LEAQ2 = 627;
public static readonly var OpAMD64LEAL2 = 628;
public static readonly var OpAMD64LEAW2 = 629;
public static readonly var OpAMD64LEAQ4 = 630;
public static readonly var OpAMD64LEAL4 = 631;
public static readonly var OpAMD64LEAW4 = 632;
public static readonly var OpAMD64LEAQ8 = 633;
public static readonly var OpAMD64LEAL8 = 634;
public static readonly var OpAMD64LEAW8 = 635;
public static readonly var OpAMD64MOVBload = 636;
public static readonly var OpAMD64MOVBQSXload = 637;
public static readonly var OpAMD64MOVWload = 638;
public static readonly var OpAMD64MOVWQSXload = 639;
public static readonly var OpAMD64MOVLload = 640;
public static readonly var OpAMD64MOVLQSXload = 641;
public static readonly var OpAMD64MOVQload = 642;
public static readonly var OpAMD64MOVBstore = 643;
public static readonly var OpAMD64MOVWstore = 644;
public static readonly var OpAMD64MOVLstore = 645;
public static readonly var OpAMD64MOVQstore = 646;
public static readonly var OpAMD64MOVOload = 647;
public static readonly var OpAMD64MOVOstore = 648;
public static readonly var OpAMD64MOVOstorezero = 649;
public static readonly var OpAMD64MOVBloadidx1 = 650;
public static readonly var OpAMD64MOVWloadidx1 = 651;
public static readonly var OpAMD64MOVWloadidx2 = 652;
public static readonly var OpAMD64MOVLloadidx1 = 653;
public static readonly var OpAMD64MOVLloadidx4 = 654;
public static readonly var OpAMD64MOVLloadidx8 = 655;
public static readonly var OpAMD64MOVQloadidx1 = 656;
public static readonly var OpAMD64MOVQloadidx8 = 657;
public static readonly var OpAMD64MOVBstoreidx1 = 658;
public static readonly var OpAMD64MOVWstoreidx1 = 659;
public static readonly var OpAMD64MOVWstoreidx2 = 660;
public static readonly var OpAMD64MOVLstoreidx1 = 661;
public static readonly var OpAMD64MOVLstoreidx4 = 662;
public static readonly var OpAMD64MOVLstoreidx8 = 663;
public static readonly var OpAMD64MOVQstoreidx1 = 664;
public static readonly var OpAMD64MOVQstoreidx8 = 665;
public static readonly var OpAMD64MOVBstoreconst = 666;
public static readonly var OpAMD64MOVWstoreconst = 667;
public static readonly var OpAMD64MOVLstoreconst = 668;
public static readonly var OpAMD64MOVQstoreconst = 669;
public static readonly var OpAMD64MOVBstoreconstidx1 = 670;
public static readonly var OpAMD64MOVWstoreconstidx1 = 671;
public static readonly var OpAMD64MOVWstoreconstidx2 = 672;
public static readonly var OpAMD64MOVLstoreconstidx1 = 673;
public static readonly var OpAMD64MOVLstoreconstidx4 = 674;
public static readonly var OpAMD64MOVQstoreconstidx1 = 675;
public static readonly var OpAMD64MOVQstoreconstidx8 = 676;
public static readonly var OpAMD64DUFFZERO = 677;
public static readonly var OpAMD64REPSTOSQ = 678;
public static readonly var OpAMD64CALLstatic = 679;
public static readonly var OpAMD64CALLclosure = 680;
public static readonly var OpAMD64CALLinter = 681;
public static readonly var OpAMD64DUFFCOPY = 682;
public static readonly var OpAMD64REPMOVSQ = 683;
public static readonly var OpAMD64InvertFlags = 684;
public static readonly var OpAMD64LoweredGetG = 685;
public static readonly var OpAMD64LoweredGetClosurePtr = 686;
public static readonly var OpAMD64LoweredGetCallerPC = 687;
public static readonly var OpAMD64LoweredGetCallerSP = 688;
public static readonly var OpAMD64LoweredNilCheck = 689;
public static readonly var OpAMD64LoweredWB = 690;
public static readonly var OpAMD64LoweredHasCPUFeature = 691;
public static readonly var OpAMD64LoweredPanicBoundsA = 692;
public static readonly var OpAMD64LoweredPanicBoundsB = 693;
public static readonly var OpAMD64LoweredPanicBoundsC = 694;
public static readonly var OpAMD64FlagEQ = 695;
public static readonly var OpAMD64FlagLT_ULT = 696;
public static readonly var OpAMD64FlagLT_UGT = 697;
public static readonly var OpAMD64FlagGT_UGT = 698;
public static readonly var OpAMD64FlagGT_ULT = 699;
public static readonly var OpAMD64MOVBatomicload = 700;
public static readonly var OpAMD64MOVLatomicload = 701;
public static readonly var OpAMD64MOVQatomicload = 702;
public static readonly var OpAMD64XCHGB = 703;
public static readonly var OpAMD64XCHGL = 704;
public static readonly var OpAMD64XCHGQ = 705;
public static readonly var OpAMD64XADDLlock = 706;
public static readonly var OpAMD64XADDQlock = 707;
public static readonly var OpAMD64AddTupleFirst32 = 708;
public static readonly var OpAMD64AddTupleFirst64 = 709;
public static readonly var OpAMD64CMPXCHGLlock = 710;
public static readonly var OpAMD64CMPXCHGQlock = 711;
public static readonly var OpAMD64ANDBlock = 712;
public static readonly var OpAMD64ANDLlock = 713;
public static readonly var OpAMD64ORBlock = 714;
public static readonly var OpAMD64ORLlock = 715;

public static readonly var OpARMADD = 716;
public static readonly var OpARMADDconst = 717;
public static readonly var OpARMSUB = 718;
public static readonly var OpARMSUBconst = 719;
public static readonly var OpARMRSB = 720;
public static readonly var OpARMRSBconst = 721;
public static readonly var OpARMMUL = 722;
public static readonly var OpARMHMUL = 723;
public static readonly var OpARMHMULU = 724;
public static readonly var OpARMCALLudiv = 725;
public static readonly var OpARMADDS = 726;
public static readonly var OpARMADDSconst = 727;
public static readonly var OpARMADC = 728;
public static readonly var OpARMADCconst = 729;
public static readonly var OpARMSUBS = 730;
public static readonly var OpARMSUBSconst = 731;
public static readonly var OpARMRSBSconst = 732;
public static readonly var OpARMSBC = 733;
public static readonly var OpARMSBCconst = 734;
public static readonly var OpARMRSCconst = 735;
public static readonly var OpARMMULLU = 736;
public static readonly var OpARMMULA = 737;
public static readonly var OpARMMULS = 738;
public static readonly var OpARMADDF = 739;
public static readonly var OpARMADDD = 740;
public static readonly var OpARMSUBF = 741;
public static readonly var OpARMSUBD = 742;
public static readonly var OpARMMULF = 743;
public static readonly var OpARMMULD = 744;
public static readonly var OpARMNMULF = 745;
public static readonly var OpARMNMULD = 746;
public static readonly var OpARMDIVF = 747;
public static readonly var OpARMDIVD = 748;
public static readonly var OpARMMULAF = 749;
public static readonly var OpARMMULAD = 750;
public static readonly var OpARMMULSF = 751;
public static readonly var OpARMMULSD = 752;
public static readonly var OpARMFMULAD = 753;
public static readonly var OpARMAND = 754;
public static readonly var OpARMANDconst = 755;
public static readonly var OpARMOR = 756;
public static readonly var OpARMORconst = 757;
public static readonly var OpARMXOR = 758;
public static readonly var OpARMXORconst = 759;
public static readonly var OpARMBIC = 760;
public static readonly var OpARMBICconst = 761;
public static readonly var OpARMBFX = 762;
public static readonly var OpARMBFXU = 763;
public static readonly var OpARMMVN = 764;
public static readonly var OpARMNEGF = 765;
public static readonly var OpARMNEGD = 766;
public static readonly var OpARMSQRTD = 767;
public static readonly var OpARMSQRTF = 768;
public static readonly var OpARMABSD = 769;
public static readonly var OpARMCLZ = 770;
public static readonly var OpARMREV = 771;
public static readonly var OpARMREV16 = 772;
public static readonly var OpARMRBIT = 773;
public static readonly var OpARMSLL = 774;
public static readonly var OpARMSLLconst = 775;
public static readonly var OpARMSRL = 776;
public static readonly var OpARMSRLconst = 777;
public static readonly var OpARMSRA = 778;
public static readonly var OpARMSRAconst = 779;
public static readonly var OpARMSRR = 780;
public static readonly var OpARMSRRconst = 781;
public static readonly var OpARMADDshiftLL = 782;
public static readonly var OpARMADDshiftRL = 783;
public static readonly var OpARMADDshiftRA = 784;
public static readonly var OpARMSUBshiftLL = 785;
public static readonly var OpARMSUBshiftRL = 786;
public static readonly var OpARMSUBshiftRA = 787;
public static readonly var OpARMRSBshiftLL = 788;
public static readonly var OpARMRSBshiftRL = 789;
public static readonly var OpARMRSBshiftRA = 790;
public static readonly var OpARMANDshiftLL = 791;
public static readonly var OpARMANDshiftRL = 792;
public static readonly var OpARMANDshiftRA = 793;
public static readonly var OpARMORshiftLL = 794;
public static readonly var OpARMORshiftRL = 795;
public static readonly var OpARMORshiftRA = 796;
public static readonly var OpARMXORshiftLL = 797;
public static readonly var OpARMXORshiftRL = 798;
public static readonly var OpARMXORshiftRA = 799;
public static readonly var OpARMXORshiftRR = 800;
public static readonly var OpARMBICshiftLL = 801;
public static readonly var OpARMBICshiftRL = 802;
public static readonly var OpARMBICshiftRA = 803;
public static readonly var OpARMMVNshiftLL = 804;
public static readonly var OpARMMVNshiftRL = 805;
public static readonly var OpARMMVNshiftRA = 806;
public static readonly var OpARMADCshiftLL = 807;
public static readonly var OpARMADCshiftRL = 808;
public static readonly var OpARMADCshiftRA = 809;
public static readonly var OpARMSBCshiftLL = 810;
public static readonly var OpARMSBCshiftRL = 811;
public static readonly var OpARMSBCshiftRA = 812;
public static readonly var OpARMRSCshiftLL = 813;
public static readonly var OpARMRSCshiftRL = 814;
public static readonly var OpARMRSCshiftRA = 815;
public static readonly var OpARMADDSshiftLL = 816;
public static readonly var OpARMADDSshiftRL = 817;
public static readonly var OpARMADDSshiftRA = 818;
public static readonly var OpARMSUBSshiftLL = 819;
public static readonly var OpARMSUBSshiftRL = 820;
public static readonly var OpARMSUBSshiftRA = 821;
public static readonly var OpARMRSBSshiftLL = 822;
public static readonly var OpARMRSBSshiftRL = 823;
public static readonly var OpARMRSBSshiftRA = 824;
public static readonly var OpARMADDshiftLLreg = 825;
public static readonly var OpARMADDshiftRLreg = 826;
public static readonly var OpARMADDshiftRAreg = 827;
public static readonly var OpARMSUBshiftLLreg = 828;
public static readonly var OpARMSUBshiftRLreg = 829;
public static readonly var OpARMSUBshiftRAreg = 830;
public static readonly var OpARMRSBshiftLLreg = 831;
public static readonly var OpARMRSBshiftRLreg = 832;
public static readonly var OpARMRSBshiftRAreg = 833;
public static readonly var OpARMANDshiftLLreg = 834;
public static readonly var OpARMANDshiftRLreg = 835;
public static readonly var OpARMANDshiftRAreg = 836;
public static readonly var OpARMORshiftLLreg = 837;
public static readonly var OpARMORshiftRLreg = 838;
public static readonly var OpARMORshiftRAreg = 839;
public static readonly var OpARMXORshiftLLreg = 840;
public static readonly var OpARMXORshiftRLreg = 841;
public static readonly var OpARMXORshiftRAreg = 842;
public static readonly var OpARMBICshiftLLreg = 843;
public static readonly var OpARMBICshiftRLreg = 844;
public static readonly var OpARMBICshiftRAreg = 845;
public static readonly var OpARMMVNshiftLLreg = 846;
public static readonly var OpARMMVNshiftRLreg = 847;
public static readonly var OpARMMVNshiftRAreg = 848;
public static readonly var OpARMADCshiftLLreg = 849;
public static readonly var OpARMADCshiftRLreg = 850;
public static readonly var OpARMADCshiftRAreg = 851;
public static readonly var OpARMSBCshiftLLreg = 852;
public static readonly var OpARMSBCshiftRLreg = 853;
public static readonly var OpARMSBCshiftRAreg = 854;
public static readonly var OpARMRSCshiftLLreg = 855;
public static readonly var OpARMRSCshiftRLreg = 856;
public static readonly var OpARMRSCshiftRAreg = 857;
public static readonly var OpARMADDSshiftLLreg = 858;
public static readonly var OpARMADDSshiftRLreg = 859;
public static readonly var OpARMADDSshiftRAreg = 860;
public static readonly var OpARMSUBSshiftLLreg = 861;
public static readonly var OpARMSUBSshiftRLreg = 862;
public static readonly var OpARMSUBSshiftRAreg = 863;
public static readonly var OpARMRSBSshiftLLreg = 864;
public static readonly var OpARMRSBSshiftRLreg = 865;
public static readonly var OpARMRSBSshiftRAreg = 866;
public static readonly var OpARMCMP = 867;
public static readonly var OpARMCMPconst = 868;
public static readonly var OpARMCMN = 869;
public static readonly var OpARMCMNconst = 870;
public static readonly var OpARMTST = 871;
public static readonly var OpARMTSTconst = 872;
public static readonly var OpARMTEQ = 873;
public static readonly var OpARMTEQconst = 874;
public static readonly var OpARMCMPF = 875;
public static readonly var OpARMCMPD = 876;
public static readonly var OpARMCMPshiftLL = 877;
public static readonly var OpARMCMPshiftRL = 878;
public static readonly var OpARMCMPshiftRA = 879;
public static readonly var OpARMCMNshiftLL = 880;
public static readonly var OpARMCMNshiftRL = 881;
public static readonly var OpARMCMNshiftRA = 882;
public static readonly var OpARMTSTshiftLL = 883;
public static readonly var OpARMTSTshiftRL = 884;
public static readonly var OpARMTSTshiftRA = 885;
public static readonly var OpARMTEQshiftLL = 886;
public static readonly var OpARMTEQshiftRL = 887;
public static readonly var OpARMTEQshiftRA = 888;
public static readonly var OpARMCMPshiftLLreg = 889;
public static readonly var OpARMCMPshiftRLreg = 890;
public static readonly var OpARMCMPshiftRAreg = 891;
public static readonly var OpARMCMNshiftLLreg = 892;
public static readonly var OpARMCMNshiftRLreg = 893;
public static readonly var OpARMCMNshiftRAreg = 894;
public static readonly var OpARMTSTshiftLLreg = 895;
public static readonly var OpARMTSTshiftRLreg = 896;
public static readonly var OpARMTSTshiftRAreg = 897;
public static readonly var OpARMTEQshiftLLreg = 898;
public static readonly var OpARMTEQshiftRLreg = 899;
public static readonly var OpARMTEQshiftRAreg = 900;
public static readonly var OpARMCMPF0 = 901;
public static readonly var OpARMCMPD0 = 902;
public static readonly var OpARMMOVWconst = 903;
public static readonly var OpARMMOVFconst = 904;
public static readonly var OpARMMOVDconst = 905;
public static readonly var OpARMMOVWaddr = 906;
public static readonly var OpARMMOVBload = 907;
public static readonly var OpARMMOVBUload = 908;
public static readonly var OpARMMOVHload = 909;
public static readonly var OpARMMOVHUload = 910;
public static readonly var OpARMMOVWload = 911;
public static readonly var OpARMMOVFload = 912;
public static readonly var OpARMMOVDload = 913;
public static readonly var OpARMMOVBstore = 914;
public static readonly var OpARMMOVHstore = 915;
public static readonly var OpARMMOVWstore = 916;
public static readonly var OpARMMOVFstore = 917;
public static readonly var OpARMMOVDstore = 918;
public static readonly var OpARMMOVWloadidx = 919;
public static readonly var OpARMMOVWloadshiftLL = 920;
public static readonly var OpARMMOVWloadshiftRL = 921;
public static readonly var OpARMMOVWloadshiftRA = 922;
public static readonly var OpARMMOVBUloadidx = 923;
public static readonly var OpARMMOVBloadidx = 924;
public static readonly var OpARMMOVHUloadidx = 925;
public static readonly var OpARMMOVHloadidx = 926;
public static readonly var OpARMMOVWstoreidx = 927;
public static readonly var OpARMMOVWstoreshiftLL = 928;
public static readonly var OpARMMOVWstoreshiftRL = 929;
public static readonly var OpARMMOVWstoreshiftRA = 930;
public static readonly var OpARMMOVBstoreidx = 931;
public static readonly var OpARMMOVHstoreidx = 932;
public static readonly var OpARMMOVBreg = 933;
public static readonly var OpARMMOVBUreg = 934;
public static readonly var OpARMMOVHreg = 935;
public static readonly var OpARMMOVHUreg = 936;
public static readonly var OpARMMOVWreg = 937;
public static readonly var OpARMMOVWnop = 938;
public static readonly var OpARMMOVWF = 939;
public static readonly var OpARMMOVWD = 940;
public static readonly var OpARMMOVWUF = 941;
public static readonly var OpARMMOVWUD = 942;
public static readonly var OpARMMOVFW = 943;
public static readonly var OpARMMOVDW = 944;
public static readonly var OpARMMOVFWU = 945;
public static readonly var OpARMMOVDWU = 946;
public static readonly var OpARMMOVFD = 947;
public static readonly var OpARMMOVDF = 948;
public static readonly var OpARMCMOVWHSconst = 949;
public static readonly var OpARMCMOVWLSconst = 950;
public static readonly var OpARMSRAcond = 951;
public static readonly var OpARMCALLstatic = 952;
public static readonly var OpARMCALLclosure = 953;
public static readonly var OpARMCALLinter = 954;
public static readonly var OpARMLoweredNilCheck = 955;
public static readonly var OpARMEqual = 956;
public static readonly var OpARMNotEqual = 957;
public static readonly var OpARMLessThan = 958;
public static readonly var OpARMLessEqual = 959;
public static readonly var OpARMGreaterThan = 960;
public static readonly var OpARMGreaterEqual = 961;
public static readonly var OpARMLessThanU = 962;
public static readonly var OpARMLessEqualU = 963;
public static readonly var OpARMGreaterThanU = 964;
public static readonly var OpARMGreaterEqualU = 965;
public static readonly var OpARMDUFFZERO = 966;
public static readonly var OpARMDUFFCOPY = 967;
public static readonly var OpARMLoweredZero = 968;
public static readonly var OpARMLoweredMove = 969;
public static readonly var OpARMLoweredGetClosurePtr = 970;
public static readonly var OpARMLoweredGetCallerSP = 971;
public static readonly var OpARMLoweredGetCallerPC = 972;
public static readonly var OpARMLoweredPanicBoundsA = 973;
public static readonly var OpARMLoweredPanicBoundsB = 974;
public static readonly var OpARMLoweredPanicBoundsC = 975;
public static readonly var OpARMLoweredPanicExtendA = 976;
public static readonly var OpARMLoweredPanicExtendB = 977;
public static readonly var OpARMLoweredPanicExtendC = 978;
public static readonly var OpARMFlagConstant = 979;
public static readonly var OpARMInvertFlags = 980;
public static readonly var OpARMLoweredWB = 981;

public static readonly var OpARM64ADCSflags = 982;
public static readonly var OpARM64ADCzerocarry = 983;
public static readonly var OpARM64ADD = 984;
public static readonly var OpARM64ADDconst = 985;
public static readonly var OpARM64ADDSconstflags = 986;
public static readonly var OpARM64ADDSflags = 987;
public static readonly var OpARM64SUB = 988;
public static readonly var OpARM64SUBconst = 989;
public static readonly var OpARM64SBCSflags = 990;
public static readonly var OpARM64SUBSflags = 991;
public static readonly var OpARM64MUL = 992;
public static readonly var OpARM64MULW = 993;
public static readonly var OpARM64MNEG = 994;
public static readonly var OpARM64MNEGW = 995;
public static readonly var OpARM64MULH = 996;
public static readonly var OpARM64UMULH = 997;
public static readonly var OpARM64MULL = 998;
public static readonly var OpARM64UMULL = 999;
public static readonly var OpARM64DIV = 1000;
public static readonly var OpARM64UDIV = 1001;
public static readonly var OpARM64DIVW = 1002;
public static readonly var OpARM64UDIVW = 1003;
public static readonly var OpARM64MOD = 1004;
public static readonly var OpARM64UMOD = 1005;
public static readonly var OpARM64MODW = 1006;
public static readonly var OpARM64UMODW = 1007;
public static readonly var OpARM64FADDS = 1008;
public static readonly var OpARM64FADDD = 1009;
public static readonly var OpARM64FSUBS = 1010;
public static readonly var OpARM64FSUBD = 1011;
public static readonly var OpARM64FMULS = 1012;
public static readonly var OpARM64FMULD = 1013;
public static readonly var OpARM64FNMULS = 1014;
public static readonly var OpARM64FNMULD = 1015;
public static readonly var OpARM64FDIVS = 1016;
public static readonly var OpARM64FDIVD = 1017;
public static readonly var OpARM64AND = 1018;
public static readonly var OpARM64ANDconst = 1019;
public static readonly var OpARM64OR = 1020;
public static readonly var OpARM64ORconst = 1021;
public static readonly var OpARM64XOR = 1022;
public static readonly var OpARM64XORconst = 1023;
public static readonly var OpARM64BIC = 1024;
public static readonly var OpARM64EON = 1025;
public static readonly var OpARM64ORN = 1026;
public static readonly var OpARM64LoweredMuluhilo = 1027;
public static readonly var OpARM64MVN = 1028;
public static readonly var OpARM64NEG = 1029;
public static readonly var OpARM64NEGSflags = 1030;
public static readonly var OpARM64NGCzerocarry = 1031;
public static readonly var OpARM64FABSD = 1032;
public static readonly var OpARM64FNEGS = 1033;
public static readonly var OpARM64FNEGD = 1034;
public static readonly var OpARM64FSQRTD = 1035;
public static readonly var OpARM64FSQRTS = 1036;
public static readonly var OpARM64REV = 1037;
public static readonly var OpARM64REVW = 1038;
public static readonly var OpARM64REV16 = 1039;
public static readonly var OpARM64REV16W = 1040;
public static readonly var OpARM64RBIT = 1041;
public static readonly var OpARM64RBITW = 1042;
public static readonly var OpARM64CLZ = 1043;
public static readonly var OpARM64CLZW = 1044;
public static readonly var OpARM64VCNT = 1045;
public static readonly var OpARM64VUADDLV = 1046;
public static readonly var OpARM64LoweredRound32F = 1047;
public static readonly var OpARM64LoweredRound64F = 1048;
public static readonly var OpARM64FMADDS = 1049;
public static readonly var OpARM64FMADDD = 1050;
public static readonly var OpARM64FNMADDS = 1051;
public static readonly var OpARM64FNMADDD = 1052;
public static readonly var OpARM64FMSUBS = 1053;
public static readonly var OpARM64FMSUBD = 1054;
public static readonly var OpARM64FNMSUBS = 1055;
public static readonly var OpARM64FNMSUBD = 1056;
public static readonly var OpARM64MADD = 1057;
public static readonly var OpARM64MADDW = 1058;
public static readonly var OpARM64MSUB = 1059;
public static readonly var OpARM64MSUBW = 1060;
public static readonly var OpARM64SLL = 1061;
public static readonly var OpARM64SLLconst = 1062;
public static readonly var OpARM64SRL = 1063;
public static readonly var OpARM64SRLconst = 1064;
public static readonly var OpARM64SRA = 1065;
public static readonly var OpARM64SRAconst = 1066;
public static readonly var OpARM64ROR = 1067;
public static readonly var OpARM64RORW = 1068;
public static readonly var OpARM64RORconst = 1069;
public static readonly var OpARM64RORWconst = 1070;
public static readonly var OpARM64EXTRconst = 1071;
public static readonly var OpARM64EXTRWconst = 1072;
public static readonly var OpARM64CMP = 1073;
public static readonly var OpARM64CMPconst = 1074;
public static readonly var OpARM64CMPW = 1075;
public static readonly var OpARM64CMPWconst = 1076;
public static readonly var OpARM64CMN = 1077;
public static readonly var OpARM64CMNconst = 1078;
public static readonly var OpARM64CMNW = 1079;
public static readonly var OpARM64CMNWconst = 1080;
public static readonly var OpARM64TST = 1081;
public static readonly var OpARM64TSTconst = 1082;
public static readonly var OpARM64TSTW = 1083;
public static readonly var OpARM64TSTWconst = 1084;
public static readonly var OpARM64FCMPS = 1085;
public static readonly var OpARM64FCMPD = 1086;
public static readonly var OpARM64FCMPS0 = 1087;
public static readonly var OpARM64FCMPD0 = 1088;
public static readonly var OpARM64MVNshiftLL = 1089;
public static readonly var OpARM64MVNshiftRL = 1090;
public static readonly var OpARM64MVNshiftRA = 1091;
public static readonly var OpARM64NEGshiftLL = 1092;
public static readonly var OpARM64NEGshiftRL = 1093;
public static readonly var OpARM64NEGshiftRA = 1094;
public static readonly var OpARM64ADDshiftLL = 1095;
public static readonly var OpARM64ADDshiftRL = 1096;
public static readonly var OpARM64ADDshiftRA = 1097;
public static readonly var OpARM64SUBshiftLL = 1098;
public static readonly var OpARM64SUBshiftRL = 1099;
public static readonly var OpARM64SUBshiftRA = 1100;
public static readonly var OpARM64ANDshiftLL = 1101;
public static readonly var OpARM64ANDshiftRL = 1102;
public static readonly var OpARM64ANDshiftRA = 1103;
public static readonly var OpARM64ORshiftLL = 1104;
public static readonly var OpARM64ORshiftRL = 1105;
public static readonly var OpARM64ORshiftRA = 1106;
public static readonly var OpARM64XORshiftLL = 1107;
public static readonly var OpARM64XORshiftRL = 1108;
public static readonly var OpARM64XORshiftRA = 1109;
public static readonly var OpARM64BICshiftLL = 1110;
public static readonly var OpARM64BICshiftRL = 1111;
public static readonly var OpARM64BICshiftRA = 1112;
public static readonly var OpARM64EONshiftLL = 1113;
public static readonly var OpARM64EONshiftRL = 1114;
public static readonly var OpARM64EONshiftRA = 1115;
public static readonly var OpARM64ORNshiftLL = 1116;
public static readonly var OpARM64ORNshiftRL = 1117;
public static readonly var OpARM64ORNshiftRA = 1118;
public static readonly var OpARM64CMPshiftLL = 1119;
public static readonly var OpARM64CMPshiftRL = 1120;
public static readonly var OpARM64CMPshiftRA = 1121;
public static readonly var OpARM64CMNshiftLL = 1122;
public static readonly var OpARM64CMNshiftRL = 1123;
public static readonly var OpARM64CMNshiftRA = 1124;
public static readonly var OpARM64TSTshiftLL = 1125;
public static readonly var OpARM64TSTshiftRL = 1126;
public static readonly var OpARM64TSTshiftRA = 1127;
public static readonly var OpARM64BFI = 1128;
public static readonly var OpARM64BFXIL = 1129;
public static readonly var OpARM64SBFIZ = 1130;
public static readonly var OpARM64SBFX = 1131;
public static readonly var OpARM64UBFIZ = 1132;
public static readonly var OpARM64UBFX = 1133;
public static readonly var OpARM64MOVDconst = 1134;
public static readonly var OpARM64FMOVSconst = 1135;
public static readonly var OpARM64FMOVDconst = 1136;
public static readonly var OpARM64MOVDaddr = 1137;
public static readonly var OpARM64MOVBload = 1138;
public static readonly var OpARM64MOVBUload = 1139;
public static readonly var OpARM64MOVHload = 1140;
public static readonly var OpARM64MOVHUload = 1141;
public static readonly var OpARM64MOVWload = 1142;
public static readonly var OpARM64MOVWUload = 1143;
public static readonly var OpARM64MOVDload = 1144;
public static readonly var OpARM64FMOVSload = 1145;
public static readonly var OpARM64FMOVDload = 1146;
public static readonly var OpARM64MOVDloadidx = 1147;
public static readonly var OpARM64MOVWloadidx = 1148;
public static readonly var OpARM64MOVWUloadidx = 1149;
public static readonly var OpARM64MOVHloadidx = 1150;
public static readonly var OpARM64MOVHUloadidx = 1151;
public static readonly var OpARM64MOVBloadidx = 1152;
public static readonly var OpARM64MOVBUloadidx = 1153;
public static readonly var OpARM64FMOVSloadidx = 1154;
public static readonly var OpARM64FMOVDloadidx = 1155;
public static readonly var OpARM64MOVHloadidx2 = 1156;
public static readonly var OpARM64MOVHUloadidx2 = 1157;
public static readonly var OpARM64MOVWloadidx4 = 1158;
public static readonly var OpARM64MOVWUloadidx4 = 1159;
public static readonly var OpARM64MOVDloadidx8 = 1160;
public static readonly var OpARM64FMOVSloadidx4 = 1161;
public static readonly var OpARM64FMOVDloadidx8 = 1162;
public static readonly var OpARM64MOVBstore = 1163;
public static readonly var OpARM64MOVHstore = 1164;
public static readonly var OpARM64MOVWstore = 1165;
public static readonly var OpARM64MOVDstore = 1166;
public static readonly var OpARM64STP = 1167;
public static readonly var OpARM64FMOVSstore = 1168;
public static readonly var OpARM64FMOVDstore = 1169;
public static readonly var OpARM64MOVBstoreidx = 1170;
public static readonly var OpARM64MOVHstoreidx = 1171;
public static readonly var OpARM64MOVWstoreidx = 1172;
public static readonly var OpARM64MOVDstoreidx = 1173;
public static readonly var OpARM64FMOVSstoreidx = 1174;
public static readonly var OpARM64FMOVDstoreidx = 1175;
public static readonly var OpARM64MOVHstoreidx2 = 1176;
public static readonly var OpARM64MOVWstoreidx4 = 1177;
public static readonly var OpARM64MOVDstoreidx8 = 1178;
public static readonly var OpARM64FMOVSstoreidx4 = 1179;
public static readonly var OpARM64FMOVDstoreidx8 = 1180;
public static readonly var OpARM64MOVBstorezero = 1181;
public static readonly var OpARM64MOVHstorezero = 1182;
public static readonly var OpARM64MOVWstorezero = 1183;
public static readonly var OpARM64MOVDstorezero = 1184;
public static readonly var OpARM64MOVQstorezero = 1185;
public static readonly var OpARM64MOVBstorezeroidx = 1186;
public static readonly var OpARM64MOVHstorezeroidx = 1187;
public static readonly var OpARM64MOVWstorezeroidx = 1188;
public static readonly var OpARM64MOVDstorezeroidx = 1189;
public static readonly var OpARM64MOVHstorezeroidx2 = 1190;
public static readonly var OpARM64MOVWstorezeroidx4 = 1191;
public static readonly var OpARM64MOVDstorezeroidx8 = 1192;
public static readonly var OpARM64FMOVDgpfp = 1193;
public static readonly var OpARM64FMOVDfpgp = 1194;
public static readonly var OpARM64FMOVSgpfp = 1195;
public static readonly var OpARM64FMOVSfpgp = 1196;
public static readonly var OpARM64MOVBreg = 1197;
public static readonly var OpARM64MOVBUreg = 1198;
public static readonly var OpARM64MOVHreg = 1199;
public static readonly var OpARM64MOVHUreg = 1200;
public static readonly var OpARM64MOVWreg = 1201;
public static readonly var OpARM64MOVWUreg = 1202;
public static readonly var OpARM64MOVDreg = 1203;
public static readonly var OpARM64MOVDnop = 1204;
public static readonly var OpARM64SCVTFWS = 1205;
public static readonly var OpARM64SCVTFWD = 1206;
public static readonly var OpARM64UCVTFWS = 1207;
public static readonly var OpARM64UCVTFWD = 1208;
public static readonly var OpARM64SCVTFS = 1209;
public static readonly var OpARM64SCVTFD = 1210;
public static readonly var OpARM64UCVTFS = 1211;
public static readonly var OpARM64UCVTFD = 1212;
public static readonly var OpARM64FCVTZSSW = 1213;
public static readonly var OpARM64FCVTZSDW = 1214;
public static readonly var OpARM64FCVTZUSW = 1215;
public static readonly var OpARM64FCVTZUDW = 1216;
public static readonly var OpARM64FCVTZSS = 1217;
public static readonly var OpARM64FCVTZSD = 1218;
public static readonly var OpARM64FCVTZUS = 1219;
public static readonly var OpARM64FCVTZUD = 1220;
public static readonly var OpARM64FCVTSD = 1221;
public static readonly var OpARM64FCVTDS = 1222;
public static readonly var OpARM64FRINTAD = 1223;
public static readonly var OpARM64FRINTMD = 1224;
public static readonly var OpARM64FRINTND = 1225;
public static readonly var OpARM64FRINTPD = 1226;
public static readonly var OpARM64FRINTZD = 1227;
public static readonly var OpARM64CSEL = 1228;
public static readonly var OpARM64CSEL0 = 1229;
public static readonly var OpARM64CSINC = 1230;
public static readonly var OpARM64CSINV = 1231;
public static readonly var OpARM64CSNEG = 1232;
public static readonly var OpARM64CSETM = 1233;
public static readonly var OpARM64CALLstatic = 1234;
public static readonly var OpARM64CALLclosure = 1235;
public static readonly var OpARM64CALLinter = 1236;
public static readonly var OpARM64LoweredNilCheck = 1237;
public static readonly var OpARM64Equal = 1238;
public static readonly var OpARM64NotEqual = 1239;
public static readonly var OpARM64LessThan = 1240;
public static readonly var OpARM64LessEqual = 1241;
public static readonly var OpARM64GreaterThan = 1242;
public static readonly var OpARM64GreaterEqual = 1243;
public static readonly var OpARM64LessThanU = 1244;
public static readonly var OpARM64LessEqualU = 1245;
public static readonly var OpARM64GreaterThanU = 1246;
public static readonly var OpARM64GreaterEqualU = 1247;
public static readonly var OpARM64LessThanF = 1248;
public static readonly var OpARM64LessEqualF = 1249;
public static readonly var OpARM64GreaterThanF = 1250;
public static readonly var OpARM64GreaterEqualF = 1251;
public static readonly var OpARM64NotLessThanF = 1252;
public static readonly var OpARM64NotLessEqualF = 1253;
public static readonly var OpARM64NotGreaterThanF = 1254;
public static readonly var OpARM64NotGreaterEqualF = 1255;
public static readonly var OpARM64DUFFZERO = 1256;
public static readonly var OpARM64LoweredZero = 1257;
public static readonly var OpARM64DUFFCOPY = 1258;
public static readonly var OpARM64LoweredMove = 1259;
public static readonly var OpARM64LoweredGetClosurePtr = 1260;
public static readonly var OpARM64LoweredGetCallerSP = 1261;
public static readonly var OpARM64LoweredGetCallerPC = 1262;
public static readonly var OpARM64FlagConstant = 1263;
public static readonly var OpARM64InvertFlags = 1264;
public static readonly var OpARM64LDAR = 1265;
public static readonly var OpARM64LDARB = 1266;
public static readonly var OpARM64LDARW = 1267;
public static readonly var OpARM64STLRB = 1268;
public static readonly var OpARM64STLR = 1269;
public static readonly var OpARM64STLRW = 1270;
public static readonly var OpARM64LoweredAtomicExchange64 = 1271;
public static readonly var OpARM64LoweredAtomicExchange32 = 1272;
public static readonly var OpARM64LoweredAtomicExchange64Variant = 1273;
public static readonly var OpARM64LoweredAtomicExchange32Variant = 1274;
public static readonly var OpARM64LoweredAtomicAdd64 = 1275;
public static readonly var OpARM64LoweredAtomicAdd32 = 1276;
public static readonly var OpARM64LoweredAtomicAdd64Variant = 1277;
public static readonly var OpARM64LoweredAtomicAdd32Variant = 1278;
public static readonly var OpARM64LoweredAtomicCas64 = 1279;
public static readonly var OpARM64LoweredAtomicCas32 = 1280;
public static readonly var OpARM64LoweredAtomicCas64Variant = 1281;
public static readonly var OpARM64LoweredAtomicCas32Variant = 1282;
public static readonly var OpARM64LoweredAtomicAnd8 = 1283;
public static readonly var OpARM64LoweredAtomicAnd32 = 1284;
public static readonly var OpARM64LoweredAtomicOr8 = 1285;
public static readonly var OpARM64LoweredAtomicOr32 = 1286;
public static readonly var OpARM64LoweredAtomicAnd8Variant = 1287;
public static readonly var OpARM64LoweredAtomicAnd32Variant = 1288;
public static readonly var OpARM64LoweredAtomicOr8Variant = 1289;
public static readonly var OpARM64LoweredAtomicOr32Variant = 1290;
public static readonly var OpARM64LoweredWB = 1291;
public static readonly var OpARM64LoweredPanicBoundsA = 1292;
public static readonly var OpARM64LoweredPanicBoundsB = 1293;
public static readonly var OpARM64LoweredPanicBoundsC = 1294;

public static readonly var OpMIPSADD = 1295;
public static readonly var OpMIPSADDconst = 1296;
public static readonly var OpMIPSSUB = 1297;
public static readonly var OpMIPSSUBconst = 1298;
public static readonly var OpMIPSMUL = 1299;
public static readonly var OpMIPSMULT = 1300;
public static readonly var OpMIPSMULTU = 1301;
public static readonly var OpMIPSDIV = 1302;
public static readonly var OpMIPSDIVU = 1303;
public static readonly var OpMIPSADDF = 1304;
public static readonly var OpMIPSADDD = 1305;
public static readonly var OpMIPSSUBF = 1306;
public static readonly var OpMIPSSUBD = 1307;
public static readonly var OpMIPSMULF = 1308;
public static readonly var OpMIPSMULD = 1309;
public static readonly var OpMIPSDIVF = 1310;
public static readonly var OpMIPSDIVD = 1311;
public static readonly var OpMIPSAND = 1312;
public static readonly var OpMIPSANDconst = 1313;
public static readonly var OpMIPSOR = 1314;
public static readonly var OpMIPSORconst = 1315;
public static readonly var OpMIPSXOR = 1316;
public static readonly var OpMIPSXORconst = 1317;
public static readonly var OpMIPSNOR = 1318;
public static readonly var OpMIPSNORconst = 1319;
public static readonly var OpMIPSNEG = 1320;
public static readonly var OpMIPSNEGF = 1321;
public static readonly var OpMIPSNEGD = 1322;
public static readonly var OpMIPSSQRTD = 1323;
public static readonly var OpMIPSSQRTF = 1324;
public static readonly var OpMIPSSLL = 1325;
public static readonly var OpMIPSSLLconst = 1326;
public static readonly var OpMIPSSRL = 1327;
public static readonly var OpMIPSSRLconst = 1328;
public static readonly var OpMIPSSRA = 1329;
public static readonly var OpMIPSSRAconst = 1330;
public static readonly var OpMIPSCLZ = 1331;
public static readonly var OpMIPSSGT = 1332;
public static readonly var OpMIPSSGTconst = 1333;
public static readonly var OpMIPSSGTzero = 1334;
public static readonly var OpMIPSSGTU = 1335;
public static readonly var OpMIPSSGTUconst = 1336;
public static readonly var OpMIPSSGTUzero = 1337;
public static readonly var OpMIPSCMPEQF = 1338;
public static readonly var OpMIPSCMPEQD = 1339;
public static readonly var OpMIPSCMPGEF = 1340;
public static readonly var OpMIPSCMPGED = 1341;
public static readonly var OpMIPSCMPGTF = 1342;
public static readonly var OpMIPSCMPGTD = 1343;
public static readonly var OpMIPSMOVWconst = 1344;
public static readonly var OpMIPSMOVFconst = 1345;
public static readonly var OpMIPSMOVDconst = 1346;
public static readonly var OpMIPSMOVWaddr = 1347;
public static readonly var OpMIPSMOVBload = 1348;
public static readonly var OpMIPSMOVBUload = 1349;
public static readonly var OpMIPSMOVHload = 1350;
public static readonly var OpMIPSMOVHUload = 1351;
public static readonly var OpMIPSMOVWload = 1352;
public static readonly var OpMIPSMOVFload = 1353;
public static readonly var OpMIPSMOVDload = 1354;
public static readonly var OpMIPSMOVBstore = 1355;
public static readonly var OpMIPSMOVHstore = 1356;
public static readonly var OpMIPSMOVWstore = 1357;
public static readonly var OpMIPSMOVFstore = 1358;
public static readonly var OpMIPSMOVDstore = 1359;
public static readonly var OpMIPSMOVBstorezero = 1360;
public static readonly var OpMIPSMOVHstorezero = 1361;
public static readonly var OpMIPSMOVWstorezero = 1362;
public static readonly var OpMIPSMOVBreg = 1363;
public static readonly var OpMIPSMOVBUreg = 1364;
public static readonly var OpMIPSMOVHreg = 1365;
public static readonly var OpMIPSMOVHUreg = 1366;
public static readonly var OpMIPSMOVWreg = 1367;
public static readonly var OpMIPSMOVWnop = 1368;
public static readonly var OpMIPSCMOVZ = 1369;
public static readonly var OpMIPSCMOVZzero = 1370;
public static readonly var OpMIPSMOVWF = 1371;
public static readonly var OpMIPSMOVWD = 1372;
public static readonly var OpMIPSTRUNCFW = 1373;
public static readonly var OpMIPSTRUNCDW = 1374;
public static readonly var OpMIPSMOVFD = 1375;
public static readonly var OpMIPSMOVDF = 1376;
public static readonly var OpMIPSCALLstatic = 1377;
public static readonly var OpMIPSCALLclosure = 1378;
public static readonly var OpMIPSCALLinter = 1379;
public static readonly var OpMIPSLoweredAtomicLoad8 = 1380;
public static readonly var OpMIPSLoweredAtomicLoad32 = 1381;
public static readonly var OpMIPSLoweredAtomicStore8 = 1382;
public static readonly var OpMIPSLoweredAtomicStore32 = 1383;
public static readonly var OpMIPSLoweredAtomicStorezero = 1384;
public static readonly var OpMIPSLoweredAtomicExchange = 1385;
public static readonly var OpMIPSLoweredAtomicAdd = 1386;
public static readonly var OpMIPSLoweredAtomicAddconst = 1387;
public static readonly var OpMIPSLoweredAtomicCas = 1388;
public static readonly var OpMIPSLoweredAtomicAnd = 1389;
public static readonly var OpMIPSLoweredAtomicOr = 1390;
public static readonly var OpMIPSLoweredZero = 1391;
public static readonly var OpMIPSLoweredMove = 1392;
public static readonly var OpMIPSLoweredNilCheck = 1393;
public static readonly var OpMIPSFPFlagTrue = 1394;
public static readonly var OpMIPSFPFlagFalse = 1395;
public static readonly var OpMIPSLoweredGetClosurePtr = 1396;
public static readonly var OpMIPSLoweredGetCallerSP = 1397;
public static readonly var OpMIPSLoweredGetCallerPC = 1398;
public static readonly var OpMIPSLoweredWB = 1399;
public static readonly var OpMIPSLoweredPanicBoundsA = 1400;
public static readonly var OpMIPSLoweredPanicBoundsB = 1401;
public static readonly var OpMIPSLoweredPanicBoundsC = 1402;
public static readonly var OpMIPSLoweredPanicExtendA = 1403;
public static readonly var OpMIPSLoweredPanicExtendB = 1404;
public static readonly var OpMIPSLoweredPanicExtendC = 1405;

public static readonly var OpMIPS64ADDV = 1406;
public static readonly var OpMIPS64ADDVconst = 1407;
public static readonly var OpMIPS64SUBV = 1408;
public static readonly var OpMIPS64SUBVconst = 1409;
public static readonly var OpMIPS64MULV = 1410;
public static readonly var OpMIPS64MULVU = 1411;
public static readonly var OpMIPS64DIVV = 1412;
public static readonly var OpMIPS64DIVVU = 1413;
public static readonly var OpMIPS64ADDF = 1414;
public static readonly var OpMIPS64ADDD = 1415;
public static readonly var OpMIPS64SUBF = 1416;
public static readonly var OpMIPS64SUBD = 1417;
public static readonly var OpMIPS64MULF = 1418;
public static readonly var OpMIPS64MULD = 1419;
public static readonly var OpMIPS64DIVF = 1420;
public static readonly var OpMIPS64DIVD = 1421;
public static readonly var OpMIPS64AND = 1422;
public static readonly var OpMIPS64ANDconst = 1423;
public static readonly var OpMIPS64OR = 1424;
public static readonly var OpMIPS64ORconst = 1425;
public static readonly var OpMIPS64XOR = 1426;
public static readonly var OpMIPS64XORconst = 1427;
public static readonly var OpMIPS64NOR = 1428;
public static readonly var OpMIPS64NORconst = 1429;
public static readonly var OpMIPS64NEGV = 1430;
public static readonly var OpMIPS64NEGF = 1431;
public static readonly var OpMIPS64NEGD = 1432;
public static readonly var OpMIPS64SQRTD = 1433;
public static readonly var OpMIPS64SQRTF = 1434;
public static readonly var OpMIPS64SLLV = 1435;
public static readonly var OpMIPS64SLLVconst = 1436;
public static readonly var OpMIPS64SRLV = 1437;
public static readonly var OpMIPS64SRLVconst = 1438;
public static readonly var OpMIPS64SRAV = 1439;
public static readonly var OpMIPS64SRAVconst = 1440;
public static readonly var OpMIPS64SGT = 1441;
public static readonly var OpMIPS64SGTconst = 1442;
public static readonly var OpMIPS64SGTU = 1443;
public static readonly var OpMIPS64SGTUconst = 1444;
public static readonly var OpMIPS64CMPEQF = 1445;
public static readonly var OpMIPS64CMPEQD = 1446;
public static readonly var OpMIPS64CMPGEF = 1447;
public static readonly var OpMIPS64CMPGED = 1448;
public static readonly var OpMIPS64CMPGTF = 1449;
public static readonly var OpMIPS64CMPGTD = 1450;
public static readonly var OpMIPS64MOVVconst = 1451;
public static readonly var OpMIPS64MOVFconst = 1452;
public static readonly var OpMIPS64MOVDconst = 1453;
public static readonly var OpMIPS64MOVVaddr = 1454;
public static readonly var OpMIPS64MOVBload = 1455;
public static readonly var OpMIPS64MOVBUload = 1456;
public static readonly var OpMIPS64MOVHload = 1457;
public static readonly var OpMIPS64MOVHUload = 1458;
public static readonly var OpMIPS64MOVWload = 1459;
public static readonly var OpMIPS64MOVWUload = 1460;
public static readonly var OpMIPS64MOVVload = 1461;
public static readonly var OpMIPS64MOVFload = 1462;
public static readonly var OpMIPS64MOVDload = 1463;
public static readonly var OpMIPS64MOVBstore = 1464;
public static readonly var OpMIPS64MOVHstore = 1465;
public static readonly var OpMIPS64MOVWstore = 1466;
public static readonly var OpMIPS64MOVVstore = 1467;
public static readonly var OpMIPS64MOVFstore = 1468;
public static readonly var OpMIPS64MOVDstore = 1469;
public static readonly var OpMIPS64MOVBstorezero = 1470;
public static readonly var OpMIPS64MOVHstorezero = 1471;
public static readonly var OpMIPS64MOVWstorezero = 1472;
public static readonly var OpMIPS64MOVVstorezero = 1473;
public static readonly var OpMIPS64MOVBreg = 1474;
public static readonly var OpMIPS64MOVBUreg = 1475;
public static readonly var OpMIPS64MOVHreg = 1476;
public static readonly var OpMIPS64MOVHUreg = 1477;
public static readonly var OpMIPS64MOVWreg = 1478;
public static readonly var OpMIPS64MOVWUreg = 1479;
public static readonly var OpMIPS64MOVVreg = 1480;
public static readonly var OpMIPS64MOVVnop = 1481;
public static readonly var OpMIPS64MOVWF = 1482;
public static readonly var OpMIPS64MOVWD = 1483;
public static readonly var OpMIPS64MOVVF = 1484;
public static readonly var OpMIPS64MOVVD = 1485;
public static readonly var OpMIPS64TRUNCFW = 1486;
public static readonly var OpMIPS64TRUNCDW = 1487;
public static readonly var OpMIPS64TRUNCFV = 1488;
public static readonly var OpMIPS64TRUNCDV = 1489;
public static readonly var OpMIPS64MOVFD = 1490;
public static readonly var OpMIPS64MOVDF = 1491;
public static readonly var OpMIPS64CALLstatic = 1492;
public static readonly var OpMIPS64CALLclosure = 1493;
public static readonly var OpMIPS64CALLinter = 1494;
public static readonly var OpMIPS64DUFFZERO = 1495;
public static readonly var OpMIPS64DUFFCOPY = 1496;
public static readonly var OpMIPS64LoweredZero = 1497;
public static readonly var OpMIPS64LoweredMove = 1498;
public static readonly var OpMIPS64LoweredAtomicLoad8 = 1499;
public static readonly var OpMIPS64LoweredAtomicLoad32 = 1500;
public static readonly var OpMIPS64LoweredAtomicLoad64 = 1501;
public static readonly var OpMIPS64LoweredAtomicStore8 = 1502;
public static readonly var OpMIPS64LoweredAtomicStore32 = 1503;
public static readonly var OpMIPS64LoweredAtomicStore64 = 1504;
public static readonly var OpMIPS64LoweredAtomicStorezero32 = 1505;
public static readonly var OpMIPS64LoweredAtomicStorezero64 = 1506;
public static readonly var OpMIPS64LoweredAtomicExchange32 = 1507;
public static readonly var OpMIPS64LoweredAtomicExchange64 = 1508;
public static readonly var OpMIPS64LoweredAtomicAdd32 = 1509;
public static readonly var OpMIPS64LoweredAtomicAdd64 = 1510;
public static readonly var OpMIPS64LoweredAtomicAddconst32 = 1511;
public static readonly var OpMIPS64LoweredAtomicAddconst64 = 1512;
public static readonly var OpMIPS64LoweredAtomicCas32 = 1513;
public static readonly var OpMIPS64LoweredAtomicCas64 = 1514;
public static readonly var OpMIPS64LoweredNilCheck = 1515;
public static readonly var OpMIPS64FPFlagTrue = 1516;
public static readonly var OpMIPS64FPFlagFalse = 1517;
public static readonly var OpMIPS64LoweredGetClosurePtr = 1518;
public static readonly var OpMIPS64LoweredGetCallerSP = 1519;
public static readonly var OpMIPS64LoweredGetCallerPC = 1520;
public static readonly var OpMIPS64LoweredWB = 1521;
public static readonly var OpMIPS64LoweredPanicBoundsA = 1522;
public static readonly var OpMIPS64LoweredPanicBoundsB = 1523;
public static readonly var OpMIPS64LoweredPanicBoundsC = 1524;

public static readonly var OpPPC64ADD = 1525;
public static readonly var OpPPC64ADDconst = 1526;
public static readonly var OpPPC64FADD = 1527;
public static readonly var OpPPC64FADDS = 1528;
public static readonly var OpPPC64SUB = 1529;
public static readonly var OpPPC64SUBFCconst = 1530;
public static readonly var OpPPC64FSUB = 1531;
public static readonly var OpPPC64FSUBS = 1532;
public static readonly var OpPPC64MULLD = 1533;
public static readonly var OpPPC64MULLW = 1534;
public static readonly var OpPPC64MULLDconst = 1535;
public static readonly var OpPPC64MULLWconst = 1536;
public static readonly var OpPPC64MADDLD = 1537;
public static readonly var OpPPC64MULHD = 1538;
public static readonly var OpPPC64MULHW = 1539;
public static readonly var OpPPC64MULHDU = 1540;
public static readonly var OpPPC64MULHWU = 1541;
public static readonly var OpPPC64LoweredMuluhilo = 1542;
public static readonly var OpPPC64FMUL = 1543;
public static readonly var OpPPC64FMULS = 1544;
public static readonly var OpPPC64FMADD = 1545;
public static readonly var OpPPC64FMADDS = 1546;
public static readonly var OpPPC64FMSUB = 1547;
public static readonly var OpPPC64FMSUBS = 1548;
public static readonly var OpPPC64SRAD = 1549;
public static readonly var OpPPC64SRAW = 1550;
public static readonly var OpPPC64SRD = 1551;
public static readonly var OpPPC64SRW = 1552;
public static readonly var OpPPC64SLD = 1553;
public static readonly var OpPPC64SLW = 1554;
public static readonly var OpPPC64ROTL = 1555;
public static readonly var OpPPC64ROTLW = 1556;
public static readonly var OpPPC64RLDICL = 1557;
public static readonly var OpPPC64CLRLSLWI = 1558;
public static readonly var OpPPC64CLRLSLDI = 1559;
public static readonly var OpPPC64LoweredAdd64Carry = 1560;
public static readonly var OpPPC64SRADconst = 1561;
public static readonly var OpPPC64SRAWconst = 1562;
public static readonly var OpPPC64SRDconst = 1563;
public static readonly var OpPPC64SRWconst = 1564;
public static readonly var OpPPC64SLDconst = 1565;
public static readonly var OpPPC64SLWconst = 1566;
public static readonly var OpPPC64ROTLconst = 1567;
public static readonly var OpPPC64ROTLWconst = 1568;
public static readonly var OpPPC64EXTSWSLconst = 1569;
public static readonly var OpPPC64RLWINM = 1570;
public static readonly var OpPPC64RLWNM = 1571;
public static readonly var OpPPC64RLWMI = 1572;
public static readonly var OpPPC64CNTLZD = 1573;
public static readonly var OpPPC64CNTLZW = 1574;
public static readonly var OpPPC64CNTTZD = 1575;
public static readonly var OpPPC64CNTTZW = 1576;
public static readonly var OpPPC64POPCNTD = 1577;
public static readonly var OpPPC64POPCNTW = 1578;
public static readonly var OpPPC64POPCNTB = 1579;
public static readonly var OpPPC64FDIV = 1580;
public static readonly var OpPPC64FDIVS = 1581;
public static readonly var OpPPC64DIVD = 1582;
public static readonly var OpPPC64DIVW = 1583;
public static readonly var OpPPC64DIVDU = 1584;
public static readonly var OpPPC64DIVWU = 1585;
public static readonly var OpPPC64MODUD = 1586;
public static readonly var OpPPC64MODSD = 1587;
public static readonly var OpPPC64MODUW = 1588;
public static readonly var OpPPC64MODSW = 1589;
public static readonly var OpPPC64FCTIDZ = 1590;
public static readonly var OpPPC64FCTIWZ = 1591;
public static readonly var OpPPC64FCFID = 1592;
public static readonly var OpPPC64FCFIDS = 1593;
public static readonly var OpPPC64FRSP = 1594;
public static readonly var OpPPC64MFVSRD = 1595;
public static readonly var OpPPC64MTVSRD = 1596;
public static readonly var OpPPC64AND = 1597;
public static readonly var OpPPC64ANDN = 1598;
public static readonly var OpPPC64ANDCC = 1599;
public static readonly var OpPPC64OR = 1600;
public static readonly var OpPPC64ORN = 1601;
public static readonly var OpPPC64ORCC = 1602;
public static readonly var OpPPC64NOR = 1603;
public static readonly var OpPPC64XOR = 1604;
public static readonly var OpPPC64XORCC = 1605;
public static readonly var OpPPC64EQV = 1606;
public static readonly var OpPPC64NEG = 1607;
public static readonly var OpPPC64FNEG = 1608;
public static readonly var OpPPC64FSQRT = 1609;
public static readonly var OpPPC64FSQRTS = 1610;
public static readonly var OpPPC64FFLOOR = 1611;
public static readonly var OpPPC64FCEIL = 1612;
public static readonly var OpPPC64FTRUNC = 1613;
public static readonly var OpPPC64FROUND = 1614;
public static readonly var OpPPC64FABS = 1615;
public static readonly var OpPPC64FNABS = 1616;
public static readonly var OpPPC64FCPSGN = 1617;
public static readonly var OpPPC64ORconst = 1618;
public static readonly var OpPPC64XORconst = 1619;
public static readonly var OpPPC64ANDconst = 1620;
public static readonly var OpPPC64ANDCCconst = 1621;
public static readonly var OpPPC64MOVBreg = 1622;
public static readonly var OpPPC64MOVBZreg = 1623;
public static readonly var OpPPC64MOVHreg = 1624;
public static readonly var OpPPC64MOVHZreg = 1625;
public static readonly var OpPPC64MOVWreg = 1626;
public static readonly var OpPPC64MOVWZreg = 1627;
public static readonly var OpPPC64MOVBZload = 1628;
public static readonly var OpPPC64MOVHload = 1629;
public static readonly var OpPPC64MOVHZload = 1630;
public static readonly var OpPPC64MOVWload = 1631;
public static readonly var OpPPC64MOVWZload = 1632;
public static readonly var OpPPC64MOVDload = 1633;
public static readonly var OpPPC64MOVDBRload = 1634;
public static readonly var OpPPC64MOVWBRload = 1635;
public static readonly var OpPPC64MOVHBRload = 1636;
public static readonly var OpPPC64MOVBZloadidx = 1637;
public static readonly var OpPPC64MOVHloadidx = 1638;
public static readonly var OpPPC64MOVHZloadidx = 1639;
public static readonly var OpPPC64MOVWloadidx = 1640;
public static readonly var OpPPC64MOVWZloadidx = 1641;
public static readonly var OpPPC64MOVDloadidx = 1642;
public static readonly var OpPPC64MOVHBRloadidx = 1643;
public static readonly var OpPPC64MOVWBRloadidx = 1644;
public static readonly var OpPPC64MOVDBRloadidx = 1645;
public static readonly var OpPPC64FMOVDloadidx = 1646;
public static readonly var OpPPC64FMOVSloadidx = 1647;
public static readonly var OpPPC64MOVDBRstore = 1648;
public static readonly var OpPPC64MOVWBRstore = 1649;
public static readonly var OpPPC64MOVHBRstore = 1650;
public static readonly var OpPPC64FMOVDload = 1651;
public static readonly var OpPPC64FMOVSload = 1652;
public static readonly var OpPPC64MOVBstore = 1653;
public static readonly var OpPPC64MOVHstore = 1654;
public static readonly var OpPPC64MOVWstore = 1655;
public static readonly var OpPPC64MOVDstore = 1656;
public static readonly var OpPPC64FMOVDstore = 1657;
public static readonly var OpPPC64FMOVSstore = 1658;
public static readonly var OpPPC64MOVBstoreidx = 1659;
public static readonly var OpPPC64MOVHstoreidx = 1660;
public static readonly var OpPPC64MOVWstoreidx = 1661;
public static readonly var OpPPC64MOVDstoreidx = 1662;
public static readonly var OpPPC64FMOVDstoreidx = 1663;
public static readonly var OpPPC64FMOVSstoreidx = 1664;
public static readonly var OpPPC64MOVHBRstoreidx = 1665;
public static readonly var OpPPC64MOVWBRstoreidx = 1666;
public static readonly var OpPPC64MOVDBRstoreidx = 1667;
public static readonly var OpPPC64MOVBstorezero = 1668;
public static readonly var OpPPC64MOVHstorezero = 1669;
public static readonly var OpPPC64MOVWstorezero = 1670;
public static readonly var OpPPC64MOVDstorezero = 1671;
public static readonly var OpPPC64MOVDaddr = 1672;
public static readonly var OpPPC64MOVDconst = 1673;
public static readonly var OpPPC64FMOVDconst = 1674;
public static readonly var OpPPC64FMOVSconst = 1675;
public static readonly var OpPPC64FCMPU = 1676;
public static readonly var OpPPC64CMP = 1677;
public static readonly var OpPPC64CMPU = 1678;
public static readonly var OpPPC64CMPW = 1679;
public static readonly var OpPPC64CMPWU = 1680;
public static readonly var OpPPC64CMPconst = 1681;
public static readonly var OpPPC64CMPUconst = 1682;
public static readonly var OpPPC64CMPWconst = 1683;
public static readonly var OpPPC64CMPWUconst = 1684;
public static readonly var OpPPC64ISEL = 1685;
public static readonly var OpPPC64ISELB = 1686;
public static readonly var OpPPC64Equal = 1687;
public static readonly var OpPPC64NotEqual = 1688;
public static readonly var OpPPC64LessThan = 1689;
public static readonly var OpPPC64FLessThan = 1690;
public static readonly var OpPPC64LessEqual = 1691;
public static readonly var OpPPC64FLessEqual = 1692;
public static readonly var OpPPC64GreaterThan = 1693;
public static readonly var OpPPC64FGreaterThan = 1694;
public static readonly var OpPPC64GreaterEqual = 1695;
public static readonly var OpPPC64FGreaterEqual = 1696;
public static readonly var OpPPC64LoweredGetClosurePtr = 1697;
public static readonly var OpPPC64LoweredGetCallerSP = 1698;
public static readonly var OpPPC64LoweredGetCallerPC = 1699;
public static readonly var OpPPC64LoweredNilCheck = 1700;
public static readonly var OpPPC64LoweredRound32F = 1701;
public static readonly var OpPPC64LoweredRound64F = 1702;
public static readonly var OpPPC64CALLstatic = 1703;
public static readonly var OpPPC64CALLclosure = 1704;
public static readonly var OpPPC64CALLinter = 1705;
public static readonly var OpPPC64LoweredZero = 1706;
public static readonly var OpPPC64LoweredZeroShort = 1707;
public static readonly var OpPPC64LoweredQuadZeroShort = 1708;
public static readonly var OpPPC64LoweredQuadZero = 1709;
public static readonly var OpPPC64LoweredMove = 1710;
public static readonly var OpPPC64LoweredMoveShort = 1711;
public static readonly var OpPPC64LoweredQuadMove = 1712;
public static readonly var OpPPC64LoweredQuadMoveShort = 1713;
public static readonly var OpPPC64LoweredAtomicStore8 = 1714;
public static readonly var OpPPC64LoweredAtomicStore32 = 1715;
public static readonly var OpPPC64LoweredAtomicStore64 = 1716;
public static readonly var OpPPC64LoweredAtomicLoad8 = 1717;
public static readonly var OpPPC64LoweredAtomicLoad32 = 1718;
public static readonly var OpPPC64LoweredAtomicLoad64 = 1719;
public static readonly var OpPPC64LoweredAtomicLoadPtr = 1720;
public static readonly var OpPPC64LoweredAtomicAdd32 = 1721;
public static readonly var OpPPC64LoweredAtomicAdd64 = 1722;
public static readonly var OpPPC64LoweredAtomicExchange32 = 1723;
public static readonly var OpPPC64LoweredAtomicExchange64 = 1724;
public static readonly var OpPPC64LoweredAtomicCas64 = 1725;
public static readonly var OpPPC64LoweredAtomicCas32 = 1726;
public static readonly var OpPPC64LoweredAtomicAnd8 = 1727;
public static readonly var OpPPC64LoweredAtomicAnd32 = 1728;
public static readonly var OpPPC64LoweredAtomicOr8 = 1729;
public static readonly var OpPPC64LoweredAtomicOr32 = 1730;
public static readonly var OpPPC64LoweredWB = 1731;
public static readonly var OpPPC64LoweredPanicBoundsA = 1732;
public static readonly var OpPPC64LoweredPanicBoundsB = 1733;
public static readonly var OpPPC64LoweredPanicBoundsC = 1734;
public static readonly var OpPPC64InvertFlags = 1735;
public static readonly var OpPPC64FlagEQ = 1736;
public static readonly var OpPPC64FlagLT = 1737;
public static readonly var OpPPC64FlagGT = 1738;

public static readonly var OpRISCV64ADD = 1739;
public static readonly var OpRISCV64ADDI = 1740;
public static readonly var OpRISCV64ADDIW = 1741;
public static readonly var OpRISCV64NEG = 1742;
public static readonly var OpRISCV64NEGW = 1743;
public static readonly var OpRISCV64SUB = 1744;
public static readonly var OpRISCV64SUBW = 1745;
public static readonly var OpRISCV64MUL = 1746;
public static readonly var OpRISCV64MULW = 1747;
public static readonly var OpRISCV64MULH = 1748;
public static readonly var OpRISCV64MULHU = 1749;
public static readonly var OpRISCV64DIV = 1750;
public static readonly var OpRISCV64DIVU = 1751;
public static readonly var OpRISCV64DIVW = 1752;
public static readonly var OpRISCV64DIVUW = 1753;
public static readonly var OpRISCV64REM = 1754;
public static readonly var OpRISCV64REMU = 1755;
public static readonly var OpRISCV64REMW = 1756;
public static readonly var OpRISCV64REMUW = 1757;
public static readonly var OpRISCV64MOVaddr = 1758;
public static readonly var OpRISCV64MOVDconst = 1759;
public static readonly var OpRISCV64MOVBload = 1760;
public static readonly var OpRISCV64MOVHload = 1761;
public static readonly var OpRISCV64MOVWload = 1762;
public static readonly var OpRISCV64MOVDload = 1763;
public static readonly var OpRISCV64MOVBUload = 1764;
public static readonly var OpRISCV64MOVHUload = 1765;
public static readonly var OpRISCV64MOVWUload = 1766;
public static readonly var OpRISCV64MOVBstore = 1767;
public static readonly var OpRISCV64MOVHstore = 1768;
public static readonly var OpRISCV64MOVWstore = 1769;
public static readonly var OpRISCV64MOVDstore = 1770;
public static readonly var OpRISCV64MOVBstorezero = 1771;
public static readonly var OpRISCV64MOVHstorezero = 1772;
public static readonly var OpRISCV64MOVWstorezero = 1773;
public static readonly var OpRISCV64MOVDstorezero = 1774;
public static readonly var OpRISCV64MOVBreg = 1775;
public static readonly var OpRISCV64MOVHreg = 1776;
public static readonly var OpRISCV64MOVWreg = 1777;
public static readonly var OpRISCV64MOVDreg = 1778;
public static readonly var OpRISCV64MOVBUreg = 1779;
public static readonly var OpRISCV64MOVHUreg = 1780;
public static readonly var OpRISCV64MOVWUreg = 1781;
public static readonly var OpRISCV64MOVDnop = 1782;
public static readonly var OpRISCV64SLL = 1783;
public static readonly var OpRISCV64SRA = 1784;
public static readonly var OpRISCV64SRL = 1785;
public static readonly var OpRISCV64SLLI = 1786;
public static readonly var OpRISCV64SRAI = 1787;
public static readonly var OpRISCV64SRLI = 1788;
public static readonly var OpRISCV64XOR = 1789;
public static readonly var OpRISCV64XORI = 1790;
public static readonly var OpRISCV64OR = 1791;
public static readonly var OpRISCV64ORI = 1792;
public static readonly var OpRISCV64AND = 1793;
public static readonly var OpRISCV64ANDI = 1794;
public static readonly var OpRISCV64NOT = 1795;
public static readonly var OpRISCV64SEQZ = 1796;
public static readonly var OpRISCV64SNEZ = 1797;
public static readonly var OpRISCV64SLT = 1798;
public static readonly var OpRISCV64SLTI = 1799;
public static readonly var OpRISCV64SLTU = 1800;
public static readonly var OpRISCV64SLTIU = 1801;
public static readonly var OpRISCV64MOVconvert = 1802;
public static readonly var OpRISCV64CALLstatic = 1803;
public static readonly var OpRISCV64CALLclosure = 1804;
public static readonly var OpRISCV64CALLinter = 1805;
public static readonly var OpRISCV64DUFFZERO = 1806;
public static readonly var OpRISCV64DUFFCOPY = 1807;
public static readonly var OpRISCV64LoweredZero = 1808;
public static readonly var OpRISCV64LoweredMove = 1809;
public static readonly var OpRISCV64LoweredAtomicLoad8 = 1810;
public static readonly var OpRISCV64LoweredAtomicLoad32 = 1811;
public static readonly var OpRISCV64LoweredAtomicLoad64 = 1812;
public static readonly var OpRISCV64LoweredAtomicStore8 = 1813;
public static readonly var OpRISCV64LoweredAtomicStore32 = 1814;
public static readonly var OpRISCV64LoweredAtomicStore64 = 1815;
public static readonly var OpRISCV64LoweredAtomicExchange32 = 1816;
public static readonly var OpRISCV64LoweredAtomicExchange64 = 1817;
public static readonly var OpRISCV64LoweredAtomicAdd32 = 1818;
public static readonly var OpRISCV64LoweredAtomicAdd64 = 1819;
public static readonly var OpRISCV64LoweredAtomicCas32 = 1820;
public static readonly var OpRISCV64LoweredAtomicCas64 = 1821;
public static readonly var OpRISCV64LoweredAtomicAnd32 = 1822;
public static readonly var OpRISCV64LoweredAtomicOr32 = 1823;
public static readonly var OpRISCV64LoweredNilCheck = 1824;
public static readonly var OpRISCV64LoweredGetClosurePtr = 1825;
public static readonly var OpRISCV64LoweredGetCallerSP = 1826;
public static readonly var OpRISCV64LoweredGetCallerPC = 1827;
public static readonly var OpRISCV64LoweredWB = 1828;
public static readonly var OpRISCV64LoweredPanicBoundsA = 1829;
public static readonly var OpRISCV64LoweredPanicBoundsB = 1830;
public static readonly var OpRISCV64LoweredPanicBoundsC = 1831;
public static readonly var OpRISCV64FADDS = 1832;
public static readonly var OpRISCV64FSUBS = 1833;
public static readonly var OpRISCV64FMULS = 1834;
public static readonly var OpRISCV64FDIVS = 1835;
public static readonly var OpRISCV64FSQRTS = 1836;
public static readonly var OpRISCV64FNEGS = 1837;
public static readonly var OpRISCV64FMVSX = 1838;
public static readonly var OpRISCV64FCVTSW = 1839;
public static readonly var OpRISCV64FCVTSL = 1840;
public static readonly var OpRISCV64FCVTWS = 1841;
public static readonly var OpRISCV64FCVTLS = 1842;
public static readonly var OpRISCV64FMOVWload = 1843;
public static readonly var OpRISCV64FMOVWstore = 1844;
public static readonly var OpRISCV64FEQS = 1845;
public static readonly var OpRISCV64FNES = 1846;
public static readonly var OpRISCV64FLTS = 1847;
public static readonly var OpRISCV64FLES = 1848;
public static readonly var OpRISCV64FADDD = 1849;
public static readonly var OpRISCV64FSUBD = 1850;
public static readonly var OpRISCV64FMULD = 1851;
public static readonly var OpRISCV64FDIVD = 1852;
public static readonly var OpRISCV64FSQRTD = 1853;
public static readonly var OpRISCV64FNEGD = 1854;
public static readonly var OpRISCV64FMVDX = 1855;
public static readonly var OpRISCV64FCVTDW = 1856;
public static readonly var OpRISCV64FCVTDL = 1857;
public static readonly var OpRISCV64FCVTWD = 1858;
public static readonly var OpRISCV64FCVTLD = 1859;
public static readonly var OpRISCV64FCVTDS = 1860;
public static readonly var OpRISCV64FCVTSD = 1861;
public static readonly var OpRISCV64FMOVDload = 1862;
public static readonly var OpRISCV64FMOVDstore = 1863;
public static readonly var OpRISCV64FEQD = 1864;
public static readonly var OpRISCV64FNED = 1865;
public static readonly var OpRISCV64FLTD = 1866;
public static readonly var OpRISCV64FLED = 1867;

public static readonly var OpS390XFADDS = 1868;
public static readonly var OpS390XFADD = 1869;
public static readonly var OpS390XFSUBS = 1870;
public static readonly var OpS390XFSUB = 1871;
public static readonly var OpS390XFMULS = 1872;
public static readonly var OpS390XFMUL = 1873;
public static readonly var OpS390XFDIVS = 1874;
public static readonly var OpS390XFDIV = 1875;
public static readonly var OpS390XFNEGS = 1876;
public static readonly var OpS390XFNEG = 1877;
public static readonly var OpS390XFMADDS = 1878;
public static readonly var OpS390XFMADD = 1879;
public static readonly var OpS390XFMSUBS = 1880;
public static readonly var OpS390XFMSUB = 1881;
public static readonly var OpS390XLPDFR = 1882;
public static readonly var OpS390XLNDFR = 1883;
public static readonly var OpS390XCPSDR = 1884;
public static readonly var OpS390XFIDBR = 1885;
public static readonly var OpS390XFMOVSload = 1886;
public static readonly var OpS390XFMOVDload = 1887;
public static readonly var OpS390XFMOVSconst = 1888;
public static readonly var OpS390XFMOVDconst = 1889;
public static readonly var OpS390XFMOVSloadidx = 1890;
public static readonly var OpS390XFMOVDloadidx = 1891;
public static readonly var OpS390XFMOVSstore = 1892;
public static readonly var OpS390XFMOVDstore = 1893;
public static readonly var OpS390XFMOVSstoreidx = 1894;
public static readonly var OpS390XFMOVDstoreidx = 1895;
public static readonly var OpS390XADD = 1896;
public static readonly var OpS390XADDW = 1897;
public static readonly var OpS390XADDconst = 1898;
public static readonly var OpS390XADDWconst = 1899;
public static readonly var OpS390XADDload = 1900;
public static readonly var OpS390XADDWload = 1901;
public static readonly var OpS390XSUB = 1902;
public static readonly var OpS390XSUBW = 1903;
public static readonly var OpS390XSUBconst = 1904;
public static readonly var OpS390XSUBWconst = 1905;
public static readonly var OpS390XSUBload = 1906;
public static readonly var OpS390XSUBWload = 1907;
public static readonly var OpS390XMULLD = 1908;
public static readonly var OpS390XMULLW = 1909;
public static readonly var OpS390XMULLDconst = 1910;
public static readonly var OpS390XMULLWconst = 1911;
public static readonly var OpS390XMULLDload = 1912;
public static readonly var OpS390XMULLWload = 1913;
public static readonly var OpS390XMULHD = 1914;
public static readonly var OpS390XMULHDU = 1915;
public static readonly var OpS390XDIVD = 1916;
public static readonly var OpS390XDIVW = 1917;
public static readonly var OpS390XDIVDU = 1918;
public static readonly var OpS390XDIVWU = 1919;
public static readonly var OpS390XMODD = 1920;
public static readonly var OpS390XMODW = 1921;
public static readonly var OpS390XMODDU = 1922;
public static readonly var OpS390XMODWU = 1923;
public static readonly var OpS390XAND = 1924;
public static readonly var OpS390XANDW = 1925;
public static readonly var OpS390XANDconst = 1926;
public static readonly var OpS390XANDWconst = 1927;
public static readonly var OpS390XANDload = 1928;
public static readonly var OpS390XANDWload = 1929;
public static readonly var OpS390XOR = 1930;
public static readonly var OpS390XORW = 1931;
public static readonly var OpS390XORconst = 1932;
public static readonly var OpS390XORWconst = 1933;
public static readonly var OpS390XORload = 1934;
public static readonly var OpS390XORWload = 1935;
public static readonly var OpS390XXOR = 1936;
public static readonly var OpS390XXORW = 1937;
public static readonly var OpS390XXORconst = 1938;
public static readonly var OpS390XXORWconst = 1939;
public static readonly var OpS390XXORload = 1940;
public static readonly var OpS390XXORWload = 1941;
public static readonly var OpS390XADDC = 1942;
public static readonly var OpS390XADDCconst = 1943;
public static readonly var OpS390XADDE = 1944;
public static readonly var OpS390XSUBC = 1945;
public static readonly var OpS390XSUBE = 1946;
public static readonly var OpS390XCMP = 1947;
public static readonly var OpS390XCMPW = 1948;
public static readonly var OpS390XCMPU = 1949;
public static readonly var OpS390XCMPWU = 1950;
public static readonly var OpS390XCMPconst = 1951;
public static readonly var OpS390XCMPWconst = 1952;
public static readonly var OpS390XCMPUconst = 1953;
public static readonly var OpS390XCMPWUconst = 1954;
public static readonly var OpS390XFCMPS = 1955;
public static readonly var OpS390XFCMP = 1956;
public static readonly var OpS390XLTDBR = 1957;
public static readonly var OpS390XLTEBR = 1958;
public static readonly var OpS390XSLD = 1959;
public static readonly var OpS390XSLW = 1960;
public static readonly var OpS390XSLDconst = 1961;
public static readonly var OpS390XSLWconst = 1962;
public static readonly var OpS390XSRD = 1963;
public static readonly var OpS390XSRW = 1964;
public static readonly var OpS390XSRDconst = 1965;
public static readonly var OpS390XSRWconst = 1966;
public static readonly var OpS390XSRAD = 1967;
public static readonly var OpS390XSRAW = 1968;
public static readonly var OpS390XSRADconst = 1969;
public static readonly var OpS390XSRAWconst = 1970;
public static readonly var OpS390XRLLG = 1971;
public static readonly var OpS390XRLL = 1972;
public static readonly var OpS390XRLLconst = 1973;
public static readonly var OpS390XRXSBG = 1974;
public static readonly var OpS390XRISBGZ = 1975;
public static readonly var OpS390XNEG = 1976;
public static readonly var OpS390XNEGW = 1977;
public static readonly var OpS390XNOT = 1978;
public static readonly var OpS390XNOTW = 1979;
public static readonly var OpS390XFSQRT = 1980;
public static readonly var OpS390XFSQRTS = 1981;
public static readonly var OpS390XLOCGR = 1982;
public static readonly var OpS390XMOVBreg = 1983;
public static readonly var OpS390XMOVBZreg = 1984;
public static readonly var OpS390XMOVHreg = 1985;
public static readonly var OpS390XMOVHZreg = 1986;
public static readonly var OpS390XMOVWreg = 1987;
public static readonly var OpS390XMOVWZreg = 1988;
public static readonly var OpS390XMOVDconst = 1989;
public static readonly var OpS390XLDGR = 1990;
public static readonly var OpS390XLGDR = 1991;
public static readonly var OpS390XCFDBRA = 1992;
public static readonly var OpS390XCGDBRA = 1993;
public static readonly var OpS390XCFEBRA = 1994;
public static readonly var OpS390XCGEBRA = 1995;
public static readonly var OpS390XCEFBRA = 1996;
public static readonly var OpS390XCDFBRA = 1997;
public static readonly var OpS390XCEGBRA = 1998;
public static readonly var OpS390XCDGBRA = 1999;
public static readonly var OpS390XCLFEBR = 2000;
public static readonly var OpS390XCLFDBR = 2001;
public static readonly var OpS390XCLGEBR = 2002;
public static readonly var OpS390XCLGDBR = 2003;
public static readonly var OpS390XCELFBR = 2004;
public static readonly var OpS390XCDLFBR = 2005;
public static readonly var OpS390XCELGBR = 2006;
public static readonly var OpS390XCDLGBR = 2007;
public static readonly var OpS390XLEDBR = 2008;
public static readonly var OpS390XLDEBR = 2009;
public static readonly var OpS390XMOVDaddr = 2010;
public static readonly var OpS390XMOVDaddridx = 2011;
public static readonly var OpS390XMOVBZload = 2012;
public static readonly var OpS390XMOVBload = 2013;
public static readonly var OpS390XMOVHZload = 2014;
public static readonly var OpS390XMOVHload = 2015;
public static readonly var OpS390XMOVWZload = 2016;
public static readonly var OpS390XMOVWload = 2017;
public static readonly var OpS390XMOVDload = 2018;
public static readonly var OpS390XMOVWBR = 2019;
public static readonly var OpS390XMOVDBR = 2020;
public static readonly var OpS390XMOVHBRload = 2021;
public static readonly var OpS390XMOVWBRload = 2022;
public static readonly var OpS390XMOVDBRload = 2023;
public static readonly var OpS390XMOVBstore = 2024;
public static readonly var OpS390XMOVHstore = 2025;
public static readonly var OpS390XMOVWstore = 2026;
public static readonly var OpS390XMOVDstore = 2027;
public static readonly var OpS390XMOVHBRstore = 2028;
public static readonly var OpS390XMOVWBRstore = 2029;
public static readonly var OpS390XMOVDBRstore = 2030;
public static readonly var OpS390XMVC = 2031;
public static readonly var OpS390XMOVBZloadidx = 2032;
public static readonly var OpS390XMOVBloadidx = 2033;
public static readonly var OpS390XMOVHZloadidx = 2034;
public static readonly var OpS390XMOVHloadidx = 2035;
public static readonly var OpS390XMOVWZloadidx = 2036;
public static readonly var OpS390XMOVWloadidx = 2037;
public static readonly var OpS390XMOVDloadidx = 2038;
public static readonly var OpS390XMOVHBRloadidx = 2039;
public static readonly var OpS390XMOVWBRloadidx = 2040;
public static readonly var OpS390XMOVDBRloadidx = 2041;
public static readonly var OpS390XMOVBstoreidx = 2042;
public static readonly var OpS390XMOVHstoreidx = 2043;
public static readonly var OpS390XMOVWstoreidx = 2044;
public static readonly var OpS390XMOVDstoreidx = 2045;
public static readonly var OpS390XMOVHBRstoreidx = 2046;
public static readonly var OpS390XMOVWBRstoreidx = 2047;
public static readonly var OpS390XMOVDBRstoreidx = 2048;
public static readonly var OpS390XMOVBstoreconst = 2049;
public static readonly var OpS390XMOVHstoreconst = 2050;
public static readonly var OpS390XMOVWstoreconst = 2051;
public static readonly var OpS390XMOVDstoreconst = 2052;
public static readonly var OpS390XCLEAR = 2053;
public static readonly var OpS390XCALLstatic = 2054;
public static readonly var OpS390XCALLclosure = 2055;
public static readonly var OpS390XCALLinter = 2056;
public static readonly var OpS390XInvertFlags = 2057;
public static readonly var OpS390XLoweredGetG = 2058;
public static readonly var OpS390XLoweredGetClosurePtr = 2059;
public static readonly var OpS390XLoweredGetCallerSP = 2060;
public static readonly var OpS390XLoweredGetCallerPC = 2061;
public static readonly var OpS390XLoweredNilCheck = 2062;
public static readonly var OpS390XLoweredRound32F = 2063;
public static readonly var OpS390XLoweredRound64F = 2064;
public static readonly var OpS390XLoweredWB = 2065;
public static readonly var OpS390XLoweredPanicBoundsA = 2066;
public static readonly var OpS390XLoweredPanicBoundsB = 2067;
public static readonly var OpS390XLoweredPanicBoundsC = 2068;
public static readonly var OpS390XFlagEQ = 2069;
public static readonly var OpS390XFlagLT = 2070;
public static readonly var OpS390XFlagGT = 2071;
public static readonly var OpS390XFlagOV = 2072;
public static readonly var OpS390XSYNC = 2073;
public static readonly var OpS390XMOVBZatomicload = 2074;
public static readonly var OpS390XMOVWZatomicload = 2075;
public static readonly var OpS390XMOVDatomicload = 2076;
public static readonly var OpS390XMOVBatomicstore = 2077;
public static readonly var OpS390XMOVWatomicstore = 2078;
public static readonly var OpS390XMOVDatomicstore = 2079;
public static readonly var OpS390XLAA = 2080;
public static readonly var OpS390XLAAG = 2081;
public static readonly var OpS390XAddTupleFirst32 = 2082;
public static readonly var OpS390XAddTupleFirst64 = 2083;
public static readonly var OpS390XLAN = 2084;
public static readonly var OpS390XLANfloor = 2085;
public static readonly var OpS390XLAO = 2086;
public static readonly var OpS390XLAOfloor = 2087;
public static readonly var OpS390XLoweredAtomicCas32 = 2088;
public static readonly var OpS390XLoweredAtomicCas64 = 2089;
public static readonly var OpS390XLoweredAtomicExchange32 = 2090;
public static readonly var OpS390XLoweredAtomicExchange64 = 2091;
public static readonly var OpS390XFLOGR = 2092;
public static readonly var OpS390XPOPCNT = 2093;
public static readonly var OpS390XMLGR = 2094;
public static readonly var OpS390XSumBytes2 = 2095;
public static readonly var OpS390XSumBytes4 = 2096;
public static readonly var OpS390XSumBytes8 = 2097;
public static readonly var OpS390XSTMG2 = 2098;
public static readonly var OpS390XSTMG3 = 2099;
public static readonly var OpS390XSTMG4 = 2100;
public static readonly var OpS390XSTM2 = 2101;
public static readonly var OpS390XSTM3 = 2102;
public static readonly var OpS390XSTM4 = 2103;
public static readonly var OpS390XLoweredMove = 2104;
public static readonly var OpS390XLoweredZero = 2105;

public static readonly var OpWasmLoweredStaticCall = 2106;
public static readonly var OpWasmLoweredClosureCall = 2107;
public static readonly var OpWasmLoweredInterCall = 2108;
public static readonly var OpWasmLoweredAddr = 2109;
public static readonly var OpWasmLoweredMove = 2110;
public static readonly var OpWasmLoweredZero = 2111;
public static readonly var OpWasmLoweredGetClosurePtr = 2112;
public static readonly var OpWasmLoweredGetCallerPC = 2113;
public static readonly var OpWasmLoweredGetCallerSP = 2114;
public static readonly var OpWasmLoweredNilCheck = 2115;
public static readonly var OpWasmLoweredWB = 2116;
public static readonly var OpWasmLoweredConvert = 2117;
public static readonly var OpWasmSelect = 2118;
public static readonly var OpWasmI64Load8U = 2119;
public static readonly var OpWasmI64Load8S = 2120;
public static readonly var OpWasmI64Load16U = 2121;
public static readonly var OpWasmI64Load16S = 2122;
public static readonly var OpWasmI64Load32U = 2123;
public static readonly var OpWasmI64Load32S = 2124;
public static readonly var OpWasmI64Load = 2125;
public static readonly var OpWasmI64Store8 = 2126;
public static readonly var OpWasmI64Store16 = 2127;
public static readonly var OpWasmI64Store32 = 2128;
public static readonly var OpWasmI64Store = 2129;
public static readonly var OpWasmF32Load = 2130;
public static readonly var OpWasmF64Load = 2131;
public static readonly var OpWasmF32Store = 2132;
public static readonly var OpWasmF64Store = 2133;
public static readonly var OpWasmI64Const = 2134;
public static readonly var OpWasmF32Const = 2135;
public static readonly var OpWasmF64Const = 2136;
public static readonly var OpWasmI64Eqz = 2137;
public static readonly var OpWasmI64Eq = 2138;
public static readonly var OpWasmI64Ne = 2139;
public static readonly var OpWasmI64LtS = 2140;
public static readonly var OpWasmI64LtU = 2141;
public static readonly var OpWasmI64GtS = 2142;
public static readonly var OpWasmI64GtU = 2143;
public static readonly var OpWasmI64LeS = 2144;
public static readonly var OpWasmI64LeU = 2145;
public static readonly var OpWasmI64GeS = 2146;
public static readonly var OpWasmI64GeU = 2147;
public static readonly var OpWasmF32Eq = 2148;
public static readonly var OpWasmF32Ne = 2149;
public static readonly var OpWasmF32Lt = 2150;
public static readonly var OpWasmF32Gt = 2151;
public static readonly var OpWasmF32Le = 2152;
public static readonly var OpWasmF32Ge = 2153;
public static readonly var OpWasmF64Eq = 2154;
public static readonly var OpWasmF64Ne = 2155;
public static readonly var OpWasmF64Lt = 2156;
public static readonly var OpWasmF64Gt = 2157;
public static readonly var OpWasmF64Le = 2158;
public static readonly var OpWasmF64Ge = 2159;
public static readonly var OpWasmI64Add = 2160;
public static readonly var OpWasmI64AddConst = 2161;
public static readonly var OpWasmI64Sub = 2162;
public static readonly var OpWasmI64Mul = 2163;
public static readonly var OpWasmI64DivS = 2164;
public static readonly var OpWasmI64DivU = 2165;
public static readonly var OpWasmI64RemS = 2166;
public static readonly var OpWasmI64RemU = 2167;
public static readonly var OpWasmI64And = 2168;
public static readonly var OpWasmI64Or = 2169;
public static readonly var OpWasmI64Xor = 2170;
public static readonly var OpWasmI64Shl = 2171;
public static readonly var OpWasmI64ShrS = 2172;
public static readonly var OpWasmI64ShrU = 2173;
public static readonly var OpWasmF32Neg = 2174;
public static readonly var OpWasmF32Add = 2175;
public static readonly var OpWasmF32Sub = 2176;
public static readonly var OpWasmF32Mul = 2177;
public static readonly var OpWasmF32Div = 2178;
public static readonly var OpWasmF64Neg = 2179;
public static readonly var OpWasmF64Add = 2180;
public static readonly var OpWasmF64Sub = 2181;
public static readonly var OpWasmF64Mul = 2182;
public static readonly var OpWasmF64Div = 2183;
public static readonly var OpWasmI64TruncSatF64S = 2184;
public static readonly var OpWasmI64TruncSatF64U = 2185;
public static readonly var OpWasmI64TruncSatF32S = 2186;
public static readonly var OpWasmI64TruncSatF32U = 2187;
public static readonly var OpWasmF32ConvertI64S = 2188;
public static readonly var OpWasmF32ConvertI64U = 2189;
public static readonly var OpWasmF64ConvertI64S = 2190;
public static readonly var OpWasmF64ConvertI64U = 2191;
public static readonly var OpWasmF32DemoteF64 = 2192;
public static readonly var OpWasmF64PromoteF32 = 2193;
public static readonly var OpWasmI64Extend8S = 2194;
public static readonly var OpWasmI64Extend16S = 2195;
public static readonly var OpWasmI64Extend32S = 2196;
public static readonly var OpWasmF32Sqrt = 2197;
public static readonly var OpWasmF32Trunc = 2198;
public static readonly var OpWasmF32Ceil = 2199;
public static readonly var OpWasmF32Floor = 2200;
public static readonly var OpWasmF32Nearest = 2201;
public static readonly var OpWasmF32Abs = 2202;
public static readonly var OpWasmF32Copysign = 2203;
public static readonly var OpWasmF64Sqrt = 2204;
public static readonly var OpWasmF64Trunc = 2205;
public static readonly var OpWasmF64Ceil = 2206;
public static readonly var OpWasmF64Floor = 2207;
public static readonly var OpWasmF64Nearest = 2208;
public static readonly var OpWasmF64Abs = 2209;
public static readonly var OpWasmF64Copysign = 2210;
public static readonly var OpWasmI64Ctz = 2211;
public static readonly var OpWasmI64Clz = 2212;
public static readonly var OpWasmI32Rotl = 2213;
public static readonly var OpWasmI64Rotl = 2214;
public static readonly var OpWasmI64Popcnt = 2215;

public static readonly var OpAdd8 = 2216;
public static readonly var OpAdd16 = 2217;
public static readonly var OpAdd32 = 2218;
public static readonly var OpAdd64 = 2219;
public static readonly var OpAddPtr = 2220;
public static readonly var OpAdd32F = 2221;
public static readonly var OpAdd64F = 2222;
public static readonly var OpSub8 = 2223;
public static readonly var OpSub16 = 2224;
public static readonly var OpSub32 = 2225;
public static readonly var OpSub64 = 2226;
public static readonly var OpSubPtr = 2227;
public static readonly var OpSub32F = 2228;
public static readonly var OpSub64F = 2229;
public static readonly var OpMul8 = 2230;
public static readonly var OpMul16 = 2231;
public static readonly var OpMul32 = 2232;
public static readonly var OpMul64 = 2233;
public static readonly var OpMul32F = 2234;
public static readonly var OpMul64F = 2235;
public static readonly var OpDiv32F = 2236;
public static readonly var OpDiv64F = 2237;
public static readonly var OpHmul32 = 2238;
public static readonly var OpHmul32u = 2239;
public static readonly var OpHmul64 = 2240;
public static readonly var OpHmul64u = 2241;
public static readonly var OpMul32uhilo = 2242;
public static readonly var OpMul64uhilo = 2243;
public static readonly var OpMul32uover = 2244;
public static readonly var OpMul64uover = 2245;
public static readonly var OpAvg32u = 2246;
public static readonly var OpAvg64u = 2247;
public static readonly var OpDiv8 = 2248;
public static readonly var OpDiv8u = 2249;
public static readonly var OpDiv16 = 2250;
public static readonly var OpDiv16u = 2251;
public static readonly var OpDiv32 = 2252;
public static readonly var OpDiv32u = 2253;
public static readonly var OpDiv64 = 2254;
public static readonly var OpDiv64u = 2255;
public static readonly var OpDiv128u = 2256;
public static readonly var OpMod8 = 2257;
public static readonly var OpMod8u = 2258;
public static readonly var OpMod16 = 2259;
public static readonly var OpMod16u = 2260;
public static readonly var OpMod32 = 2261;
public static readonly var OpMod32u = 2262;
public static readonly var OpMod64 = 2263;
public static readonly var OpMod64u = 2264;
public static readonly var OpAnd8 = 2265;
public static readonly var OpAnd16 = 2266;
public static readonly var OpAnd32 = 2267;
public static readonly var OpAnd64 = 2268;
public static readonly var OpOr8 = 2269;
public static readonly var OpOr16 = 2270;
public static readonly var OpOr32 = 2271;
public static readonly var OpOr64 = 2272;
public static readonly var OpXor8 = 2273;
public static readonly var OpXor16 = 2274;
public static readonly var OpXor32 = 2275;
public static readonly var OpXor64 = 2276;
public static readonly var OpLsh8x8 = 2277;
public static readonly var OpLsh8x16 = 2278;
public static readonly var OpLsh8x32 = 2279;
public static readonly var OpLsh8x64 = 2280;
public static readonly var OpLsh16x8 = 2281;
public static readonly var OpLsh16x16 = 2282;
public static readonly var OpLsh16x32 = 2283;
public static readonly var OpLsh16x64 = 2284;
public static readonly var OpLsh32x8 = 2285;
public static readonly var OpLsh32x16 = 2286;
public static readonly var OpLsh32x32 = 2287;
public static readonly var OpLsh32x64 = 2288;
public static readonly var OpLsh64x8 = 2289;
public static readonly var OpLsh64x16 = 2290;
public static readonly var OpLsh64x32 = 2291;
public static readonly var OpLsh64x64 = 2292;
public static readonly var OpRsh8x8 = 2293;
public static readonly var OpRsh8x16 = 2294;
public static readonly var OpRsh8x32 = 2295;
public static readonly var OpRsh8x64 = 2296;
public static readonly var OpRsh16x8 = 2297;
public static readonly var OpRsh16x16 = 2298;
public static readonly var OpRsh16x32 = 2299;
public static readonly var OpRsh16x64 = 2300;
public static readonly var OpRsh32x8 = 2301;
public static readonly var OpRsh32x16 = 2302;
public static readonly var OpRsh32x32 = 2303;
public static readonly var OpRsh32x64 = 2304;
public static readonly var OpRsh64x8 = 2305;
public static readonly var OpRsh64x16 = 2306;
public static readonly var OpRsh64x32 = 2307;
public static readonly var OpRsh64x64 = 2308;
public static readonly var OpRsh8Ux8 = 2309;
public static readonly var OpRsh8Ux16 = 2310;
public static readonly var OpRsh8Ux32 = 2311;
public static readonly var OpRsh8Ux64 = 2312;
public static readonly var OpRsh16Ux8 = 2313;
public static readonly var OpRsh16Ux16 = 2314;
public static readonly var OpRsh16Ux32 = 2315;
public static readonly var OpRsh16Ux64 = 2316;
public static readonly var OpRsh32Ux8 = 2317;
public static readonly var OpRsh32Ux16 = 2318;
public static readonly var OpRsh32Ux32 = 2319;
public static readonly var OpRsh32Ux64 = 2320;
public static readonly var OpRsh64Ux8 = 2321;
public static readonly var OpRsh64Ux16 = 2322;
public static readonly var OpRsh64Ux32 = 2323;
public static readonly var OpRsh64Ux64 = 2324;
public static readonly var OpEq8 = 2325;
public static readonly var OpEq16 = 2326;
public static readonly var OpEq32 = 2327;
public static readonly var OpEq64 = 2328;
public static readonly var OpEqPtr = 2329;
public static readonly var OpEqInter = 2330;
public static readonly var OpEqSlice = 2331;
public static readonly var OpEq32F = 2332;
public static readonly var OpEq64F = 2333;
public static readonly var OpNeq8 = 2334;
public static readonly var OpNeq16 = 2335;
public static readonly var OpNeq32 = 2336;
public static readonly var OpNeq64 = 2337;
public static readonly var OpNeqPtr = 2338;
public static readonly var OpNeqInter = 2339;
public static readonly var OpNeqSlice = 2340;
public static readonly var OpNeq32F = 2341;
public static readonly var OpNeq64F = 2342;
public static readonly var OpLess8 = 2343;
public static readonly var OpLess8U = 2344;
public static readonly var OpLess16 = 2345;
public static readonly var OpLess16U = 2346;
public static readonly var OpLess32 = 2347;
public static readonly var OpLess32U = 2348;
public static readonly var OpLess64 = 2349;
public static readonly var OpLess64U = 2350;
public static readonly var OpLess32F = 2351;
public static readonly var OpLess64F = 2352;
public static readonly var OpLeq8 = 2353;
public static readonly var OpLeq8U = 2354;
public static readonly var OpLeq16 = 2355;
public static readonly var OpLeq16U = 2356;
public static readonly var OpLeq32 = 2357;
public static readonly var OpLeq32U = 2358;
public static readonly var OpLeq64 = 2359;
public static readonly var OpLeq64U = 2360;
public static readonly var OpLeq32F = 2361;
public static readonly var OpLeq64F = 2362;
public static readonly var OpCondSelect = 2363;
public static readonly var OpAndB = 2364;
public static readonly var OpOrB = 2365;
public static readonly var OpEqB = 2366;
public static readonly var OpNeqB = 2367;
public static readonly var OpNot = 2368;
public static readonly var OpNeg8 = 2369;
public static readonly var OpNeg16 = 2370;
public static readonly var OpNeg32 = 2371;
public static readonly var OpNeg64 = 2372;
public static readonly var OpNeg32F = 2373;
public static readonly var OpNeg64F = 2374;
public static readonly var OpCom8 = 2375;
public static readonly var OpCom16 = 2376;
public static readonly var OpCom32 = 2377;
public static readonly var OpCom64 = 2378;
public static readonly var OpCtz8 = 2379;
public static readonly var OpCtz16 = 2380;
public static readonly var OpCtz32 = 2381;
public static readonly var OpCtz64 = 2382;
public static readonly var OpCtz8NonZero = 2383;
public static readonly var OpCtz16NonZero = 2384;
public static readonly var OpCtz32NonZero = 2385;
public static readonly var OpCtz64NonZero = 2386;
public static readonly var OpBitLen8 = 2387;
public static readonly var OpBitLen16 = 2388;
public static readonly var OpBitLen32 = 2389;
public static readonly var OpBitLen64 = 2390;
public static readonly var OpBswap32 = 2391;
public static readonly var OpBswap64 = 2392;
public static readonly var OpBitRev8 = 2393;
public static readonly var OpBitRev16 = 2394;
public static readonly var OpBitRev32 = 2395;
public static readonly var OpBitRev64 = 2396;
public static readonly var OpPopCount8 = 2397;
public static readonly var OpPopCount16 = 2398;
public static readonly var OpPopCount32 = 2399;
public static readonly var OpPopCount64 = 2400;
public static readonly var OpRotateLeft8 = 2401;
public static readonly var OpRotateLeft16 = 2402;
public static readonly var OpRotateLeft32 = 2403;
public static readonly var OpRotateLeft64 = 2404;
public static readonly var OpSqrt = 2405;
public static readonly var OpSqrt32 = 2406;
public static readonly var OpFloor = 2407;
public static readonly var OpCeil = 2408;
public static readonly var OpTrunc = 2409;
public static readonly var OpRound = 2410;
public static readonly var OpRoundToEven = 2411;
public static readonly var OpAbs = 2412;
public static readonly var OpCopysign = 2413;
public static readonly var OpFMA = 2414;
public static readonly var OpPhi = 2415;
public static readonly var OpCopy = 2416;
public static readonly var OpConvert = 2417;
public static readonly var OpConstBool = 2418;
public static readonly var OpConstString = 2419;
public static readonly var OpConstNil = 2420;
public static readonly var OpConst8 = 2421;
public static readonly var OpConst16 = 2422;
public static readonly var OpConst32 = 2423;
public static readonly var OpConst64 = 2424;
public static readonly var OpConst32F = 2425;
public static readonly var OpConst64F = 2426;
public static readonly var OpConstInterface = 2427;
public static readonly var OpConstSlice = 2428;
public static readonly var OpInitMem = 2429;
public static readonly var OpArg = 2430;
public static readonly var OpArgIntReg = 2431;
public static readonly var OpArgFloatReg = 2432;
public static readonly var OpAddr = 2433;
public static readonly var OpLocalAddr = 2434;
public static readonly var OpSP = 2435;
public static readonly var OpSB = 2436;
public static readonly var OpLoad = 2437;
public static readonly var OpDereference = 2438;
public static readonly var OpStore = 2439;
public static readonly var OpMove = 2440;
public static readonly var OpZero = 2441;
public static readonly var OpStoreWB = 2442;
public static readonly var OpMoveWB = 2443;
public static readonly var OpZeroWB = 2444;
public static readonly var OpWB = 2445;
public static readonly var OpHasCPUFeature = 2446;
public static readonly var OpPanicBounds = 2447;
public static readonly var OpPanicExtend = 2448;
public static readonly var OpClosureCall = 2449;
public static readonly var OpStaticCall = 2450;
public static readonly var OpInterCall = 2451;
public static readonly var OpClosureLECall = 2452;
public static readonly var OpStaticLECall = 2453;
public static readonly var OpInterLECall = 2454;
public static readonly var OpSignExt8to16 = 2455;
public static readonly var OpSignExt8to32 = 2456;
public static readonly var OpSignExt8to64 = 2457;
public static readonly var OpSignExt16to32 = 2458;
public static readonly var OpSignExt16to64 = 2459;
public static readonly var OpSignExt32to64 = 2460;
public static readonly var OpZeroExt8to16 = 2461;
public static readonly var OpZeroExt8to32 = 2462;
public static readonly var OpZeroExt8to64 = 2463;
public static readonly var OpZeroExt16to32 = 2464;
public static readonly var OpZeroExt16to64 = 2465;
public static readonly var OpZeroExt32to64 = 2466;
public static readonly var OpTrunc16to8 = 2467;
public static readonly var OpTrunc32to8 = 2468;
public static readonly var OpTrunc32to16 = 2469;
public static readonly var OpTrunc64to8 = 2470;
public static readonly var OpTrunc64to16 = 2471;
public static readonly var OpTrunc64to32 = 2472;
public static readonly var OpCvt32to32F = 2473;
public static readonly var OpCvt32to64F = 2474;
public static readonly var OpCvt64to32F = 2475;
public static readonly var OpCvt64to64F = 2476;
public static readonly var OpCvt32Fto32 = 2477;
public static readonly var OpCvt32Fto64 = 2478;
public static readonly var OpCvt64Fto32 = 2479;
public static readonly var OpCvt64Fto64 = 2480;
public static readonly var OpCvt32Fto64F = 2481;
public static readonly var OpCvt64Fto32F = 2482;
public static readonly var OpCvtBoolToUint8 = 2483;
public static readonly var OpRound32F = 2484;
public static readonly var OpRound64F = 2485;
public static readonly var OpIsNonNil = 2486;
public static readonly var OpIsInBounds = 2487;
public static readonly var OpIsSliceInBounds = 2488;
public static readonly var OpNilCheck = 2489;
public static readonly var OpGetG = 2490;
public static readonly var OpGetClosurePtr = 2491;
public static readonly var OpGetCallerPC = 2492;
public static readonly var OpGetCallerSP = 2493;
public static readonly var OpPtrIndex = 2494;
public static readonly var OpOffPtr = 2495;
public static readonly var OpSliceMake = 2496;
public static readonly var OpSlicePtr = 2497;
public static readonly var OpSliceLen = 2498;
public static readonly var OpSliceCap = 2499;
public static readonly var OpSlicePtrUnchecked = 2500;
public static readonly var OpComplexMake = 2501;
public static readonly var OpComplexReal = 2502;
public static readonly var OpComplexImag = 2503;
public static readonly var OpStringMake = 2504;
public static readonly var OpStringPtr = 2505;
public static readonly var OpStringLen = 2506;
public static readonly var OpIMake = 2507;
public static readonly var OpITab = 2508;
public static readonly var OpIData = 2509;
public static readonly var OpStructMake0 = 2510;
public static readonly var OpStructMake1 = 2511;
public static readonly var OpStructMake2 = 2512;
public static readonly var OpStructMake3 = 2513;
public static readonly var OpStructMake4 = 2514;
public static readonly var OpStructSelect = 2515;
public static readonly var OpArrayMake0 = 2516;
public static readonly var OpArrayMake1 = 2517;
public static readonly var OpArraySelect = 2518;
public static readonly var OpStoreReg = 2519;
public static readonly var OpLoadReg = 2520;
public static readonly var OpFwdRef = 2521;
public static readonly var OpUnknown = 2522;
public static readonly var OpVarDef = 2523;
public static readonly var OpVarKill = 2524;
public static readonly var OpVarLive = 2525;
public static readonly var OpKeepAlive = 2526;
public static readonly var OpInlMark = 2527;
public static readonly var OpInt64Make = 2528;
public static readonly var OpInt64Hi = 2529;
public static readonly var OpInt64Lo = 2530;
public static readonly var OpAdd32carry = 2531;
public static readonly var OpAdd32withcarry = 2532;
public static readonly var OpSub32carry = 2533;
public static readonly var OpSub32withcarry = 2534;
public static readonly var OpAdd64carry = 2535;
public static readonly var OpSub64borrow = 2536;
public static readonly var OpSignmask = 2537;
public static readonly var OpZeromask = 2538;
public static readonly var OpSlicemask = 2539;
public static readonly var OpSpectreIndex = 2540;
public static readonly var OpSpectreSliceIndex = 2541;
public static readonly var OpCvt32Uto32F = 2542;
public static readonly var OpCvt32Uto64F = 2543;
public static readonly var OpCvt32Fto32U = 2544;
public static readonly var OpCvt64Fto32U = 2545;
public static readonly var OpCvt64Uto32F = 2546;
public static readonly var OpCvt64Uto64F = 2547;
public static readonly var OpCvt32Fto64U = 2548;
public static readonly var OpCvt64Fto64U = 2549;
public static readonly var OpSelect0 = 2550;
public static readonly var OpSelect1 = 2551;
public static readonly var OpSelectN = 2552;
public static readonly var OpSelectNAddr = 2553;
public static readonly var OpMakeResult = 2554;
public static readonly var OpAtomicLoad8 = 2555;
public static readonly var OpAtomicLoad32 = 2556;
public static readonly var OpAtomicLoad64 = 2557;
public static readonly var OpAtomicLoadPtr = 2558;
public static readonly var OpAtomicLoadAcq32 = 2559;
public static readonly var OpAtomicLoadAcq64 = 2560;
public static readonly var OpAtomicStore8 = 2561;
public static readonly var OpAtomicStore32 = 2562;
public static readonly var OpAtomicStore64 = 2563;
public static readonly var OpAtomicStorePtrNoWB = 2564;
public static readonly var OpAtomicStoreRel32 = 2565;
public static readonly var OpAtomicStoreRel64 = 2566;
public static readonly var OpAtomicExchange32 = 2567;
public static readonly var OpAtomicExchange64 = 2568;
public static readonly var OpAtomicAdd32 = 2569;
public static readonly var OpAtomicAdd64 = 2570;
public static readonly var OpAtomicCompareAndSwap32 = 2571;
public static readonly var OpAtomicCompareAndSwap64 = 2572;
public static readonly var OpAtomicCompareAndSwapRel32 = 2573;
public static readonly var OpAtomicAnd8 = 2574;
public static readonly var OpAtomicAnd32 = 2575;
public static readonly var OpAtomicOr8 = 2576;
public static readonly var OpAtomicOr32 = 2577;
public static readonly var OpAtomicAdd32Variant = 2578;
public static readonly var OpAtomicAdd64Variant = 2579;
public static readonly var OpAtomicExchange32Variant = 2580;
public static readonly var OpAtomicExchange64Variant = 2581;
public static readonly var OpAtomicCompareAndSwap32Variant = 2582;
public static readonly var OpAtomicCompareAndSwap64Variant = 2583;
public static readonly var OpAtomicAnd8Variant = 2584;
public static readonly var OpAtomicAnd32Variant = 2585;
public static readonly var OpAtomicOr8Variant = 2586;
public static readonly var OpAtomicOr32Variant = 2587;
public static readonly var OpClobber = 2588;
public static readonly var OpClobberReg = 2589;

private static array<opInfo> opcodeTable = new array<opInfo>(new opInfo[] { {name:"OpInvalid"}, {name:"ADDSS",argLen:2,commutative:true,resultInArg0:true,asm:x86.AADDSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"ADDSD",argLen:2,commutative:true,resultInArg0:true,asm:x86.AADDSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"SUBSS",argLen:2,resultInArg0:true,asm:x86.ASUBSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"SUBSD",argLen:2,resultInArg0:true,asm:x86.ASUBSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"MULSS",argLen:2,commutative:true,resultInArg0:true,asm:x86.AMULSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"MULSD",argLen:2,commutative:true,resultInArg0:true,asm:x86.AMULSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"DIVSS",argLen:2,resultInArg0:true,asm:x86.ADIVSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"DIVSD",argLen:2,resultInArg0:true,asm:x86.ADIVSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSSload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSSconst",auxType:auxFloat32,argLen:0,rematerializeable:true,asm:x86.AMOVSS,reg:regInfo{outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:x86.AMOVSD,reg:regInfo{outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSSloadidx1",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSSloadidx4",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSDloadidx1",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSDloadidx8",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSSstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{1,65280},{0,65791},},},}, {name:"MOVSDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{1,65280},{0,65791},},},}, {name:"MOVSSstoreidx1",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{1,255},{2,65280},{0,65791},},},}, {name:"MOVSSstoreidx4",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{1,255},{2,65280},{0,65791},},},}, {name:"MOVSDstoreidx1",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{1,255},{2,65280},{0,65791},},},}, {name:"MOVSDstoreidx8",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{1,255},{2,65280},{0,65791},},},}, {name:"ADDSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AADDSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"ADDSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AADDSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"SUBSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ASUBSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"SUBSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ASUBSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MULSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AMULSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"MULSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AMULSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"DIVSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ADIVSS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"DIVSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ADIVSD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65791},},outputs:[]outputInfo{{0,65280},},},}, {name:"ADDL",argLen:2,commutative:true,clobberFlags:true,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{1,239},{0,255},},outputs:[]outputInfo{{0,239},},},}, {name:"ADDLconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,255},},outputs:[]outputInfo{{0,239},},},}, {name:"ADDLcarry",argLen:2,commutative:true,resultInArg0:true,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{1,0},{0,239},},},}, {name:"ADDLconstcarry",auxType:auxInt32,argLen:1,resultInArg0:true,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{1,0},{0,239},},},}, {name:"ADCL",argLen:3,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AADCL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ADCLconst",auxType:auxInt32,argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.AADCL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SUBL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SUBLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SUBLcarry",argLen:2,resultInArg0:true,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{1,0},{0,239},},},}, {name:"SUBLconstcarry",auxType:auxInt32,argLen:1,resultInArg0:true,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{1,0},{0,239},},},}, {name:"SBBL",argLen:3,resultInArg0:true,clobberFlags:true,asm:x86.ASBBL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SBBLconst",auxType:auxInt32,argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASBBL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"MULL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AIMULL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"MULLconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:x86.AIMUL3L,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"MULLU",argLen:2,commutative:true,clobberFlags:true,asm:x86.AMULL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,255},},clobbers:4,outputs:[]outputInfo{{1,0},{0,1},},},}, {name:"HMULL",argLen:2,commutative:true,clobberFlags:true,asm:x86.AIMULL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,255},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"HMULLU",argLen:2,commutative:true,clobberFlags:true,asm:x86.AMULL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,255},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"MULLQU",argLen:2,commutative:true,clobberFlags:true,asm:x86.AMULL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,255},},outputs:[]outputInfo{{0,4},{1,1},},},}, {name:"AVGLU",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"DIVL",auxType:auxBool,argLen:2,clobberFlags:true,asm:x86.AIDIVL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:4,outputs:[]outputInfo{{0,1},},},}, {name:"DIVW",auxType:auxBool,argLen:2,clobberFlags:true,asm:x86.AIDIVW,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:4,outputs:[]outputInfo{{0,1},},},}, {name:"DIVLU",argLen:2,clobberFlags:true,asm:x86.ADIVL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:4,outputs:[]outputInfo{{0,1},},},}, {name:"DIVWU",argLen:2,clobberFlags:true,asm:x86.ADIVW,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:4,outputs:[]outputInfo{{0,1},},},}, {name:"MODL",auxType:auxBool,argLen:2,clobberFlags:true,asm:x86.AIDIVL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"MODW",auxType:auxBool,argLen:2,clobberFlags:true,asm:x86.AIDIVW,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"MODLU",argLen:2,clobberFlags:true,asm:x86.ADIVL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"MODWU",argLen:2,clobberFlags:true,asm:x86.ADIVW,reg:regInfo{inputs:[]inputInfo{{0,1},{1,251},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"ANDL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ANDLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ORL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ORLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"XORL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,239},},outputs:[]outputInfo{{0,239},},},}, {name:"XORLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"CMPL",argLen:2,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{0,255},{1,255},},},}, {name:"CMPW",argLen:2,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,255},{1,255},},},}, {name:"CMPB",argLen:2,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{0,255},{1,255},},},}, {name:"CMPLconst",auxType:auxInt32,argLen:1,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{0,255},},},}, {name:"CMPWconst",auxType:auxInt16,argLen:1,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,255},},},}, {name:"CMPBconst",auxType:auxInt8,argLen:1,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{0,255},},},}, {name:"CMPLload",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"CMPWload",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"CMPBload",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"CMPLconstload",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"CMPWconstload",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"CMPBconstload",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"UCOMISS",argLen:2,asm:x86.AUCOMISS,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},},}, {name:"UCOMISD",argLen:2,asm:x86.AUCOMISD,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},},}, {name:"TESTL",argLen:2,commutative:true,asm:x86.ATESTL,reg:regInfo{inputs:[]inputInfo{{0,255},{1,255},},},}, {name:"TESTW",argLen:2,commutative:true,asm:x86.ATESTW,reg:regInfo{inputs:[]inputInfo{{0,255},{1,255},},},}, {name:"TESTB",argLen:2,commutative:true,asm:x86.ATESTB,reg:regInfo{inputs:[]inputInfo{{0,255},{1,255},},},}, {name:"TESTLconst",auxType:auxInt32,argLen:1,asm:x86.ATESTL,reg:regInfo{inputs:[]inputInfo{{0,255},},},}, {name:"TESTWconst",auxType:auxInt16,argLen:1,asm:x86.ATESTW,reg:regInfo{inputs:[]inputInfo{{0,255},},},}, {name:"TESTBconst",auxType:auxInt8,argLen:1,asm:x86.ATESTB,reg:regInfo{inputs:[]inputInfo{{0,255},},},}, {name:"SHLL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHLL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SHLLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHLL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SHRL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHRL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SHRW",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHRW,reg:regInfo{inputs:[]inputInfo{{1,2},{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SHRB",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHRB,reg:regInfo{inputs:[]inputInfo{{1,2},{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SHRLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHRL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SHRWconst",auxType:auxInt16,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHRW,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SHRBconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHRB,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SARL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASARL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SARW",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASARW,reg:regInfo{inputs:[]inputInfo{{1,2},{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SARB",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASARB,reg:regInfo{inputs:[]inputInfo{{1,2},{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SARLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASARL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SARWconst",auxType:auxInt16,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASARW,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SARBconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASARB,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ROLLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AROLL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ROLWconst",auxType:auxInt16,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AROLW,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ROLBconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AROLB,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"ADDLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"SUBLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MULLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AIMULL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"ANDLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"ORLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"XORLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,239},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"ADDLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,239},{2,255},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"SUBLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,239},{2,255},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MULLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AIMULL,reg:regInfo{inputs:[]inputInfo{{0,239},{2,255},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"ANDLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,239},{2,255},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"ORLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,239},{2,255},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"XORLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,239},{2,255},{1,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"NEGL",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ANEGL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"NOTL",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ANOTL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"BSFL",argLen:1,clobberFlags:true,asm:x86.ABSFL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"BSFW",argLen:1,clobberFlags:true,asm:x86.ABSFW,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"BSRL",argLen:1,clobberFlags:true,asm:x86.ABSRL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"BSRW",argLen:1,clobberFlags:true,asm:x86.ABSRW,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"BSWAPL",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABSWAPL,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"SQRTSD",argLen:1,asm:x86.ASQRTSD,reg:regInfo{inputs:[]inputInfo{{0,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"SQRTSS",argLen:1,asm:x86.ASQRTSS,reg:regInfo{inputs:[]inputInfo{{0,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"SBBLcarrymask",argLen:1,asm:x86.ASBBL,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETEQ",argLen:1,asm:x86.ASETEQ,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETNE",argLen:1,asm:x86.ASETNE,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETL",argLen:1,asm:x86.ASETLT,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETLE",argLen:1,asm:x86.ASETLE,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETG",argLen:1,asm:x86.ASETGT,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETGE",argLen:1,asm:x86.ASETGE,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETB",argLen:1,asm:x86.ASETCS,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETBE",argLen:1,asm:x86.ASETLS,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETA",argLen:1,asm:x86.ASETHI,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETAE",argLen:1,asm:x86.ASETCC,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETO",argLen:1,asm:x86.ASETOS,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETEQF",argLen:1,clobberFlags:true,asm:x86.ASETEQ,reg:regInfo{clobbers:1,outputs:[]outputInfo{{0,238},},},}, {name:"SETNEF",argLen:1,clobberFlags:true,asm:x86.ASETNE,reg:regInfo{clobbers:1,outputs:[]outputInfo{{0,238},},},}, {name:"SETORD",argLen:1,asm:x86.ASETPC,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETNAN",argLen:1,asm:x86.ASETPS,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETGF",argLen:1,asm:x86.ASETHI,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"SETGEF",argLen:1,asm:x86.ASETCC,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"MOVBLSX",argLen:1,asm:x86.AMOVBLSX,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVBLZX",argLen:1,asm:x86.AMOVBLZX,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVWLSX",argLen:1,asm:x86.AMOVWLSX,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVWLZX",argLen:1,asm:x86.AMOVWLZX,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVLconst",auxType:auxInt32,argLen:0,rematerializeable:true,asm:x86.AMOVL,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"CVTTSD2SL",argLen:1,asm:x86.ACVTTSD2SL,reg:regInfo{inputs:[]inputInfo{{0,65280},},outputs:[]outputInfo{{0,239},},},}, {name:"CVTTSS2SL",argLen:1,asm:x86.ACVTTSS2SL,reg:regInfo{inputs:[]inputInfo{{0,65280},},outputs:[]outputInfo{{0,239},},},}, {name:"CVTSL2SS",argLen:1,asm:x86.ACVTSL2SS,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,65280},},},}, {name:"CVTSL2SD",argLen:1,asm:x86.ACVTSL2SD,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,65280},},},}, {name:"CVTSD2SS",argLen:1,asm:x86.ACVTSD2SS,reg:regInfo{inputs:[]inputInfo{{0,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"CVTSS2SD",argLen:1,asm:x86.ACVTSS2SD,reg:regInfo{inputs:[]inputInfo{{0,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"PXOR",argLen:2,commutative:true,resultInArg0:true,asm:x86.APXOR,reg:regInfo{inputs:[]inputInfo{{0,65280},{1,65280},},outputs:[]outputInfo{{0,65280},},},}, {name:"LEAL",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"LEAL1",auxType:auxSymOff,argLen:2,commutative:true,symEffect:SymAddr,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"LEAL2",auxType:auxSymOff,argLen:2,symEffect:SymAddr,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"LEAL4",auxType:auxSymOff,argLen:2,symEffect:SymAddr,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"LEAL8",auxType:auxSymOff,argLen:2,symEffect:SymAddr,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVBLZX,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVBLSXload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVBLSX,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVWLZX,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVWLSXload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVWLSX,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVLload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"MOVLstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"ADDLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"SUBLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"ANDLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"ORLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"XORLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"ADDLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"SUBLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"ANDLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"ORLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"XORLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"ADDLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"ANDLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"ORLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"XORLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"ADDLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"ANDLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"ORLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"XORLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"MOVBloadidx1",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.AMOVBLZX,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVWloadidx1",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.AMOVWLZX,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVWloadidx2",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVWLZX,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVLloadidx1",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVLloadidx4",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},outputs:[]outputInfo{{0,239},},},}, {name:"MOVBstoreidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:x86.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"MOVWstoreidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"MOVWstoreidx2",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"MOVLstoreidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"MOVLstoreidx4",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,255},{2,255},{0,65791},},},}, {name:"MOVBstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"MOVWstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"MOVLstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{0,65791},},},}, {name:"MOVBstoreconstidx1",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"MOVWstoreconstidx1",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"MOVWstoreconstidx2",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"MOVLstoreconstidx1",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"MOVLstoreconstidx4",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,255},{0,65791},},},}, {name:"DUFFZERO",auxType:auxInt64,argLen:3,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,128},{1,1},},clobbers:130,},}, {name:"REPSTOSL",argLen:4,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,128},{1,2},{2,1},},clobbers:130,},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,clobberFlags:true,call:true,reg:regInfo{clobbers:65519,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{1,4},{0,255},},clobbers:65519,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,239},},clobbers:65519,},}, {name:"DUFFCOPY",auxType:auxInt64,argLen:3,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,128},{1,64},},clobbers:194,},}, {name:"REPMOVSL",argLen:4,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,128},{1,64},{2,2},},clobbers:194,},}, {name:"InvertFlags",argLen:1,reg:regInfo{},}, {name:"LoweredGetG",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,4},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"LoweredNilCheck",argLen:2,clobberFlags:true,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,255},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,128},{1,1},},clobbers:65280,},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,1},{1,2},},},}, {name:"LoweredPanicExtendA",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,64},{1,4},{2,8},},},}, {name:"LoweredPanicExtendB",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,64},{1,2},{2,4},},},}, {name:"LoweredPanicExtendC",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,64},{1,1},{2,2},},},}, {name:"FlagEQ",argLen:0,reg:regInfo{},}, {name:"FlagLT_ULT",argLen:0,reg:regInfo{},}, {name:"FlagLT_UGT",argLen:0,reg:regInfo{},}, {name:"FlagGT_UGT",argLen:0,reg:regInfo{},}, {name:"FlagGT_ULT",argLen:0,reg:regInfo{},}, {name:"MOVSSconst1",auxType:auxFloat32,argLen:0,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"MOVSDconst1",auxType:auxFloat64,argLen:0,reg:regInfo{outputs:[]outputInfo{{0,239},},},}, {name:"MOVSSconst2",argLen:1,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,65280},},},}, {name:"MOVSDconst2",argLen:1,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{0,239},},outputs:[]outputInfo{{0,65280},},},}, {name:"ADDSS",argLen:2,commutative:true,resultInArg0:true,asm:x86.AADDSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ADDSD",argLen:2,commutative:true,resultInArg0:true,asm:x86.AADDSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSS",argLen:2,resultInArg0:true,asm:x86.ASUBSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSD",argLen:2,resultInArg0:true,asm:x86.ASUBSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSS",argLen:2,commutative:true,resultInArg0:true,asm:x86.AMULSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSD",argLen:2,commutative:true,resultInArg0:true,asm:x86.AMULSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSS",argLen:2,resultInArg0:true,asm:x86.ADIVSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSD",argLen:2,resultInArg0:true,asm:x86.ADIVSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSSload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{0,4295016447},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{0,4295016447},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSSconst",auxType:auxFloat32,argLen:0,rematerializeable:true,asm:x86.AMOVSS,reg:regInfo{outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:x86.AMOVSD,reg:regInfo{outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSSloadidx1",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSS,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295016447},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSSloadidx4",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSS,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295016447},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSDloadidx1",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSD,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295016447},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSDloadidx8",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVSD,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295016447},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVSSstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVSS,reg:regInfo{inputs:[]inputInfo{{1,2147418112},{0,4295016447},},},}, {name:"MOVSDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVSD,reg:regInfo{inputs:[]inputInfo{{1,2147418112},{0,4295016447},},},}, {name:"MOVSSstoreidx1",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSS,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,2147418112},{0,4295016447},},},}, {name:"MOVSSstoreidx4",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSS,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,2147418112},{0,4295016447},},},}, {name:"MOVSDstoreidx1",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSD,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,2147418112},{0,4295016447},},},}, {name:"MOVSDstoreidx8",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVSD,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,2147418112},{0,4295016447},},},}, {name:"ADDSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AADDSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ADDSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AADDSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ASUBSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ASUBSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AMULSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AMULSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSSload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ADIVSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSDload",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ADIVSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ADDSSloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AADDSS,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ADDSSloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AADDSS,scale:4,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ADDSDloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AADDSD,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ADDSDloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AADDSD,scale:8,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSSloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ASUBSS,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSSloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ASUBSS,scale:4,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSDloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ASUBSD,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SUBSDloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ASUBSD,scale:8,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSSloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AMULSS,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSSloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AMULSS,scale:4,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSDloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AMULSD,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MULSDloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.AMULSD,scale:8,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSSloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ADIVSS,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSSloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ADIVSS,scale:4,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSDloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ADIVSD,scale:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"DIVSDloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,symEffect:SymRead,asm:x86.ADIVSD,scale:8,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{2,4295016447},{1,4295032831},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ADDQ",argLen:2,commutative:true,clobberFlags:true,asm:x86.AADDQ,reg:regInfo{inputs:[]inputInfo{{1,49135},{0,49151},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDL",argLen:2,commutative:true,clobberFlags:true,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{1,49135},{0,49151},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDQconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:x86.AADDQ,reg:regInfo{inputs:[]inputInfo{{0,49151},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDLconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,49151},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDQconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AADDQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"ADDLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SUBQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASUBQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBQconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASUBQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MULQ",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AIMULQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MULL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AIMULL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MULQconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:x86.AIMUL3Q,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MULLconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:x86.AIMUL3L,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MULLU",argLen:2,commutative:true,clobberFlags:true,asm:x86.AMULL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49151},},clobbers:4,outputs:[]outputInfo{{1,0},{0,1},},},}, {name:"MULQU",argLen:2,commutative:true,clobberFlags:true,asm:x86.AMULQ,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49151},},clobbers:4,outputs:[]outputInfo{{1,0},{0,1},},},}, {name:"HMULQ",argLen:2,clobberFlags:true,asm:x86.AIMULQ,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49151},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"HMULL",argLen:2,clobberFlags:true,asm:x86.AIMULL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49151},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"HMULQU",argLen:2,clobberFlags:true,asm:x86.AMULQ,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49151},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"HMULLU",argLen:2,clobberFlags:true,asm:x86.AMULL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49151},},clobbers:1,outputs:[]outputInfo{{0,4},},},}, {name:"AVGQU",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"DIVQ",auxType:auxBool,argLen:2,clobberFlags:true,asm:x86.AIDIVQ,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49147},},outputs:[]outputInfo{{0,1},{1,4},},},}, {name:"DIVL",auxType:auxBool,argLen:2,clobberFlags:true,asm:x86.AIDIVL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49147},},outputs:[]outputInfo{{0,1},{1,4},},},}, {name:"DIVW",auxType:auxBool,argLen:2,clobberFlags:true,asm:x86.AIDIVW,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49147},},outputs:[]outputInfo{{0,1},{1,4},},},}, {name:"DIVQU",argLen:2,clobberFlags:true,asm:x86.ADIVQ,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49147},},outputs:[]outputInfo{{0,1},{1,4},},},}, {name:"DIVLU",argLen:2,clobberFlags:true,asm:x86.ADIVL,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49147},},outputs:[]outputInfo{{0,1},{1,4},},},}, {name:"DIVWU",argLen:2,clobberFlags:true,asm:x86.ADIVW,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49147},},outputs:[]outputInfo{{0,1},{1,4},},},}, {name:"NEGLflags",argLen:1,resultInArg0:true,asm:x86.ANEGL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"ADDQcarry",argLen:2,commutative:true,resultInArg0:true,asm:x86.AADDQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"ADCQ",argLen:3,commutative:true,resultInArg0:true,asm:x86.AADCQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"ADDQconstcarry",auxType:auxInt32,argLen:1,resultInArg0:true,asm:x86.AADDQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"ADCQconst",auxType:auxInt32,argLen:2,resultInArg0:true,asm:x86.AADCQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"SUBQborrow",argLen:2,resultInArg0:true,asm:x86.ASUBQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"SBBQ",argLen:3,resultInArg0:true,asm:x86.ASBBQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"SUBQconstborrow",auxType:auxInt32,argLen:1,resultInArg0:true,asm:x86.ASUBQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"SBBQconst",auxType:auxInt32,argLen:2,resultInArg0:true,asm:x86.ASBBQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"MULQU2",argLen:2,commutative:true,clobberFlags:true,asm:x86.AMULQ,reg:regInfo{inputs:[]inputInfo{{0,1},{1,49151},},outputs:[]outputInfo{{0,4},{1,1},},},}, {name:"DIVQU2",argLen:3,clobberFlags:true,asm:x86.ADIVQ,reg:regInfo{inputs:[]inputInfo{{0,4},{1,1},{2,49151},},outputs:[]outputInfo{{0,1},{1,4},},},}, {name:"ANDQ",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AANDQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDQconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AANDQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDQconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AANDQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"ANDLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"ORQ",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AORQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORQconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AORQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORQconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AORQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"ORLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"XORQ",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AXORQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORL",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORQconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AXORQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORLconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORQconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AXORQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"XORLconstmodify",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"CMPQ",argLen:2,asm:x86.ACMPQ,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"CMPL",argLen:2,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"CMPW",argLen:2,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"CMPB",argLen:2,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"CMPQconst",auxType:auxInt32,argLen:1,asm:x86.ACMPQ,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"CMPLconst",auxType:auxInt32,argLen:1,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"CMPWconst",auxType:auxInt16,argLen:1,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"CMPBconst",auxType:auxInt8,argLen:1,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"CMPQload",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPQ,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPLload",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPWload",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPBload",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPQconstload",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"CMPLconstload",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"CMPWconstload",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"CMPBconstload",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.ACMPB,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"CMPQloadidx8",auxType:auxSymOff,argLen:4,symEffect:SymRead,asm:x86.ACMPQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"CMPQloadidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymRead,asm:x86.ACMPQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"CMPLloadidx4",auxType:auxSymOff,argLen:4,symEffect:SymRead,asm:x86.ACMPL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"CMPLloadidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymRead,asm:x86.ACMPL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"CMPWloadidx2",auxType:auxSymOff,argLen:4,symEffect:SymRead,asm:x86.ACMPW,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"CMPWloadidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymRead,asm:x86.ACMPW,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"CMPBloadidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymRead,asm:x86.ACMPB,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"CMPQconstloadidx8",auxType:auxSymValAndOff,argLen:3,symEffect:SymRead,asm:x86.ACMPQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPQconstloadidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.ACMPQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPLconstloadidx4",auxType:auxSymValAndOff,argLen:3,symEffect:SymRead,asm:x86.ACMPL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPLconstloadidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.ACMPL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPWconstloadidx2",auxType:auxSymValAndOff,argLen:3,symEffect:SymRead,asm:x86.ACMPW,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPWconstloadidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.ACMPW,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"CMPBconstloadidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.ACMPB,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"UCOMISS",argLen:2,asm:x86.AUCOMISS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},},}, {name:"UCOMISD",argLen:2,asm:x86.AUCOMISD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},},}, {name:"BTL",argLen:2,asm:x86.ABTL,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"BTQ",argLen:2,asm:x86.ABTQ,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"BTCL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ABTCL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTCQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ABTCQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTRL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ABTRL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTRQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ABTRQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTSL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ABTSL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTSQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ABTSQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTLconst",auxType:auxInt8,argLen:1,asm:x86.ABTL,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"BTQconst",auxType:auxInt8,argLen:1,asm:x86.ABTQ,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"BTCLconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABTCL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTCQconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABTCQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTRLconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABTRL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTRQconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABTRQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTSLconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABTSL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BTSQconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABTSQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"TESTQ",argLen:2,commutative:true,asm:x86.ATESTQ,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"TESTL",argLen:2,commutative:true,asm:x86.ATESTL,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"TESTW",argLen:2,commutative:true,asm:x86.ATESTW,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"TESTB",argLen:2,commutative:true,asm:x86.ATESTB,reg:regInfo{inputs:[]inputInfo{{0,49151},{1,49151},},},}, {name:"TESTQconst",auxType:auxInt32,argLen:1,asm:x86.ATESTQ,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"TESTLconst",auxType:auxInt32,argLen:1,asm:x86.ATESTL,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"TESTWconst",auxType:auxInt16,argLen:1,asm:x86.ATESTW,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"TESTBconst",auxType:auxInt8,argLen:1,asm:x86.ATESTB,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"SHLQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHLQ,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHLL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHLL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHLQconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHLQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHLLconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHLL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHRQ,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHRL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRW",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHRW,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRB",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASHRB,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRQconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHRQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRLconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHRL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRWconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHRW,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRBconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASHRB,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASARQ,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASARL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARW",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASARW,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARB",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ASARB,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARQconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASARQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARLconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASARL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARWconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASARW,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SARBconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ASARB,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHRDQ",argLen:3,resultInArg0:true,clobberFlags:true,asm:x86.ASHRQ,reg:regInfo{inputs:[]inputInfo{{2,2},{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SHLDQ",argLen:3,resultInArg0:true,clobberFlags:true,asm:x86.ASHLQ,reg:regInfo{inputs:[]inputInfo{{2,2},{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.AROLQ,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.AROLL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLW",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.AROLW,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLB",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.AROLB,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"RORQ",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ARORQ,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"RORL",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ARORL,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"RORW",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ARORW,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"RORB",argLen:2,resultInArg0:true,clobberFlags:true,asm:x86.ARORB,reg:regInfo{inputs:[]inputInfo{{1,2},{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLQconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AROLQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLLconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AROLL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLWconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AROLW,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ROLBconst",auxType:auxInt8,argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.AROLB,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDQload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AADDQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBQload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ASUBQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDQload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AANDQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORQload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AORQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORQload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AXORQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORLload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDLloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AADDL,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AADDL,scale:4,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDLloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AADDL,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDQloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AADDQ,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDQloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AADDQ,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBLloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.ASUBL,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.ASUBL,scale:4,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBLloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.ASUBL,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBQloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.ASUBQ,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"SUBQloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.ASUBQ,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDLloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AANDL,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AANDL,scale:4,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDLloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AANDL,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDQloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AANDQ,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ANDQloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AANDQ,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORLloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AORL,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AORL,scale:4,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORLloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AORL,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORQloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AORQ,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ORQloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AORQ,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORLloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AXORL,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORLloadidx4",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AXORL,scale:4,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORLloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AXORL,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORQloadidx1",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AXORQ,scale:1,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XORQloadidx8",auxType:auxSymOff,argLen:4,resultInArg0:true,clobberFlags:true,symEffect:SymRead,asm:x86.AXORQ,scale:8,reg:regInfo{inputs:[]inputInfo{{0,49135},{2,49151},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"ADDQmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AADDQ,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"SUBQmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.ASUBQ,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDQmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AANDQ,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORQmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AORQ,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"XORQmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AXORQ,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ADDLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"SUBLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.ASUBL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"XORLmodify",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ADDQmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ADDQmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"SUBQmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.ASUBQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"SUBQmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.ASUBQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ANDQmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ANDQmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ORQmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ORQmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"XORQmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"XORQmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ADDLmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ADDLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ADDLmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"SUBLmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.ASUBL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"SUBLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.ASUBL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"SUBLmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.ASUBL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ANDLmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ANDLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ANDLmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ORLmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ORLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ORLmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"XORLmodifyidx1",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"XORLmodifyidx4",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"XORLmodifyidx8",auxType:auxSymOff,argLen:4,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"ADDQconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ADDQconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDQconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDQconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORQconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORQconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"XORQconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"XORQconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ADDLconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ADDLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ADDLconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AADDL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDLconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDLconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AANDL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORLconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORLconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AORL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"XORLconstmodifyidx1",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"XORLconstmodifyidx4",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"XORLconstmodifyidx8",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,symEffect:SymRead|SymWrite,asm:x86.AXORL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"NEGQ",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ANEGQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"NEGL",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ANEGL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"NOTQ",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ANOTQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"NOTL",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ANOTL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BSFQ",argLen:1,asm:x86.ABSFQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"BSFL",argLen:1,clobberFlags:true,asm:x86.ABSFL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BSRQ",argLen:1,asm:x86.ABSRQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"BSRL",argLen:1,clobberFlags:true,asm:x86.ABSRL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQEQ",argLen:3,resultInArg0:true,asm:x86.ACMOVQEQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQNE",argLen:3,resultInArg0:true,asm:x86.ACMOVQNE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQLT",argLen:3,resultInArg0:true,asm:x86.ACMOVQLT,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQGT",argLen:3,resultInArg0:true,asm:x86.ACMOVQGT,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQLE",argLen:3,resultInArg0:true,asm:x86.ACMOVQLE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQGE",argLen:3,resultInArg0:true,asm:x86.ACMOVQGE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQLS",argLen:3,resultInArg0:true,asm:x86.ACMOVQLS,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQHI",argLen:3,resultInArg0:true,asm:x86.ACMOVQHI,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQCC",argLen:3,resultInArg0:true,asm:x86.ACMOVQCC,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQCS",argLen:3,resultInArg0:true,asm:x86.ACMOVQCS,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLEQ",argLen:3,resultInArg0:true,asm:x86.ACMOVLEQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLNE",argLen:3,resultInArg0:true,asm:x86.ACMOVLNE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLLT",argLen:3,resultInArg0:true,asm:x86.ACMOVLLT,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLGT",argLen:3,resultInArg0:true,asm:x86.ACMOVLGT,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLLE",argLen:3,resultInArg0:true,asm:x86.ACMOVLLE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLGE",argLen:3,resultInArg0:true,asm:x86.ACMOVLGE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLLS",argLen:3,resultInArg0:true,asm:x86.ACMOVLLS,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLHI",argLen:3,resultInArg0:true,asm:x86.ACMOVLHI,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLCC",argLen:3,resultInArg0:true,asm:x86.ACMOVLCC,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLCS",argLen:3,resultInArg0:true,asm:x86.ACMOVLCS,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWEQ",argLen:3,resultInArg0:true,asm:x86.ACMOVWEQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWNE",argLen:3,resultInArg0:true,asm:x86.ACMOVWNE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWLT",argLen:3,resultInArg0:true,asm:x86.ACMOVWLT,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWGT",argLen:3,resultInArg0:true,asm:x86.ACMOVWGT,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWLE",argLen:3,resultInArg0:true,asm:x86.ACMOVWLE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWGE",argLen:3,resultInArg0:true,asm:x86.ACMOVWGE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWLS",argLen:3,resultInArg0:true,asm:x86.ACMOVWLS,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWHI",argLen:3,resultInArg0:true,asm:x86.ACMOVWHI,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWCC",argLen:3,resultInArg0:true,asm:x86.ACMOVWCC,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWCS",argLen:3,resultInArg0:true,asm:x86.ACMOVWCS,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQEQF",argLen:3,resultInArg0:true,asm:x86.ACMOVQNE,reg:regInfo{inputs:[]inputInfo{{0,49134},{1,49135},},clobbers:1,outputs:[]outputInfo{{0,49134},},},}, {name:"CMOVQNEF",argLen:3,resultInArg0:true,asm:x86.ACMOVQNE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQGTF",argLen:3,resultInArg0:true,asm:x86.ACMOVQHI,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVQGEF",argLen:3,resultInArg0:true,asm:x86.ACMOVQCC,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLEQF",argLen:3,resultInArg0:true,asm:x86.ACMOVLNE,reg:regInfo{inputs:[]inputInfo{{0,49134},{1,49135},},clobbers:1,outputs:[]outputInfo{{0,49134},},},}, {name:"CMOVLNEF",argLen:3,resultInArg0:true,asm:x86.ACMOVLNE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLGTF",argLen:3,resultInArg0:true,asm:x86.ACMOVLHI,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVLGEF",argLen:3,resultInArg0:true,asm:x86.ACMOVLCC,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWEQF",argLen:3,resultInArg0:true,asm:x86.ACMOVWNE,reg:regInfo{inputs:[]inputInfo{{0,49134},{1,49135},},clobbers:1,outputs:[]outputInfo{{0,49134},},},}, {name:"CMOVWNEF",argLen:3,resultInArg0:true,asm:x86.ACMOVWNE,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWGTF",argLen:3,resultInArg0:true,asm:x86.ACMOVWHI,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"CMOVWGEF",argLen:3,resultInArg0:true,asm:x86.ACMOVWCC,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BSWAPQ",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABSWAPQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"BSWAPL",argLen:1,resultInArg0:true,clobberFlags:true,asm:x86.ABSWAPL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"POPCNTQ",argLen:1,clobberFlags:true,asm:x86.APOPCNTQ,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"POPCNTL",argLen:1,clobberFlags:true,asm:x86.APOPCNTL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"SQRTSD",argLen:1,asm:x86.ASQRTSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SQRTSS",argLen:1,asm:x86.ASQRTSS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"ROUNDSD",auxType:auxInt8,argLen:1,asm:x86.AROUNDSD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"VFMADD231SD",argLen:3,resultInArg0:true,asm:x86.AVFMADD231SD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},{2,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"SBBQcarrymask",argLen:1,asm:x86.ASBBQ,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SBBLcarrymask",argLen:1,asm:x86.ASBBL,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETEQ",argLen:1,asm:x86.ASETEQ,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETNE",argLen:1,asm:x86.ASETNE,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETL",argLen:1,asm:x86.ASETLT,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETLE",argLen:1,asm:x86.ASETLE,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETG",argLen:1,asm:x86.ASETGT,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETGE",argLen:1,asm:x86.ASETGE,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETB",argLen:1,asm:x86.ASETCS,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETBE",argLen:1,asm:x86.ASETLS,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETA",argLen:1,asm:x86.ASETHI,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETAE",argLen:1,asm:x86.ASETCC,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETO",argLen:1,asm:x86.ASETOS,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETEQstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETEQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETNEstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETNE,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETLstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETLT,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETLEstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETLE,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETGstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETGT,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETGEstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETGE,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETCS,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETBEstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETLS,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETAstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETHI,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETAEstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.ASETCC,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"SETEQF",argLen:1,clobberFlags:true,asm:x86.ASETEQ,reg:regInfo{clobbers:1,outputs:[]outputInfo{{0,49134},},},}, {name:"SETNEF",argLen:1,clobberFlags:true,asm:x86.ASETNE,reg:regInfo{clobbers:1,outputs:[]outputInfo{{0,49134},},},}, {name:"SETORD",argLen:1,asm:x86.ASETPC,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETNAN",argLen:1,asm:x86.ASETPS,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETGF",argLen:1,asm:x86.ASETHI,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"SETGEF",argLen:1,asm:x86.ASETCC,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"MOVBQSX",argLen:1,asm:x86.AMOVBQSX,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVBQZX",argLen:1,asm:x86.AMOVBLZX,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVWQSX",argLen:1,asm:x86.AMOVWQSX,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVWQZX",argLen:1,asm:x86.AMOVWLZX,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLQSX",argLen:1,asm:x86.AMOVLQSX,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLQZX",argLen:1,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLconst",auxType:auxInt32,argLen:0,rematerializeable:true,asm:x86.AMOVL,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"MOVQconst",auxType:auxInt64,argLen:0,rematerializeable:true,asm:x86.AMOVQ,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"CVTTSD2SL",argLen:1,asm:x86.ACVTTSD2SL,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,49135},},},}, {name:"CVTTSD2SQ",argLen:1,asm:x86.ACVTTSD2SQ,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,49135},},},}, {name:"CVTTSS2SL",argLen:1,asm:x86.ACVTTSS2SL,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,49135},},},}, {name:"CVTTSS2SQ",argLen:1,asm:x86.ACVTTSS2SQ,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,49135},},},}, {name:"CVTSL2SS",argLen:1,asm:x86.ACVTSL2SS,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"CVTSL2SD",argLen:1,asm:x86.ACVTSL2SD,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"CVTSQ2SS",argLen:1,asm:x86.ACVTSQ2SS,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"CVTSQ2SD",argLen:1,asm:x86.ACVTSQ2SD,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"CVTSD2SS",argLen:1,asm:x86.ACVTSD2SS,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"CVTSS2SD",argLen:1,asm:x86.ACVTSS2SD,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVQi2f",argLen:1,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVQf2i",argLen:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLi2f",argLen:1,reg:regInfo{inputs:[]inputInfo{{0,49135},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVLf2i",argLen:1,reg:regInfo{inputs:[]inputInfo{{0,2147418112},},outputs:[]outputInfo{{0,49135},},},}, {name:"PXOR",argLen:2,commutative:true,resultInArg0:true,asm:x86.APXOR,reg:regInfo{inputs:[]inputInfo{{0,2147418112},{1,2147418112},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"LEAQ",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:x86.ALEAQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAL",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:x86.ALEAL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAW",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:x86.ALEAW,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAQ1",auxType:auxSymOff,argLen:2,commutative:true,symEffect:SymAddr,asm:x86.ALEAQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAL1",auxType:auxSymOff,argLen:2,commutative:true,symEffect:SymAddr,asm:x86.ALEAL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAW1",auxType:auxSymOff,argLen:2,commutative:true,symEffect:SymAddr,asm:x86.ALEAW,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAQ2",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAQ,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAL2",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAL,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAW2",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAW,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAQ4",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAQ,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAL4",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAW4",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAW,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAQ8",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAL8",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"LEAW8",auxType:auxSymOff,argLen:2,symEffect:SymAddr,asm:x86.ALEAW,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVBLZX,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVBQSXload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVBQSX,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVWLZX,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVWQSXload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVWQSX,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLQSXload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVLQSX,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVQload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVLstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVQstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVQ,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVOload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVUPS,reg:regInfo{inputs:[]inputInfo{{0,4295016447},},outputs:[]outputInfo{{0,2147418112},},},}, {name:"MOVOstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVUPS,reg:regInfo{inputs:[]inputInfo{{1,2147418112},{0,4295016447},},},}, {name:"MOVOstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVUPS,reg:regInfo{inputs:[]inputInfo{{0,4295016447},},},}, {name:"MOVBloadidx1",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.AMOVBLZX,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVWloadidx1",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.AMOVWLZX,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVWloadidx2",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVWLZX,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLloadidx1",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.AMOVL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLloadidx4",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLloadidx8",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVQloadidx1",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:x86.AMOVQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVQloadidx8",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:x86.AMOVQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVBstoreidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:x86.AMOVB,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVWstoreidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:x86.AMOVW,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVWstoreidx2",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVW,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVLstoreidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:x86.AMOVL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVLstoreidx4",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVLstoreidx8",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVL,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVQstoreidx1",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:x86.AMOVQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVQstoreidx8",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:x86.AMOVQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{2,49151},{0,4295032831},},},}, {name:"MOVBstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"MOVWstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"MOVLstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"MOVQstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:x86.AMOVQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},},}, {name:"MOVBstoreconstidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymWrite,asm:x86.AMOVB,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVWstoreconstidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymWrite,asm:x86.AMOVW,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVWstoreconstidx2",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVW,scale:2,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVLstoreconstidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymWrite,asm:x86.AMOVL,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVLstoreconstidx4",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVL,scale:4,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVQstoreconstidx1",auxType:auxSymValAndOff,argLen:3,commutative:true,symEffect:SymWrite,asm:x86.AMOVQ,scale:1,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"MOVQstoreconstidx8",auxType:auxSymValAndOff,argLen:3,symEffect:SymWrite,asm:x86.AMOVQ,scale:8,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"DUFFZERO",auxType:auxInt64,argLen:2,faultOnNilArg0:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,128},},clobbers:128,},}, {name:"REPSTOSQ",argLen:4,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,128},{1,2},{2,1},},clobbers:130,},}, {name:"CALLstatic",auxType:auxCallOff,argLen:-1,clobberFlags:true,call:true,reg:regInfo{clobbers:2147483631,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:-1,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{1,4},{0,49151},},clobbers:2147483631,},}, {name:"CALLinter",auxType:auxCallOff,argLen:-1,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,49135},},clobbers:2147483631,},}, {name:"DUFFCOPY",auxType:auxInt64,argLen:3,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,128},{1,64},},clobbers:65728,},}, {name:"REPMOVSQ",argLen:4,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,128},{1,64},{2,2},},clobbers:194,},}, {name:"InvertFlags",argLen:1,reg:regInfo{},}, {name:"LoweredGetG",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,4},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"LoweredNilCheck",argLen:2,clobberFlags:true,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,49151},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,128},{1,879},},clobbers:2147418112,},}, {name:"LoweredHasCPUFeature",auxType:auxSym,argLen:0,rematerializeable:true,symEffect:SymNone,reg:regInfo{outputs:[]outputInfo{{0,49135},},},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,1},{1,2},},},}, {name:"FlagEQ",argLen:0,reg:regInfo{},}, {name:"FlagLT_ULT",argLen:0,reg:regInfo{},}, {name:"FlagLT_UGT",argLen:0,reg:regInfo{},}, {name:"FlagGT_UGT",argLen:0,reg:regInfo{},}, {name:"FlagGT_ULT",argLen:0,reg:regInfo{},}, {name:"MOVBatomicload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVLatomicload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVL,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"MOVQatomicload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:x86.AMOVQ,reg:regInfo{inputs:[]inputInfo{{0,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XCHGB",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AXCHGB,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XCHGL",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AXCHGL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XCHGQ",auxType:auxSymOff,argLen:3,resultInArg0:true,faultOnNilArg1:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AXCHGQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XADDLlock",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AXADDL,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"XADDQlock",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AXADDQ,reg:regInfo{inputs:[]inputInfo{{0,49135},{1,4295032831},},outputs:[]outputInfo{{0,49135},},},}, {name:"AddTupleFirst32",argLen:2,reg:regInfo{},}, {name:"AddTupleFirst64",argLen:2,reg:regInfo{},}, {name:"CMPXCHGLlock",auxType:auxSymOff,argLen:4,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.ACMPXCHGL,reg:regInfo{inputs:[]inputInfo{{1,1},{0,49135},{2,49135},},clobbers:1,outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"CMPXCHGQlock",auxType:auxSymOff,argLen:4,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.ACMPXCHGQ,reg:regInfo{inputs:[]inputInfo{{1,1},{0,49135},{2,49135},},clobbers:1,outputs:[]outputInfo{{1,0},{0,49135},},},}, {name:"ANDBlock",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AANDB,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ANDLlock",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AANDL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORBlock",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AORB,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ORLlock",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:x86.AORL,reg:regInfo{inputs:[]inputInfo{{1,49151},{0,4295032831},},},}, {name:"ADD",argLen:2,commutative:true,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDconst",auxType:auxInt32,argLen:1,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,30719},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUB",argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBconst",auxType:auxInt32,argLen:1,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSB",argLen:2,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSBconst",auxType:auxInt32,argLen:1,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MUL",argLen:2,commutative:true,asm:arm.AMUL,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"HMUL",argLen:2,commutative:true,asm:arm.AMULL,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"HMULU",argLen:2,commutative:true,asm:arm.AMULLU,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"CALLudiv",argLen:2,clobberFlags:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,1},},clobbers:20492,outputs:[]outputInfo{{0,1},{1,2},},},}, {name:"ADDS",argLen:2,commutative:true,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"ADDSconst",auxType:auxInt32,argLen:1,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"ADC",argLen:3,commutative:true,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADCconst",auxType:auxInt32,argLen:2,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBS",argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SUBSconst",auxType:auxInt32,argLen:1,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"RSBSconst",auxType:auxInt32,argLen:1,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SBC",argLen:3,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SBCconst",auxType:auxInt32,argLen:2,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSCconst",auxType:auxInt32,argLen:2,asm:arm.ARSC,reg:regInfo{inputs:[]inputInfo{{0,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"MULLU",argLen:2,commutative:true,asm:arm.AMULLU,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},{1,21503},},},}, {name:"MULA",argLen:3,asm:arm.AMULA,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"MULS",argLen:3,asm:arm.AMULS,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDF",argLen:2,commutative:true,asm:arm.AADDF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"ADDD",argLen:2,commutative:true,asm:arm.AADDD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"SUBF",argLen:2,asm:arm.ASUBF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"SUBD",argLen:2,asm:arm.ASUBD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MULF",argLen:2,commutative:true,asm:arm.AMULF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MULD",argLen:2,commutative:true,asm:arm.AMULD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"NMULF",argLen:2,commutative:true,asm:arm.ANMULF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"NMULD",argLen:2,commutative:true,asm:arm.ANMULD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"DIVF",argLen:2,asm:arm.ADIVF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"DIVD",argLen:2,asm:arm.ADIVD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MULAF",argLen:3,resultInArg0:true,asm:arm.AMULAF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MULAD",argLen:3,resultInArg0:true,asm:arm.AMULAD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MULSF",argLen:3,resultInArg0:true,asm:arm.AMULSF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MULSD",argLen:3,resultInArg0:true,asm:arm.AMULSD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMULAD",argLen:3,resultInArg0:true,asm:arm.AFMULAD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"AND",argLen:2,commutative:true,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ANDconst",auxType:auxInt32,argLen:1,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"OR",argLen:2,commutative:true,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ORconst",auxType:auxInt32,argLen:1,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"XOR",argLen:2,commutative:true,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORconst",auxType:auxInt32,argLen:1,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"BIC",argLen:2,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"BICconst",auxType:auxInt32,argLen:1,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"BFX",auxType:auxInt32,argLen:1,asm:arm.ABFX,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"BFXU",auxType:auxInt32,argLen:1,asm:arm.ABFXU,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MVN",argLen:1,asm:arm.AMVN,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"NEGF",argLen:1,asm:arm.ANEGF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"NEGD",argLen:1,asm:arm.ANEGD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"SQRTD",argLen:1,asm:arm.ASQRTD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"SQRTF",argLen:1,asm:arm.ASQRTF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"ABSD",argLen:1,asm:arm.AABSD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CLZ",argLen:1,asm:arm.ACLZ,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"REV",argLen:1,asm:arm.AREV,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"REV16",argLen:1,asm:arm.AREV16,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"RBIT",argLen:1,asm:arm.ARBIT,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SLL",argLen:2,asm:arm.ASLL,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SLLconst",auxType:auxInt32,argLen:1,asm:arm.ASLL,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SRL",argLen:2,asm:arm.ASRL,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SRLconst",auxType:auxInt32,argLen:1,asm:arm.ASRL,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SRA",argLen:2,asm:arm.ASRA,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SRAconst",auxType:auxInt32,argLen:1,asm:arm.ASRA,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SRR",argLen:2,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SRRconst",auxType:auxInt32,argLen:1,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDshiftLL",auxType:auxInt32,argLen:2,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDshiftRL",auxType:auxInt32,argLen:2,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDshiftRA",auxType:auxInt32,argLen:2,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBshiftLL",auxType:auxInt32,argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBshiftRL",auxType:auxInt32,argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBshiftRA",auxType:auxInt32,argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSBshiftLL",auxType:auxInt32,argLen:2,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSBshiftRL",auxType:auxInt32,argLen:2,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSBshiftRA",auxType:auxInt32,argLen:2,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ANDshiftLL",auxType:auxInt32,argLen:2,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ANDshiftRL",auxType:auxInt32,argLen:2,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ANDshiftRA",auxType:auxInt32,argLen:2,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ORshiftLL",auxType:auxInt32,argLen:2,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ORshiftRL",auxType:auxInt32,argLen:2,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ORshiftRA",auxType:auxInt32,argLen:2,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORshiftLL",auxType:auxInt32,argLen:2,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORshiftRL",auxType:auxInt32,argLen:2,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORshiftRA",auxType:auxInt32,argLen:2,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORshiftRR",auxType:auxInt32,argLen:2,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"BICshiftLL",auxType:auxInt32,argLen:2,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"BICshiftRL",auxType:auxInt32,argLen:2,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"BICshiftRA",auxType:auxInt32,argLen:2,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MVNshiftLL",auxType:auxInt32,argLen:1,asm:arm.AMVN,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MVNshiftRL",auxType:auxInt32,argLen:1,asm:arm.AMVN,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MVNshiftRA",auxType:auxInt32,argLen:1,asm:arm.AMVN,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADCshiftLL",auxType:auxInt32,argLen:3,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADCshiftRL",auxType:auxInt32,argLen:3,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADCshiftRA",auxType:auxInt32,argLen:3,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SBCshiftLL",auxType:auxInt32,argLen:3,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SBCshiftRL",auxType:auxInt32,argLen:3,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SBCshiftRA",auxType:auxInt32,argLen:3,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSCshiftLL",auxType:auxInt32,argLen:3,asm:arm.ARSC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSCshiftRL",auxType:auxInt32,argLen:3,asm:arm.ARSC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSCshiftRA",auxType:auxInt32,argLen:3,asm:arm.ARSC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDSshiftLL",auxType:auxInt32,argLen:2,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"ADDSshiftRL",auxType:auxInt32,argLen:2,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"ADDSshiftRA",auxType:auxInt32,argLen:2,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SUBSshiftLL",auxType:auxInt32,argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SUBSshiftRL",auxType:auxInt32,argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SUBSshiftRA",auxType:auxInt32,argLen:2,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"RSBSshiftLL",auxType:auxInt32,argLen:2,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"RSBSshiftRL",auxType:auxInt32,argLen:2,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"RSBSshiftRA",auxType:auxInt32,argLen:2,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"ADDshiftLLreg",argLen:3,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDshiftRLreg",argLen:3,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDshiftRAreg",argLen:3,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBshiftLLreg",argLen:3,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBshiftRLreg",argLen:3,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SUBshiftRAreg",argLen:3,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSBshiftLLreg",argLen:3,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSBshiftRLreg",argLen:3,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSBshiftRAreg",argLen:3,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ANDshiftLLreg",argLen:3,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ANDshiftRLreg",argLen:3,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ANDshiftRAreg",argLen:3,asm:arm.AAND,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ORshiftLLreg",argLen:3,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ORshiftRLreg",argLen:3,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ORshiftRAreg",argLen:3,asm:arm.AORR,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORshiftLLreg",argLen:3,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORshiftRLreg",argLen:3,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"XORshiftRAreg",argLen:3,asm:arm.AEOR,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"BICshiftLLreg",argLen:3,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"BICshiftRLreg",argLen:3,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"BICshiftRAreg",argLen:3,asm:arm.ABIC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"MVNshiftLLreg",argLen:2,asm:arm.AMVN,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MVNshiftRLreg",argLen:2,asm:arm.AMVN,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MVNshiftRAreg",argLen:2,asm:arm.AMVN,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADCshiftLLreg",argLen:4,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADCshiftRLreg",argLen:4,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADCshiftRAreg",argLen:4,asm:arm.AADC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SBCshiftLLreg",argLen:4,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SBCshiftRLreg",argLen:4,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SBCshiftRAreg",argLen:4,asm:arm.ASBC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSCshiftLLreg",argLen:4,asm:arm.ARSC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSCshiftRLreg",argLen:4,asm:arm.ARSC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"RSCshiftRAreg",argLen:4,asm:arm.ARSC,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"ADDSshiftLLreg",argLen:3,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"ADDSshiftRLreg",argLen:3,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"ADDSshiftRAreg",argLen:3,asm:arm.AADD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SUBSshiftLLreg",argLen:3,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SUBSshiftRLreg",argLen:3,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"SUBSshiftRAreg",argLen:3,asm:arm.ASUB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"RSBSshiftLLreg",argLen:3,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"RSBSshiftRLreg",argLen:3,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"RSBSshiftRAreg",argLen:3,asm:arm.ARSB,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},outputs:[]outputInfo{{1,0},{0,21503},},},}, {name:"CMP",argLen:2,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMPconst",auxType:auxInt32,argLen:1,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,22527},},},}, {name:"CMN",argLen:2,commutative:true,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMNconst",auxType:auxInt32,argLen:1,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,22527},},},}, {name:"TST",argLen:2,commutative:true,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TSTconst",auxType:auxInt32,argLen:1,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,22527},},},}, {name:"TEQ",argLen:2,commutative:true,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TEQconst",auxType:auxInt32,argLen:1,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,22527},},},}, {name:"CMPF",argLen:2,asm:arm.ACMPF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},},}, {name:"CMPD",argLen:2,asm:arm.ACMPD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},},}, {name:"CMPshiftLL",auxType:auxInt32,argLen:2,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMPshiftRL",auxType:auxInt32,argLen:2,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMPshiftRA",auxType:auxInt32,argLen:2,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMNshiftLL",auxType:auxInt32,argLen:2,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMNshiftRL",auxType:auxInt32,argLen:2,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMNshiftRA",auxType:auxInt32,argLen:2,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TSTshiftLL",auxType:auxInt32,argLen:2,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TSTshiftRL",auxType:auxInt32,argLen:2,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TSTshiftRA",auxType:auxInt32,argLen:2,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TEQshiftLL",auxType:auxInt32,argLen:2,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TEQshiftRL",auxType:auxInt32,argLen:2,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"TEQshiftRA",auxType:auxInt32,argLen:2,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,22527},{1,22527},},},}, {name:"CMPshiftLLreg",argLen:3,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"CMPshiftRLreg",argLen:3,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"CMPshiftRAreg",argLen:3,asm:arm.ACMP,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"CMNshiftLLreg",argLen:3,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"CMNshiftRLreg",argLen:3,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"CMNshiftRAreg",argLen:3,asm:arm.ACMN,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"TSTshiftLLreg",argLen:3,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"TSTshiftRLreg",argLen:3,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"TSTshiftRAreg",argLen:3,asm:arm.ATST,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"TEQshiftLLreg",argLen:3,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"TEQshiftRLreg",argLen:3,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"TEQshiftRAreg",argLen:3,asm:arm.ATEQ,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},{2,21503},},},}, {name:"CMPF0",argLen:1,asm:arm.ACMPF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},},}, {name:"CMPD0",argLen:1,asm:arm.ACMPD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},},}, {name:"MOVWconst",auxType:auxInt32,argLen:0,rematerializeable:true,asm:arm.AMOVW,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"MOVFconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:arm.AMOVF,reg:regInfo{outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:arm.AMOVD,reg:regInfo{outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVWaddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4294975488},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVBUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVHload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVHUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVFload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm.AMOVF,reg:regInfo{inputs:[]inputInfo{{0,4294998015},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4294998015},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},},}, {name:"MOVHstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},},}, {name:"MOVFstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm.AMOVF,reg:regInfo{inputs:[]inputInfo{{0,4294998015},{1,4294901760},},},}, {name:"MOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4294998015},{1,4294901760},},},}, {name:"MOVWloadidx",argLen:3,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWloadshiftLL",auxType:auxInt32,argLen:3,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWloadshiftRL",auxType:auxInt32,argLen:3,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWloadshiftRA",auxType:auxInt32,argLen:3,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVBUloadidx",argLen:3,asm:arm.AMOVBU,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVBloadidx",argLen:3,asm:arm.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVHUloadidx",argLen:3,asm:arm.AMOVHU,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVHloadidx",argLen:3,asm:arm.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,22527},{0,4294998015},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWstoreidx",argLen:4,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{2,22527},{0,4294998015},},},}, {name:"MOVWstoreshiftLL",auxType:auxInt32,argLen:4,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{2,22527},{0,4294998015},},},}, {name:"MOVWstoreshiftRL",auxType:auxInt32,argLen:4,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{2,22527},{0,4294998015},},},}, {name:"MOVWstoreshiftRA",auxType:auxInt32,argLen:4,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,22527},{2,22527},{0,4294998015},},},}, {name:"MOVBstoreidx",argLen:4,asm:arm.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,22527},{2,22527},{0,4294998015},},},}, {name:"MOVHstoreidx",argLen:4,asm:arm.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,22527},{2,22527},{0,4294998015},},},}, {name:"MOVBreg",argLen:1,asm:arm.AMOVBS,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVBUreg",argLen:1,asm:arm.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVHreg",argLen:1,asm:arm.AMOVHS,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVHUreg",argLen:1,asm:arm.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWreg",argLen:1,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,22527},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWnop",argLen:1,resultInArg0:true,reg:regInfo{inputs:[]inputInfo{{0,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"MOVWF",argLen:1,asm:arm.AMOVWF,reg:regInfo{inputs:[]inputInfo{{0,21503},},clobbers:2147483648,outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVWD",argLen:1,asm:arm.AMOVWD,reg:regInfo{inputs:[]inputInfo{{0,21503},},clobbers:2147483648,outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVWUF",argLen:1,asm:arm.AMOVWF,reg:regInfo{inputs:[]inputInfo{{0,21503},},clobbers:2147483648,outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVWUD",argLen:1,asm:arm.AMOVWD,reg:regInfo{inputs:[]inputInfo{{0,21503},},clobbers:2147483648,outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVFW",argLen:1,asm:arm.AMOVFW,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},clobbers:2147483648,outputs:[]outputInfo{{0,21503},},},}, {name:"MOVDW",argLen:1,asm:arm.AMOVDW,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},clobbers:2147483648,outputs:[]outputInfo{{0,21503},},},}, {name:"MOVFWU",argLen:1,asm:arm.AMOVFW,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},clobbers:2147483648,outputs:[]outputInfo{{0,21503},},},}, {name:"MOVDWU",argLen:1,asm:arm.AMOVDW,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},clobbers:2147483648,outputs:[]outputInfo{{0,21503},},},}, {name:"MOVFD",argLen:1,asm:arm.AMOVFD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVDF",argLen:1,asm:arm.AMOVDF,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CMOVWHSconst",auxType:auxInt32,argLen:2,resultInArg0:true,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"CMOVWLSconst",auxType:auxInt32,argLen:2,resultInArg0:true,asm:arm.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"SRAcond",argLen:3,asm:arm.ASRA,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},outputs:[]outputInfo{{0,21503},},},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,clobberFlags:true,call:true,reg:regInfo{clobbers:4294924287,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{1,128},{0,29695},},clobbers:4294924287,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,21503},},clobbers:4294924287,},}, {name:"LoweredNilCheck",argLen:2,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,22527},},},}, {name:"Equal",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"NotEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"LessThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"LessEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"GreaterThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"GreaterEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"LessThanU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"LessEqualU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"GreaterThanU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"GreaterEqualU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"DUFFZERO",auxType:auxInt64,argLen:3,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,1},},clobbers:20482,},}, {name:"DUFFCOPY",auxType:auxInt64,argLen:3,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,2},},clobbers:20487,},}, {name:"LoweredZero",auxType:auxInt64,argLen:4,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,21503},{2,21503},},clobbers:2,},}, {name:"LoweredMove",auxType:auxInt64,argLen:4,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,2},{2,21503},},clobbers:6,},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,128},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,21503},},},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,1},{1,2},},},}, {name:"LoweredPanicExtendA",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,16},{1,4},{2,8},},},}, {name:"LoweredPanicExtendB",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,16},{1,2},{2,4},},},}, {name:"LoweredPanicExtendC",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,16},{1,1},{2,2},},},}, {name:"FlagConstant",auxType:auxFlagConstant,argLen:0,reg:regInfo{},}, {name:"InvertFlags",argLen:1,reg:regInfo{},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},clobbers:4294922240,},}, {name:"ADCSflags",argLen:3,commutative:true,asm:arm64.AADCS,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{1,0},{0,670826495},},},}, {name:"ADCzerocarry",argLen:1,asm:arm64.AADC,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"ADD",argLen:2,commutative:true,asm:arm64.AADD,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ADDconst",auxType:auxInt64,argLen:1,asm:arm64.AADD,reg:regInfo{inputs:[]inputInfo{{0,1878786047},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ADDSconstflags",auxType:auxInt64,argLen:1,asm:arm64.AADDS,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{1,0},{0,670826495},},},}, {name:"ADDSflags",argLen:2,commutative:true,asm:arm64.AADDS,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{1,0},{0,670826495},},},}, {name:"SUB",argLen:2,asm:arm64.ASUB,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SUBconst",auxType:auxInt64,argLen:1,asm:arm64.ASUB,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SBCSflags",argLen:3,asm:arm64.ASBCS,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{1,0},{0,670826495},},},}, {name:"SUBSflags",argLen:2,asm:arm64.ASUBS,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{1,0},{0,670826495},},},}, {name:"MUL",argLen:2,commutative:true,asm:arm64.AMUL,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MULW",argLen:2,commutative:true,asm:arm64.AMULW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MNEG",argLen:2,commutative:true,asm:arm64.AMNEG,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MNEGW",argLen:2,commutative:true,asm:arm64.AMNEGW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MULH",argLen:2,commutative:true,asm:arm64.ASMULH,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UMULH",argLen:2,commutative:true,asm:arm64.AUMULH,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MULL",argLen:2,commutative:true,asm:arm64.ASMULL,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UMULL",argLen:2,commutative:true,asm:arm64.AUMULL,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"DIV",argLen:2,asm:arm64.ASDIV,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UDIV",argLen:2,asm:arm64.AUDIV,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"DIVW",argLen:2,asm:arm64.ASDIVW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UDIVW",argLen:2,asm:arm64.AUDIVW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOD",argLen:2,asm:arm64.AREM,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UMOD",argLen:2,asm:arm64.AUREM,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MODW",argLen:2,asm:arm64.AREMW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UMODW",argLen:2,asm:arm64.AUREMW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FADDS",argLen:2,commutative:true,asm:arm64.AFADDS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FADDD",argLen:2,commutative:true,asm:arm64.AFADDD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSUBS",argLen:2,asm:arm64.AFSUBS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSUBD",argLen:2,asm:arm64.AFSUBD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMULS",argLen:2,commutative:true,asm:arm64.AFMULS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMULD",argLen:2,commutative:true,asm:arm64.AFMULD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNMULS",argLen:2,commutative:true,asm:arm64.AFNMULS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNMULD",argLen:2,commutative:true,asm:arm64.AFNMULD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FDIVS",argLen:2,asm:arm64.AFDIVS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FDIVD",argLen:2,asm:arm64.AFDIVD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"AND",argLen:2,commutative:true,asm:arm64.AAND,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ANDconst",auxType:auxInt64,argLen:1,asm:arm64.AAND,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"OR",argLen:2,commutative:true,asm:arm64.AORR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORconst",auxType:auxInt64,argLen:1,asm:arm64.AORR,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"XOR",argLen:2,commutative:true,asm:arm64.AEOR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"XORconst",auxType:auxInt64,argLen:1,asm:arm64.AEOR,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"BIC",argLen:2,asm:arm64.ABIC,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"EON",argLen:2,asm:arm64.AEON,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORN",argLen:2,asm:arm64.AORN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredMuluhilo",argLen:2,resultNotInArgs:true,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},{1,670826495},},},}, {name:"MVN",argLen:1,asm:arm64.AMVN,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"NEG",argLen:1,asm:arm64.ANEG,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"NEGSflags",argLen:1,asm:arm64.ANEGS,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{1,0},{0,670826495},},},}, {name:"NGCzerocarry",argLen:1,asm:arm64.ANGC,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"FABSD",argLen:1,asm:arm64.AFABSD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNEGS",argLen:1,asm:arm64.AFNEGS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNEGD",argLen:1,asm:arm64.AFNEGD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSQRTD",argLen:1,asm:arm64.AFSQRTD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSQRTS",argLen:1,asm:arm64.AFSQRTS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"REV",argLen:1,asm:arm64.AREV,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"REVW",argLen:1,asm:arm64.AREVW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"REV16",argLen:1,asm:arm64.AREV16,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"REV16W",argLen:1,asm:arm64.AREV16W,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"RBIT",argLen:1,asm:arm64.ARBIT,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"RBITW",argLen:1,asm:arm64.ARBITW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CLZ",argLen:1,asm:arm64.ACLZ,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CLZW",argLen:1,asm:arm64.ACLZW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"VCNT",argLen:1,asm:arm64.AVCNT,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"VUADDLV",argLen:1,asm:arm64.AVUADDLV,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"LoweredRound32F",argLen:1,resultInArg0:true,zeroWidth:true,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"LoweredRound64F",argLen:1,resultInArg0:true,zeroWidth:true,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMADDS",argLen:3,asm:arm64.AFMADDS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMADDD",argLen:3,asm:arm64.AFMADDD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNMADDS",argLen:3,asm:arm64.AFNMADDS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNMADDD",argLen:3,asm:arm64.AFNMADDD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMSUBS",argLen:3,asm:arm64.AFMSUBS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMSUBD",argLen:3,asm:arm64.AFMSUBD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNMSUBS",argLen:3,asm:arm64.AFNMSUBS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNMSUBD",argLen:3,asm:arm64.AFNMSUBD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},{2,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"MADD",argLen:3,asm:arm64.AMADD,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},{2,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MADDW",argLen:3,asm:arm64.AMADDW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},{2,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MSUB",argLen:3,asm:arm64.AMSUB,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},{2,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MSUBW",argLen:3,asm:arm64.AMSUBW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},{2,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SLL",argLen:2,asm:arm64.ALSL,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SLLconst",auxType:auxInt64,argLen:1,asm:arm64.ALSL,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SRL",argLen:2,asm:arm64.ALSR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SRLconst",auxType:auxInt64,argLen:1,asm:arm64.ALSR,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SRA",argLen:2,asm:arm64.AASR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SRAconst",auxType:auxInt64,argLen:1,asm:arm64.AASR,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ROR",argLen:2,asm:arm64.AROR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"RORW",argLen:2,asm:arm64.ARORW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"RORconst",auxType:auxInt64,argLen:1,asm:arm64.AROR,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"RORWconst",auxType:auxInt64,argLen:1,asm:arm64.ARORW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"EXTRconst",auxType:auxInt64,argLen:2,asm:arm64.AEXTR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"EXTRWconst",auxType:auxInt64,argLen:2,asm:arm64.AEXTRW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CMP",argLen:2,asm:arm64.ACMP,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMPconst",auxType:auxInt64,argLen:1,asm:arm64.ACMP,reg:regInfo{inputs:[]inputInfo{{0,805044223},},},}, {name:"CMPW",argLen:2,asm:arm64.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMPWconst",auxType:auxInt32,argLen:1,asm:arm64.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},},}, {name:"CMN",argLen:2,commutative:true,asm:arm64.ACMN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMNconst",auxType:auxInt64,argLen:1,asm:arm64.ACMN,reg:regInfo{inputs:[]inputInfo{{0,805044223},},},}, {name:"CMNW",argLen:2,commutative:true,asm:arm64.ACMNW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMNWconst",auxType:auxInt32,argLen:1,asm:arm64.ACMNW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},},}, {name:"TST",argLen:2,commutative:true,asm:arm64.ATST,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"TSTconst",auxType:auxInt64,argLen:1,asm:arm64.ATST,reg:regInfo{inputs:[]inputInfo{{0,805044223},},},}, {name:"TSTW",argLen:2,commutative:true,asm:arm64.ATSTW,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"TSTWconst",auxType:auxInt32,argLen:1,asm:arm64.ATSTW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},},}, {name:"FCMPS",argLen:2,asm:arm64.AFCMPS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},},}, {name:"FCMPD",argLen:2,asm:arm64.AFCMPD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},},}, {name:"FCMPS0",argLen:1,asm:arm64.AFCMPS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},},}, {name:"FCMPD0",argLen:1,asm:arm64.AFCMPD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},},}, {name:"MVNshiftLL",auxType:auxInt64,argLen:1,asm:arm64.AMVN,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MVNshiftRL",auxType:auxInt64,argLen:1,asm:arm64.AMVN,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MVNshiftRA",auxType:auxInt64,argLen:1,asm:arm64.AMVN,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"NEGshiftLL",auxType:auxInt64,argLen:1,asm:arm64.ANEG,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"NEGshiftRL",auxType:auxInt64,argLen:1,asm:arm64.ANEG,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"NEGshiftRA",auxType:auxInt64,argLen:1,asm:arm64.ANEG,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ADDshiftLL",auxType:auxInt64,argLen:2,asm:arm64.AADD,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ADDshiftRL",auxType:auxInt64,argLen:2,asm:arm64.AADD,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ADDshiftRA",auxType:auxInt64,argLen:2,asm:arm64.AADD,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SUBshiftLL",auxType:auxInt64,argLen:2,asm:arm64.ASUB,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SUBshiftRL",auxType:auxInt64,argLen:2,asm:arm64.ASUB,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SUBshiftRA",auxType:auxInt64,argLen:2,asm:arm64.ASUB,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ANDshiftLL",auxType:auxInt64,argLen:2,asm:arm64.AAND,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ANDshiftRL",auxType:auxInt64,argLen:2,asm:arm64.AAND,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ANDshiftRA",auxType:auxInt64,argLen:2,asm:arm64.AAND,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORshiftLL",auxType:auxInt64,argLen:2,asm:arm64.AORR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORshiftRL",auxType:auxInt64,argLen:2,asm:arm64.AORR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORshiftRA",auxType:auxInt64,argLen:2,asm:arm64.AORR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"XORshiftLL",auxType:auxInt64,argLen:2,asm:arm64.AEOR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"XORshiftRL",auxType:auxInt64,argLen:2,asm:arm64.AEOR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"XORshiftRA",auxType:auxInt64,argLen:2,asm:arm64.AEOR,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"BICshiftLL",auxType:auxInt64,argLen:2,asm:arm64.ABIC,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"BICshiftRL",auxType:auxInt64,argLen:2,asm:arm64.ABIC,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"BICshiftRA",auxType:auxInt64,argLen:2,asm:arm64.ABIC,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"EONshiftLL",auxType:auxInt64,argLen:2,asm:arm64.AEON,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"EONshiftRL",auxType:auxInt64,argLen:2,asm:arm64.AEON,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"EONshiftRA",auxType:auxInt64,argLen:2,asm:arm64.AEON,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORNshiftLL",auxType:auxInt64,argLen:2,asm:arm64.AORN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORNshiftRL",auxType:auxInt64,argLen:2,asm:arm64.AORN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"ORNshiftRA",auxType:auxInt64,argLen:2,asm:arm64.AORN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CMPshiftLL",auxType:auxInt64,argLen:2,asm:arm64.ACMP,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMPshiftRL",auxType:auxInt64,argLen:2,asm:arm64.ACMP,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMPshiftRA",auxType:auxInt64,argLen:2,asm:arm64.ACMP,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMNshiftLL",auxType:auxInt64,argLen:2,asm:arm64.ACMN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMNshiftRL",auxType:auxInt64,argLen:2,asm:arm64.ACMN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"CMNshiftRA",auxType:auxInt64,argLen:2,asm:arm64.ACMN,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"TSTshiftLL",auxType:auxInt64,argLen:2,asm:arm64.ATST,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"TSTshiftRL",auxType:auxInt64,argLen:2,asm:arm64.ATST,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"TSTshiftRA",auxType:auxInt64,argLen:2,asm:arm64.ATST,reg:regInfo{inputs:[]inputInfo{{0,805044223},{1,805044223},},},}, {name:"BFI",auxType:auxARM64BitField,argLen:2,resultInArg0:true,asm:arm64.ABFI,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{0,670826495},},},}, {name:"BFXIL",auxType:auxARM64BitField,argLen:2,resultInArg0:true,asm:arm64.ABFXIL,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SBFIZ",auxType:auxARM64BitField,argLen:1,asm:arm64.ASBFIZ,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SBFX",auxType:auxARM64BitField,argLen:1,asm:arm64.ASBFX,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UBFIZ",auxType:auxARM64BitField,argLen:1,asm:arm64.AUBFIZ,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"UBFX",auxType:auxARM64BitField,argLen:1,asm:arm64.AUBFX,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVDconst",auxType:auxInt64,argLen:0,rematerializeable:true,asm:arm64.AMOVD,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"FMOVSconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:arm64.AFMOVS,reg:regInfo{outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:arm64.AFMOVD,reg:regInfo{outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"MOVDaddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372037928517632},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVBUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVHload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVHUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AMOVWU,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FMOVSload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"MOVDloadidx",argLen:3,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWloadidx",argLen:3,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWUloadidx",argLen:3,asm:arm64.AMOVWU,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVHloadidx",argLen:3,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVHUloadidx",argLen:3,asm:arm64.AMOVHU,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVBloadidx",argLen:3,asm:arm64.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVBUloadidx",argLen:3,asm:arm64.AMOVBU,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FMOVSloadidx",argLen:3,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVDloadidx",argLen:3,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"MOVHloadidx2",argLen:3,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVHUloadidx2",argLen:3,asm:arm64.AMOVHU,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWloadidx4",argLen:3,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWUloadidx4",argLen:3,asm:arm64.AMOVWU,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVDloadidx8",argLen:3,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FMOVSloadidx4",argLen:3,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVDloadidx8",argLen:3,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVHstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"STP",auxType:auxSymOff,argLen:4,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.ASTP,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"FMOVSstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},{1,9223372034707292160},},},}, {name:"FMOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},{1,9223372034707292160},},},}, {name:"MOVBstoreidx",argLen:4,asm:arm64.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"MOVHstoreidx",argLen:4,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"MOVWstoreidx",argLen:4,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"MOVDstoreidx",argLen:4,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"FMOVSstoreidx",argLen:4,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},{2,9223372034707292160},},},}, {name:"FMOVDstoreidx",argLen:4,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},{2,9223372034707292160},},},}, {name:"MOVHstoreidx2",argLen:4,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"MOVWstoreidx4",argLen:4,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"MOVDstoreidx8",argLen:4,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},},}, {name:"FMOVSstoreidx4",argLen:4,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},{2,9223372034707292160},},},}, {name:"FMOVDstoreidx8",argLen:4,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},{2,9223372034707292160},},},}, {name:"MOVBstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},},}, {name:"MOVHstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},},}, {name:"MOVWstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},},}, {name:"MOVDstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},},}, {name:"MOVQstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:arm64.ASTP,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},},}, {name:"MOVBstorezeroidx",argLen:3,asm:arm64.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVHstorezeroidx",argLen:3,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVWstorezeroidx",argLen:3,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVDstorezeroidx",argLen:3,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVHstorezeroidx2",argLen:3,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVWstorezeroidx4",argLen:3,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"MOVDstorezeroidx8",argLen:3,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"FMOVDgpfp",argLen:1,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVDfpgp",argLen:1,asm:arm64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FMOVSgpfp",argLen:1,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVSfpgp",argLen:1,asm:arm64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVBreg",argLen:1,asm:arm64.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVBUreg",argLen:1,asm:arm64.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVHreg",argLen:1,asm:arm64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVHUreg",argLen:1,asm:arm64.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWreg",argLen:1,asm:arm64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVWUreg",argLen:1,asm:arm64.AMOVWU,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVDreg",argLen:1,asm:arm64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"MOVDnop",argLen:1,resultInArg0:true,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,670826495},},},}, {name:"SCVTFWS",argLen:1,asm:arm64.ASCVTFWS,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"SCVTFWD",argLen:1,asm:arm64.ASCVTFWD,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"UCVTFWS",argLen:1,asm:arm64.AUCVTFWS,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"UCVTFWD",argLen:1,asm:arm64.AUCVTFWD,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"SCVTFS",argLen:1,asm:arm64.ASCVTFS,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"SCVTFD",argLen:1,asm:arm64.ASCVTFD,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"UCVTFS",argLen:1,asm:arm64.AUCVTFS,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"UCVTFD",argLen:1,asm:arm64.AUCVTFD,reg:regInfo{inputs:[]inputInfo{{0,670826495},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTZSSW",argLen:1,asm:arm64.AFCVTZSSW,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTZSDW",argLen:1,asm:arm64.AFCVTZSDW,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTZUSW",argLen:1,asm:arm64.AFCVTZUSW,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTZUDW",argLen:1,asm:arm64.AFCVTZUDW,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTZSS",argLen:1,asm:arm64.AFCVTZSS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTZSD",argLen:1,asm:arm64.AFCVTZSD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTZUS",argLen:1,asm:arm64.AFCVTZUS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTZUD",argLen:1,asm:arm64.AFCVTZUD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,670826495},},},}, {name:"FCVTSD",argLen:1,asm:arm64.AFCVTSD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTDS",argLen:1,asm:arm64.AFCVTDS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FRINTAD",argLen:1,asm:arm64.AFRINTAD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FRINTMD",argLen:1,asm:arm64.AFRINTMD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FRINTND",argLen:1,asm:arm64.AFRINTND,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FRINTPD",argLen:1,asm:arm64.AFRINTPD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FRINTZD",argLen:1,asm:arm64.AFRINTZD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"CSEL",auxType:auxCCop,argLen:3,asm:arm64.ACSEL,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CSEL0",auxType:auxCCop,argLen:2,asm:arm64.ACSEL,reg:regInfo{inputs:[]inputInfo{{0,805044223},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CSINC",auxType:auxCCop,argLen:3,asm:arm64.ACSINC,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CSINV",auxType:auxCCop,argLen:3,asm:arm64.ACSINV,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CSNEG",auxType:auxCCop,argLen:3,asm:arm64.ACSNEG,reg:regInfo{inputs:[]inputInfo{{0,670826495},{1,670826495},},outputs:[]outputInfo{{0,670826495},},},}, {name:"CSETM",auxType:auxCCop,argLen:1,asm:arm64.ACSETM,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,clobberFlags:true,call:true,reg:regInfo{clobbers:9223372035512336383,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{1,67108864},{0,1744568319},},clobbers:9223372035512336383,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,670826495},},clobbers:9223372035512336383,},}, {name:"LoweredNilCheck",argLen:2,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,805044223},},},}, {name:"Equal",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"NotEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"LessThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"LessEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"GreaterThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"GreaterEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"LessThanU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"LessEqualU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"GreaterThanU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"GreaterEqualU",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"LessThanF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"LessEqualF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"GreaterThanF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"GreaterEqualF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"NotLessThanF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"NotLessEqualF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"NotGreaterThanF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"NotGreaterEqualF",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"DUFFZERO",auxType:auxInt64,argLen:2,faultOnNilArg0:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1048576},},clobbers:538116096,},}, {name:"LoweredZero",argLen:3,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,65536},{1,670826495},},clobbers:65536,},}, {name:"DUFFCOPY",auxType:auxInt64,argLen:3,faultOnNilArg0:true,faultOnNilArg1:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,2097152},{1,1048576},},clobbers:607322112,},}, {name:"LoweredMove",argLen:4,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,131072},{1,65536},{2,670826495},},clobbers:196608,},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,67108864},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,670826495},},},}, {name:"FlagConstant",auxType:auxFlagConstant,argLen:0,reg:regInfo{},}, {name:"InvertFlags",argLen:1,reg:regInfo{},}, {name:"LDAR",argLen:2,faultOnNilArg0:true,asm:arm64.ALDAR,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LDARB",argLen:2,faultOnNilArg0:true,asm:arm64.ALDARB,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LDARW",argLen:2,faultOnNilArg0:true,asm:arm64.ALDARW,reg:regInfo{inputs:[]inputInfo{{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"STLRB",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:arm64.ASTLRB,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"STLR",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:arm64.ASTLR,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"STLRW",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:arm64.ASTLRW,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},},}, {name:"LoweredAtomicExchange64",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicExchange32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicExchange64Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicExchange32Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAdd64",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAdd32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAdd64Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAdd32Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicCas64",argLen:4,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicCas32",argLen:4,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicCas64Variant",argLen:4,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicCas32Variant",argLen:4,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{2,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAnd8",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,asm:arm64.AAND,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAnd32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,asm:arm64.AAND,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicOr8",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,asm:arm64.AORR,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicOr32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,asm:arm64.AORR,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAnd8Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicAnd32Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicOr8Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredAtomicOr32Variant",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,805044223},{0,9223372038733561855},},outputs:[]outputInfo{{0,670826495},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},clobbers:9223372035244359680,},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,1},{1,2},},},}, {name:"ADD",argLen:2,commutative:true,asm:mips.AADDU,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"ADDconst",auxType:auxInt32,argLen:1,asm:mips.AADDU,reg:regInfo{inputs:[]inputInfo{{0,536870910},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SUB",argLen:2,asm:mips.ASUBU,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SUBconst",auxType:auxInt32,argLen:1,asm:mips.ASUBU,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MUL",argLen:2,commutative:true,asm:mips.AMUL,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},clobbers:105553116266496,outputs:[]outputInfo{{0,335544318},},},}, {name:"MULT",argLen:2,commutative:true,asm:mips.AMUL,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,35184372088832},{1,70368744177664},},},}, {name:"MULTU",argLen:2,commutative:true,asm:mips.AMULU,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,35184372088832},{1,70368744177664},},},}, {name:"DIV",argLen:2,asm:mips.ADIV,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,35184372088832},{1,70368744177664},},},}, {name:"DIVU",argLen:2,asm:mips.ADIVU,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,35184372088832},{1,70368744177664},},},}, {name:"ADDF",argLen:2,commutative:true,asm:mips.AADDF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"ADDD",argLen:2,commutative:true,asm:mips.AADDD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"SUBF",argLen:2,asm:mips.ASUBF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"SUBD",argLen:2,asm:mips.ASUBD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MULF",argLen:2,commutative:true,asm:mips.AMULF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MULD",argLen:2,commutative:true,asm:mips.AMULD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"DIVF",argLen:2,asm:mips.ADIVF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"DIVD",argLen:2,asm:mips.ADIVD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"AND",argLen:2,commutative:true,asm:mips.AAND,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"ANDconst",auxType:auxInt32,argLen:1,asm:mips.AAND,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"OR",argLen:2,commutative:true,asm:mips.AOR,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"ORconst",auxType:auxInt32,argLen:1,asm:mips.AOR,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"XOR",argLen:2,commutative:true,asm:mips.AXOR,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"XORconst",auxType:auxInt32,argLen:1,asm:mips.AXOR,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"NOR",argLen:2,commutative:true,asm:mips.ANOR,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"NORconst",auxType:auxInt32,argLen:1,asm:mips.ANOR,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"NEG",argLen:1,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"NEGF",argLen:1,asm:mips.ANEGF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"NEGD",argLen:1,asm:mips.ANEGD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"SQRTD",argLen:1,asm:mips.ASQRTD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"SQRTF",argLen:1,asm:mips.ASQRTF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"SLL",argLen:2,asm:mips.ASLL,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SLLconst",auxType:auxInt32,argLen:1,asm:mips.ASLL,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SRL",argLen:2,asm:mips.ASRL,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SRLconst",auxType:auxInt32,argLen:1,asm:mips.ASRL,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SRA",argLen:2,asm:mips.ASRA,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SRAconst",auxType:auxInt32,argLen:1,asm:mips.ASRA,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"CLZ",argLen:1,asm:mips.ACLZ,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SGT",argLen:2,asm:mips.ASGT,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SGTconst",auxType:auxInt32,argLen:1,asm:mips.ASGT,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SGTzero",argLen:1,asm:mips.ASGT,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SGTU",argLen:2,asm:mips.ASGTU,reg:regInfo{inputs:[]inputInfo{{0,469762046},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SGTUconst",auxType:auxInt32,argLen:1,asm:mips.ASGTU,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"SGTUzero",argLen:1,asm:mips.ASGTU,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"CMPEQF",argLen:2,asm:mips.ACMPEQF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},},}, {name:"CMPEQD",argLen:2,asm:mips.ACMPEQD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},},}, {name:"CMPGEF",argLen:2,asm:mips.ACMPGEF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},},}, {name:"CMPGED",argLen:2,asm:mips.ACMPGED,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},},}, {name:"CMPGTF",argLen:2,asm:mips.ACMPGTF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},},}, {name:"CMPGTD",argLen:2,asm:mips.ACMPGTD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},{1,35183835217920},},},}, {name:"MOVWconst",auxType:auxInt32,argLen:0,rematerializeable:true,asm:mips.AMOVW,reg:regInfo{outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVFconst",auxType:auxFloat32,argLen:0,rematerializeable:true,asm:mips.AMOVF,reg:regInfo{outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MOVDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:mips.AMOVD,reg:regInfo{outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MOVWaddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,140737555464192},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVBUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVHload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVHUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVFload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVF,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},},}, {name:"MOVHstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},},}, {name:"MOVFstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVF,reg:regInfo{inputs:[]inputInfo{{1,35183835217920},{0,140738025226238},},},}, {name:"MOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,35183835217920},{0,140738025226238},},},}, {name:"MOVBstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},},}, {name:"MOVHstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},},}, {name:"MOVWstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},},}, {name:"MOVBreg",argLen:1,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVBUreg",argLen:1,asm:mips.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVHreg",argLen:1,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVHUreg",argLen:1,asm:mips.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVWreg",argLen:1,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVWnop",argLen:1,resultInArg0:true,reg:regInfo{inputs:[]inputInfo{{0,335544318},},outputs:[]outputInfo{{0,335544318},},},}, {name:"CMOVZ",argLen:3,resultInArg0:true,asm:mips.ACMOVZ,reg:regInfo{inputs:[]inputInfo{{0,335544318},{1,335544318},{2,335544318},},outputs:[]outputInfo{{0,335544318},},},}, {name:"CMOVZzero",argLen:2,resultInArg0:true,asm:mips.ACMOVZ,reg:regInfo{inputs:[]inputInfo{{0,335544318},{1,469762046},},outputs:[]outputInfo{{0,335544318},},},}, {name:"MOVWF",argLen:1,asm:mips.AMOVWF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MOVWD",argLen:1,asm:mips.AMOVWD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"TRUNCFW",argLen:1,asm:mips.ATRUNCFW,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"TRUNCDW",argLen:1,asm:mips.ATRUNCDW,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MOVFD",argLen:1,asm:mips.AMOVFD,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"MOVDF",argLen:1,asm:mips.AMOVDF,reg:regInfo{inputs:[]inputInfo{{0,35183835217920},},outputs:[]outputInfo{{0,35183835217920},},},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,clobberFlags:true,call:true,reg:regInfo{clobbers:140737421246462,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{1,4194304},{0,402653182},},clobbers:140737421246462,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,335544318},},clobbers:140737421246462,},}, {name:"LoweredAtomicLoad8",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredAtomicLoad32",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredAtomicStore8",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},},}, {name:"LoweredAtomicStore32",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},},}, {name:"LoweredAtomicStorezero",argLen:2,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},},}, {name:"LoweredAtomicExchange",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredAtomicAdd",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredAtomicAddconst",auxType:auxInt32,argLen:2,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredAtomicCas",argLen:4,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,469762046},{2,469762046},{0,140738025226238},},outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredAtomicAnd",argLen:3,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,asm:mips.AAND,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},},}, {name:"LoweredAtomicOr",argLen:3,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,asm:mips.AOR,reg:regInfo{inputs:[]inputInfo{{1,469762046},{0,140738025226238},},},}, {name:"LoweredZero",auxType:auxInt32,argLen:3,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,335544318},},clobbers:2,},}, {name:"LoweredMove",auxType:auxInt32,argLen:4,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,2},{2,335544318},},clobbers:6,},}, {name:"LoweredNilCheck",argLen:2,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,469762046},},},}, {name:"FPFlagTrue",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,335544318},},},}, {name:"FPFlagFalse",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,4194304},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,335544318},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,1048576},{1,2097152},},clobbers:140737219919872,},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,8},{1,16},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},},},}, {name:"LoweredPanicExtendA",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,32},{1,8},{2,16},},},}, {name:"LoweredPanicExtendB",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,32},{1,4},{2,8},},},}, {name:"LoweredPanicExtendC",auxType:auxInt64,argLen:4,call:true,reg:regInfo{inputs:[]inputInfo{{0,32},{1,2},{2,4},},},}, {name:"ADDV",argLen:2,commutative:true,asm:mips.AADDVU,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"ADDVconst",auxType:auxInt64,argLen:1,asm:mips.AADDVU,reg:regInfo{inputs:[]inputInfo{{0,268435454},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SUBV",argLen:2,asm:mips.ASUBVU,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SUBVconst",auxType:auxInt64,argLen:1,asm:mips.ASUBVU,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MULV",argLen:2,commutative:true,asm:mips.AMULV,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,1152921504606846976},{1,2305843009213693952},},},}, {name:"MULVU",argLen:2,commutative:true,asm:mips.AMULVU,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,1152921504606846976},{1,2305843009213693952},},},}, {name:"DIVV",argLen:2,asm:mips.ADIVV,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,1152921504606846976},{1,2305843009213693952},},},}, {name:"DIVVU",argLen:2,asm:mips.ADIVVU,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,1152921504606846976},{1,2305843009213693952},},},}, {name:"ADDF",argLen:2,commutative:true,asm:mips.AADDF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"ADDD",argLen:2,commutative:true,asm:mips.AADDD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"SUBF",argLen:2,asm:mips.ASUBF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"SUBD",argLen:2,asm:mips.ASUBD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MULF",argLen:2,commutative:true,asm:mips.AMULF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MULD",argLen:2,commutative:true,asm:mips.AMULD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"DIVF",argLen:2,asm:mips.ADIVF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"DIVD",argLen:2,asm:mips.ADIVD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"AND",argLen:2,commutative:true,asm:mips.AAND,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"ANDconst",auxType:auxInt64,argLen:1,asm:mips.AAND,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"OR",argLen:2,commutative:true,asm:mips.AOR,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"ORconst",auxType:auxInt64,argLen:1,asm:mips.AOR,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"XOR",argLen:2,commutative:true,asm:mips.AXOR,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"XORconst",auxType:auxInt64,argLen:1,asm:mips.AXOR,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"NOR",argLen:2,commutative:true,asm:mips.ANOR,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"NORconst",auxType:auxInt64,argLen:1,asm:mips.ANOR,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"NEGV",argLen:1,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"NEGF",argLen:1,asm:mips.ANEGF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"NEGD",argLen:1,asm:mips.ANEGD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"SQRTD",argLen:1,asm:mips.ASQRTD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"SQRTF",argLen:1,asm:mips.ASQRTF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"SLLV",argLen:2,asm:mips.ASLLV,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SLLVconst",auxType:auxInt64,argLen:1,asm:mips.ASLLV,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SRLV",argLen:2,asm:mips.ASRLV,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SRLVconst",auxType:auxInt64,argLen:1,asm:mips.ASRLV,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SRAV",argLen:2,asm:mips.ASRAV,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SRAVconst",auxType:auxInt64,argLen:1,asm:mips.ASRAV,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SGT",argLen:2,asm:mips.ASGT,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SGTconst",auxType:auxInt64,argLen:1,asm:mips.ASGT,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SGTU",argLen:2,asm:mips.ASGTU,reg:regInfo{inputs:[]inputInfo{{0,234881022},{1,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"SGTUconst",auxType:auxInt64,argLen:1,asm:mips.ASGTU,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"CMPEQF",argLen:2,asm:mips.ACMPEQF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},},}, {name:"CMPEQD",argLen:2,asm:mips.ACMPEQD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},},}, {name:"CMPGEF",argLen:2,asm:mips.ACMPGEF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},},}, {name:"CMPGED",argLen:2,asm:mips.ACMPGED,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},},}, {name:"CMPGTF",argLen:2,asm:mips.ACMPGTF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},},}, {name:"CMPGTD",argLen:2,asm:mips.ACMPGTD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},{1,1152921504338411520},},},}, {name:"MOVVconst",auxType:auxInt64,argLen:0,rematerializeable:true,asm:mips.AMOVV,reg:regInfo{outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVFconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:mips.AMOVF,reg:regInfo{outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:mips.AMOVD,reg:regInfo{outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVVaddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:mips.AMOVV,reg:regInfo{inputs:[]inputInfo{{0,4611686018460942336},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVBUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVHload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVHUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVWUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVWU,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVVload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVV,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVFload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVF,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:mips.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},},}, {name:"MOVHstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},},}, {name:"MOVVstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVV,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},},}, {name:"MOVFstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVF,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},{1,1152921504338411520},},},}, {name:"MOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},{1,1152921504338411520},},},}, {name:"MOVBstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},},}, {name:"MOVHstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},},}, {name:"MOVWstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},},}, {name:"MOVVstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:mips.AMOVV,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},},}, {name:"MOVBreg",argLen:1,asm:mips.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVBUreg",argLen:1,asm:mips.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVHreg",argLen:1,asm:mips.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVHUreg",argLen:1,asm:mips.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVWreg",argLen:1,asm:mips.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVWUreg",argLen:1,asm:mips.AMOVWU,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVVreg",argLen:1,asm:mips.AMOVV,reg:regInfo{inputs:[]inputInfo{{0,234881022},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVVnop",argLen:1,resultInArg0:true,reg:regInfo{inputs:[]inputInfo{{0,167772158},},outputs:[]outputInfo{{0,167772158},},},}, {name:"MOVWF",argLen:1,asm:mips.AMOVWF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVWD",argLen:1,asm:mips.AMOVWD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVVF",argLen:1,asm:mips.AMOVVF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVVD",argLen:1,asm:mips.AMOVVD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"TRUNCFW",argLen:1,asm:mips.ATRUNCFW,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"TRUNCDW",argLen:1,asm:mips.ATRUNCDW,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"TRUNCFV",argLen:1,asm:mips.ATRUNCFV,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"TRUNCDV",argLen:1,asm:mips.ATRUNCDV,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVFD",argLen:1,asm:mips.AMOVFD,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"MOVDF",argLen:1,asm:mips.AMOVDF,reg:regInfo{inputs:[]inputInfo{{0,1152921504338411520},},outputs:[]outputInfo{{0,1152921504338411520},},},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,clobberFlags:true,call:true,reg:regInfo{clobbers:4611686018393833470,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{1,4194304},{0,201326590},},clobbers:4611686018393833470,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,167772158},},clobbers:4611686018393833470,},}, {name:"DUFFZERO",auxType:auxInt64,argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,167772158},},clobbers:134217730,},}, {name:"DUFFCOPY",auxType:auxInt64,argLen:3,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,2},},clobbers:134217734,},}, {name:"LoweredZero",auxType:auxInt64,argLen:3,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,167772158},},clobbers:2,},}, {name:"LoweredMove",auxType:auxInt64,argLen:4,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,2},{2,167772158},},clobbers:6,},}, {name:"LoweredAtomicLoad8",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicLoad32",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicLoad64",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicStore8",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},},}, {name:"LoweredAtomicStore32",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},},}, {name:"LoweredAtomicStore64",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},},}, {name:"LoweredAtomicStorezero32",argLen:2,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},},}, {name:"LoweredAtomicStorezero64",argLen:2,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},},}, {name:"LoweredAtomicExchange32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicExchange64",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicAdd32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicAdd64",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicAddconst32",auxType:auxInt32,argLen:2,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicAddconst64",auxType:auxInt64,argLen:2,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicCas32",argLen:4,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{2,234881022},{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredAtomicCas64",argLen:4,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,234881022},{2,234881022},{0,4611686018695823358},},outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredNilCheck",argLen:2,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,234881022},},},}, {name:"FPFlagTrue",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,167772158},},},}, {name:"FPFlagFalse",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,4194304},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,167772158},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,1048576},{1,2097152},},clobbers:4611686018293170176,},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,8},{1,16},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},},},}, {name:"ADD",argLen:2,commutative:true,asm:ppc64.AADD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ADDconst",auxType:auxInt64,argLen:1,asm:ppc64.AADD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"FADD",argLen:2,commutative:true,asm:ppc64.AFADD,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FADDS",argLen:2,commutative:true,asm:ppc64.AFADDS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"SUB",argLen:2,asm:ppc64.ASUB,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SUBFCconst",auxType:auxInt64,argLen:1,asm:ppc64.ASUBC,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"FSUB",argLen:2,asm:ppc64.AFSUB,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FSUBS",argLen:2,asm:ppc64.AFSUBS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"MULLD",argLen:2,commutative:true,asm:ppc64.AMULLD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MULLW",argLen:2,commutative:true,asm:ppc64.AMULLW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MULLDconst",auxType:auxInt32,argLen:1,asm:ppc64.AMULLD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MULLWconst",auxType:auxInt32,argLen:1,asm:ppc64.AMULLW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MADDLD",argLen:3,asm:ppc64.AMADDLD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MULHD",argLen:2,commutative:true,asm:ppc64.AMULHD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MULHW",argLen:2,commutative:true,asm:ppc64.AMULHW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MULHDU",argLen:2,commutative:true,asm:ppc64.AMULHDU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MULHWU",argLen:2,commutative:true,asm:ppc64.AMULHWU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredMuluhilo",argLen:2,resultNotInArgs:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},{1,1073733624},},},}, {name:"FMUL",argLen:2,commutative:true,asm:ppc64.AFMUL,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMULS",argLen:2,commutative:true,asm:ppc64.AFMULS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMADD",argLen:3,asm:ppc64.AFMADD,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},{2,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMADDS",argLen:3,asm:ppc64.AFMADDS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},{2,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMSUB",argLen:3,asm:ppc64.AFMSUB,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},{2,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMSUBS",argLen:3,asm:ppc64.AFMSUBS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},{2,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"SRAD",argLen:2,asm:ppc64.ASRAD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SRAW",argLen:2,asm:ppc64.ASRAW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SRD",argLen:2,asm:ppc64.ASRD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SRW",argLen:2,asm:ppc64.ASRW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SLD",argLen:2,asm:ppc64.ASLD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SLW",argLen:2,asm:ppc64.ASLW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ROTL",argLen:2,asm:ppc64.AROTL,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ROTLW",argLen:2,asm:ppc64.AROTLW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"RLDICL",auxType:auxInt32,argLen:1,asm:ppc64.ARLDICL,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"CLRLSLWI",auxType:auxInt32,argLen:1,asm:ppc64.ACLRLSLWI,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"CLRLSLDI",auxType:auxInt32,argLen:1,asm:ppc64.ACLRLSLDI,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAdd64Carry",argLen:3,resultNotInArgs:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},outputs:[]outputInfo{{0,1073733624},{1,1073733624},},},}, {name:"SRADconst",auxType:auxInt64,argLen:1,asm:ppc64.ASRAD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SRAWconst",auxType:auxInt64,argLen:1,asm:ppc64.ASRAW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SRDconst",auxType:auxInt64,argLen:1,asm:ppc64.ASRD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SRWconst",auxType:auxInt64,argLen:1,asm:ppc64.ASRW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SLDconst",auxType:auxInt64,argLen:1,asm:ppc64.ASLD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"SLWconst",auxType:auxInt64,argLen:1,asm:ppc64.ASLW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ROTLconst",auxType:auxInt64,argLen:1,asm:ppc64.AROTL,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ROTLWconst",auxType:auxInt64,argLen:1,asm:ppc64.AROTLW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"EXTSWSLconst",auxType:auxInt64,argLen:1,asm:ppc64.AEXTSWSLI,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"RLWINM",auxType:auxInt64,argLen:1,asm:ppc64.ARLWNM,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"RLWNM",auxType:auxInt64,argLen:2,asm:ppc64.ARLWNM,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"RLWMI",auxType:auxInt64,argLen:2,resultInArg0:true,asm:ppc64.ARLWMI,reg:regInfo{inputs:[]inputInfo{{0,1073733624},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"CNTLZD",argLen:1,clobberFlags:true,asm:ppc64.ACNTLZD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"CNTLZW",argLen:1,clobberFlags:true,asm:ppc64.ACNTLZW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"CNTTZD",argLen:1,asm:ppc64.ACNTTZD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"CNTTZW",argLen:1,asm:ppc64.ACNTTZW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"POPCNTD",argLen:1,asm:ppc64.APOPCNTD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"POPCNTW",argLen:1,asm:ppc64.APOPCNTW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"POPCNTB",argLen:1,asm:ppc64.APOPCNTB,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"FDIV",argLen:2,asm:ppc64.AFDIV,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FDIVS",argLen:2,asm:ppc64.AFDIVS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"DIVD",argLen:2,asm:ppc64.ADIVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"DIVW",argLen:2,asm:ppc64.ADIVW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"DIVDU",argLen:2,asm:ppc64.ADIVDU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"DIVWU",argLen:2,asm:ppc64.ADIVWU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MODUD",argLen:2,asm:ppc64.AMODUD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MODSD",argLen:2,asm:ppc64.AMODSD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MODUW",argLen:2,asm:ppc64.AMODUW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MODSW",argLen:2,asm:ppc64.AMODSW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"FCTIDZ",argLen:1,asm:ppc64.AFCTIDZ,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FCTIWZ",argLen:1,asm:ppc64.AFCTIWZ,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FCFID",argLen:1,asm:ppc64.AFCFID,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FCFIDS",argLen:1,asm:ppc64.AFCFIDS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FRSP",argLen:1,asm:ppc64.AFRSP,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"MFVSRD",argLen:1,asm:ppc64.AMFVSRD,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MTVSRD",argLen:1,asm:ppc64.AMTVSRD,reg:regInfo{inputs:[]inputInfo{{0,1073733624},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"AND",argLen:2,commutative:true,asm:ppc64.AAND,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ANDN",argLen:2,asm:ppc64.AANDN,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ANDCC",argLen:2,commutative:true,asm:ppc64.AANDCC,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"OR",argLen:2,commutative:true,asm:ppc64.AOR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ORN",argLen:2,asm:ppc64.AORN,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ORCC",argLen:2,commutative:true,asm:ppc64.AORCC,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"NOR",argLen:2,commutative:true,asm:ppc64.ANOR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"XOR",argLen:2,commutative:true,asm:ppc64.AXOR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"XORCC",argLen:2,commutative:true,asm:ppc64.AXORCC,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"EQV",argLen:2,commutative:true,asm:ppc64.AEQV,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"NEG",argLen:1,asm:ppc64.ANEG,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"FNEG",argLen:1,asm:ppc64.AFNEG,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FSQRT",argLen:1,asm:ppc64.AFSQRT,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FSQRTS",argLen:1,asm:ppc64.AFSQRTS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FFLOOR",argLen:1,asm:ppc64.AFRIM,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FCEIL",argLen:1,asm:ppc64.AFRIP,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FTRUNC",argLen:1,asm:ppc64.AFRIZ,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FROUND",argLen:1,asm:ppc64.AFRIN,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FABS",argLen:1,asm:ppc64.AFABS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FNABS",argLen:1,asm:ppc64.AFNABS,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FCPSGN",argLen:2,asm:ppc64.AFCPSGN,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"ORconst",auxType:auxInt64,argLen:1,asm:ppc64.AOR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"XORconst",auxType:auxInt64,argLen:1,asm:ppc64.AXOR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ANDconst",auxType:auxInt64,argLen:1,clobberFlags:true,asm:ppc64.AANDCC,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ANDCCconst",auxType:auxInt64,argLen:1,asm:ppc64.AANDCC,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"MOVBreg",argLen:1,asm:ppc64.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVBZreg",argLen:1,asm:ppc64.AMOVBZ,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHreg",argLen:1,asm:ppc64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHZreg",argLen:1,asm:ppc64.AMOVHZ,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWreg",argLen:1,asm:ppc64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWZreg",argLen:1,asm:ppc64.AMOVWZ,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVBZload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVBZ,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHZload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVHZ,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWZload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVWZ,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVDBRload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWBRload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHBRload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVBZloadidx",argLen:3,asm:ppc64.AMOVBZ,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHloadidx",argLen:3,asm:ppc64.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHZloadidx",argLen:3,asm:ppc64.AMOVHZ,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWloadidx",argLen:3,asm:ppc64.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWZloadidx",argLen:3,asm:ppc64.AMOVWZ,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVDloadidx",argLen:3,asm:ppc64.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVHBRloadidx",argLen:3,asm:ppc64.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVWBRloadidx",argLen:3,asm:ppc64.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVDBRloadidx",argLen:3,asm:ppc64.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"FMOVDloadidx",argLen:3,asm:ppc64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMOVSloadidx",argLen:3,asm:ppc64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"MOVDBRstore",auxType:auxSym,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"MOVWBRstore",auxType:auxSym,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"MOVHBRstore",auxType:auxSym,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"FMOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMOVSload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:ppc64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"MOVHstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"MOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"FMOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{1,576460743713488896},{0,1073733630},},},}, {name:"FMOVSstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{1,576460743713488896},{0,1073733630},},},}, {name:"MOVBstoreidx",argLen:4,asm:ppc64.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},},}, {name:"MOVHstoreidx",argLen:4,asm:ppc64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},},}, {name:"MOVWstoreidx",argLen:4,asm:ppc64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},},}, {name:"MOVDstoreidx",argLen:4,asm:ppc64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},},}, {name:"FMOVDstoreidx",argLen:4,asm:ppc64.AFMOVD,reg:regInfo{inputs:[]inputInfo{{2,576460743713488896},{0,1073733630},{1,1073733630},},},}, {name:"FMOVSstoreidx",argLen:4,asm:ppc64.AFMOVS,reg:regInfo{inputs:[]inputInfo{{2,576460743713488896},{0,1073733630},{1,1073733630},},},}, {name:"MOVHBRstoreidx",argLen:4,asm:ppc64.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},},}, {name:"MOVWBRstoreidx",argLen:4,asm:ppc64.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},},}, {name:"MOVDBRstoreidx",argLen:4,asm:ppc64.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},{2,1073733630},},},}, {name:"MOVBstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"MOVHstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"MOVWstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"MOVDstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:ppc64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"MOVDaddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,asm:ppc64.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"MOVDconst",auxType:auxInt64,argLen:0,rematerializeable:true,asm:ppc64.AMOVD,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"FMOVDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:ppc64.AFMOVD,reg:regInfo{outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FMOVSconst",auxType:auxFloat32,argLen:0,rematerializeable:true,asm:ppc64.AFMOVS,reg:regInfo{outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"FCMPU",argLen:2,asm:ppc64.AFCMPU,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},{1,576460743713488896},},},}, {name:"CMP",argLen:2,asm:ppc64.ACMP,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"CMPU",argLen:2,asm:ppc64.ACMPU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"CMPW",argLen:2,asm:ppc64.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"CMPWU",argLen:2,asm:ppc64.ACMPWU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"CMPconst",auxType:auxInt64,argLen:1,asm:ppc64.ACMP,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"CMPUconst",auxType:auxInt64,argLen:1,asm:ppc64.ACMPU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"CMPWconst",auxType:auxInt32,argLen:1,asm:ppc64.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"CMPWUconst",auxType:auxInt32,argLen:1,asm:ppc64.ACMPWU,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},},}, {name:"ISEL",auxType:auxInt32,argLen:3,asm:ppc64.AISEL,reg:regInfo{inputs:[]inputInfo{{0,1073733624},{1,1073733624},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"ISELB",auxType:auxInt32,argLen:2,asm:ppc64.AISEL,reg:regInfo{inputs:[]inputInfo{{0,1073733624},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"Equal",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"NotEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"LessThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"FLessThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"LessEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"FLessEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"GreaterThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"FGreaterThan",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"GreaterEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"FGreaterEqual",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,2048},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredNilCheck",argLen:2,clobberFlags:true,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},clobbers:2147483648,},}, {name:"LoweredRound32F",argLen:1,resultInArg0:true,zeroWidth:true,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"LoweredRound64F",argLen:1,resultInArg0:true,zeroWidth:true,reg:regInfo{inputs:[]inputInfo{{0,576460743713488896},},outputs:[]outputInfo{{0,576460743713488896},},},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,clobberFlags:true,call:true,reg:regInfo{clobbers:576460745860964344,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,4096},{1,2048},},clobbers:576460745860964344,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,4096},},clobbers:576460745860964344,},}, {name:"LoweredZero",auxType:auxInt64,argLen:2,clobberFlags:true,faultOnNilArg0:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1048576},},clobbers:1048576,},}, {name:"LoweredZeroShort",auxType:auxInt64,argLen:2,faultOnNilArg0:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1073733624},},},}, {name:"LoweredQuadZeroShort",auxType:auxInt64,argLen:2,faultOnNilArg0:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1073733624},},},}, {name:"LoweredQuadZero",auxType:auxInt64,argLen:2,clobberFlags:true,faultOnNilArg0:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1048576},},clobbers:1048576,},}, {name:"LoweredMove",auxType:auxInt64,argLen:3,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1048576},{1,2097152},},clobbers:3145728,},}, {name:"LoweredMoveShort",auxType:auxInt64,argLen:3,faultOnNilArg0:true,faultOnNilArg1:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1073733624},{1,1073733624},},},}, {name:"LoweredQuadMove",auxType:auxInt64,argLen:3,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1048576},{1,2097152},},clobbers:3145728,},}, {name:"LoweredQuadMoveShort",auxType:auxInt64,argLen:3,faultOnNilArg0:true,faultOnNilArg1:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{0,1073733624},{1,1073733624},},},}, {name:"LoweredAtomicStore8",auxType:auxInt64,argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"LoweredAtomicStore32",auxType:auxInt64,argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"LoweredAtomicStore64",auxType:auxInt64,argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"LoweredAtomicLoad8",auxType:auxInt64,argLen:2,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicLoad32",auxType:auxInt64,argLen:2,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicLoad64",auxType:auxInt64,argLen:2,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicLoadPtr",auxType:auxInt64,argLen:2,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicAdd32",argLen:3,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicAdd64",argLen:3,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicExchange32",argLen:3,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicExchange64",argLen:3,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicCas64",auxType:auxInt64,argLen:4,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{2,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicCas32",auxType:auxInt64,argLen:4,resultNotInArgs:true,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073733624},{2,1073733624},{0,1073733630},},outputs:[]outputInfo{{0,1073733624},},},}, {name:"LoweredAtomicAnd8",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:ppc64.AAND,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"LoweredAtomicAnd32",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:ppc64.AAND,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"LoweredAtomicOr8",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:ppc64.AOR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"LoweredAtomicOr32",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:ppc64.AOR,reg:regInfo{inputs:[]inputInfo{{0,1073733630},{1,1073733630},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,1048576},{1,2097152},},clobbers:576460746931312640,},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,32},{1,64},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,16},{1,32},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,8},{1,16},},},}, {name:"InvertFlags",argLen:1,reg:regInfo{},}, {name:"FlagEQ",argLen:0,reg:regInfo{},}, {name:"FlagLT",argLen:0,reg:regInfo{},}, {name:"FlagGT",argLen:0,reg:regInfo{},}, {name:"ADD",argLen:2,commutative:true,asm:riscv.AADD,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"ADDI",auxType:auxInt64,argLen:1,asm:riscv.AADDI,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"ADDIW",auxType:auxInt64,argLen:1,asm:riscv.AADDIW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"NEG",argLen:1,asm:riscv.ANEG,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"NEGW",argLen:1,asm:riscv.ANEGW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SUB",argLen:2,asm:riscv.ASUB,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SUBW",argLen:2,asm:riscv.ASUBW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MUL",argLen:2,commutative:true,asm:riscv.AMUL,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MULW",argLen:2,commutative:true,asm:riscv.AMULW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MULH",argLen:2,commutative:true,asm:riscv.AMULH,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MULHU",argLen:2,commutative:true,asm:riscv.AMULHU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"DIV",argLen:2,asm:riscv.ADIV,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"DIVU",argLen:2,asm:riscv.ADIVU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"DIVW",argLen:2,asm:riscv.ADIVW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"DIVUW",argLen:2,asm:riscv.ADIVUW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"REM",argLen:2,asm:riscv.AREM,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"REMU",argLen:2,asm:riscv.AREMU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"REMW",argLen:2,asm:riscv.AREMW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"REMUW",argLen:2,asm:riscv.AREMUW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVaddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymRdWr,asm:riscv.AMOV,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVDconst",auxType:auxInt64,argLen:0,rematerializeable:true,asm:riscv.AMOV,reg:regInfo{outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVHload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOV,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVBUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVHUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVWUload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVWU,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,1006632950},{0,9223372037861408758},},},}, {name:"MOVHstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,1006632950},{0,9223372037861408758},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,1006632950},{0,9223372037861408758},},},}, {name:"MOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOV,reg:regInfo{inputs:[]inputInfo{{1,1006632950},{0,9223372037861408758},},},}, {name:"MOVBstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},},}, {name:"MOVHstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},},}, {name:"MOVWstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},},}, {name:"MOVDstorezero",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOV,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},},}, {name:"MOVBreg",argLen:1,asm:riscv.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVHreg",argLen:1,asm:riscv.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVWreg",argLen:1,asm:riscv.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVDreg",argLen:1,asm:riscv.AMOV,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVBUreg",argLen:1,asm:riscv.AMOVBU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVHUreg",argLen:1,asm:riscv.AMOVHU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVWUreg",argLen:1,asm:riscv.AMOVWU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVDnop",argLen:1,resultInArg0:true,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SLL",argLen:2,asm:riscv.ASLL,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SRA",argLen:2,asm:riscv.ASRA,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SRL",argLen:2,asm:riscv.ASRL,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SLLI",auxType:auxInt64,argLen:1,asm:riscv.ASLLI,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SRAI",auxType:auxInt64,argLen:1,asm:riscv.ASRAI,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SRLI",auxType:auxInt64,argLen:1,asm:riscv.ASRLI,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"XOR",argLen:2,commutative:true,asm:riscv.AXOR,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"XORI",auxType:auxInt64,argLen:1,asm:riscv.AXORI,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"OR",argLen:2,commutative:true,asm:riscv.AOR,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"ORI",auxType:auxInt64,argLen:1,asm:riscv.AORI,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"AND",argLen:2,commutative:true,asm:riscv.AAND,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"ANDI",auxType:auxInt64,argLen:1,asm:riscv.AANDI,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"NOT",argLen:1,asm:riscv.ANOT,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SEQZ",argLen:1,asm:riscv.ASEQZ,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SNEZ",argLen:1,asm:riscv.ASNEZ,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SLT",argLen:2,asm:riscv.ASLT,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SLTI",auxType:auxInt64,argLen:1,asm:riscv.ASLTI,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SLTU",argLen:2,asm:riscv.ASLTU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},{1,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"SLTIU",auxType:auxInt64,argLen:1,asm:riscv.ASLTIU,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"MOVconvert",argLen:2,asm:riscv.AMOV,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,call:true,reg:regInfo{clobbers:9223372035781033972,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{1,524288},{0,1006632950},},clobbers:9223372035781033972,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,call:true,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},clobbers:9223372035781033972,},}, {name:"DUFFZERO",auxType:auxInt64,argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,512},},clobbers:512,},}, {name:"DUFFCOPY",auxType:auxInt64,argLen:3,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,1024},{1,512},},clobbers:1536,},}, {name:"LoweredZero",auxType:auxInt64,argLen:3,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,16},{1,1006632948},},clobbers:16,},}, {name:"LoweredMove",auxType:auxInt64,argLen:4,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,16},{1,32},{2,1006632884},},clobbers:112,},}, {name:"LoweredAtomicLoad8",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicLoad32",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicLoad64",argLen:2,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicStore8",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1006632950},{0,9223372037861408758},},},}, {name:"LoweredAtomicStore32",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1006632950},{0,9223372037861408758},},},}, {name:"LoweredAtomicStore64",argLen:3,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1006632950},{0,9223372037861408758},},},}, {name:"LoweredAtomicExchange32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{0,9223372037928517622},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicExchange64",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{0,9223372037928517622},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicAdd32",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{0,9223372037928517622},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicAdd64",argLen:3,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{0,9223372037928517622},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicCas32",argLen:4,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{2,1073741812},{0,9223372037928517622},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicCas64",argLen:4,resultNotInArgs:true,faultOnNilArg0:true,hasSideEffects:true,unsafePoint:true,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{2,1073741812},{0,9223372037928517622},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredAtomicAnd32",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:riscv.AAMOANDW,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{0,9223372037928517622},},},}, {name:"LoweredAtomicOr32",argLen:3,faultOnNilArg0:true,hasSideEffects:true,asm:riscv.AAMOORW,reg:regInfo{inputs:[]inputInfo{{1,1073741812},{0,9223372037928517622},},},}, {name:"LoweredNilCheck",argLen:2,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,1006632950},},},}, {name:"LoweredGetClosurePtr",argLen:0,reg:regInfo{outputs:[]outputInfo{{0,524288},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,1006632948},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,16},{1,32},},clobbers:9223372034707292160,},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,64},{1,134217728},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,32},{1,64},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,16},{1,32},},},}, {name:"FADDS",argLen:2,commutative:true,asm:riscv.AFADDS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSUBS",argLen:2,asm:riscv.AFSUBS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMULS",argLen:2,commutative:true,asm:riscv.AFMULS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FDIVS",argLen:2,asm:riscv.AFDIVS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSQRTS",argLen:1,asm:riscv.AFSQRTS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNEGS",argLen:1,asm:riscv.AFNEGS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMVSX",argLen:1,asm:riscv.AFMVSX,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTSW",argLen:1,asm:riscv.AFCVTSW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTSL",argLen:1,asm:riscv.AFCVTSL,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTWS",argLen:1,asm:riscv.AFCVTWS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FCVTLS",argLen:1,asm:riscv.AFCVTLS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FMOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVF,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVF,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},{1,9223372034707292160},},},}, {name:"FEQS",argLen:2,commutative:true,asm:riscv.AFEQS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FNES",argLen:2,commutative:true,asm:riscv.AFNES,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FLTS",argLen:2,asm:riscv.AFLTS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FLES",argLen:2,asm:riscv.AFLES,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FADDD",argLen:2,commutative:true,asm:riscv.AFADDD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSUBD",argLen:2,asm:riscv.AFSUBD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMULD",argLen:2,commutative:true,asm:riscv.AFMULD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FDIVD",argLen:2,asm:riscv.AFDIVD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FSQRTD",argLen:1,asm:riscv.AFSQRTD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FNEGD",argLen:1,asm:riscv.AFNEGD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMVDX",argLen:1,asm:riscv.AFMVDX,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTDW",argLen:1,asm:riscv.AFCVTDW,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTDL",argLen:1,asm:riscv.AFCVTDL,reg:regInfo{inputs:[]inputInfo{{0,1006632948},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTWD",argLen:1,asm:riscv.AFCVTWD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FCVTLD",argLen:1,asm:riscv.AFCVTLD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FCVTDS",argLen:1,asm:riscv.AFCVTDS,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FCVTSD",argLen:1,asm:riscv.AFCVTSD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:riscv.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},},outputs:[]outputInfo{{0,9223372034707292160},},},}, {name:"FMOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:riscv.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,9223372037861408758},{1,9223372034707292160},},},}, {name:"FEQD",argLen:2,commutative:true,asm:riscv.AFEQD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FNED",argLen:2,commutative:true,asm:riscv.AFNED,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FLTD",argLen:2,asm:riscv.AFLTD,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FLED",argLen:2,asm:riscv.AFLED,reg:regInfo{inputs:[]inputInfo{{0,9223372034707292160},{1,9223372034707292160},},outputs:[]outputInfo{{0,1006632948},},},}, {name:"FADDS",argLen:2,commutative:true,resultInArg0:true,asm:s390x.AFADDS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FADD",argLen:2,commutative:true,resultInArg0:true,asm:s390x.AFADD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FSUBS",argLen:2,resultInArg0:true,asm:s390x.AFSUBS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FSUB",argLen:2,resultInArg0:true,asm:s390x.AFSUB,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMULS",argLen:2,commutative:true,resultInArg0:true,asm:s390x.AFMULS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMUL",argLen:2,commutative:true,resultInArg0:true,asm:s390x.AFMUL,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FDIVS",argLen:2,resultInArg0:true,asm:s390x.AFDIVS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FDIV",argLen:2,resultInArg0:true,asm:s390x.AFDIV,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FNEGS",argLen:1,clobberFlags:true,asm:s390x.AFNEGS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FNEG",argLen:1,clobberFlags:true,asm:s390x.AFNEG,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMADDS",argLen:3,resultInArg0:true,asm:s390x.AFMADDS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMADD",argLen:3,resultInArg0:true,asm:s390x.AFMADD,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMSUBS",argLen:3,resultInArg0:true,asm:s390x.AFMSUBS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMSUB",argLen:3,resultInArg0:true,asm:s390x.AFMSUB,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},{2,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LPDFR",argLen:1,asm:s390x.ALPDFR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LNDFR",argLen:1,asm:s390x.ALNDFR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CPSDR",argLen:2,asm:s390x.ACPSDR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FIDBR",auxType:auxInt8,argLen:1,asm:s390x.AFIDBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMOVSload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMOVSconst",auxType:auxFloat32,argLen:0,rematerializeable:true,asm:s390x.AFMOVS,reg:regInfo{outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMOVDconst",auxType:auxFloat64,argLen:0,rematerializeable:true,asm:s390x.AFMOVD,reg:regInfo{outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMOVSloadidx",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:s390x.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMOVDloadidx",auxType:auxSymOff,argLen:3,symEffect:SymRead,asm:s390x.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FMOVSstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,4294901760},},},}, {name:"FMOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,4294901760},},},}, {name:"FMOVSstoreidx",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:s390x.AFMOVS,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,4294901760},},},}, {name:"FMOVDstoreidx",auxType:auxSymOff,argLen:4,symEffect:SymWrite,asm:s390x.AFMOVD,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,4294901760},},},}, {name:"ADD",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AADD,reg:regInfo{inputs:[]inputInfo{{1,23551},{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDW",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AADDW,reg:regInfo{inputs:[]inputInfo{{1,23551},{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:s390x.AADD,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDWconst",auxType:auxInt32,argLen:1,clobberFlags:true,asm:s390x.AADDW,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AADD,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDWload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AADDW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUB",argLen:2,clobberFlags:true,asm:s390x.ASUB,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUBW",argLen:2,clobberFlags:true,asm:s390x.ASUBW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUBconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.ASUB,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUBWconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.ASUBW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUBload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.ASUB,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUBWload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.ASUBW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"MULLD",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:s390x.AMULLD,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MULLW",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:s390x.AMULLW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MULLDconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AMULLD,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MULLWconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AMULLW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MULLDload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AMULLD,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"MULLWload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AMULLW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"MULHD",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:s390x.AMULHD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"MULHDU",argLen:2,commutative:true,resultInArg0:true,clobberFlags:true,asm:s390x.AMULHDU,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"DIVD",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.ADIVD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"DIVW",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.ADIVW,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"DIVDU",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.ADIVDU,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"DIVWU",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.ADIVWU,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"MODD",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.AMODD,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"MODW",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.AMODW,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"MODDU",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.AMODDU,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"MODWU",argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.AMODWU,reg:regInfo{inputs:[]inputInfo{{0,21503},{1,21503},},clobbers:2048,outputs:[]outputInfo{{0,21503},},},}, {name:"AND",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AAND,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ANDW",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AANDW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ANDconst",auxType:auxInt64,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AAND,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ANDWconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AANDW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ANDload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AAND,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"ANDWload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AANDW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"OR",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AOR,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ORW",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AORW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ORconst",auxType:auxInt64,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AOR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ORWconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AORW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ORload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AOR,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"ORWload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AORW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"XOR",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AXOR,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"XORW",argLen:2,commutative:true,clobberFlags:true,asm:s390x.AXORW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"XORconst",auxType:auxInt64,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AXOR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"XORWconst",auxType:auxInt32,argLen:1,resultInArg0:true,clobberFlags:true,asm:s390x.AXORW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"XORload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AXOR,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"XORWload",auxType:auxSymOff,argLen:3,resultInArg0:true,clobberFlags:true,faultOnNilArg1:true,symEffect:SymRead,asm:s390x.AXORW,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDC",argLen:2,commutative:true,asm:s390x.AADDC,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDCconst",auxType:auxInt16,argLen:1,asm:s390x.AADDC,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"ADDE",argLen:3,commutative:true,resultInArg0:true,asm:s390x.AADDE,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUBC",argLen:2,asm:s390x.ASUBC,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SUBE",argLen:3,resultInArg0:true,asm:s390x.ASUBE,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"CMP",argLen:2,asm:s390x.ACMP,reg:regInfo{inputs:[]inputInfo{{0,56319},{1,56319},},},}, {name:"CMPW",argLen:2,asm:s390x.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,56319},{1,56319},},},}, {name:"CMPU",argLen:2,asm:s390x.ACMPU,reg:regInfo{inputs:[]inputInfo{{0,56319},{1,56319},},},}, {name:"CMPWU",argLen:2,asm:s390x.ACMPWU,reg:regInfo{inputs:[]inputInfo{{0,56319},{1,56319},},},}, {name:"CMPconst",auxType:auxInt32,argLen:1,asm:s390x.ACMP,reg:regInfo{inputs:[]inputInfo{{0,56319},},},}, {name:"CMPWconst",auxType:auxInt32,argLen:1,asm:s390x.ACMPW,reg:regInfo{inputs:[]inputInfo{{0,56319},},},}, {name:"CMPUconst",auxType:auxInt32,argLen:1,asm:s390x.ACMPU,reg:regInfo{inputs:[]inputInfo{{0,56319},},},}, {name:"CMPWUconst",auxType:auxInt32,argLen:1,asm:s390x.ACMPWU,reg:regInfo{inputs:[]inputInfo{{0,56319},},},}, {name:"FCMPS",argLen:2,asm:s390x.ACEBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},},}, {name:"FCMP",argLen:2,asm:s390x.AFCMPU,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},},}, {name:"LTDBR",argLen:1,asm:s390x.ALTDBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},},}, {name:"LTEBR",argLen:1,asm:s390x.ALTEBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},},}, {name:"SLD",argLen:2,asm:s390x.ASLD,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SLW",argLen:2,asm:s390x.ASLW,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SLDconst",auxType:auxUInt8,argLen:1,asm:s390x.ASLD,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SLWconst",auxType:auxUInt8,argLen:1,asm:s390x.ASLW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRD",argLen:2,asm:s390x.ASRD,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRW",argLen:2,asm:s390x.ASRW,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRDconst",auxType:auxUInt8,argLen:1,asm:s390x.ASRD,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRWconst",auxType:auxUInt8,argLen:1,asm:s390x.ASRW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRAD",argLen:2,clobberFlags:true,asm:s390x.ASRAD,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRAW",argLen:2,clobberFlags:true,asm:s390x.ASRAW,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRADconst",auxType:auxUInt8,argLen:1,clobberFlags:true,asm:s390x.ASRAD,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"SRAWconst",auxType:auxUInt8,argLen:1,clobberFlags:true,asm:s390x.ASRAW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"RLLG",argLen:2,asm:s390x.ARLLG,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"RLL",argLen:2,asm:s390x.ARLL,reg:regInfo{inputs:[]inputInfo{{1,23550},{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"RLLconst",auxType:auxUInt8,argLen:1,asm:s390x.ARLL,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"RXSBG",auxType:auxS390XRotateParams,argLen:2,resultInArg0:true,clobberFlags:true,asm:s390x.ARXSBG,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"RISBGZ",auxType:auxS390XRotateParams,argLen:1,clobberFlags:true,asm:s390x.ARISBGZ,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"NEG",argLen:1,clobberFlags:true,asm:s390x.ANEG,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"NEGW",argLen:1,clobberFlags:true,asm:s390x.ANEGW,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"NOT",argLen:1,resultInArg0:true,clobberFlags:true,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"NOTW",argLen:1,resultInArg0:true,clobberFlags:true,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"FSQRT",argLen:1,asm:s390x.AFSQRT,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"FSQRTS",argLen:1,asm:s390x.AFSQRTS,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LOCGR",auxType:auxS390XCCMask,argLen:3,resultInArg0:true,asm:s390x.ALOCGR,reg:regInfo{inputs:[]inputInfo{{0,23551},{1,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBreg",argLen:1,asm:s390x.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBZreg",argLen:1,asm:s390x.AMOVBZ,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHreg",argLen:1,asm:s390x.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHZreg",argLen:1,asm:s390x.AMOVHZ,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWreg",argLen:1,asm:s390x.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWZreg",argLen:1,asm:s390x.AMOVWZ,reg:regInfo{inputs:[]inputInfo{{0,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDconst",auxType:auxInt64,argLen:0,rematerializeable:true,asm:s390x.AMOVD,reg:regInfo{outputs:[]outputInfo{{0,23551},},},}, {name:"LDGR",argLen:1,asm:s390x.ALDGR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LGDR",argLen:1,asm:s390x.ALGDR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CFDBRA",argLen:1,clobberFlags:true,asm:s390x.ACFDBRA,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CGDBRA",argLen:1,clobberFlags:true,asm:s390x.ACGDBRA,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CFEBRA",argLen:1,clobberFlags:true,asm:s390x.ACFEBRA,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CGEBRA",argLen:1,clobberFlags:true,asm:s390x.ACGEBRA,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CEFBRA",argLen:1,clobberFlags:true,asm:s390x.ACEFBRA,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CDFBRA",argLen:1,clobberFlags:true,asm:s390x.ACDFBRA,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CEGBRA",argLen:1,clobberFlags:true,asm:s390x.ACEGBRA,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CDGBRA",argLen:1,clobberFlags:true,asm:s390x.ACDGBRA,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CLFEBR",argLen:1,clobberFlags:true,asm:s390x.ACLFEBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CLFDBR",argLen:1,clobberFlags:true,asm:s390x.ACLFDBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CLGEBR",argLen:1,clobberFlags:true,asm:s390x.ACLGEBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CLGDBR",argLen:1,clobberFlags:true,asm:s390x.ACLGDBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,23551},},},}, {name:"CELFBR",argLen:1,clobberFlags:true,asm:s390x.ACELFBR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CDLFBR",argLen:1,clobberFlags:true,asm:s390x.ACDLFBR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CELGBR",argLen:1,clobberFlags:true,asm:s390x.ACELGBR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"CDLGBR",argLen:1,clobberFlags:true,asm:s390x.ACDLGBR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LEDBR",argLen:1,asm:s390x.ALEDBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LDEBR",argLen:1,asm:s390x.ALDEBR,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"MOVDaddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymRead,reg:regInfo{inputs:[]inputInfo{{0,4295000064},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDaddridx",auxType:auxSymOff,argLen:2,symEffect:SymRead,reg:regInfo{inputs:[]inputInfo{{0,4295000064},{1,56318},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBZload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVBZ,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHZload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVHZ,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWZload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVWZ,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWBR",argLen:1,asm:s390x.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDBR",argLen:1,asm:s390x.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHBRload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWBRload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDBRload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"MOVHstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"MOVWstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"MOVDstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"MOVHBRstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56319},},},}, {name:"MOVWBRstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56319},},},}, {name:"MOVDBRstore",auxType:auxSymOff,argLen:3,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56319},},},}, {name:"MVC",auxType:auxSymValAndOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,symEffect:SymNone,asm:s390x.AMVC,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},},},}, {name:"MOVBZloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVBZ,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVB,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHZloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVHZ,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVH,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWZloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVWZ,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVW,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVD,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVHBRloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWBRloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDBRloadidx",auxType:auxSymOff,argLen:3,commutative:true,symEffect:SymRead,asm:s390x.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{1,56318},{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBstoreidx",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:s390x.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,56319},},},}, {name:"MOVHstoreidx",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:s390x.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,56319},},},}, {name:"MOVWstoreidx",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:s390x.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,56319},},},}, {name:"MOVDstoreidx",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:s390x.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,56319},},},}, {name:"MOVHBRstoreidx",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:s390x.AMOVHBR,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,56319},},},}, {name:"MOVWBRstoreidx",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:s390x.AMOVWBR,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,56319},},},}, {name:"MOVDBRstoreidx",auxType:auxSymOff,argLen:4,commutative:true,symEffect:SymWrite,asm:s390x.AMOVDBR,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},{2,56319},},},}, {name:"MOVBstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},},}, {name:"MOVHstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVH,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},},}, {name:"MOVWstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},},}, {name:"MOVDstoreconst",auxType:auxSymValAndOff,argLen:2,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},},}, {name:"CLEAR",auxType:auxSymValAndOff,argLen:2,clobberFlags:true,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.ACLEAR,reg:regInfo{inputs:[]inputInfo{{0,23550},},},}, {name:"CALLstatic",auxType:auxCallOff,argLen:1,clobberFlags:true,call:true,reg:regInfo{clobbers:4294933503,},}, {name:"CALLclosure",auxType:auxCallOff,argLen:3,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{1,4096},{0,56318},},clobbers:4294933503,},}, {name:"CALLinter",auxType:auxCallOff,argLen:2,clobberFlags:true,call:true,reg:regInfo{inputs:[]inputInfo{{0,23550},},clobbers:4294933503,},}, {name:"InvertFlags",argLen:1,reg:regInfo{},}, {name:"LoweredGetG",argLen:1,reg:regInfo{outputs:[]outputInfo{{0,23551},},},}, {name:"LoweredGetClosurePtr",argLen:0,zeroWidth:true,reg:regInfo{outputs:[]outputInfo{{0,4096},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,23551},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,23551},},},}, {name:"LoweredNilCheck",argLen:2,clobberFlags:true,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,56318},},},}, {name:"LoweredRound32F",argLen:1,resultInArg0:true,zeroWidth:true,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LoweredRound64F",argLen:1,resultInArg0:true,zeroWidth:true,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,clobberFlags:true,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},clobbers:4294918144,},}, {name:"LoweredPanicBoundsA",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,4},{1,8},},},}, {name:"LoweredPanicBoundsB",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},},},}, {name:"LoweredPanicBoundsC",auxType:auxInt64,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,1},{1,2},},},}, {name:"FlagEQ",argLen:0,reg:regInfo{},}, {name:"FlagLT",argLen:0,reg:regInfo{},}, {name:"FlagGT",argLen:0,reg:regInfo{},}, {name:"FlagOV",argLen:0,reg:regInfo{},}, {name:"SYNC",argLen:1,asm:s390x.ASYNC,reg:regInfo{},}, {name:"MOVBZatomicload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVBZ,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVWZatomicload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVWZ,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVDatomicload",auxType:auxSymOff,argLen:2,faultOnNilArg0:true,symEffect:SymRead,asm:s390x.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4295023614},},outputs:[]outputInfo{{0,23551},},},}, {name:"MOVBatomicstore",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymWrite,asm:s390x.AMOVB,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"MOVWatomicstore",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymWrite,asm:s390x.AMOVW,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"MOVDatomicstore",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymWrite,asm:s390x.AMOVD,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"LAA",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:s390x.ALAA,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"LAAG",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:s390x.ALAAG,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},outputs:[]outputInfo{{0,23551},},},}, {name:"AddTupleFirst32",argLen:2,reg:regInfo{},}, {name:"AddTupleFirst64",argLen:2,reg:regInfo{},}, {name:"LAN",argLen:3,clobberFlags:true,hasSideEffects:true,asm:s390x.ALAN,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"LANfloor",argLen:3,clobberFlags:true,hasSideEffects:true,asm:s390x.ALAN,reg:regInfo{inputs:[]inputInfo{{0,2},{1,56319},},clobbers:2,},}, {name:"LAO",argLen:3,clobberFlags:true,hasSideEffects:true,asm:s390x.ALAO,reg:regInfo{inputs:[]inputInfo{{0,4295023614},{1,56319},},},}, {name:"LAOfloor",argLen:3,clobberFlags:true,hasSideEffects:true,asm:s390x.ALAO,reg:regInfo{inputs:[]inputInfo{{0,2},{1,56319},},clobbers:2,},}, {name:"LoweredAtomicCas32",auxType:auxSymOff,argLen:4,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:s390x.ACS,reg:regInfo{inputs:[]inputInfo{{1,1},{0,56318},{2,56319},},clobbers:1,outputs:[]outputInfo{{1,0},{0,23551},},},}, {name:"LoweredAtomicCas64",auxType:auxSymOff,argLen:4,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:s390x.ACSG,reg:regInfo{inputs:[]inputInfo{{1,1},{0,56318},{2,56319},},clobbers:1,outputs:[]outputInfo{{1,0},{0,23551},},},}, {name:"LoweredAtomicExchange32",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:s390x.ACS,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},},outputs:[]outputInfo{{1,0},{0,1},},},}, {name:"LoweredAtomicExchange64",auxType:auxSymOff,argLen:3,clobberFlags:true,faultOnNilArg0:true,hasSideEffects:true,symEffect:SymRdWr,asm:s390x.ACSG,reg:regInfo{inputs:[]inputInfo{{0,56318},{1,56318},},outputs:[]outputInfo{{1,0},{0,1},},},}, {name:"FLOGR",argLen:1,clobberFlags:true,asm:s390x.AFLOGR,reg:regInfo{inputs:[]inputInfo{{0,23551},},clobbers:2,outputs:[]outputInfo{{0,1},},},}, {name:"POPCNT",argLen:1,clobberFlags:true,asm:s390x.APOPCNT,reg:regInfo{inputs:[]inputInfo{{0,23551},},outputs:[]outputInfo{{0,23551},},},}, {name:"MLGR",argLen:2,asm:s390x.AMLGR,reg:regInfo{inputs:[]inputInfo{{1,8},{0,23551},},outputs:[]outputInfo{{0,4},{1,8},},},}, {name:"SumBytes2",argLen:1,reg:regInfo{},}, {name:"SumBytes4",argLen:1,reg:regInfo{},}, {name:"SumBytes8",argLen:1,reg:regInfo{},}, {name:"STMG2",auxType:auxSymOff,argLen:4,clobberFlags:true,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.ASTMG,reg:regInfo{inputs:[]inputInfo{{1,2},{2,4},{0,56318},},},}, {name:"STMG3",auxType:auxSymOff,argLen:5,clobberFlags:true,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.ASTMG,reg:regInfo{inputs:[]inputInfo{{1,2},{2,4},{3,8},{0,56318},},},}, {name:"STMG4",auxType:auxSymOff,argLen:6,clobberFlags:true,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.ASTMG,reg:regInfo{inputs:[]inputInfo{{1,2},{2,4},{3,8},{4,16},{0,56318},},},}, {name:"STM2",auxType:auxSymOff,argLen:4,clobberFlags:true,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.ASTMY,reg:regInfo{inputs:[]inputInfo{{1,2},{2,4},{0,56318},},},}, {name:"STM3",auxType:auxSymOff,argLen:5,clobberFlags:true,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.ASTMY,reg:regInfo{inputs:[]inputInfo{{1,2},{2,4},{3,8},{0,56318},},},}, {name:"STM4",auxType:auxSymOff,argLen:6,clobberFlags:true,faultOnNilArg0:true,symEffect:SymWrite,asm:s390x.ASTMY,reg:regInfo{inputs:[]inputInfo{{1,2},{2,4},{3,8},{4,16},{0,56318},},},}, {name:"LoweredMove",auxType:auxInt64,argLen:4,clobberFlags:true,faultOnNilArg0:true,faultOnNilArg1:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,4},{2,56319},},clobbers:6,},}, {name:"LoweredZero",auxType:auxInt64,argLen:3,clobberFlags:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,2},{1,56319},},clobbers:2,},}, {name:"LoweredStaticCall",auxType:auxCallOff,argLen:1,call:true,reg:regInfo{clobbers:844424930131967,},}, {name:"LoweredClosureCall",auxType:auxCallOff,argLen:3,call:true,reg:regInfo{inputs:[]inputInfo{{0,65535},{1,65535},},clobbers:844424930131967,},}, {name:"LoweredInterCall",auxType:auxCallOff,argLen:2,call:true,reg:regInfo{inputs:[]inputInfo{{0,65535},},clobbers:844424930131967,},}, {name:"LoweredAddr",auxType:auxSymOff,argLen:1,rematerializeable:true,symEffect:SymAddr,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"LoweredMove",auxType:auxInt64,argLen:3,reg:regInfo{inputs:[]inputInfo{{0,65535},{1,65535},},},}, {name:"LoweredZero",auxType:auxInt64,argLen:2,reg:regInfo{inputs:[]inputInfo{{0,65535},},},}, {name:"LoweredGetClosurePtr",argLen:0,reg:regInfo{outputs:[]outputInfo{{0,65535},},},}, {name:"LoweredGetCallerPC",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,65535},},},}, {name:"LoweredGetCallerSP",argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,65535},},},}, {name:"LoweredNilCheck",argLen:2,nilCheck:true,faultOnNilArg0:true,reg:regInfo{inputs:[]inputInfo{{0,65535},},},}, {name:"LoweredWB",auxType:auxSym,argLen:3,symEffect:SymNone,reg:regInfo{inputs:[]inputInfo{{0,65535},{1,65535},},},}, {name:"LoweredConvert",argLen:2,reg:regInfo{inputs:[]inputInfo{{0,65535},},outputs:[]outputInfo{{0,65535},},},}, {name:"Select",argLen:3,asm:wasm.ASelect,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},{2,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Load8U",auxType:auxInt64,argLen:2,asm:wasm.AI64Load8U,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Load8S",auxType:auxInt64,argLen:2,asm:wasm.AI64Load8S,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Load16U",auxType:auxInt64,argLen:2,asm:wasm.AI64Load16U,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Load16S",auxType:auxInt64,argLen:2,asm:wasm.AI64Load16S,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Load32U",auxType:auxInt64,argLen:2,asm:wasm.AI64Load32U,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Load32S",auxType:auxInt64,argLen:2,asm:wasm.AI64Load32S,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Load",auxType:auxInt64,argLen:2,asm:wasm.AI64Load,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Store8",auxType:auxInt64,argLen:3,asm:wasm.AI64Store8,reg:regInfo{inputs:[]inputInfo{{1,281474976776191},{0,1407374883618815},},},}, {name:"I64Store16",auxType:auxInt64,argLen:3,asm:wasm.AI64Store16,reg:regInfo{inputs:[]inputInfo{{1,281474976776191},{0,1407374883618815},},},}, {name:"I64Store32",auxType:auxInt64,argLen:3,asm:wasm.AI64Store32,reg:regInfo{inputs:[]inputInfo{{1,281474976776191},{0,1407374883618815},},},}, {name:"I64Store",auxType:auxInt64,argLen:3,asm:wasm.AI64Store,reg:regInfo{inputs:[]inputInfo{{1,281474976776191},{0,1407374883618815},},},}, {name:"F32Load",auxType:auxInt64,argLen:2,asm:wasm.AF32Load,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F64Load",auxType:auxInt64,argLen:2,asm:wasm.AF64Load,reg:regInfo{inputs:[]inputInfo{{0,1407374883618815},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F32Store",auxType:auxInt64,argLen:3,asm:wasm.AF32Store,reg:regInfo{inputs:[]inputInfo{{1,4294901760},{0,1407374883618815},},},}, {name:"F64Store",auxType:auxInt64,argLen:3,asm:wasm.AF64Store,reg:regInfo{inputs:[]inputInfo{{1,281470681743360},{0,1407374883618815},},},}, {name:"I64Const",auxType:auxInt64,argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,65535},},},}, {name:"F32Const",auxType:auxFloat32,argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,4294901760},},},}, {name:"F64Const",auxType:auxFloat64,argLen:0,rematerializeable:true,reg:regInfo{outputs:[]outputInfo{{0,281470681743360},},},}, {name:"I64Eqz",argLen:1,asm:wasm.AI64Eqz,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Eq",argLen:2,asm:wasm.AI64Eq,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Ne",argLen:2,asm:wasm.AI64Ne,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64LtS",argLen:2,asm:wasm.AI64LtS,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64LtU",argLen:2,asm:wasm.AI64LtU,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64GtS",argLen:2,asm:wasm.AI64GtS,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64GtU",argLen:2,asm:wasm.AI64GtU,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64LeS",argLen:2,asm:wasm.AI64LeS,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64LeU",argLen:2,asm:wasm.AI64LeU,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64GeS",argLen:2,asm:wasm.AI64GeS,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64GeU",argLen:2,asm:wasm.AI64GeU,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Eq",argLen:2,asm:wasm.AF32Eq,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Ne",argLen:2,asm:wasm.AF32Ne,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Lt",argLen:2,asm:wasm.AF32Lt,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Gt",argLen:2,asm:wasm.AF32Gt,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Le",argLen:2,asm:wasm.AF32Le,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Ge",argLen:2,asm:wasm.AF32Ge,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"F64Eq",argLen:2,asm:wasm.AF64Eq,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"F64Ne",argLen:2,asm:wasm.AF64Ne,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"F64Lt",argLen:2,asm:wasm.AF64Lt,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"F64Gt",argLen:2,asm:wasm.AF64Gt,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"F64Le",argLen:2,asm:wasm.AF64Le,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"F64Ge",argLen:2,asm:wasm.AF64Ge,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Add",argLen:2,asm:wasm.AI64Add,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64AddConst",auxType:auxInt64,argLen:1,asm:wasm.AI64Add,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Sub",argLen:2,asm:wasm.AI64Sub,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Mul",argLen:2,asm:wasm.AI64Mul,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64DivS",argLen:2,asm:wasm.AI64DivS,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64DivU",argLen:2,asm:wasm.AI64DivU,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64RemS",argLen:2,asm:wasm.AI64RemS,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64RemU",argLen:2,asm:wasm.AI64RemU,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64And",argLen:2,asm:wasm.AI64And,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Or",argLen:2,asm:wasm.AI64Or,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Xor",argLen:2,asm:wasm.AI64Xor,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Shl",argLen:2,asm:wasm.AI64Shl,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64ShrS",argLen:2,asm:wasm.AI64ShrS,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64ShrU",argLen:2,asm:wasm.AI64ShrU,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Neg",argLen:1,asm:wasm.AF32Neg,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Add",argLen:2,asm:wasm.AF32Add,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Sub",argLen:2,asm:wasm.AF32Sub,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Mul",argLen:2,asm:wasm.AF32Mul,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Div",argLen:2,asm:wasm.AF32Div,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F64Neg",argLen:1,asm:wasm.AF64Neg,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Add",argLen:2,asm:wasm.AF64Add,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Sub",argLen:2,asm:wasm.AF64Sub,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Mul",argLen:2,asm:wasm.AF64Mul,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Div",argLen:2,asm:wasm.AF64Div,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"I64TruncSatF64S",argLen:1,asm:wasm.AI64TruncSatF64S,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64TruncSatF64U",argLen:1,asm:wasm.AI64TruncSatF64U,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64TruncSatF32S",argLen:1,asm:wasm.AI64TruncSatF32S,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64TruncSatF32U",argLen:1,asm:wasm.AI64TruncSatF32U,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32ConvertI64S",argLen:1,asm:wasm.AF32ConvertI64S,reg:regInfo{inputs:[]inputInfo{{0,65535},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32ConvertI64U",argLen:1,asm:wasm.AF32ConvertI64U,reg:regInfo{inputs:[]inputInfo{{0,65535},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F64ConvertI64S",argLen:1,asm:wasm.AF64ConvertI64S,reg:regInfo{inputs:[]inputInfo{{0,65535},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64ConvertI64U",argLen:1,asm:wasm.AF64ConvertI64U,reg:regInfo{inputs:[]inputInfo{{0,65535},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F32DemoteF64",argLen:1,asm:wasm.AF32DemoteF64,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F64PromoteF32",argLen:1,asm:wasm.AF64PromoteF32,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"I64Extend8S",argLen:1,asm:wasm.AI64Extend8S,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Extend16S",argLen:1,asm:wasm.AI64Extend16S,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Extend32S",argLen:1,asm:wasm.AI64Extend32S,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"F32Sqrt",argLen:1,asm:wasm.AF32Sqrt,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Trunc",argLen:1,asm:wasm.AF32Trunc,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Ceil",argLen:1,asm:wasm.AF32Ceil,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Floor",argLen:1,asm:wasm.AF32Floor,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Nearest",argLen:1,asm:wasm.AF32Nearest,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Abs",argLen:1,asm:wasm.AF32Abs,reg:regInfo{inputs:[]inputInfo{{0,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F32Copysign",argLen:2,asm:wasm.AF32Copysign,reg:regInfo{inputs:[]inputInfo{{0,4294901760},{1,4294901760},},outputs:[]outputInfo{{0,4294901760},},},}, {name:"F64Sqrt",argLen:1,asm:wasm.AF64Sqrt,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Trunc",argLen:1,asm:wasm.AF64Trunc,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Ceil",argLen:1,asm:wasm.AF64Ceil,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Floor",argLen:1,asm:wasm.AF64Floor,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Nearest",argLen:1,asm:wasm.AF64Nearest,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Abs",argLen:1,asm:wasm.AF64Abs,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"F64Copysign",argLen:2,asm:wasm.AF64Copysign,reg:regInfo{inputs:[]inputInfo{{0,281470681743360},{1,281470681743360},},outputs:[]outputInfo{{0,281470681743360},},},}, {name:"I64Ctz",argLen:1,asm:wasm.AI64Ctz,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Clz",argLen:1,asm:wasm.AI64Clz,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I32Rotl",argLen:2,asm:wasm.AI32Rotl,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Rotl",argLen:2,asm:wasm.AI64Rotl,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},{1,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"I64Popcnt",argLen:1,asm:wasm.AI64Popcnt,reg:regInfo{inputs:[]inputInfo{{0,281474976776191},},outputs:[]outputInfo{{0,65535},},},}, {name:"Add8",argLen:2,commutative:true,generic:true,}, {name:"Add16",argLen:2,commutative:true,generic:true,}, {name:"Add32",argLen:2,commutative:true,generic:true,}, {name:"Add64",argLen:2,commutative:true,generic:true,}, {name:"AddPtr",argLen:2,generic:true,}, {name:"Add32F",argLen:2,commutative:true,generic:true,}, {name:"Add64F",argLen:2,commutative:true,generic:true,}, {name:"Sub8",argLen:2,generic:true,}, {name:"Sub16",argLen:2,generic:true,}, {name:"Sub32",argLen:2,generic:true,}, {name:"Sub64",argLen:2,generic:true,}, {name:"SubPtr",argLen:2,generic:true,}, {name:"Sub32F",argLen:2,generic:true,}, {name:"Sub64F",argLen:2,generic:true,}, {name:"Mul8",argLen:2,commutative:true,generic:true,}, {name:"Mul16",argLen:2,commutative:true,generic:true,}, {name:"Mul32",argLen:2,commutative:true,generic:true,}, {name:"Mul64",argLen:2,commutative:true,generic:true,}, {name:"Mul32F",argLen:2,commutative:true,generic:true,}, {name:"Mul64F",argLen:2,commutative:true,generic:true,}, {name:"Div32F",argLen:2,generic:true,}, {name:"Div64F",argLen:2,generic:true,}, {name:"Hmul32",argLen:2,commutative:true,generic:true,}, {name:"Hmul32u",argLen:2,commutative:true,generic:true,}, {name:"Hmul64",argLen:2,commutative:true,generic:true,}, {name:"Hmul64u",argLen:2,commutative:true,generic:true,}, {name:"Mul32uhilo",argLen:2,commutative:true,generic:true,}, {name:"Mul64uhilo",argLen:2,commutative:true,generic:true,}, {name:"Mul32uover",argLen:2,commutative:true,generic:true,}, {name:"Mul64uover",argLen:2,commutative:true,generic:true,}, {name:"Avg32u",argLen:2,generic:true,}, {name:"Avg64u",argLen:2,generic:true,}, {name:"Div8",argLen:2,generic:true,}, {name:"Div8u",argLen:2,generic:true,}, {name:"Div16",auxType:auxBool,argLen:2,generic:true,}, {name:"Div16u",argLen:2,generic:true,}, {name:"Div32",auxType:auxBool,argLen:2,generic:true,}, {name:"Div32u",argLen:2,generic:true,}, {name:"Div64",auxType:auxBool,argLen:2,generic:true,}, {name:"Div64u",argLen:2,generic:true,}, {name:"Div128u",argLen:3,generic:true,}, {name:"Mod8",argLen:2,generic:true,}, {name:"Mod8u",argLen:2,generic:true,}, {name:"Mod16",auxType:auxBool,argLen:2,generic:true,}, {name:"Mod16u",argLen:2,generic:true,}, {name:"Mod32",auxType:auxBool,argLen:2,generic:true,}, {name:"Mod32u",argLen:2,generic:true,}, {name:"Mod64",auxType:auxBool,argLen:2,generic:true,}, {name:"Mod64u",argLen:2,generic:true,}, {name:"And8",argLen:2,commutative:true,generic:true,}, {name:"And16",argLen:2,commutative:true,generic:true,}, {name:"And32",argLen:2,commutative:true,generic:true,}, {name:"And64",argLen:2,commutative:true,generic:true,}, {name:"Or8",argLen:2,commutative:true,generic:true,}, {name:"Or16",argLen:2,commutative:true,generic:true,}, {name:"Or32",argLen:2,commutative:true,generic:true,}, {name:"Or64",argLen:2,commutative:true,generic:true,}, {name:"Xor8",argLen:2,commutative:true,generic:true,}, {name:"Xor16",argLen:2,commutative:true,generic:true,}, {name:"Xor32",argLen:2,commutative:true,generic:true,}, {name:"Xor64",argLen:2,commutative:true,generic:true,}, {name:"Lsh8x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh8x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh8x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh8x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh16x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh16x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh16x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh16x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh32x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh32x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh32x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh32x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh64x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh64x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh64x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Lsh64x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64x8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64x16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64x32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64x64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8Ux8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8Ux16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8Ux32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh8Ux64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16Ux8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16Ux16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16Ux32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh16Ux64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32Ux8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32Ux16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32Ux32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh32Ux64",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64Ux8",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64Ux16",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64Ux32",auxType:auxBool,argLen:2,generic:true,}, {name:"Rsh64Ux64",auxType:auxBool,argLen:2,generic:true,}, {name:"Eq8",argLen:2,commutative:true,generic:true,}, {name:"Eq16",argLen:2,commutative:true,generic:true,}, {name:"Eq32",argLen:2,commutative:true,generic:true,}, {name:"Eq64",argLen:2,commutative:true,generic:true,}, {name:"EqPtr",argLen:2,commutative:true,generic:true,}, {name:"EqInter",argLen:2,generic:true,}, {name:"EqSlice",argLen:2,generic:true,}, {name:"Eq32F",argLen:2,commutative:true,generic:true,}, {name:"Eq64F",argLen:2,commutative:true,generic:true,}, {name:"Neq8",argLen:2,commutative:true,generic:true,}, {name:"Neq16",argLen:2,commutative:true,generic:true,}, {name:"Neq32",argLen:2,commutative:true,generic:true,}, {name:"Neq64",argLen:2,commutative:true,generic:true,}, {name:"NeqPtr",argLen:2,commutative:true,generic:true,}, {name:"NeqInter",argLen:2,generic:true,}, {name:"NeqSlice",argLen:2,generic:true,}, {name:"Neq32F",argLen:2,commutative:true,generic:true,}, {name:"Neq64F",argLen:2,commutative:true,generic:true,}, {name:"Less8",argLen:2,generic:true,}, {name:"Less8U",argLen:2,generic:true,}, {name:"Less16",argLen:2,generic:true,}, {name:"Less16U",argLen:2,generic:true,}, {name:"Less32",argLen:2,generic:true,}, {name:"Less32U",argLen:2,generic:true,}, {name:"Less64",argLen:2,generic:true,}, {name:"Less64U",argLen:2,generic:true,}, {name:"Less32F",argLen:2,generic:true,}, {name:"Less64F",argLen:2,generic:true,}, {name:"Leq8",argLen:2,generic:true,}, {name:"Leq8U",argLen:2,generic:true,}, {name:"Leq16",argLen:2,generic:true,}, {name:"Leq16U",argLen:2,generic:true,}, {name:"Leq32",argLen:2,generic:true,}, {name:"Leq32U",argLen:2,generic:true,}, {name:"Leq64",argLen:2,generic:true,}, {name:"Leq64U",argLen:2,generic:true,}, {name:"Leq32F",argLen:2,generic:true,}, {name:"Leq64F",argLen:2,generic:true,}, {name:"CondSelect",argLen:3,generic:true,}, {name:"AndB",argLen:2,commutative:true,generic:true,}, {name:"OrB",argLen:2,commutative:true,generic:true,}, {name:"EqB",argLen:2,commutative:true,generic:true,}, {name:"NeqB",argLen:2,commutative:true,generic:true,}, {name:"Not",argLen:1,generic:true,}, {name:"Neg8",argLen:1,generic:true,}, {name:"Neg16",argLen:1,generic:true,}, {name:"Neg32",argLen:1,generic:true,}, {name:"Neg64",argLen:1,generic:true,}, {name:"Neg32F",argLen:1,generic:true,}, {name:"Neg64F",argLen:1,generic:true,}, {name:"Com8",argLen:1,generic:true,}, {name:"Com16",argLen:1,generic:true,}, {name:"Com32",argLen:1,generic:true,}, {name:"Com64",argLen:1,generic:true,}, {name:"Ctz8",argLen:1,generic:true,}, {name:"Ctz16",argLen:1,generic:true,}, {name:"Ctz32",argLen:1,generic:true,}, {name:"Ctz64",argLen:1,generic:true,}, {name:"Ctz8NonZero",argLen:1,generic:true,}, {name:"Ctz16NonZero",argLen:1,generic:true,}, {name:"Ctz32NonZero",argLen:1,generic:true,}, {name:"Ctz64NonZero",argLen:1,generic:true,}, {name:"BitLen8",argLen:1,generic:true,}, {name:"BitLen16",argLen:1,generic:true,}, {name:"BitLen32",argLen:1,generic:true,}, {name:"BitLen64",argLen:1,generic:true,}, {name:"Bswap32",argLen:1,generic:true,}, {name:"Bswap64",argLen:1,generic:true,}, {name:"BitRev8",argLen:1,generic:true,}, {name:"BitRev16",argLen:1,generic:true,}, {name:"BitRev32",argLen:1,generic:true,}, {name:"BitRev64",argLen:1,generic:true,}, {name:"PopCount8",argLen:1,generic:true,}, {name:"PopCount16",argLen:1,generic:true,}, {name:"PopCount32",argLen:1,generic:true,}, {name:"PopCount64",argLen:1,generic:true,}, {name:"RotateLeft8",argLen:2,generic:true,}, {name:"RotateLeft16",argLen:2,generic:true,}, {name:"RotateLeft32",argLen:2,generic:true,}, {name:"RotateLeft64",argLen:2,generic:true,}, {name:"Sqrt",argLen:1,generic:true,}, {name:"Sqrt32",argLen:1,generic:true,}, {name:"Floor",argLen:1,generic:true,}, {name:"Ceil",argLen:1,generic:true,}, {name:"Trunc",argLen:1,generic:true,}, {name:"Round",argLen:1,generic:true,}, {name:"RoundToEven",argLen:1,generic:true,}, {name:"Abs",argLen:1,generic:true,}, {name:"Copysign",argLen:2,generic:true,}, {name:"FMA",argLen:3,generic:true,}, {name:"Phi",argLen:-1,zeroWidth:true,generic:true,}, {name:"Copy",argLen:1,generic:true,}, {name:"Convert",argLen:2,resultInArg0:true,zeroWidth:true,generic:true,}, {name:"ConstBool",auxType:auxBool,argLen:0,generic:true,}, {name:"ConstString",auxType:auxString,argLen:0,generic:true,}, {name:"ConstNil",argLen:0,generic:true,}, {name:"Const8",auxType:auxInt8,argLen:0,generic:true,}, {name:"Const16",auxType:auxInt16,argLen:0,generic:true,}, {name:"Const32",auxType:auxInt32,argLen:0,generic:true,}, {name:"Const64",auxType:auxInt64,argLen:0,generic:true,}, {name:"Const32F",auxType:auxFloat32,argLen:0,generic:true,}, {name:"Const64F",auxType:auxFloat64,argLen:0,generic:true,}, {name:"ConstInterface",argLen:0,generic:true,}, {name:"ConstSlice",argLen:0,generic:true,}, {name:"InitMem",argLen:0,zeroWidth:true,generic:true,}, {name:"Arg",auxType:auxSymOff,argLen:0,zeroWidth:true,symEffect:SymRead,generic:true,}, {name:"ArgIntReg",auxType:auxNameOffsetInt8,argLen:0,zeroWidth:true,generic:true,}, {name:"ArgFloatReg",auxType:auxNameOffsetInt8,argLen:0,zeroWidth:true,generic:true,}, {name:"Addr",auxType:auxSym,argLen:1,symEffect:SymAddr,generic:true,}, {name:"LocalAddr",auxType:auxSym,argLen:2,symEffect:SymAddr,generic:true,}, {name:"SP",argLen:0,zeroWidth:true,generic:true,}, {name:"SB",argLen:0,zeroWidth:true,generic:true,}, {name:"Load",argLen:2,generic:true,}, {name:"Dereference",argLen:2,generic:true,}, {name:"Store",auxType:auxTyp,argLen:3,generic:true,}, {name:"Move",auxType:auxTypSize,argLen:3,generic:true,}, {name:"Zero",auxType:auxTypSize,argLen:2,generic:true,}, {name:"StoreWB",auxType:auxTyp,argLen:3,generic:true,}, {name:"MoveWB",auxType:auxTypSize,argLen:3,generic:true,}, {name:"ZeroWB",auxType:auxTypSize,argLen:2,generic:true,}, {name:"WB",auxType:auxSym,argLen:3,symEffect:SymNone,generic:true,}, {name:"HasCPUFeature",auxType:auxSym,argLen:0,symEffect:SymNone,generic:true,}, {name:"PanicBounds",auxType:auxInt64,argLen:3,call:true,generic:true,}, {name:"PanicExtend",auxType:auxInt64,argLen:4,call:true,generic:true,}, {name:"ClosureCall",auxType:auxCallOff,argLen:-1,call:true,generic:true,}, {name:"StaticCall",auxType:auxCallOff,argLen:-1,call:true,generic:true,}, {name:"InterCall",auxType:auxCallOff,argLen:-1,call:true,generic:true,}, {name:"ClosureLECall",auxType:auxCallOff,argLen:-1,call:true,generic:true,}, {name:"StaticLECall",auxType:auxCallOff,argLen:-1,call:true,generic:true,}, {name:"InterLECall",auxType:auxCallOff,argLen:-1,call:true,generic:true,}, {name:"SignExt8to16",argLen:1,generic:true,}, {name:"SignExt8to32",argLen:1,generic:true,}, {name:"SignExt8to64",argLen:1,generic:true,}, {name:"SignExt16to32",argLen:1,generic:true,}, {name:"SignExt16to64",argLen:1,generic:true,}, {name:"SignExt32to64",argLen:1,generic:true,}, {name:"ZeroExt8to16",argLen:1,generic:true,}, {name:"ZeroExt8to32",argLen:1,generic:true,}, {name:"ZeroExt8to64",argLen:1,generic:true,}, {name:"ZeroExt16to32",argLen:1,generic:true,}, {name:"ZeroExt16to64",argLen:1,generic:true,}, {name:"ZeroExt32to64",argLen:1,generic:true,}, {name:"Trunc16to8",argLen:1,generic:true,}, {name:"Trunc32to8",argLen:1,generic:true,}, {name:"Trunc32to16",argLen:1,generic:true,}, {name:"Trunc64to8",argLen:1,generic:true,}, {name:"Trunc64to16",argLen:1,generic:true,}, {name:"Trunc64to32",argLen:1,generic:true,}, {name:"Cvt32to32F",argLen:1,generic:true,}, {name:"Cvt32to64F",argLen:1,generic:true,}, {name:"Cvt64to32F",argLen:1,generic:true,}, {name:"Cvt64to64F",argLen:1,generic:true,}, {name:"Cvt32Fto32",argLen:1,generic:true,}, {name:"Cvt32Fto64",argLen:1,generic:true,}, {name:"Cvt64Fto32",argLen:1,generic:true,}, {name:"Cvt64Fto64",argLen:1,generic:true,}, {name:"Cvt32Fto64F",argLen:1,generic:true,}, {name:"Cvt64Fto32F",argLen:1,generic:true,}, {name:"CvtBoolToUint8",argLen:1,generic:true,}, {name:"Round32F",argLen:1,generic:true,}, {name:"Round64F",argLen:1,generic:true,}, {name:"IsNonNil",argLen:1,generic:true,}, {name:"IsInBounds",argLen:2,generic:true,}, {name:"IsSliceInBounds",argLen:2,generic:true,}, {name:"NilCheck",argLen:2,generic:true,}, {name:"GetG",argLen:1,zeroWidth:true,generic:true,}, {name:"GetClosurePtr",argLen:0,generic:true,}, {name:"GetCallerPC",argLen:0,generic:true,}, {name:"GetCallerSP",argLen:0,generic:true,}, {name:"PtrIndex",argLen:2,generic:true,}, {name:"OffPtr",auxType:auxInt64,argLen:1,generic:true,}, {name:"SliceMake",argLen:3,generic:true,}, {name:"SlicePtr",argLen:1,generic:true,}, {name:"SliceLen",argLen:1,generic:true,}, {name:"SliceCap",argLen:1,generic:true,}, {name:"SlicePtrUnchecked",argLen:1,generic:true,}, {name:"ComplexMake",argLen:2,generic:true,}, {name:"ComplexReal",argLen:1,generic:true,}, {name:"ComplexImag",argLen:1,generic:true,}, {name:"StringMake",argLen:2,generic:true,}, {name:"StringPtr",argLen:1,generic:true,}, {name:"StringLen",argLen:1,generic:true,}, {name:"IMake",argLen:2,generic:true,}, {name:"ITab",argLen:1,generic:true,}, {name:"IData",argLen:1,generic:true,}, {name:"StructMake0",argLen:0,generic:true,}, {name:"StructMake1",argLen:1,generic:true,}, {name:"StructMake2",argLen:2,generic:true,}, {name:"StructMake3",argLen:3,generic:true,}, {name:"StructMake4",argLen:4,generic:true,}, {name:"StructSelect",auxType:auxInt64,argLen:1,generic:true,}, {name:"ArrayMake0",argLen:0,generic:true,}, {name:"ArrayMake1",argLen:1,generic:true,}, {name:"ArraySelect",auxType:auxInt64,argLen:1,generic:true,}, {name:"StoreReg",argLen:1,generic:true,}, {name:"LoadReg",argLen:1,generic:true,}, {name:"FwdRef",auxType:auxSym,argLen:0,symEffect:SymNone,generic:true,}, {name:"Unknown",argLen:0,generic:true,}, {name:"VarDef",auxType:auxSym,argLen:1,zeroWidth:true,symEffect:SymNone,generic:true,}, {name:"VarKill",auxType:auxSym,argLen:1,symEffect:SymNone,generic:true,}, {name:"VarLive",auxType:auxSym,argLen:1,zeroWidth:true,symEffect:SymRead,generic:true,}, {name:"KeepAlive",argLen:2,zeroWidth:true,generic:true,}, {name:"InlMark",auxType:auxInt32,argLen:1,generic:true,}, {name:"Int64Make",argLen:2,generic:true,}, {name:"Int64Hi",argLen:1,generic:true,}, {name:"Int64Lo",argLen:1,generic:true,}, {name:"Add32carry",argLen:2,commutative:true,generic:true,}, {name:"Add32withcarry",argLen:3,commutative:true,generic:true,}, {name:"Sub32carry",argLen:2,generic:true,}, {name:"Sub32withcarry",argLen:3,generic:true,}, {name:"Add64carry",argLen:3,commutative:true,generic:true,}, {name:"Sub64borrow",argLen:3,generic:true,}, {name:"Signmask",argLen:1,generic:true,}, {name:"Zeromask",argLen:1,generic:true,}, {name:"Slicemask",argLen:1,generic:true,}, {name:"SpectreIndex",argLen:2,generic:true,}, {name:"SpectreSliceIndex",argLen:2,generic:true,}, {name:"Cvt32Uto32F",argLen:1,generic:true,}, {name:"Cvt32Uto64F",argLen:1,generic:true,}, {name:"Cvt32Fto32U",argLen:1,generic:true,}, {name:"Cvt64Fto32U",argLen:1,generic:true,}, {name:"Cvt64Uto32F",argLen:1,generic:true,}, {name:"Cvt64Uto64F",argLen:1,generic:true,}, {name:"Cvt32Fto64U",argLen:1,generic:true,}, {name:"Cvt64Fto64U",argLen:1,generic:true,}, {name:"Select0",argLen:1,zeroWidth:true,generic:true,}, {name:"Select1",argLen:1,zeroWidth:true,generic:true,}, {name:"SelectN",auxType:auxInt64,argLen:1,generic:true,}, {name:"SelectNAddr",auxType:auxInt64,argLen:1,generic:true,}, {name:"MakeResult",argLen:-1,generic:true,}, {name:"AtomicLoad8",argLen:2,generic:true,}, {name:"AtomicLoad32",argLen:2,generic:true,}, {name:"AtomicLoad64",argLen:2,generic:true,}, {name:"AtomicLoadPtr",argLen:2,generic:true,}, {name:"AtomicLoadAcq32",argLen:2,generic:true,}, {name:"AtomicLoadAcq64",argLen:2,generic:true,}, {name:"AtomicStore8",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicStore32",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicStore64",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicStorePtrNoWB",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicStoreRel32",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicStoreRel64",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicExchange32",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicExchange64",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicAdd32",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicAdd64",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicCompareAndSwap32",argLen:4,hasSideEffects:true,generic:true,}, {name:"AtomicCompareAndSwap64",argLen:4,hasSideEffects:true,generic:true,}, {name:"AtomicCompareAndSwapRel32",argLen:4,hasSideEffects:true,generic:true,}, {name:"AtomicAnd8",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicAnd32",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicOr8",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicOr32",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicAdd32Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicAdd64Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicExchange32Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicExchange64Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicCompareAndSwap32Variant",argLen:4,hasSideEffects:true,generic:true,}, {name:"AtomicCompareAndSwap64Variant",argLen:4,hasSideEffects:true,generic:true,}, {name:"AtomicAnd8Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicAnd32Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicOr8Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"AtomicOr32Variant",argLen:3,hasSideEffects:true,generic:true,}, {name:"Clobber",auxType:auxSymOff,argLen:0,symEffect:SymNone,generic:true,}, {name:"ClobberReg",argLen:0,generic:true,} });

public static obj.As Asm(this Op o) {
    return opcodeTable[o].asm;
}
public static short Scale(this Op o) {
    return int16(opcodeTable[o].scale);
}
public static @string String(this Op o) {
    return opcodeTable[o].name;
}
public static SymEffect SymEffect(this Op o) {
    return opcodeTable[o].symEffect;
}
public static bool IsCall(this Op o) {
    return opcodeTable[o].call;
}
public static bool HasSideEffects(this Op o) {
    return opcodeTable[o].hasSideEffects;
}
public static bool UnsafePoint(this Op o) {
    return opcodeTable[o].unsafePoint;
}
public static bool ResultInArg0(this Op o) {
    return opcodeTable[o].resultInArg0;
}

private static array<Register> registers386 = new array<Register>(new Register[] { {0,x86.REG_AX,0,"AX"}, {1,x86.REG_CX,1,"CX"}, {2,x86.REG_DX,2,"DX"}, {3,x86.REG_BX,3,"BX"}, {4,x86.REGSP,-1,"SP"}, {5,x86.REG_BP,4,"BP"}, {6,x86.REG_SI,5,"SI"}, {7,x86.REG_DI,6,"DI"}, {8,x86.REG_X0,-1,"X0"}, {9,x86.REG_X1,-1,"X1"}, {10,x86.REG_X2,-1,"X2"}, {11,x86.REG_X3,-1,"X3"}, {12,x86.REG_X4,-1,"X4"}, {13,x86.REG_X5,-1,"X5"}, {14,x86.REG_X6,-1,"X6"}, {15,x86.REG_X7,-1,"X7"}, {16,0,-1,"SB"} });
private static slice<sbyte> paramIntReg386 = (slice<sbyte>)null;
private static slice<sbyte> paramFloatReg386 = (slice<sbyte>)null;
private static var gpRegMask386 = regMask(239);
private static var fpRegMask386 = regMask(65280);
private static var specialRegMask386 = regMask(0);
private static var framepointerReg386 = int8(5);
private static var linkReg386 = int8(-1);
private static array<Register> registersAMD64 = new array<Register>(new Register[] { {0,x86.REG_AX,0,"AX"}, {1,x86.REG_CX,1,"CX"}, {2,x86.REG_DX,2,"DX"}, {3,x86.REG_BX,3,"BX"}, {4,x86.REGSP,-1,"SP"}, {5,x86.REG_BP,4,"BP"}, {6,x86.REG_SI,5,"SI"}, {7,x86.REG_DI,6,"DI"}, {8,x86.REG_R8,7,"R8"}, {9,x86.REG_R9,8,"R9"}, {10,x86.REG_R10,9,"R10"}, {11,x86.REG_R11,10,"R11"}, {12,x86.REG_R12,11,"R12"}, {13,x86.REG_R13,12,"R13"}, {14,x86.REGG,-1,"g"}, {15,x86.REG_R15,13,"R15"}, {16,x86.REG_X0,-1,"X0"}, {17,x86.REG_X1,-1,"X1"}, {18,x86.REG_X2,-1,"X2"}, {19,x86.REG_X3,-1,"X3"}, {20,x86.REG_X4,-1,"X4"}, {21,x86.REG_X5,-1,"X5"}, {22,x86.REG_X6,-1,"X6"}, {23,x86.REG_X7,-1,"X7"}, {24,x86.REG_X8,-1,"X8"}, {25,x86.REG_X9,-1,"X9"}, {26,x86.REG_X10,-1,"X10"}, {27,x86.REG_X11,-1,"X11"}, {28,x86.REG_X12,-1,"X12"}, {29,x86.REG_X13,-1,"X13"}, {30,x86.REG_X14,-1,"X14"}, {31,x86.REG_X15,-1,"X15"}, {32,0,-1,"SB"} });
private static sbyte paramIntRegAMD64 = new slice<sbyte>(new sbyte[] { 0, 3, 1, 7, 6, 8, 9, 10, 11 });
private static sbyte paramFloatRegAMD64 = new slice<sbyte>(new sbyte[] { 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 });
private static var gpRegMaskAMD64 = regMask(49135);
private static var fpRegMaskAMD64 = regMask(2147418112);
private static var specialRegMaskAMD64 = regMask((nint)2147483648L);
private static var framepointerRegAMD64 = int8(5);
private static var linkRegAMD64 = int8(-1);
private static array<Register> registersARM = new array<Register>(new Register[] { {0,arm.REG_R0,0,"R0"}, {1,arm.REG_R1,1,"R1"}, {2,arm.REG_R2,2,"R2"}, {3,arm.REG_R3,3,"R3"}, {4,arm.REG_R4,4,"R4"}, {5,arm.REG_R5,5,"R5"}, {6,arm.REG_R6,6,"R6"}, {7,arm.REG_R7,7,"R7"}, {8,arm.REG_R8,8,"R8"}, {9,arm.REG_R9,9,"R9"}, {10,arm.REGG,-1,"g"}, {11,arm.REG_R11,-1,"R11"}, {12,arm.REG_R12,10,"R12"}, {13,arm.REGSP,-1,"SP"}, {14,arm.REG_R14,11,"R14"}, {15,arm.REG_R15,-1,"R15"}, {16,arm.REG_F0,-1,"F0"}, {17,arm.REG_F1,-1,"F1"}, {18,arm.REG_F2,-1,"F2"}, {19,arm.REG_F3,-1,"F3"}, {20,arm.REG_F4,-1,"F4"}, {21,arm.REG_F5,-1,"F5"}, {22,arm.REG_F6,-1,"F6"}, {23,arm.REG_F7,-1,"F7"}, {24,arm.REG_F8,-1,"F8"}, {25,arm.REG_F9,-1,"F9"}, {26,arm.REG_F10,-1,"F10"}, {27,arm.REG_F11,-1,"F11"}, {28,arm.REG_F12,-1,"F12"}, {29,arm.REG_F13,-1,"F13"}, {30,arm.REG_F14,-1,"F14"}, {31,arm.REG_F15,-1,"F15"}, {32,0,-1,"SB"} });
private static slice<sbyte> paramIntRegARM = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegARM = (slice<sbyte>)null;
private static var gpRegMaskARM = regMask(21503);
private static var fpRegMaskARM = regMask((nint)4294901760L);
private static var specialRegMaskARM = regMask(0);
private static var framepointerRegARM = int8(-1);
private static var linkRegARM = int8(14);
private static array<Register> registersARM64 = new array<Register>(new Register[] { {0,arm64.REG_R0,0,"R0"}, {1,arm64.REG_R1,1,"R1"}, {2,arm64.REG_R2,2,"R2"}, {3,arm64.REG_R3,3,"R3"}, {4,arm64.REG_R4,4,"R4"}, {5,arm64.REG_R5,5,"R5"}, {6,arm64.REG_R6,6,"R6"}, {7,arm64.REG_R7,7,"R7"}, {8,arm64.REG_R8,8,"R8"}, {9,arm64.REG_R9,9,"R9"}, {10,arm64.REG_R10,10,"R10"}, {11,arm64.REG_R11,11,"R11"}, {12,arm64.REG_R12,12,"R12"}, {13,arm64.REG_R13,13,"R13"}, {14,arm64.REG_R14,14,"R14"}, {15,arm64.REG_R15,15,"R15"}, {16,arm64.REG_R16,16,"R16"}, {17,arm64.REG_R17,17,"R17"}, {18,arm64.REG_R18,-1,"R18"}, {19,arm64.REG_R19,18,"R19"}, {20,arm64.REG_R20,19,"R20"}, {21,arm64.REG_R21,20,"R21"}, {22,arm64.REG_R22,21,"R22"}, {23,arm64.REG_R23,22,"R23"}, {24,arm64.REG_R24,23,"R24"}, {25,arm64.REG_R25,24,"R25"}, {26,arm64.REG_R26,25,"R26"}, {27,arm64.REGG,-1,"g"}, {28,arm64.REG_R29,-1,"R29"}, {29,arm64.REG_R30,26,"R30"}, {30,arm64.REGSP,-1,"SP"}, {31,arm64.REG_F0,-1,"F0"}, {32,arm64.REG_F1,-1,"F1"}, {33,arm64.REG_F2,-1,"F2"}, {34,arm64.REG_F3,-1,"F3"}, {35,arm64.REG_F4,-1,"F4"}, {36,arm64.REG_F5,-1,"F5"}, {37,arm64.REG_F6,-1,"F6"}, {38,arm64.REG_F7,-1,"F7"}, {39,arm64.REG_F8,-1,"F8"}, {40,arm64.REG_F9,-1,"F9"}, {41,arm64.REG_F10,-1,"F10"}, {42,arm64.REG_F11,-1,"F11"}, {43,arm64.REG_F12,-1,"F12"}, {44,arm64.REG_F13,-1,"F13"}, {45,arm64.REG_F14,-1,"F14"}, {46,arm64.REG_F15,-1,"F15"}, {47,arm64.REG_F16,-1,"F16"}, {48,arm64.REG_F17,-1,"F17"}, {49,arm64.REG_F18,-1,"F18"}, {50,arm64.REG_F19,-1,"F19"}, {51,arm64.REG_F20,-1,"F20"}, {52,arm64.REG_F21,-1,"F21"}, {53,arm64.REG_F22,-1,"F22"}, {54,arm64.REG_F23,-1,"F23"}, {55,arm64.REG_F24,-1,"F24"}, {56,arm64.REG_F25,-1,"F25"}, {57,arm64.REG_F26,-1,"F26"}, {58,arm64.REG_F27,-1,"F27"}, {59,arm64.REG_F28,-1,"F28"}, {60,arm64.REG_F29,-1,"F29"}, {61,arm64.REG_F30,-1,"F30"}, {62,arm64.REG_F31,-1,"F31"}, {63,0,-1,"SB"} });
private static slice<sbyte> paramIntRegARM64 = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegARM64 = (slice<sbyte>)null;
private static var gpRegMaskARM64 = regMask(670826495);
private static var fpRegMaskARM64 = regMask((nint)9223372034707292160L);
private static var specialRegMaskARM64 = regMask(0);
private static var framepointerRegARM64 = int8(-1);
private static var linkRegARM64 = int8(29);
private static array<Register> registersMIPS = new array<Register>(new Register[] { {0,mips.REG_R0,-1,"R0"}, {1,mips.REG_R1,0,"R1"}, {2,mips.REG_R2,1,"R2"}, {3,mips.REG_R3,2,"R3"}, {4,mips.REG_R4,3,"R4"}, {5,mips.REG_R5,4,"R5"}, {6,mips.REG_R6,5,"R6"}, {7,mips.REG_R7,6,"R7"}, {8,mips.REG_R8,7,"R8"}, {9,mips.REG_R9,8,"R9"}, {10,mips.REG_R10,9,"R10"}, {11,mips.REG_R11,10,"R11"}, {12,mips.REG_R12,11,"R12"}, {13,mips.REG_R13,12,"R13"}, {14,mips.REG_R14,13,"R14"}, {15,mips.REG_R15,14,"R15"}, {16,mips.REG_R16,15,"R16"}, {17,mips.REG_R17,16,"R17"}, {18,mips.REG_R18,17,"R18"}, {19,mips.REG_R19,18,"R19"}, {20,mips.REG_R20,19,"R20"}, {21,mips.REG_R21,20,"R21"}, {22,mips.REG_R22,21,"R22"}, {23,mips.REG_R24,22,"R24"}, {24,mips.REG_R25,23,"R25"}, {25,mips.REG_R28,24,"R28"}, {26,mips.REGSP,-1,"SP"}, {27,mips.REGG,-1,"g"}, {28,mips.REG_R31,25,"R31"}, {29,mips.REG_F0,-1,"F0"}, {30,mips.REG_F2,-1,"F2"}, {31,mips.REG_F4,-1,"F4"}, {32,mips.REG_F6,-1,"F6"}, {33,mips.REG_F8,-1,"F8"}, {34,mips.REG_F10,-1,"F10"}, {35,mips.REG_F12,-1,"F12"}, {36,mips.REG_F14,-1,"F14"}, {37,mips.REG_F16,-1,"F16"}, {38,mips.REG_F18,-1,"F18"}, {39,mips.REG_F20,-1,"F20"}, {40,mips.REG_F22,-1,"F22"}, {41,mips.REG_F24,-1,"F24"}, {42,mips.REG_F26,-1,"F26"}, {43,mips.REG_F28,-1,"F28"}, {44,mips.REG_F30,-1,"F30"}, {45,mips.REG_HI,-1,"HI"}, {46,mips.REG_LO,-1,"LO"}, {47,0,-1,"SB"} });
private static slice<sbyte> paramIntRegMIPS = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegMIPS = (slice<sbyte>)null;
private static var gpRegMaskMIPS = regMask(335544318);
private static var fpRegMaskMIPS = regMask((nint)35183835217920L);
private static var specialRegMaskMIPS = regMask((nint)105553116266496L);
private static var framepointerRegMIPS = int8(-1);
private static var linkRegMIPS = int8(28);
private static array<Register> registersMIPS64 = new array<Register>(new Register[] { {0,mips.REG_R0,-1,"R0"}, {1,mips.REG_R1,0,"R1"}, {2,mips.REG_R2,1,"R2"}, {3,mips.REG_R3,2,"R3"}, {4,mips.REG_R4,3,"R4"}, {5,mips.REG_R5,4,"R5"}, {6,mips.REG_R6,5,"R6"}, {7,mips.REG_R7,6,"R7"}, {8,mips.REG_R8,7,"R8"}, {9,mips.REG_R9,8,"R9"}, {10,mips.REG_R10,9,"R10"}, {11,mips.REG_R11,10,"R11"}, {12,mips.REG_R12,11,"R12"}, {13,mips.REG_R13,12,"R13"}, {14,mips.REG_R14,13,"R14"}, {15,mips.REG_R15,14,"R15"}, {16,mips.REG_R16,15,"R16"}, {17,mips.REG_R17,16,"R17"}, {18,mips.REG_R18,17,"R18"}, {19,mips.REG_R19,18,"R19"}, {20,mips.REG_R20,19,"R20"}, {21,mips.REG_R21,20,"R21"}, {22,mips.REG_R22,21,"R22"}, {23,mips.REG_R24,22,"R24"}, {24,mips.REG_R25,23,"R25"}, {25,mips.REGSP,-1,"SP"}, {26,mips.REGG,-1,"g"}, {27,mips.REG_R31,24,"R31"}, {28,mips.REG_F0,-1,"F0"}, {29,mips.REG_F1,-1,"F1"}, {30,mips.REG_F2,-1,"F2"}, {31,mips.REG_F3,-1,"F3"}, {32,mips.REG_F4,-1,"F4"}, {33,mips.REG_F5,-1,"F5"}, {34,mips.REG_F6,-1,"F6"}, {35,mips.REG_F7,-1,"F7"}, {36,mips.REG_F8,-1,"F8"}, {37,mips.REG_F9,-1,"F9"}, {38,mips.REG_F10,-1,"F10"}, {39,mips.REG_F11,-1,"F11"}, {40,mips.REG_F12,-1,"F12"}, {41,mips.REG_F13,-1,"F13"}, {42,mips.REG_F14,-1,"F14"}, {43,mips.REG_F15,-1,"F15"}, {44,mips.REG_F16,-1,"F16"}, {45,mips.REG_F17,-1,"F17"}, {46,mips.REG_F18,-1,"F18"}, {47,mips.REG_F19,-1,"F19"}, {48,mips.REG_F20,-1,"F20"}, {49,mips.REG_F21,-1,"F21"}, {50,mips.REG_F22,-1,"F22"}, {51,mips.REG_F23,-1,"F23"}, {52,mips.REG_F24,-1,"F24"}, {53,mips.REG_F25,-1,"F25"}, {54,mips.REG_F26,-1,"F26"}, {55,mips.REG_F27,-1,"F27"}, {56,mips.REG_F28,-1,"F28"}, {57,mips.REG_F29,-1,"F29"}, {58,mips.REG_F30,-1,"F30"}, {59,mips.REG_F31,-1,"F31"}, {60,mips.REG_HI,-1,"HI"}, {61,mips.REG_LO,-1,"LO"}, {62,0,-1,"SB"} });
private static slice<sbyte> paramIntRegMIPS64 = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegMIPS64 = (slice<sbyte>)null;
private static var gpRegMaskMIPS64 = regMask(167772158);
private static var fpRegMaskMIPS64 = regMask((nint)1152921504338411520L);
private static var specialRegMaskMIPS64 = regMask((nint)3458764513820540928L);
private static var framepointerRegMIPS64 = int8(-1);
private static var linkRegMIPS64 = int8(27);
private static array<Register> registersPPC64 = new array<Register>(new Register[] { {0,ppc64.REG_R0,-1,"R0"}, {1,ppc64.REGSP,-1,"SP"}, {2,0,-1,"SB"}, {3,ppc64.REG_R3,0,"R3"}, {4,ppc64.REG_R4,1,"R4"}, {5,ppc64.REG_R5,2,"R5"}, {6,ppc64.REG_R6,3,"R6"}, {7,ppc64.REG_R7,4,"R7"}, {8,ppc64.REG_R8,5,"R8"}, {9,ppc64.REG_R9,6,"R9"}, {10,ppc64.REG_R10,7,"R10"}, {11,ppc64.REG_R11,8,"R11"}, {12,ppc64.REG_R12,9,"R12"}, {13,ppc64.REG_R13,-1,"R13"}, {14,ppc64.REG_R14,10,"R14"}, {15,ppc64.REG_R15,11,"R15"}, {16,ppc64.REG_R16,12,"R16"}, {17,ppc64.REG_R17,13,"R17"}, {18,ppc64.REG_R18,14,"R18"}, {19,ppc64.REG_R19,15,"R19"}, {20,ppc64.REG_R20,16,"R20"}, {21,ppc64.REG_R21,17,"R21"}, {22,ppc64.REG_R22,18,"R22"}, {23,ppc64.REG_R23,19,"R23"}, {24,ppc64.REG_R24,20,"R24"}, {25,ppc64.REG_R25,21,"R25"}, {26,ppc64.REG_R26,22,"R26"}, {27,ppc64.REG_R27,23,"R27"}, {28,ppc64.REG_R28,24,"R28"}, {29,ppc64.REG_R29,25,"R29"}, {30,ppc64.REGG,-1,"g"}, {31,ppc64.REG_R31,-1,"R31"}, {32,ppc64.REG_F0,-1,"F0"}, {33,ppc64.REG_F1,-1,"F1"}, {34,ppc64.REG_F2,-1,"F2"}, {35,ppc64.REG_F3,-1,"F3"}, {36,ppc64.REG_F4,-1,"F4"}, {37,ppc64.REG_F5,-1,"F5"}, {38,ppc64.REG_F6,-1,"F6"}, {39,ppc64.REG_F7,-1,"F7"}, {40,ppc64.REG_F8,-1,"F8"}, {41,ppc64.REG_F9,-1,"F9"}, {42,ppc64.REG_F10,-1,"F10"}, {43,ppc64.REG_F11,-1,"F11"}, {44,ppc64.REG_F12,-1,"F12"}, {45,ppc64.REG_F13,-1,"F13"}, {46,ppc64.REG_F14,-1,"F14"}, {47,ppc64.REG_F15,-1,"F15"}, {48,ppc64.REG_F16,-1,"F16"}, {49,ppc64.REG_F17,-1,"F17"}, {50,ppc64.REG_F18,-1,"F18"}, {51,ppc64.REG_F19,-1,"F19"}, {52,ppc64.REG_F20,-1,"F20"}, {53,ppc64.REG_F21,-1,"F21"}, {54,ppc64.REG_F22,-1,"F22"}, {55,ppc64.REG_F23,-1,"F23"}, {56,ppc64.REG_F24,-1,"F24"}, {57,ppc64.REG_F25,-1,"F25"}, {58,ppc64.REG_F26,-1,"F26"}, {59,ppc64.REG_F27,-1,"F27"}, {60,ppc64.REG_F28,-1,"F28"}, {61,ppc64.REG_F29,-1,"F29"}, {62,ppc64.REG_F30,-1,"F30"}, {63,ppc64.REG_F31,-1,"F31"} });
private static slice<sbyte> paramIntRegPPC64 = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegPPC64 = (slice<sbyte>)null;
private static var gpRegMaskPPC64 = regMask(1073733624);
private static var fpRegMaskPPC64 = regMask((nint)576460743713488896L);
private static var specialRegMaskPPC64 = regMask(0);
private static var framepointerRegPPC64 = int8(1);
private static var linkRegPPC64 = int8(-1);
private static array<Register> registersRISCV64 = new array<Register>(new Register[] { {0,riscv.REG_X0,-1,"X0"}, {1,riscv.REGSP,-1,"SP"}, {2,riscv.REG_X3,0,"X3"}, {3,riscv.REG_X4,-1,"X4"}, {4,riscv.REG_X5,1,"X5"}, {5,riscv.REG_X6,2,"X6"}, {6,riscv.REG_X7,3,"X7"}, {7,riscv.REG_X8,4,"X8"}, {8,riscv.REG_X9,5,"X9"}, {9,riscv.REG_X10,6,"X10"}, {10,riscv.REG_X11,7,"X11"}, {11,riscv.REG_X12,8,"X12"}, {12,riscv.REG_X13,9,"X13"}, {13,riscv.REG_X14,10,"X14"}, {14,riscv.REG_X15,11,"X15"}, {15,riscv.REG_X16,12,"X16"}, {16,riscv.REG_X17,13,"X17"}, {17,riscv.REG_X18,14,"X18"}, {18,riscv.REG_X19,15,"X19"}, {19,riscv.REG_X20,16,"X20"}, {20,riscv.REG_X21,17,"X21"}, {21,riscv.REG_X22,18,"X22"}, {22,riscv.REG_X23,19,"X23"}, {23,riscv.REG_X24,20,"X24"}, {24,riscv.REG_X25,21,"X25"}, {25,riscv.REG_X26,22,"X26"}, {26,riscv.REGG,-1,"g"}, {27,riscv.REG_X28,23,"X28"}, {28,riscv.REG_X29,24,"X29"}, {29,riscv.REG_X30,25,"X30"}, {30,riscv.REG_X31,-1,"X31"}, {31,riscv.REG_F0,-1,"F0"}, {32,riscv.REG_F1,-1,"F1"}, {33,riscv.REG_F2,-1,"F2"}, {34,riscv.REG_F3,-1,"F3"}, {35,riscv.REG_F4,-1,"F4"}, {36,riscv.REG_F5,-1,"F5"}, {37,riscv.REG_F6,-1,"F6"}, {38,riscv.REG_F7,-1,"F7"}, {39,riscv.REG_F8,-1,"F8"}, {40,riscv.REG_F9,-1,"F9"}, {41,riscv.REG_F10,-1,"F10"}, {42,riscv.REG_F11,-1,"F11"}, {43,riscv.REG_F12,-1,"F12"}, {44,riscv.REG_F13,-1,"F13"}, {45,riscv.REG_F14,-1,"F14"}, {46,riscv.REG_F15,-1,"F15"}, {47,riscv.REG_F16,-1,"F16"}, {48,riscv.REG_F17,-1,"F17"}, {49,riscv.REG_F18,-1,"F18"}, {50,riscv.REG_F19,-1,"F19"}, {51,riscv.REG_F20,-1,"F20"}, {52,riscv.REG_F21,-1,"F21"}, {53,riscv.REG_F22,-1,"F22"}, {54,riscv.REG_F23,-1,"F23"}, {55,riscv.REG_F24,-1,"F24"}, {56,riscv.REG_F25,-1,"F25"}, {57,riscv.REG_F26,-1,"F26"}, {58,riscv.REG_F27,-1,"F27"}, {59,riscv.REG_F28,-1,"F28"}, {60,riscv.REG_F29,-1,"F29"}, {61,riscv.REG_F30,-1,"F30"}, {62,riscv.REG_F31,-1,"F31"}, {63,0,-1,"SB"} });
private static slice<sbyte> paramIntRegRISCV64 = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegRISCV64 = (slice<sbyte>)null;
private static var gpRegMaskRISCV64 = regMask(1006632948);
private static var fpRegMaskRISCV64 = regMask((nint)9223372034707292160L);
private static var specialRegMaskRISCV64 = regMask(0);
private static var framepointerRegRISCV64 = int8(-1);
private static var linkRegRISCV64 = int8(0);
private static array<Register> registersS390X = new array<Register>(new Register[] { {0,s390x.REG_R0,0,"R0"}, {1,s390x.REG_R1,1,"R1"}, {2,s390x.REG_R2,2,"R2"}, {3,s390x.REG_R3,3,"R3"}, {4,s390x.REG_R4,4,"R4"}, {5,s390x.REG_R5,5,"R5"}, {6,s390x.REG_R6,6,"R6"}, {7,s390x.REG_R7,7,"R7"}, {8,s390x.REG_R8,8,"R8"}, {9,s390x.REG_R9,9,"R9"}, {10,s390x.REG_R10,-1,"R10"}, {11,s390x.REG_R11,10,"R11"}, {12,s390x.REG_R12,11,"R12"}, {13,s390x.REGG,-1,"g"}, {14,s390x.REG_R14,12,"R14"}, {15,s390x.REGSP,-1,"SP"}, {16,s390x.REG_F0,-1,"F0"}, {17,s390x.REG_F1,-1,"F1"}, {18,s390x.REG_F2,-1,"F2"}, {19,s390x.REG_F3,-1,"F3"}, {20,s390x.REG_F4,-1,"F4"}, {21,s390x.REG_F5,-1,"F5"}, {22,s390x.REG_F6,-1,"F6"}, {23,s390x.REG_F7,-1,"F7"}, {24,s390x.REG_F8,-1,"F8"}, {25,s390x.REG_F9,-1,"F9"}, {26,s390x.REG_F10,-1,"F10"}, {27,s390x.REG_F11,-1,"F11"}, {28,s390x.REG_F12,-1,"F12"}, {29,s390x.REG_F13,-1,"F13"}, {30,s390x.REG_F14,-1,"F14"}, {31,s390x.REG_F15,-1,"F15"}, {32,0,-1,"SB"} });
private static slice<sbyte> paramIntRegS390X = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegS390X = (slice<sbyte>)null;
private static var gpRegMaskS390X = regMask(23551);
private static var fpRegMaskS390X = regMask((nint)4294901760L);
private static var specialRegMaskS390X = regMask(0);
private static var framepointerRegS390X = int8(-1);
private static var linkRegS390X = int8(14);
private static array<Register> registersWasm = new array<Register>(new Register[] { {0,wasm.REG_R0,0,"R0"}, {1,wasm.REG_R1,1,"R1"}, {2,wasm.REG_R2,2,"R2"}, {3,wasm.REG_R3,3,"R3"}, {4,wasm.REG_R4,4,"R4"}, {5,wasm.REG_R5,5,"R5"}, {6,wasm.REG_R6,6,"R6"}, {7,wasm.REG_R7,7,"R7"}, {8,wasm.REG_R8,8,"R8"}, {9,wasm.REG_R9,9,"R9"}, {10,wasm.REG_R10,10,"R10"}, {11,wasm.REG_R11,11,"R11"}, {12,wasm.REG_R12,12,"R12"}, {13,wasm.REG_R13,13,"R13"}, {14,wasm.REG_R14,14,"R14"}, {15,wasm.REG_R15,15,"R15"}, {16,wasm.REG_F0,-1,"F0"}, {17,wasm.REG_F1,-1,"F1"}, {18,wasm.REG_F2,-1,"F2"}, {19,wasm.REG_F3,-1,"F3"}, {20,wasm.REG_F4,-1,"F4"}, {21,wasm.REG_F5,-1,"F5"}, {22,wasm.REG_F6,-1,"F6"}, {23,wasm.REG_F7,-1,"F7"}, {24,wasm.REG_F8,-1,"F8"}, {25,wasm.REG_F9,-1,"F9"}, {26,wasm.REG_F10,-1,"F10"}, {27,wasm.REG_F11,-1,"F11"}, {28,wasm.REG_F12,-1,"F12"}, {29,wasm.REG_F13,-1,"F13"}, {30,wasm.REG_F14,-1,"F14"}, {31,wasm.REG_F15,-1,"F15"}, {32,wasm.REG_F16,-1,"F16"}, {33,wasm.REG_F17,-1,"F17"}, {34,wasm.REG_F18,-1,"F18"}, {35,wasm.REG_F19,-1,"F19"}, {36,wasm.REG_F20,-1,"F20"}, {37,wasm.REG_F21,-1,"F21"}, {38,wasm.REG_F22,-1,"F22"}, {39,wasm.REG_F23,-1,"F23"}, {40,wasm.REG_F24,-1,"F24"}, {41,wasm.REG_F25,-1,"F25"}, {42,wasm.REG_F26,-1,"F26"}, {43,wasm.REG_F27,-1,"F27"}, {44,wasm.REG_F28,-1,"F28"}, {45,wasm.REG_F29,-1,"F29"}, {46,wasm.REG_F30,-1,"F30"}, {47,wasm.REG_F31,-1,"F31"}, {48,wasm.REGSP,-1,"SP"}, {49,wasm.REGG,-1,"g"}, {50,0,-1,"SB"} });
private static slice<sbyte> paramIntRegWasm = (slice<sbyte>)null;
private static slice<sbyte> paramFloatRegWasm = (slice<sbyte>)null;
private static var gpRegMaskWasm = regMask(65535);
private static var fpRegMaskWasm = regMask((nint)281474976645120L);
private static var fp32RegMaskWasm = regMask((nint)4294901760L);
private static var fp64RegMaskWasm = regMask((nint)281470681743360L);
private static var specialRegMaskWasm = regMask(0);
private static var framepointerRegWasm = int8(-1);
private static var linkRegWasm = int8(-1);

} // end ssa_package
