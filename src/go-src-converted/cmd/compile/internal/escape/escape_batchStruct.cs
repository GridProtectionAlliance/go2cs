//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:09:14 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using math = go.math_package;
using strings = go.strings_package;
using @base = go.cmd.compile.@internal.@base_package;
using ir = go.cmd.compile.@internal.ir_package;
using logopt = go.cmd.compile.@internal.logopt_package;
using typecheck = go.cmd.compile.@internal.typecheck_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class escape_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct batch
        {
            // Constructors
            public batch(NilType _)
            {
                this.allLocs = default;
                this.closures = default;
                this.heapLoc = default;
                this.blankLoc = default;
            }

            public batch(slice<ptr<location>> allLocs = default, slice<closure> closures = default, location heapLoc = default, location blankLoc = default)
            {
                this.allLocs = allLocs;
                this.closures = closures;
                this.heapLoc = heapLoc;
                this.blankLoc = blankLoc;
            }

            // Enable comparisons between nil and batch struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(batch value, NilType nil) => value.Equals(default(batch));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(batch value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, batch value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, batch value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator batch(NilType nil) => default(batch);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static batch batch_cast(dynamic value)
        {
            return new batch(value.allLocs, value.closures, value.heapLoc, value.blankLoc);
        }
    }
}}}}