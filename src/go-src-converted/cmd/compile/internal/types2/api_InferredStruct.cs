//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:12:19 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using syntax = go.cmd.compile.@internal.syntax_package;
using fmt = go.fmt_package;
using constant = go.go.constant_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class types2_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Inferred
        {
            // Constructors
            public Inferred(NilType _)
            {
                this.Targs = default;
                this.Sig = default;
            }

            public Inferred(slice<Type> Targs = default, ref ptr<Signature> Sig = default)
            {
                this.Targs = Targs;
                this.Sig = Sig;
            }

            // Enable comparisons between nil and Inferred struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Inferred value, NilType nil) => value.Equals(default(Inferred));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Inferred value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Inferred value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Inferred value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Inferred(NilType nil) => default(Inferred);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Inferred Inferred_cast(dynamic value)
        {
            return new Inferred(value.Targs, ref value.Sig);
        }
    }
}}}}