//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:26:15 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using syntax = go.cmd.compile.@internal.syntax_package;
using fmt = go.fmt_package;
using io = go.io_package;
using sort = go.sort_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class types2_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Scope
        {
            // Constructors
            public Scope(NilType _)
            {
                this.parent = default;
                this.children = default;
                this.elems = default;
                this.pos = default;
                this.end = default;
                this.comment = default;
                this.isFunc = default;
            }

            public Scope(ref ptr<Scope> parent = default, slice<ptr<Scope>> children = default, map<@string, Object> elems = default, syntax.Pos pos = default, syntax.Pos end = default, @string comment = default, bool isFunc = default)
            {
                this.parent = parent;
                this.children = children;
                this.elems = elems;
                this.pos = pos;
                this.end = end;
                this.comment = comment;
                this.isFunc = isFunc;
            }

            // Enable comparisons between nil and Scope struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Scope value, NilType nil) => value.Equals(default(Scope));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Scope value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Scope value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Scope value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Scope(NilType nil) => default(Scope);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Scope Scope_cast(dynamic value)
        {
            return new Scope(ref value.parent, value.children, value.elems, value.pos, value.end, value.comment, value.isFunc);
        }
    }
}}}}