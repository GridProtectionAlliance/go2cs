//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:26:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using syntax = go.cmd.compile.@internal.syntax_package;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class types2_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct subster
        {
            // Constructors
            public subster(NilType _)
            {
                this.check = default;
                this.pos = default;
                this.cache = default;
                this.smap = default;
            }

            public subster(ref ptr<Checker> check = default, syntax.Pos pos = default, map<Type, Type> cache = default, ref ptr<substMap> smap = default)
            {
                this.check = check;
                this.pos = pos;
                this.cache = cache;
                this.smap = smap;
            }

            // Enable comparisons between nil and subster struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(subster value, NilType nil) => value.Equals(default(subster));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(subster value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, subster value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, subster value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator subster(NilType nil) => default(subster);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static subster subster_cast(dynamic value)
        {
            return new subster(ref value.check, value.pos, value.cache, ref value.smap);
        }
    }
}}}}