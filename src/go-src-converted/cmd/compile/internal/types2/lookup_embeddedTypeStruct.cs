//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:26:07 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class types2_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct embeddedType
        {
            // Constructors
            public embeddedType(NilType _)
            {
                this.typ = default;
                this.index = default;
                this.indirect = default;
                this.multiples = default;
            }

            public embeddedType(Type typ = default, slice<nint> index = default, bool indirect = default, bool multiples = default)
            {
                this.typ = typ;
                this.index = index;
                this.indirect = indirect;
                this.multiples = multiples;
            }

            // Enable comparisons between nil and embeddedType struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(embeddedType value, NilType nil) => value.Equals(default(embeddedType));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(embeddedType value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, embeddedType value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, embeddedType value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator embeddedType(NilType nil) => default(embeddedType);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static embeddedType embeddedType_cast(dynamic value)
        {
            return new embeddedType(value.typ, value.index, value.indirect, value.multiples);
        }
    }
}}}}