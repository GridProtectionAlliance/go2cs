//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:12:31 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using syntax = go.cmd.compile.@internal.syntax_package;
using fmt = go.fmt_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class types2_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct error_
        {
            // Constructors
            public error_(NilType _)
            {
                this.desc = default;
                this.soft = default;
            }

            public error_(slice<errorDesc> desc = default, bool soft = default)
            {
                this.desc = desc;
                this.soft = soft;
            }

            // Enable comparisons between nil and error_ struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(error_ value, NilType nil) => value.Equals(default(error_));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(error_ value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, error_ value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, error_ value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator error_(NilType nil) => default(error_);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static error_ error__cast(dynamic value)
        {
            return new error_(value.desc, value.soft);
        }
    }
}}}}