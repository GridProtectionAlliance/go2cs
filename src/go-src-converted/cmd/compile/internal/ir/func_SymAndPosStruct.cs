//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:49:07 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @base = go.cmd.compile.@internal.@base_package;
using types = go.cmd.compile.@internal.types_package;
using obj = go.cmd.@internal.obj_package;
using src = go.cmd.@internal.src_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ir_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct SymAndPos
        {
            // Constructors
            public SymAndPos(NilType _)
            {
                this.Sym = default;
                this.Pos = default;
            }

            public SymAndPos(ref ptr<obj.LSym> Sym = default, src.XPos Pos = default)
            {
                this.Sym = Sym;
                this.Pos = Pos;
            }

            // Enable comparisons between nil and SymAndPos struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(SymAndPos value, NilType nil) => value.Equals(default(SymAndPos));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(SymAndPos value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, SymAndPos value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, SymAndPos value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator SymAndPos(NilType nil) => default(SymAndPos);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static SymAndPos SymAndPos_cast(dynamic value)
        {
            return new SymAndPos(ref value.Sym, value.Pos);
        }
    }
}}}}