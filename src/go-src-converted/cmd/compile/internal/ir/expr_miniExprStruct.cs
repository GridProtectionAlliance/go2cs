//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:00:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using @base = go.cmd.compile.@internal.@base_package;
using types = go.cmd.compile.@internal.types_package;
using obj = go.cmd.@internal.obj_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using constant = go.go.constant_package;
using token = go.go.token_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ir_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct miniExpr
        {
            // Constructors
            public miniExpr(NilType _)
            {
                this.miniNode = default;
                this.typ = default;
                this.init = default;
                this.flags = default;
            }

            public miniExpr(miniNode miniNode = default, ref ptr<types.Type> typ = default, Nodes init = default, bitset8 flags = default)
            {
                this.miniNode = miniNode;
                this.typ = typ;
                this.init = init;
                this.flags = flags;
            }

            // Enable comparisons between nil and miniExpr struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(miniExpr value, NilType nil) => value.Equals(default(miniExpr));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(miniExpr value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, miniExpr value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, miniExpr value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator miniExpr(NilType nil) => default(miniExpr);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static miniExpr miniExpr_cast(dynamic value)
        {
            return new miniExpr(value.miniNode, ref value.typ, value.init, value.flags);
        }
    }
}}}}