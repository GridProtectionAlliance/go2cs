//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:49:16 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @base = go.cmd.compile.@internal.@base_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ir_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(miniStmt))]
        public partial struct RangeStmt
        {
            // miniStmt structure promotion - sourced from value copy
            private readonly ptr<miniStmt> m_miniStmtRef;

            private ref miniStmt miniStmt_val => ref m_miniStmtRef.Value;

            public ref Nodes init => ref m_miniStmtRef.Value.init;

            // Constructors
            public RangeStmt(NilType _)
            {
                this.m_miniStmtRef = new ptr<miniStmt>(new miniStmt(nil));
                this.Label = default;
                this.Def = default;
                this.X = default;
                this.Key = default;
                this.Value = default;
                this.Body = default;
                this.HasBreak = default;
                this.Prealloc = default;
            }

            public RangeStmt(miniStmt miniStmt = default, ref ptr<types.Sym> Label = default, bool Def = default, Node X = default, Node Key = default, Node Value = default, Nodes Body = default, bool HasBreak = default, ref ptr<Name> Prealloc = default)
            {
                this.m_miniStmtRef = new ptr<miniStmt>(miniStmt);
                this.Label = Label;
                this.Def = Def;
                this.X = X;
                this.Key = Key;
                this.Value = Value;
                this.Body = Body;
                this.HasBreak = HasBreak;
                this.Prealloc = Prealloc;
            }

            // Enable comparisons between nil and RangeStmt struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(RangeStmt value, NilType nil) => value.Equals(default(RangeStmt));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(RangeStmt value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, RangeStmt value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, RangeStmt value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator RangeStmt(NilType nil) => default(RangeStmt);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static RangeStmt RangeStmt_cast(dynamic value)
        {
            return new RangeStmt(value.miniStmt, ref value.Label, value.Def, value.X, value.Key, value.Value, value.Body, value.HasBreak, ref value.Prealloc);
        }
    }
}}}}