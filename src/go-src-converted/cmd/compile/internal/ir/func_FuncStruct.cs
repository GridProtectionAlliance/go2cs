//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:49:07 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @base = go.cmd.compile.@internal.@base_package;
using types = go.cmd.compile.@internal.types_package;
using obj = go.cmd.@internal.obj_package;
using src = go.cmd.@internal.src_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class ir_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Func
        {
            // Constructors
            public Func(NilType _)
            {
                this.miniNode = default;
                this.Body = default;
                this.Iota = default;
                this.Nname = default;
                this.OClosure = default;
                this.Shortname = default;
                this.Enter = default;
                this.Exit = default;
                this.Dcl = default;
                this.ClosureVars = default;
                this.Closures = default;
                this.Parents = default;
                this.Marks = default;
                this.LSym = default;
                this.Inl = default;
                this.Closgen = default;
                this.Label = default;
                this.Endlineno = default;
                this.WBPos = default;
                this.Pragma = default;
                this.flags = default;
                this.ABI = default;
                this.ABIRefs = default;
                this.NumDefers = default;
                this.NumReturns = default;
                this.NWBRCalls = default;
            }

            public Func(miniNode miniNode = default, Nodes Body = default, long Iota = default, ref ptr<Name> Nname = default, ref ptr<ClosureExpr> OClosure = default, ref ptr<types.Sym> Shortname = default, Nodes Enter = default, Nodes Exit = default, slice<ptr<Name>> Dcl = default, slice<ptr<Name>> ClosureVars = default, slice<ptr<Func>> Closures = default, slice<ScopeID> Parents = default, slice<Mark> Marks = default, ref ptr<obj.LSym> LSym = default, ref ptr<Inline> Inl = default, int Closgen = default, int Label = default, src.XPos Endlineno = default, src.XPos WBPos = default, PragmaFlag Pragma = default, bitset16 flags = default, obj.ABI ABI = default, obj.ABISet ABIRefs = default, int NumDefers = default, int NumReturns = default, ref ptr<slice<SymAndPos>> NWBRCalls = default)
            {
                this.miniNode = miniNode;
                this.Body = Body;
                this.Iota = Iota;
                this.Nname = Nname;
                this.OClosure = OClosure;
                this.Shortname = Shortname;
                this.Enter = Enter;
                this.Exit = Exit;
                this.Dcl = Dcl;
                this.ClosureVars = ClosureVars;
                this.Closures = Closures;
                this.Parents = Parents;
                this.Marks = Marks;
                this.LSym = LSym;
                this.Inl = Inl;
                this.Closgen = Closgen;
                this.Label = Label;
                this.Endlineno = Endlineno;
                this.WBPos = WBPos;
                this.Pragma = Pragma;
                this.flags = flags;
                this.ABI = ABI;
                this.ABIRefs = ABIRefs;
                this.NumDefers = NumDefers;
                this.NumReturns = NumReturns;
                this.NWBRCalls = NWBRCalls;
            }

            // Enable comparisons between nil and Func struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Func value, NilType nil) => value.Equals(default(Func));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Func value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Func value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Func value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Func(NilType nil) => default(Func);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Func Func_cast(dynamic value)
        {
            return new Func(value.miniNode, value.Body, value.Iota, ref value.Nname, ref value.OClosure, ref value.Shortname, value.Enter, value.Exit, value.Dcl, value.ClosureVars, value.Closures, value.Parents, value.Marks, ref value.LSym, ref value.Inl, value.Closgen, value.Label, value.Endlineno, value.WBPos, value.Pragma, value.flags, value.ABI, value.ABIRefs, value.NumDefers, value.NumReturns, ref value.NWBRCalls);
        }
    }
}}}}