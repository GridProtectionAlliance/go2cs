// Code generated by "stringer -type=Op -trimprefix=O"; DO NOT EDIT.

// package gc -- go2cs converted at 2020 October 08 04:29:44 UTC
// import "cmd/compile/internal/gc" ==> using gc = go.cmd.compile.@internal.gc_package
// Original source: C:\Go\src\cmd\compile\internal\gc\op_string.go
using strconv = go.strconv_package;
using static go.builtin;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        private static void _()
        { 
            // An "invalid array index" compiler error signifies that the constant values have changed.
            // Re-run the stringer command to generate them again.
            var x = default;
            _ = x[OXXX - 0L];
            _ = x[ONAME - 1L];
            _ = x[ONONAME - 2L];
            _ = x[OTYPE - 3L];
            _ = x[OPACK - 4L];
            _ = x[OLITERAL - 5L];
            _ = x[OADD - 6L];
            _ = x[OSUB - 7L];
            _ = x[OOR - 8L];
            _ = x[OXOR - 9L];
            _ = x[OADDSTR - 10L];
            _ = x[OADDR - 11L];
            _ = x[OANDAND - 12L];
            _ = x[OAPPEND - 13L];
            _ = x[OBYTES2STR - 14L];
            _ = x[OBYTES2STRTMP - 15L];
            _ = x[ORUNES2STR - 16L];
            _ = x[OSTR2BYTES - 17L];
            _ = x[OSTR2BYTESTMP - 18L];
            _ = x[OSTR2RUNES - 19L];
            _ = x[OAS - 20L];
            _ = x[OAS2 - 21L];
            _ = x[OAS2DOTTYPE - 22L];
            _ = x[OAS2FUNC - 23L];
            _ = x[OAS2MAPR - 24L];
            _ = x[OAS2RECV - 25L];
            _ = x[OASOP - 26L];
            _ = x[OCALL - 27L];
            _ = x[OCALLFUNC - 28L];
            _ = x[OCALLMETH - 29L];
            _ = x[OCALLINTER - 30L];
            _ = x[OCALLPART - 31L];
            _ = x[OCAP - 32L];
            _ = x[OCLOSE - 33L];
            _ = x[OCLOSURE - 34L];
            _ = x[OCOMPLIT - 35L];
            _ = x[OMAPLIT - 36L];
            _ = x[OSTRUCTLIT - 37L];
            _ = x[OARRAYLIT - 38L];
            _ = x[OSLICELIT - 39L];
            _ = x[OPTRLIT - 40L];
            _ = x[OCONV - 41L];
            _ = x[OCONVIFACE - 42L];
            _ = x[OCONVNOP - 43L];
            _ = x[OCOPY - 44L];
            _ = x[ODCL - 45L];
            _ = x[ODCLFUNC - 46L];
            _ = x[ODCLFIELD - 47L];
            _ = x[ODCLCONST - 48L];
            _ = x[ODCLTYPE - 49L];
            _ = x[ODELETE - 50L];
            _ = x[ODOT - 51L];
            _ = x[ODOTPTR - 52L];
            _ = x[ODOTMETH - 53L];
            _ = x[ODOTINTER - 54L];
            _ = x[OXDOT - 55L];
            _ = x[ODOTTYPE - 56L];
            _ = x[ODOTTYPE2 - 57L];
            _ = x[OEQ - 58L];
            _ = x[ONE - 59L];
            _ = x[OLT - 60L];
            _ = x[OLE - 61L];
            _ = x[OGE - 62L];
            _ = x[OGT - 63L];
            _ = x[ODEREF - 64L];
            _ = x[OINDEX - 65L];
            _ = x[OINDEXMAP - 66L];
            _ = x[OKEY - 67L];
            _ = x[OSTRUCTKEY - 68L];
            _ = x[OLEN - 69L];
            _ = x[OMAKE - 70L];
            _ = x[OMAKECHAN - 71L];
            _ = x[OMAKEMAP - 72L];
            _ = x[OMAKESLICE - 73L];
            _ = x[OMAKESLICECOPY - 74L];
            _ = x[OMUL - 75L];
            _ = x[ODIV - 76L];
            _ = x[OMOD - 77L];
            _ = x[OLSH - 78L];
            _ = x[ORSH - 79L];
            _ = x[OAND - 80L];
            _ = x[OANDNOT - 81L];
            _ = x[ONEW - 82L];
            _ = x[ONEWOBJ - 83L];
            _ = x[ONOT - 84L];
            _ = x[OBITNOT - 85L];
            _ = x[OPLUS - 86L];
            _ = x[ONEG - 87L];
            _ = x[OOROR - 88L];
            _ = x[OPANIC - 89L];
            _ = x[OPRINT - 90L];
            _ = x[OPRINTN - 91L];
            _ = x[OPAREN - 92L];
            _ = x[OSEND - 93L];
            _ = x[OSLICE - 94L];
            _ = x[OSLICEARR - 95L];
            _ = x[OSLICESTR - 96L];
            _ = x[OSLICE3 - 97L];
            _ = x[OSLICE3ARR - 98L];
            _ = x[OSLICEHEADER - 99L];
            _ = x[ORECOVER - 100L];
            _ = x[ORECV - 101L];
            _ = x[ORUNESTR - 102L];
            _ = x[OSELRECV - 103L];
            _ = x[OSELRECV2 - 104L];
            _ = x[OIOTA - 105L];
            _ = x[OREAL - 106L];
            _ = x[OIMAG - 107L];
            _ = x[OCOMPLEX - 108L];
            _ = x[OALIGNOF - 109L];
            _ = x[OOFFSETOF - 110L];
            _ = x[OSIZEOF - 111L];
            _ = x[OBLOCK - 112L];
            _ = x[OBREAK - 113L];
            _ = x[OCASE - 114L];
            _ = x[OCONTINUE - 115L];
            _ = x[ODEFER - 116L];
            _ = x[OEMPTY - 117L];
            _ = x[OFALL - 118L];
            _ = x[OFOR - 119L];
            _ = x[OFORUNTIL - 120L];
            _ = x[OGOTO - 121L];
            _ = x[OIF - 122L];
            _ = x[OLABEL - 123L];
            _ = x[OGO - 124L];
            _ = x[ORANGE - 125L];
            _ = x[ORETURN - 126L];
            _ = x[OSELECT - 127L];
            _ = x[OSWITCH - 128L];
            _ = x[OTYPESW - 129L];
            _ = x[OTCHAN - 130L];
            _ = x[OTMAP - 131L];
            _ = x[OTSTRUCT - 132L];
            _ = x[OTINTER - 133L];
            _ = x[OTFUNC - 134L];
            _ = x[OTARRAY - 135L];
            _ = x[ODDD - 136L];
            _ = x[OINLCALL - 137L];
            _ = x[OEFACE - 138L];
            _ = x[OITAB - 139L];
            _ = x[OIDATA - 140L];
            _ = x[OSPTR - 141L];
            _ = x[OCLOSUREVAR - 142L];
            _ = x[OCFUNC - 143L];
            _ = x[OCHECKNIL - 144L];
            _ = x[OVARDEF - 145L];
            _ = x[OVARKILL - 146L];
            _ = x[OVARLIVE - 147L];
            _ = x[ORESULT - 148L];
            _ = x[OINLMARK - 149L];
            _ = x[ORETJMP - 150L];
            _ = x[OGETG - 151L];
            _ = x[OEND - 152L];

        }

        private static readonly @string _Op_name = (@string)"XXXNAMENONAMETYPEPACKLITERALADDSUBORXORADDSTRADDRANDANDAPPENDBYTES2STRBYTES2STRTMPRUNES2STRSTR2BYTESSTR2BYTESTMPSTR2RUNESASAS2AS2DOTTYPEAS2FUNCAS2MAPRAS2RECVASOPCALLCALLFUNCCALLMETHCALLINTERCALLPARTCAPCLOSECLOSURECOMPLITMAPLITSTRUCTLITARRAYLITSLICELITPTRLITCONVCONVIFACECONVNOPCOPYDCLDCLFUNCDCLFIELDDCLCONSTDCLTYPEDELETEDOTDOTPTRDOTMETHDOTINTERXDOTDOTTYPEDOTTYPE2EQNELTLEGEGTDEREFINDEXINDEXMAPKEYSTRUCTKEYLENMAKEMAKECHANMAKEMAPMAKESLICEMAKESLICECOPYMULDIVMODLSHRSHANDANDNOTNEWNEWOBJNOTBITNOTPLUSNEGORORPANICPRINTPRINTNPARENSENDSLICESLICEARRSLICESTRSLICE3SLICE3ARRSLICEHEADERRECOVERRECVRUNESTRSELRECVSELRECV2IOTAREALIMAGCOMPLEXALIGNOFOFFSETOFSIZEOFBLOCKBREAKCASECONTINUEDEFEREMPTYFALLFORFORUNTILGOTOIFLABELGORANGERETURNSELECTSWITCHTYPESWTCHANTMAPTSTRUCTTINTERTFUNCTARRAYDDDINLCALLEFACEITABIDATASPTRCLOSUREVARCFUNCCHECKNILVARDEFVARKILLVARLIVERESULTINLMARKRETJMPGETGEND";



        private static array<ushort> _Op_index = new array<ushort>(new ushort[] { 0, 3, 7, 13, 17, 21, 28, 31, 34, 36, 39, 45, 49, 55, 61, 70, 82, 91, 100, 112, 121, 123, 126, 136, 143, 150, 157, 161, 165, 173, 181, 190, 198, 201, 206, 213, 220, 226, 235, 243, 251, 257, 261, 270, 277, 281, 284, 291, 299, 307, 314, 320, 323, 329, 336, 344, 348, 355, 363, 365, 367, 369, 371, 373, 375, 380, 385, 393, 396, 405, 408, 412, 420, 427, 436, 449, 452, 455, 458, 461, 464, 467, 473, 476, 482, 485, 491, 495, 498, 502, 507, 512, 518, 523, 527, 532, 540, 548, 554, 563, 574, 581, 585, 592, 599, 607, 611, 615, 619, 626, 633, 641, 647, 652, 657, 661, 669, 674, 679, 683, 686, 694, 698, 700, 705, 707, 712, 718, 724, 730, 736, 741, 745, 752, 758, 763, 769, 772, 779, 784, 788, 793, 797, 807, 812, 820, 826, 833, 840, 846, 853, 859, 863, 866 });

        public static @string String(this Op i)
        {
            if (i >= Op(len(_Op_index) - 1L))
            {
                return "Op(" + strconv.FormatInt(int64(i), 10L) + ")";
            }

            return _Op_name[_Op_index[i].._Op_index[i + 1L]];

        }
    }
}}}}
