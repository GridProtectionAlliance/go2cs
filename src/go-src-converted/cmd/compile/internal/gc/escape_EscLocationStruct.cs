//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:41:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using logopt = go.cmd.compile.@internal.logopt_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using math = go.math_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct EscLocation
        {
            // Constructors
            public EscLocation(NilType _)
            {
                this.n = default;
                this.curfn = default;
                this.edges = default;
                this.loopDepth = default;
                this.derefs = default;
                this.walkgen = default;
                this.dst = default;
                this.dstEdgeIdx = default;
                this.queued = default;
                this.escapes = default;
                this.transient = default;
                this.paramEsc = default;
            }

            public EscLocation(ref ptr<Node> n = default, ref ptr<Node> curfn = default, slice<EscEdge> edges = default, long loopDepth = default, long derefs = default, uint walkgen = default, ref ptr<EscLocation> dst = default, long dstEdgeIdx = default, bool queued = default, bool escapes = default, bool transient = default, EscLeaks paramEsc = default)
            {
                this.n = n;
                this.curfn = curfn;
                this.edges = edges;
                this.loopDepth = loopDepth;
                this.derefs = derefs;
                this.walkgen = walkgen;
                this.dst = dst;
                this.dstEdgeIdx = dstEdgeIdx;
                this.queued = queued;
                this.escapes = escapes;
                this.transient = transient;
                this.paramEsc = paramEsc;
            }

            // Enable comparisons between nil and EscLocation struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(EscLocation value, NilType nil) => value.Equals(default(EscLocation));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(EscLocation value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, EscLocation value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, EscLocation value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator EscLocation(NilType nil) => default(EscLocation);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static EscLocation EscLocation_cast(dynamic value)
        {
            return new EscLocation(ref value.n, ref value.curfn, value.edges, value.loopDepth, value.derefs, value.walkgen, ref value.dst, value.dstEdgeIdx, value.queued, value.escapes, value.transient, value.paramEsc);
        }
    }
}}}}