//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:28:49 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using logopt = go.cmd.compile.@internal.logopt_package;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using fmt = go.fmt_package;
using math = go.math_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct EscHole
        {
            // Constructors
            public EscHole(NilType _)
            {
                this.dst = default;
                this.derefs = default;
                this.notes = default;
                this.uintptrEscapesHack = default;
            }

            public EscHole(ref ptr<EscLocation> dst = default, long derefs = default, ref ptr<EscNote> notes = default, bool uintptrEscapesHack = default)
            {
                this.dst = dst;
                this.derefs = derefs;
                this.notes = notes;
                this.uintptrEscapesHack = uintptrEscapesHack;
            }

            // Enable comparisons between nil and EscHole struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(EscHole value, NilType nil) => value.Equals(default(EscHole));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(EscHole value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, EscHole value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, EscHole value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator EscHole(NilType nil) => default(EscHole);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static EscHole EscHole_cast(dynamic value)
        {
            return new EscHole(ref value.dst, value.derefs, ref value.notes, value.uintptrEscapesHack);
        }
    }
}}}}