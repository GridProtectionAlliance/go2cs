//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:31:17 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using types = go.cmd.compile.@internal.types_package;
using src = go.cmd.@internal.src_package;
using sort = go.sort_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct exprClause
        {
            // Constructors
            public exprClause(NilType _)
            {
                this.pos = default;
                this.lo = default;
                this.hi = default;
                this.jmp = default;
            }

            public exprClause(src.XPos pos = default, ref ptr<Node> lo = default, ref ptr<Node> hi = default, ref ptr<Node> jmp = default)
            {
                this.pos = pos;
                this.lo = lo;
                this.hi = hi;
                this.jmp = jmp;
            }

            // Enable comparisons between nil and exprClause struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(exprClause value, NilType nil) => value.Equals(default(exprClause));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(exprClause value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, exprClause value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, exprClause value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator exprClause(NilType nil) => default(exprClause);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static exprClause exprClause_cast(dynamic value)
        {
            return new exprClause(value.pos, ref value.lo, ref value.hi, ref value.jmp);
        }
    }
}}}}