//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:31:06 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using html = go.html_package;
using os = go.os_package;
using sort = go.sort_package;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using ssa = go.cmd.compile.@internal.ssa_package;
using types = go.cmd.compile.@internal.types_package;
using obj = go.cmd.@internal.obj_package;
using x86 = go.cmd.@internal.obj.x86_package;
using objabi = go.cmd.@internal.objabi_package;
using src = go.cmd.@internal.src_package;
using sys = go.cmd.@internal.sys_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct SSAGenState
        {
            // Constructors
            public SSAGenState(NilType _)
            {
                this.pp = default;
                this.Branches = default;
                this.bstart = default;
                this.SSEto387 = default;
                this.ScratchFpMem = default;
                this.maxarg = default;
                this.livenessMap = default;
                this.lineRunStart = default;
                this.OnWasmStackSkipped = default;
                this.lastDeferLiveness = default;
            }

            public SSAGenState(ref ptr<Progs> pp = default, slice<Branch> Branches = default, slice<ptr<obj.Prog>> bstart = default, map<short, short> SSEto387 = default, ref ptr<Node> ScratchFpMem = default, long maxarg = default, LivenessMap livenessMap = default, ref ptr<obj.Prog> lineRunStart = default, long OnWasmStackSkipped = default, LivenessIndex lastDeferLiveness = default)
            {
                this.pp = pp;
                this.Branches = Branches;
                this.bstart = bstart;
                this.SSEto387 = SSEto387;
                this.ScratchFpMem = ScratchFpMem;
                this.maxarg = maxarg;
                this.livenessMap = livenessMap;
                this.lineRunStart = lineRunStart;
                this.OnWasmStackSkipped = OnWasmStackSkipped;
                this.lastDeferLiveness = lastDeferLiveness;
            }

            // Enable comparisons between nil and SSAGenState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(SSAGenState value, NilType nil) => value.Equals(default(SSAGenState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(SSAGenState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, SSAGenState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, SSAGenState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator SSAGenState(NilType nil) => default(SSAGenState);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static SSAGenState SSAGenState_cast(dynamic value)
        {
            return new SSAGenState(ref value.pp, value.Branches, value.bstart, value.SSEto387, ref value.ScratchFpMem, value.maxarg, value.livenessMap, ref value.lineRunStart, value.OnWasmStackSkipped, value.lastDeferLiveness);
        }
    }
}}}}