//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:43:24 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using ssa = go.cmd.compile.@internal.ssa_package;
using types = go.cmd.compile.@internal.types_package;
using obj = go.cmd.@internal.obj_package;
using objabi = go.cmd.@internal.objabi_package;
using src = go.cmd.@internal.src_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Node
        {
            // Constructors
            public Node(NilType _)
            {
                this.Left = default;
                this.Right = default;
                this.Ninit = default;
                this.Nbody = default;
                this.List = default;
                this.Rlist = default;
                this.Type = default;
                this.Orig = default;
                this.Func = default;
                this.Name = default;
                this.Sym = default;
                this.Xoffset = default;
                this.Pos = default;
                this.flags = default;
                this.Esc = default;
                this.Op = default;
                this.aux = default;
            }

            public Node(ref ptr<Node> Left = default, ref ptr<Node> Right = default, Nodes Ninit = default, Nodes Nbody = default, Nodes List = default, Nodes Rlist = default, ref ptr<types.Type> Type = default, ref ptr<Node> Orig = default, ref ptr<Func> Func = default, ref ptr<Name> Name = default, ref ptr<types.Sym> Sym = default, long Xoffset = default, src.XPos Pos = default, bitset32 flags = default, ushort Esc = default, Op Op = default, byte aux = default)
            {
                this.Left = Left;
                this.Right = Right;
                this.Ninit = Ninit;
                this.Nbody = Nbody;
                this.List = List;
                this.Rlist = Rlist;
                this.Type = Type;
                this.Orig = Orig;
                this.Func = Func;
                this.Name = Name;
                this.Sym = Sym;
                this.Xoffset = Xoffset;
                this.Pos = Pos;
                this.flags = flags;
                this.Esc = Esc;
                this.Op = Op;
                this.aux = aux;
            }

            // Enable comparisons between nil and Node struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Node value, NilType nil) => value.Equals(default(Node));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Node value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Node value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Node value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Node(NilType nil) => default(Node);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Node Node_cast(dynamic value)
        {
            return new Node(ref value.Left, ref value.Right, value.Ninit, value.Nbody, value.List, value.Rlist, ref value.Type, ref value.Orig, ref value.Func, ref value.Name, ref value.Sym, value.Xoffset, value.Pos, value.flags, value.Esc, value.Op, value.aux);
        }
    }
}}}}