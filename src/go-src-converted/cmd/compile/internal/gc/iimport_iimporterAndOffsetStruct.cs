//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:29:12 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using types = go.cmd.compile.@internal.types_package;
using bio = go.cmd.@internal.bio_package;
using goobj2 = go.cmd.@internal.goobj2_package;
using obj = go.cmd.@internal.obj_package;
using src = go.cmd.@internal.src_package;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using io = go.io_package;
using big = go.math.big_package;
using os = go.os_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct iimporterAndOffset
        {
            // Constructors
            public iimporterAndOffset(NilType _)
            {
                this.p = default;
                this.off = default;
            }

            public iimporterAndOffset(ref ptr<iimporter> p = default, ulong off = default)
            {
                this.p = p;
                this.off = off;
            }

            // Enable comparisons between nil and iimporterAndOffset struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(iimporterAndOffset value, NilType nil) => value.Equals(default(iimporterAndOffset));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(iimporterAndOffset value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, iimporterAndOffset value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, iimporterAndOffset value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator iimporterAndOffset(NilType nil) => default(iimporterAndOffset);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static iimporterAndOffset iimporterAndOffset_cast(dynamic value)
        {
            return new iimporterAndOffset(ref value.p, value.off);
        }
    }
}}}}