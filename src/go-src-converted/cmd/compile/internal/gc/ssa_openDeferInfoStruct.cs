//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:43:12 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using html = go.html_package;
using os = go.os_package;
using sort = go.sort_package;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using ssa = go.cmd.compile.@internal.ssa_package;
using types = go.cmd.compile.@internal.types_package;
using obj = go.cmd.@internal.obj_package;
using x86 = go.cmd.@internal.obj.x86_package;
using objabi = go.cmd.@internal.objabi_package;
using src = go.cmd.@internal.src_package;
using sys = go.cmd.@internal.sys_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace compile {
namespace @internal
{
    public static partial class gc_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct openDeferInfo
        {
            // Constructors
            public openDeferInfo(NilType _)
            {
                this.n = default;
                this.closure = default;
                this.closureNode = default;
                this.rcvr = default;
                this.rcvrNode = default;
                this.argVals = default;
                this.argNodes = default;
            }

            public openDeferInfo(ref ptr<Node> n = default, ref ptr<ssa.Value> closure = default, ref ptr<Node> closureNode = default, ref ptr<ssa.Value> rcvr = default, ref ptr<Node> rcvrNode = default, slice<ptr<ssa.Value>> argVals = default, slice<ptr<Node>> argNodes = default)
            {
                this.n = n;
                this.closure = closure;
                this.closureNode = closureNode;
                this.rcvr = rcvr;
                this.rcvrNode = rcvrNode;
                this.argVals = argVals;
                this.argNodes = argNodes;
            }

            // Enable comparisons between nil and openDeferInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(openDeferInfo value, NilType nil) => value.Equals(default(openDeferInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(openDeferInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, openDeferInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, openDeferInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator openDeferInfo(NilType nil) => default(openDeferInfo);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static openDeferInfo openDeferInfo_cast(dynamic value)
        {
            return new openDeferInfo(ref value.n, ref value.closure, ref value.closureNode, ref value.rcvr, ref value.rcvrNode, value.argVals, value.argNodes);
        }
    }
}}}}