//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:37:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using bio = go.cmd.@internal.bio_package;
using goobj2 = go.cmd.@internal.goobj2_package;
using obj = go.cmd.@internal.obj_package;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using sym = go.cmd.link.@internal.sym_package;
using elf = go.debug.elf_package;
using fmt = go.fmt_package;
using log = go.log_package;
using bits = go.math.bits_package;
using os = go.os_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class loader_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(Reloc2))]
        public partial struct ExtRelocView
        {
            // Reloc2 structure promotion - sourced from value copy
            private readonly ptr<Reloc2> m_Reloc2Ref;

            private ref Reloc2 Reloc2_val => ref m_Reloc2Ref.Value;

            public ref ptr<oReader> r => ref m_Reloc2Ref.Value.r;

            public ref ptr<Loader> l => ref m_Reloc2Ref.Value.l;

            public ref objabi.RelocType typ => ref m_Reloc2Ref.Value.typ;

            // Constructors
            public ExtRelocView(NilType _)
            {
                this.m_Reloc2Ref = new ptr<Reloc2>(new Reloc2(nil));
                this.ptr<ExtReloc> = default;
            }

            public ExtRelocView(Reloc2 Reloc2 = default, ref ptr<ExtReloc> ptr<ExtReloc> = default)
            {
                this.m_Reloc2Ref = new ptr<Reloc2>(Reloc2);
                this.ptr<ExtReloc> = ptr<ExtReloc>;
            }

            // Enable comparisons between nil and ExtRelocView struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ExtRelocView value, NilType nil) => value.Equals(default(ExtRelocView));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ExtRelocView value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ExtRelocView value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ExtRelocView value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ExtRelocView(NilType nil) => default(ExtRelocView);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static ExtRelocView ExtRelocView_cast(dynamic value)
        {
            return new ExtRelocView(value.Reloc2, ref value.ptr<ExtReloc>);
        }
    }
}}}}