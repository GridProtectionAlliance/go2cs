//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:48:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class loader_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct bySymValue
        {
            // Value of the bySymValue struct
            private readonly slice<symWithVal> m_value;

            public bySymValue(slice<symWithVal> value) => m_value = value;

            // Enable implicit conversions between slice<symWithVal> and bySymValue struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator bySymValue(slice<symWithVal> value) => new bySymValue(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator slice<symWithVal>(bySymValue value) => value.m_value;
            
            // Enable comparisons between nil and bySymValue struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(bySymValue value, NilType nil) => value.Equals(default(bySymValue));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(bySymValue value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, bySymValue value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, bySymValue value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator bySymValue(NilType nil) => default(bySymValue);
        }
    }
}}}}
