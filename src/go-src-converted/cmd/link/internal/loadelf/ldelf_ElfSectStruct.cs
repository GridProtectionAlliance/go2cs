//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:39:02 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using bio = go.cmd.@internal.bio_package;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using loader = go.cmd.link.@internal.loader_package;
using sym = go.cmd.link.@internal.sym_package;
using elf = go.debug.elf_package;
using binary = go.encoding.binary_package;
using fmt = go.fmt_package;
using io = go.io_package;
using log = go.log_package;
using strings = go.strings_package;
using go;

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class loadelf_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct ElfSect
        {
            // Constructors
            public ElfSect(NilType _)
            {
                this.name = default;
                this.nameoff = default;
                this.type_ = default;
                this.flags = default;
                this.addr = default;
                this.off = default;
                this.size = default;
                this.link = default;
                this.info = default;
                this.align = default;
                this.entsize = default;
                this.@base = default;
                this.readOnlyMem = default;
                this.sym = default;
            }

            public ElfSect(@string name = default, uint nameoff = default, elf.SectionType type_ = default, elf.SectionFlag flags = default, ulong addr = default, ulong off = default, ulong size = default, uint link = default, uint info = default, ulong align = default, ulong entsize = default, slice<byte> @base = default, bool readOnlyMem = default, loader.Sym sym = default)
            {
                this.name = name;
                this.nameoff = nameoff;
                this.type_ = type_;
                this.flags = flags;
                this.addr = addr;
                this.off = off;
                this.size = size;
                this.link = link;
                this.info = info;
                this.align = align;
                this.entsize = entsize;
                this.@base = @base;
                this.readOnlyMem = readOnlyMem;
                this.sym = sym;
            }

            // Enable comparisons between nil and ElfSect struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ElfSect value, NilType nil) => value.Equals(default(ElfSect));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ElfSect value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ElfSect value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ElfSect value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ElfSect(NilType nil) => default(ElfSect);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static ElfSect ElfSect_cast(dynamic value)
        {
            return new ElfSect(value.name, value.nameoff, value.type_, value.flags, value.addr, value.off, value.size, value.link, value.info, value.align, value.entsize, value.@base, value.readOnlyMem, value.sym);
        }
    }
}}}}