// Code generated by "stringer -type=SymKind"; DO NOT EDIT.

// package sym -- go2cs converted at 2022 March 06 23:20:35 UTC
// import "cmd/link/internal/sym" ==> using sym = go.cmd.link.@internal.sym_package
// Original source: C:\Program Files\Go\src\cmd\link\internal\sym\symkind_string.go
using strconv = go.strconv_package;

namespace go.cmd.link.@internal;

public static partial class sym_package {

private static void _() { 
    // An "invalid array index" compiler error signifies that the constant values have changed.
    // Re-run the stringer command to generate them again.
    var x = default;
    _ = x[Sxxx - 0];
    _ = x[STEXT - 1];
    _ = x[SELFRXSECT - 2];
    _ = x[SMACHOPLT - 3];
    _ = x[STYPE - 4];
    _ = x[SSTRING - 5];
    _ = x[SGOSTRING - 6];
    _ = x[SGOFUNC - 7];
    _ = x[SGCBITS - 8];
    _ = x[SRODATA - 9];
    _ = x[SFUNCTAB - 10];
    _ = x[SELFROSECT - 11];
    _ = x[STYPERELRO - 12];
    _ = x[SSTRINGRELRO - 13];
    _ = x[SGOSTRINGRELRO - 14];
    _ = x[SGOFUNCRELRO - 15];
    _ = x[SGCBITSRELRO - 16];
    _ = x[SRODATARELRO - 17];
    _ = x[SFUNCTABRELRO - 18];
    _ = x[STYPELINK - 19];
    _ = x[SITABLINK - 20];
    _ = x[SSYMTAB - 21];
    _ = x[SPCLNTAB - 22];
    _ = x[SFirstWritable - 23];
    _ = x[SBUILDINFO - 24];
    _ = x[SELFSECT - 25];
    _ = x[SMACHO - 26];
    _ = x[SMACHOGOT - 27];
    _ = x[SWINDOWS - 28];
    _ = x[SELFGOT - 29];
    _ = x[SNOPTRDATA - 30];
    _ = x[SINITARR - 31];
    _ = x[SDATA - 32];
    _ = x[SXCOFFTOC - 33];
    _ = x[SBSS - 34];
    _ = x[SNOPTRBSS - 35];
    _ = x[SLIBFUZZER_EXTRA_COUNTER - 36];
    _ = x[STLSBSS - 37];
    _ = x[SXREF - 38];
    _ = x[SMACHOSYMSTR - 39];
    _ = x[SMACHOSYMTAB - 40];
    _ = x[SMACHOINDIRECTPLT - 41];
    _ = x[SMACHOINDIRECTGOT - 42];
    _ = x[SFILEPATH - 43];
    _ = x[SDYNIMPORT - 44];
    _ = x[SHOSTOBJ - 45];
    _ = x[SUNDEFEXT - 46];
    _ = x[SDWARFSECT - 47];
    _ = x[SDWARFCUINFO - 48];
    _ = x[SDWARFCONST - 49];
    _ = x[SDWARFFCN - 50];
    _ = x[SDWARFABSFCN - 51];
    _ = x[SDWARFTYPE - 52];
    _ = x[SDWARFVAR - 53];
    _ = x[SDWARFRANGE - 54];
    _ = x[SDWARFLOC - 55];
    _ = x[SDWARFLINES - 56];
    _ = x[SABIALIAS - 57];

}

private static readonly @string _SymKind_name = "SxxxSTEXTSELFRXSECTSMACHOPLTSTYPESSTRINGSGOSTRINGSGOFUNCSGCBITSSRODATASFUNCTABSELFROSECTSTYPERELROSSTRINGRELROSGOSTRINGRELROSGOFUNCRELROSGCBITSRELROSRODATARELROSFUNCTABRELROSTYPELINKSITABLINKSSYMTABSPCLNTABSFirstWritableSBUILDINFOSELFSECTSMACHOSMACHOGOTSWINDOWSSELFGOTSNOPTRDATASINITARRSDATASXCOFFTOCSBSSSNOPTRBSSSLIBFUZZER_EXTRA_COUNTERSTLSBSSSXREFSMACHOSYMSTRSMACHOSYMTABSMACHOINDIRECTPLTSMACHOINDIRECTGOTSFILEPATHSDYNIMPORTSHOSTOBJSUNDEFEXTSDWARFSECTSDWARFCUINFOSDWARFCONSTSDWARFFCNSDWARFABSFCNSDWARFTYPESDWARFVARSDWARFRANGESDWARFLOCSDWARFLINESSABIALIAS";



private static array<ushort> _SymKind_index = new array<ushort>(new ushort[] { 0, 4, 9, 19, 28, 33, 40, 49, 56, 63, 70, 78, 88, 98, 110, 124, 136, 148, 160, 173, 182, 191, 198, 206, 220, 230, 238, 244, 253, 261, 268, 278, 286, 291, 300, 304, 313, 337, 344, 349, 361, 373, 390, 407, 416, 426, 434, 443, 453, 465, 476, 485, 497, 507, 516, 527, 536, 547, 556 });

public static @string String(this SymKind i) {
    if (i >= SymKind(len(_SymKind_index) - 1)) {
        return "SymKind(" + strconv.FormatInt(int64(i), 10) + ")";
    }
    return _SymKind_name[(int)_SymKind_index[i]..(int)_SymKind_index[i + 1]];

}

} // end sym_package
