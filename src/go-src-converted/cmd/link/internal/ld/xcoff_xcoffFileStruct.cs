//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:50:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using objabi = go.cmd.@internal.objabi_package;
using loader = go.cmd.link.@internal.loader_package;
using sym = go.cmd.link.@internal.sym_package;
using binary = go.encoding.binary_package;
using ioutil = go.io.ioutil_package;
using bits = go.math.bits_package;
using filepath = go.path.filepath_package;
using sort = go.sort_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class ld_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct xcoffFile
        {
            // Constructors
            public xcoffFile(NilType _)
            {
                this.xfhdr = default;
                this.xahdr = default;
                this.sections = default;
                this.sectText = default;
                this.sectData = default;
                this.sectBss = default;
                this.stringTable = default;
                this.sectNameToScnum = default;
                this.loaderSize = default;
                this.symtabOffset = default;
                this.symbolCount = default;
                this.symtabSym = default;
                this.dynLibraries = default;
                this.loaderSymbols = default;
                this.loaderReloc = default;
            }

            public xcoffFile(XcoffFileHdr64 xfhdr = default, XcoffAoutHdr64 xahdr = default, slice<ptr<XcoffScnHdr64>> sections = default, ref ptr<XcoffScnHdr64> sectText = default, ref ptr<XcoffScnHdr64> sectData = default, ref ptr<XcoffScnHdr64> sectBss = default, xcoffStringTable stringTable = default, map<@string, short> sectNameToScnum = default, ulong loaderSize = default, long symtabOffset = default, uint symbolCount = default, slice<xcoffSym> symtabSym = default, map<@string, long> dynLibraries = default, slice<ptr<xcoffLoaderSymbol>> loaderSymbols = default, slice<ptr<xcoffLoaderReloc>> loaderReloc = default)
            {
                this.xfhdr = xfhdr;
                this.xahdr = xahdr;
                this.sections = sections;
                this.sectText = sectText;
                this.sectData = sectData;
                this.sectBss = sectBss;
                this.stringTable = stringTable;
                this.sectNameToScnum = sectNameToScnum;
                this.loaderSize = loaderSize;
                this.symtabOffset = symtabOffset;
                this.symbolCount = symbolCount;
                this.symtabSym = symtabSym;
                this.dynLibraries = dynLibraries;
                this.loaderSymbols = loaderSymbols;
                this.loaderReloc = loaderReloc;
            }

            // Enable comparisons between nil and xcoffFile struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(xcoffFile value, NilType nil) => value.Equals(default(xcoffFile));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(xcoffFile value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, xcoffFile value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, xcoffFile value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator xcoffFile(NilType nil) => default(xcoffFile);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static xcoffFile xcoffFile_cast(dynamic value)
        {
            return new xcoffFile(value.xfhdr, value.xahdr, value.sections, ref value.sectText, ref value.sectData, ref value.sectBss, value.stringTable, value.sectNameToScnum, value.loaderSize, value.symtabOffset, value.symbolCount, value.symtabSym, value.dynLibraries, value.loaderSymbols, value.loaderReloc);
        }
    }
}}}}