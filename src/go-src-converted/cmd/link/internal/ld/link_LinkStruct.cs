//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:21:48 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using objabi = go.cmd.@internal.objabi_package;
using sys = go.cmd.@internal.sys_package;
using loader = go.cmd.link.@internal.loader_package;
using sym = go.cmd.link.@internal.sym_package;
using elf = go.debug.elf_package;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class ld_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(ErrorReporter))]
        public partial struct Link
        {
            // ErrorReporter structure promotion - sourced from value copy
            private readonly ptr<ErrorReporter> m_ErrorReporterRef;

            private ref ErrorReporter ErrorReporter_val => ref m_ErrorReporterRef.Value;

            public ref ptr<Loader> ldr => ref m_ErrorReporterRef.Value.ldr;

            public ref Action AfterErrorAction => ref m_ErrorReporterRef.Value.AfterErrorAction;

            // Constructors
            public Link(NilType _)
            {
                this.Target = default;
                this.m_ErrorReporterRef = new ptr<ErrorReporter>(new ErrorReporter(nil));
                this.ArchSyms = default;
                this.outSem = default;
                this.Out = default;
                this.version = default;
                this.Debugvlog = default;
                this.Bso = default;
                this.Loaded = default;
                this.compressDWARF = default;
                this.Libdir = default;
                this.Library = default;
                this.LibraryByPkg = default;
                this.Shlibs = default;
                this.Textp = default;
                this.Moduledata = default;
                this.PackageFile = default;
                this.PackageShlib = default;
                this.tramps = default;
                this.compUnits = default;
                this.runtimeCU = default;
                this.loader = default;
                this.cgodata = default;
                this.datap = default;
                this.dynexp = default;
                this.numelfsym = default;
                this.generatorSyms = default;
            }

            public Link(Target Target = default, ErrorReporter ErrorReporter = default, ArchSyms ArchSyms = default, channel<nint> outSem = default, ref ptr<OutBuf> Out = default, nint version = default, nint Debugvlog = default, ref ptr<bufio.Writer> Bso = default, bool Loaded = default, bool compressDWARF = default, slice<@string> Libdir = default, slice<ptr<sym.Library>> Library = default, map<@string, ptr<sym.Library>> LibraryByPkg = default, slice<Shlib> Shlibs = default, slice<loader.Sym> Textp = default, loader.Sym Moduledata = default, map<@string, @string> PackageFile = default, map<@string, @string> PackageShlib = default, slice<loader.Sym> tramps = default, slice<ptr<sym.CompilationUnit>> compUnits = default, ref ptr<sym.CompilationUnit> runtimeCU = default, ref ptr<loader.Loader> loader = default, slice<cgodata> cgodata = default, slice<loader.Sym> datap = default, slice<loader.Sym> dynexp = default, nint numelfsym = default, map<loader.Sym, generatorFunc> generatorSyms = default)
            {
                this.Target = Target;
                this.m_ErrorReporterRef = new ptr<ErrorReporter>(ErrorReporter);
                this.ArchSyms = ArchSyms;
                this.outSem = outSem;
                this.Out = Out;
                this.version = version;
                this.Debugvlog = Debugvlog;
                this.Bso = Bso;
                this.Loaded = Loaded;
                this.compressDWARF = compressDWARF;
                this.Libdir = Libdir;
                this.Library = Library;
                this.LibraryByPkg = LibraryByPkg;
                this.Shlibs = Shlibs;
                this.Textp = Textp;
                this.Moduledata = Moduledata;
                this.PackageFile = PackageFile;
                this.PackageShlib = PackageShlib;
                this.tramps = tramps;
                this.compUnits = compUnits;
                this.runtimeCU = runtimeCU;
                this.loader = loader;
                this.cgodata = cgodata;
                this.datap = datap;
                this.dynexp = dynexp;
                this.numelfsym = numelfsym;
                this.generatorSyms = generatorSyms;
            }

            // Enable comparisons between nil and Link struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Link value, NilType nil) => value.Equals(default(Link));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Link value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Link value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Link value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Link(NilType nil) => default(Link);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Link Link_cast(dynamic value)
        {
            return new Link(value.Target, value.ErrorReporter, value.ArchSyms, value.outSem, ref value.Out, value.version, value.Debugvlog, ref value.Bso, value.Loaded, value.compressDWARF, value.Libdir, value.Library, value.LibraryByPkg, value.Shlibs, value.Textp, value.Moduledata, value.PackageFile, value.PackageShlib, value.tramps, value.compUnits, ref value.runtimeCU, ref value.loader, value.cgodata, value.datap, value.dynexp, value.numelfsym, value.generatorSyms);
        }
    }
}}}}