//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:22:02 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using io = go.io_package;
using os = go.os_package;
using runtime = go.runtime_package;
using pprof = go.runtime.pprof_package;
using time = go.time_package;
using unicode = go.unicode_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace link {
namespace @internal
{
    public static partial class benchmark_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct mark
        {
            // Constructors
            public mark(NilType _)
            {
                this.name = default;
                this.startM = default;
                this.endM = default;
                this.gcM = default;
                this.startT = default;
                this.endT = default;
            }

            public mark(@string name = default, runtime.MemStats startM = default, runtime.MemStats endM = default, runtime.MemStats gcM = default, time.Time startT = default, time.Time endT = default)
            {
                this.name = name;
                this.startM = startM;
                this.endM = endM;
                this.gcM = gcM;
                this.startT = startT;
                this.endT = endT;
            }

            // Enable comparisons between nil and mark struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(mark value, NilType nil) => value.Equals(default(mark));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(mark value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, mark value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, mark value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator mark(NilType nil) => default(mark);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static mark mark_cast(dynamic value)
        {
            return new mark(value.name, value.startM, value.endM, value.gcM, value.startT, value.endT);
        }
    }
}}}}