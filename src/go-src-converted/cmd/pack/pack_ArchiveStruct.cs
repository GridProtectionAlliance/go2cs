//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:22:38 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using archive = go.cmd.@internal.archive_package;
using fmt = go.fmt_package;
using io = go.io_package;
using fs = go.io.fs_package;
using log = go.log_package;
using os = go.os_package;
using filepath = go.path.filepath_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Archive
        {
            // Constructors
            public Archive(NilType _)
            {
                this.a = default;
                this.files = default;
                this.pad = default;
                this.matchAll = default;
            }

            public Archive(ref ptr<archive.Archive> a = default, slice<@string> files = default, nint pad = default, bool matchAll = default)
            {
                this.a = a;
                this.files = files;
                this.pad = pad;
                this.matchAll = matchAll;
            }

            // Enable comparisons between nil and Archive struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Archive value, NilType nil) => value.Equals(default(Archive));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Archive value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Archive value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Archive value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Archive(NilType nil) => default(Archive);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Archive Archive_cast(dynamic value)
        {
            return new Archive(ref value.a, value.files, value.pad, value.matchAll);
        }
    }
}