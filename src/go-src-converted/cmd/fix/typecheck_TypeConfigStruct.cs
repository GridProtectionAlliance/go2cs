//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:29:21 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using parser = go.go.parser_package;
using token = go.go.token_package;
using exec = go.@internal.execabs_package;
using os = go.os_package;
using filepath = go.path.filepath_package;
using reflect = go.reflect_package;
using runtime = go.runtime_package;
using strings = go.strings_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct TypeConfig
        {
            // Constructors
            public TypeConfig(NilType _)
            {
                this.Type = default;
                this.Var = default;
                this.Func = default;
                this.External = default;
            }

            public TypeConfig(map<@string, ptr<Type>> Type = default, map<@string, @string> Var = default, map<@string, @string> Func = default, map<@string, @string> External = default)
            {
                this.Type = Type;
                this.Var = Var;
                this.Func = Func;
                this.External = External;
            }

            // Enable comparisons between nil and TypeConfig struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(TypeConfig value, NilType nil) => value.Equals(default(TypeConfig));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(TypeConfig value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, TypeConfig value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, TypeConfig value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator TypeConfig(NilType nil) => default(TypeConfig);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static TypeConfig TypeConfig_cast(dynamic value)
        {
            return new TypeConfig(value.Type, value.Var, value.Func, value.External);
        }
    }
}