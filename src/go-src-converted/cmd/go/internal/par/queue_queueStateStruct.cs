//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:30:10 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class par_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct queueState
        {
            // Constructors
            public queueState(NilType _)
            {
                this.active = default;
                this.backlog = default;
                this.idle = default;
            }

            public queueState(nint active = default, slice<Action> backlog = default, channel<object> idle = default)
            {
                this.active = active;
                this.backlog = backlog;
                this.idle = idle;
            }

            // Enable comparisons between nil and queueState struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(queueState value, NilType nil) => value.Equals(default(queueState));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(queueState value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, queueState value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, queueState value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator queueState(NilType nil) => default(queueState);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static queueState queueState_cast(dynamic value)
        {
            return new queueState(value.active, value.backlog, value.idle);
        }
    }
}}}}