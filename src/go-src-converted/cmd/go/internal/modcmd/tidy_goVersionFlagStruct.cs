//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:19:36 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using @base = go.cmd.go.@internal.@base_package;
using cfg = go.cmd.go.@internal.cfg_package;
using imports = go.cmd.go.@internal.imports_package;
using modload = go.cmd.go.@internal.modload_package;
using context = go.context_package;
using fmt = go.fmt_package;
using modfile = go.golang.org.x.mod.modfile_package;
using semver = go.golang.org.x.mod.semver_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class modcmd_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct goVersionFlag
        {
            // Constructors
            public goVersionFlag(NilType _)
            {
                this.v = default;
            }

            public goVersionFlag(@string v = default)
            {
                this.v = v;
            }

            // Enable comparisons between nil and goVersionFlag struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(goVersionFlag value, NilType nil) => value.Equals(default(goVersionFlag));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(goVersionFlag value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, goVersionFlag value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, goVersionFlag value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator goVersionFlag(NilType nil) => default(goVersionFlag);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static goVersionFlag goVersionFlag_cast(dynamic value)
        {
            return new goVersionFlag(value.v);
        }
    }
}}}}