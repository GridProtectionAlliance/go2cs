//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:16:22 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using traceviewer = go.cmd.@internal.traceviewer_package;
using context = go.context_package;
using json = go.encoding.json_package;
using errors = go.errors_package;
using os = go.os_package;
using strings = go.strings_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class trace_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Span
        {
            // Constructors
            public Span(NilType _)
            {
                this.t = default;
                this.name = default;
                this.tid = default;
                this.start = default;
                this.end = default;
            }

            public Span(ref ptr<tracer> t = default, @string name = default, ulong tid = default, time.Time start = default, time.Time end = default)
            {
                this.t = t;
                this.name = name;
                this.tid = tid;
                this.start = start;
                this.end = end;
            }

            // Enable comparisons between nil and Span struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Span value, NilType nil) => value.Equals(default(Span));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Span value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Span value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Span value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Span(NilType nil) => default(Span);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Span Span_cast(dynamic value)
        {
            return new Span(ref value.t, value.name, value.tid, value.start, value.end);
        }
    }
}}}}