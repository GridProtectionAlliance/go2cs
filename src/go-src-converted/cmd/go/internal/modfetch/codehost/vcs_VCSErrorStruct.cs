//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:32:08 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using errors = go.errors_package;
using fmt = go.fmt_package;
using lazyregexp = go.@internal.lazyregexp_package;
using io = go.io_package;
using fs = go.io.fs_package;
using os = go.os_package;
using filepath = go.path.filepath_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;
using lockedfile = go.cmd.go.@internal.lockedfile_package;
using par = go.cmd.go.@internal.par_package;
using str = go.cmd.go.@internal.str_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal {
namespace modfetch
{
    public static partial class codehost_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct VCSError
        {
            // Constructors
            public VCSError(NilType _)
            {
                this.Err = default;
            }

            public VCSError(error Err = default)
            {
                this.Err = Err;
            }

            // Enable comparisons between nil and VCSError struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(VCSError value, NilType nil) => value.Equals(default(VCSError));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(VCSError value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, VCSError value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, VCSError value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator VCSError(NilType nil) => default(VCSError);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static VCSError VCSError_cast(dynamic value)
        {
            return new VCSError(value.Err);
        }
    }
}}}}}