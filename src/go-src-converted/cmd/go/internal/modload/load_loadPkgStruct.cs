//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:46:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using @base = go.cmd.go.@internal.@base_package;
using cfg = go.cmd.go.@internal.cfg_package;
using imports = go.cmd.go.@internal.imports_package;
using modfetch = go.cmd.go.@internal.modfetch_package;
using mvs = go.cmd.go.@internal.mvs_package;
using par = go.cmd.go.@internal.par_package;
using search = go.cmd.go.@internal.search_package;
using str = go.cmd.go.@internal.str_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using build = go.go.build_package;
using os = go.os_package;
using path = go.path_package;
using filepath = go.path.filepath_package;
using sort = go.sort_package;
using strings = go.strings_package;
using module = go.golang.org.x.mod.module_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class modload_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct loadPkg
        {
            // Constructors
            public loadPkg(NilType _)
            {
                this.path = default;
                this.mod = default;
                this.dir = default;
                this.imports = default;
                this.err = default;
                this.stack = default;
                this.test = default;
                this.testOf = default;
                this.testImports = default;
            }

            public loadPkg(@string path = default, module.Version mod = default, @string dir = default, slice<ptr<loadPkg>> imports = default, error err = default, ref ptr<loadPkg> stack = default, ref ptr<loadPkg> test = default, ref ptr<loadPkg> testOf = default, slice<@string> testImports = default)
            {
                this.path = path;
                this.mod = mod;
                this.dir = dir;
                this.imports = imports;
                this.err = err;
                this.stack = stack;
                this.test = test;
                this.testOf = testOf;
                this.testImports = testImports;
            }

            // Enable comparisons between nil and loadPkg struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(loadPkg value, NilType nil) => value.Equals(default(loadPkg));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(loadPkg value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, loadPkg value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, loadPkg value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator loadPkg(NilType nil) => default(loadPkg);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static loadPkg loadPkg_cast(dynamic value)
        {
            return new loadPkg(value.path, value.mod, value.dir, value.imports, value.err, ref value.stack, ref value.test, ref value.testOf, value.testImports);
        }
    }
}}}}