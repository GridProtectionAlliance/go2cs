//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:17:15 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using context = go.context_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using build = go.go.build_package;
using doc = go.go.doc_package;
using parser = go.go.parser_package;
using token = go.go.token_package;
using lazytemplate = go.@internal.lazytemplate_package;
using filepath = go.path.filepath_package;
using sort = go.sort_package;
using strings = go.strings_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using fsys = go.cmd.go.@internal.fsys_package;
using str = go.cmd.go.@internal.str_package;
using trace = go.cmd.go.@internal.trace_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class load_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct TestCover
        {
            // Constructors
            public TestCover(NilType _)
            {
                this.Mode = default;
                this.Local = default;
                this.Pkgs = default;
                this.Paths = default;
                this.Vars = default;
                this.DeclVars = default;
            }

            public TestCover(@string Mode = default, bool Local = default, slice<ptr<Package>> Pkgs = default, slice<@string> Paths = default, slice<coverInfo> Vars = default, Func<ptr<Package>, @string, map<@string, ptr<CoverVar>>> DeclVars = default)
            {
                this.Mode = Mode;
                this.Local = Local;
                this.Pkgs = Pkgs;
                this.Paths = Paths;
                this.Vars = Vars;
                this.DeclVars = DeclVars;
            }

            // Enable comparisons between nil and TestCover struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(TestCover value, NilType nil) => value.Equals(default(TestCover));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(TestCover value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, TestCover value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, TestCover value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator TestCover(NilType nil) => default(TestCover);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static TestCover TestCover_cast(dynamic value)
        {
            return new TestCover(value.Mode, value.Local, value.Pkgs, value.Paths, value.Vars, value.DeclVars);
        }
    }
}}}}