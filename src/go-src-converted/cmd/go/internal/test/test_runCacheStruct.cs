//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:17:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using context = go.context_package;
using sha256 = go.crypto.sha256_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using build = go.go.build_package;
using exec = go.@internal.execabs_package;
using io = go.io_package;
using fs = go.io.fs_package;
using os = go.os_package;
using path = go.path_package;
using filepath = go.path.filepath_package;
using regexp = go.regexp_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;
using @base = go.cmd.go.@internal.@base_package;
using cache = go.cmd.go.@internal.cache_package;
using cfg = go.cmd.go.@internal.cfg_package;
using load = go.cmd.go.@internal.load_package;
using lockedfile = go.cmd.go.@internal.lockedfile_package;
using search = go.cmd.go.@internal.search_package;
using str = go.cmd.go.@internal.str_package;
using trace = go.cmd.go.@internal.trace_package;
using work = go.cmd.go.@internal.work_package;
using test2json = go.cmd.@internal.test2json_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class test_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct runCache
        {
            // Constructors
            public runCache(NilType _)
            {
                this.disableCache = default;
                this.buf = default;
                this.id1 = default;
                this.id2 = default;
            }

            public runCache(bool disableCache = default, ref ptr<bytes.Buffer> buf = default, cache.ActionID id1 = default, cache.ActionID id2 = default)
            {
                this.disableCache = disableCache;
                this.buf = buf;
                this.id1 = id1;
                this.id2 = id2;
            }

            // Enable comparisons between nil and runCache struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(runCache value, NilType nil) => value.Equals(default(runCache));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(runCache value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, runCache value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, runCache value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator runCache(NilType nil) => default(runCache);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static runCache runCache_cast(dynamic value)
        {
            return new runCache(value.disableCache, ref value.buf, value.id1, value.id2);
        }
    }
}}}}