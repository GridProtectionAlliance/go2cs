//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:45:27 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using heap = go.container.heap_package;
using elf = go.debug.elf_package;
using json = go.encoding.json_package;
using fmt = go.fmt_package;
using ioutil = go.io.ioutil_package;
using os = go.os_package;
using filepath = go.path.filepath_package;
using runtime = go.runtime_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;
using @base = go.cmd.go.@internal.@base_package;
using cache = go.cmd.go.@internal.cache_package;
using cfg = go.cmd.go.@internal.cfg_package;
using load = go.cmd.go.@internal.load_package;
using buildid = go.cmd.@internal.buildid_package;
using go;

#nullable enable

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class work_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Builder
        {
            // Constructors
            public Builder(NilType _)
            {
                this.WorkDir = default;
                this.actionCache = default;
                this.mkdirCache = default;
                this.flagCache = default;
                this.Print = default;
                this.IsCmdList = default;
                this.NeedError = default;
                this.NeedExport = default;
                this.NeedCompiledGoFiles = default;
                this.objdirSeq = default;
                this.pkgSeq = default;
                this.output = default;
                this.scriptDir = default;
                this.exec = default;
                this.readySema = default;
                this.ready = default;
                this.id = default;
                this.toolIDCache = default;
                this.buildIDCache = default;
            }

            public Builder(@string WorkDir = default, map<cacheKey, ptr<Action>> actionCache = default, map<@string, bool> mkdirCache = default, map<array<@string>, bool> flagCache = default, Func<object[], (long, error)> Print = default, bool IsCmdList = default, bool NeedError = default, bool NeedExport = default, bool NeedCompiledGoFiles = default, long objdirSeq = default, long pkgSeq = default, sync.Mutex output = default, @string scriptDir = default, sync.Mutex exec = default, channel<bool> readySema = default, actionQueue ready = default, sync.Mutex id = default, map<@string, @string> toolIDCache = default, map<@string, @string> buildIDCache = default)
            {
                this.WorkDir = WorkDir;
                this.actionCache = actionCache;
                this.mkdirCache = mkdirCache;
                this.flagCache = flagCache;
                this.Print = Print;
                this.IsCmdList = IsCmdList;
                this.NeedError = NeedError;
                this.NeedExport = NeedExport;
                this.NeedCompiledGoFiles = NeedCompiledGoFiles;
                this.objdirSeq = objdirSeq;
                this.pkgSeq = pkgSeq;
                this.output = output;
                this.scriptDir = scriptDir;
                this.exec = exec;
                this.readySema = readySema;
                this.ready = ready;
                this.id = id;
                this.toolIDCache = toolIDCache;
                this.buildIDCache = buildIDCache;
            }

            // Enable comparisons between nil and Builder struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Builder value, NilType nil) => value.Equals(default(Builder));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Builder value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Builder value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Builder value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Builder(NilType nil) => default(Builder);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Builder Builder_cast(dynamic value)
        {
            return new Builder(value.WorkDir, value.actionCache, value.mkdirCache, value.flagCache, value.Print, value.IsCmdList, value.NeedError, value.NeedExport, value.NeedCompiledGoFiles, value.objdirSeq, value.pkgSeq, value.output, value.scriptDir, value.exec, value.readySema, value.ready, value.id, value.toolIDCache, value.buildIDCache);
        }
    }
}}}}