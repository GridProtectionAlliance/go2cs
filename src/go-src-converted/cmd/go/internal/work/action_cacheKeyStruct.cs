//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:33:56 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using heap = go.container.heap_package;
using elf = go.debug.elf_package;
using json = go.encoding.json_package;
using fmt = go.fmt_package;
using ioutil = go.io.ioutil_package;
using os = go.os_package;
using filepath = go.path.filepath_package;
using runtime = go.runtime_package;
using strings = go.strings_package;
using sync = go.sync_package;
using time = go.time_package;
using @base = go.cmd.go.@internal.@base_package;
using cache = go.cmd.go.@internal.cache_package;
using cfg = go.cmd.go.@internal.cfg_package;
using load = go.cmd.go.@internal.load_package;
using buildid = go.cmd.@internal.buildid_package;
using go;

namespace go {
namespace cmd {
namespace go {
namespace @internal
{
    public static partial class work_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct cacheKey
        {
            // Constructors
            public cacheKey(NilType _)
            {
                this.mode = default;
                this.p = default;
            }

            public cacheKey(@string mode = default, ref ptr<load.Package> p = default)
            {
                this.mode = mode;
                this.p = p;
            }

            // Enable comparisons between nil and cacheKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(cacheKey value, NilType nil) => value.Equals(default(cacheKey));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(cacheKey value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, cacheKey value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, cacheKey value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator cacheKey(NilType nil) => default(cacheKey);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static cacheKey cacheKey_cast(dynamic value)
        {
            return new cacheKey(value.mode, ref value.p);
        }
    }
}}}}