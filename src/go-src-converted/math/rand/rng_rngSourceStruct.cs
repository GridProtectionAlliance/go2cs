//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:32:04 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;

using go;

#nullable enable

namespace go {
namespace math
{
    public static partial class rand_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct rngSource
        {
            // Constructors
            public rngSource(NilType _)
            {
                this.tap = default;
                this.feed = default;
                this.vec = default;
            }

            public rngSource(nint tap = default, nint feed = default, array<long> vec = default)
            {
                this.tap = tap;
                this.feed = feed;
                this.vec = vec;
            }

            // Enable comparisons between nil and rngSource struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(rngSource value, NilType nil) => value.Equals(default(rngSource));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(rngSource value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, rngSource value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, rngSource value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator rngSource(NilType nil) => default(rngSource);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static rngSource rngSource_cast(dynamic value)
        {
            return new rngSource(value.tap, value.feed, value.vec);
        }
    }
}}