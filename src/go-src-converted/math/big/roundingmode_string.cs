// Code generated by "stringer -type=RoundingMode"; DO NOT EDIT.

// package big -- go2cs converted at 2020 October 09 04:53:40 UTC
// import "math/big" ==> using big = go.math.big_package
// Original source: C:\Go\src\math\big\roundingmode_string.go
using strconv = go.strconv_package;
using static go.builtin;

namespace go {
namespace math
{
    public static partial class big_package
    {
        private static readonly @string _RoundingMode_name = (@string)"ToNearestEvenToNearestAwayToZeroAwayFromZeroToNegativeInfToPositiveInf";



        private static array<byte> _RoundingMode_index = new array<byte>(new byte[] { 0, 13, 26, 32, 44, 57, 70 });

        public static @string String(this RoundingMode i)
        {
            if (i >= RoundingMode(len(_RoundingMode_index) - 1L))
            {
                return "RoundingMode(" + strconv.FormatInt(int64(i), 10L) + ")";
            }

            return _RoundingMode_name[_RoundingMode_index[i].._RoundingMode_index[i + 1L]];

        }
    }
}}
