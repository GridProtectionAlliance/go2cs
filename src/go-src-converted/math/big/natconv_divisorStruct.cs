//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:25:48 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using math = go.math_package;
using bits = go.math.bits_package;
using sync = go.sync_package;
using go;

namespace go {
namespace math
{
    public static partial class big_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct divisor
        {
            // Constructors
            public divisor(NilType _)
            {
                this.bbb = default;
                this.nbits = default;
                this.ndigits = default;
            }

            public divisor(nat bbb = default, long nbits = default, long ndigits = default)
            {
                this.bbb = bbb;
                this.nbits = nbits;
                this.ndigits = ndigits;
            }

            // Enable comparisons between nil and divisor struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(divisor value, NilType nil) => value.Equals(default(divisor));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(divisor value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, divisor value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, divisor value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator divisor(NilType nil) => default(divisor);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static divisor divisor_cast(dynamic value)
        {
            return new divisor(value.bbb, value.nbits, value.ndigits);
        }
    }
}}