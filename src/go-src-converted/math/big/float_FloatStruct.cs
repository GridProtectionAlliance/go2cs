//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:25:30 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using math = go.math_package;
using bits = go.math.bits_package;
using go;

namespace go {
namespace math
{
    public static partial class big_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Float
        {
            // Constructors
            public Float(NilType _)
            {
                this.prec = default;
                this.mode = default;
                this.acc = default;
                this.form = default;
                this.neg = default;
                this.mant = default;
                this.exp = default;
            }

            public Float(uint prec = default, RoundingMode mode = default, Accuracy acc = default, form form = default, bool neg = default, nat mant = default, int exp = default)
            {
                this.prec = prec;
                this.mode = mode;
                this.acc = acc;
                this.form = form;
                this.neg = neg;
                this.mant = mant;
                this.exp = exp;
            }

            // Enable comparisons between nil and Float struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Float value, NilType nil) => value.Equals(default(Float));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Float value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Float value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Float value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Float(NilType nil) => default(Float);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Float Float_cast(dynamic value)
        {
            return new Float(value.prec, value.mode, value.acc, value.form, value.neg, value.mant, value.exp);
        }
    }
}}