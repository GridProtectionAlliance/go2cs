//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:53:30 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using go;

#nullable enable

namespace go {
namespace math
{
    public static partial class big_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct byteReader
        {
            // ScanState.ReadRune function promotion
            private delegate (long, error) ReadRuneByVal(T value);
            private delegate (long, error) ReadRuneByRef(ref T value);

            private static readonly ReadRuneByVal s_ReadRuneByVal;
            private static readonly ReadRuneByRef s_ReadRuneByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) ReadRune() => s_ReadRuneByRef?.Invoke(ref this) ?? s_ReadRuneByVal?.Invoke(this) ?? ScanState?.ReadRune() ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);

            // ScanState.UnreadRune function promotion
            private delegate (long, error) UnreadRuneByVal(T value);
            private delegate (long, error) UnreadRuneByRef(ref T value);

            private static readonly UnreadRuneByVal s_UnreadRuneByVal;
            private static readonly UnreadRuneByRef s_UnreadRuneByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) UnreadRune() => s_UnreadRuneByRef?.Invoke(ref this) ?? s_UnreadRuneByVal?.Invoke(this) ?? ScanState?.UnreadRune() ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);

            // ScanState.SkipSpace function promotion
            private delegate (long, error) SkipSpaceByVal(T value);
            private delegate (long, error) SkipSpaceByRef(ref T value);

            private static readonly SkipSpaceByVal s_SkipSpaceByVal;
            private static readonly SkipSpaceByRef s_SkipSpaceByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) SkipSpace() => s_SkipSpaceByRef?.Invoke(ref this) ?? s_SkipSpaceByVal?.Invoke(this) ?? ScanState?.SkipSpace() ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);

            // ScanState.Token function promotion
            private delegate (long, error) TokenByVal(T value, bool skipSpace, Func<int, bool> f);
            private delegate (long, error) TokenByRef(ref T value, bool skipSpace, Func<int, bool> f);

            private static readonly TokenByVal s_TokenByVal;
            private static readonly TokenByRef s_TokenByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) Token(bool skipSpace, Func<int, bool> f) => s_TokenByRef?.Invoke(ref this, skipSpace, f) ?? s_TokenByVal?.Invoke(this, skipSpace, f) ?? ScanState?.Token(skipSpace, f) ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);

            // ScanState.Width function promotion
            private delegate (long, error) WidthByVal(T value);
            private delegate (long, error) WidthByRef(ref T value);

            private static readonly WidthByVal s_WidthByVal;
            private static readonly WidthByRef s_WidthByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) Width() => s_WidthByRef?.Invoke(ref this) ?? s_WidthByVal?.Invoke(this) ?? ScanState?.Width() ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);

            // ScanState.Read function promotion
            private delegate (long, error) ReadByVal(T value, slice<byte> buf);
            private delegate (long, error) ReadByRef(ref T value, slice<byte> buf);

            private static readonly ReadByVal s_ReadByVal;
            private static readonly ReadByRef s_ReadByRef;

            [DebuggerNonUserCode, MethodImpl(MethodImplOptions.AggressiveInlining)]
            public (long, error) Read(slice<byte> buf) => s_ReadByRef?.Invoke(ref this, buf) ?? s_ReadByVal?.Invoke(this, buf) ?? ScanState?.Read(buf) ?? throw new PanicException(RuntimeErrorPanic.NilPointerDereference);
            
            [DebuggerStepperBoundary]
            static byteReader()
            {
                Type targetType = typeof(byteReader);
                MethodInfo extensionMethod;
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("ReadRune");

                if ((object)extensionMethod != null)
                {
                    s_ReadRuneByRef = extensionMethod.CreateStaticDelegate(typeof(ReadRuneByRef)) as ReadRuneByRef;

                    if ((object)s_ReadRuneByRef == null)
                        s_ReadRuneByVal = extensionMethod.CreateStaticDelegate(typeof(ReadRuneByVal)) as ReadRuneByVal;
                }
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("UnreadRune");

                if ((object)extensionMethod != null)
                {
                    s_UnreadRuneByRef = extensionMethod.CreateStaticDelegate(typeof(UnreadRuneByRef)) as UnreadRuneByRef;

                    if ((object)s_UnreadRuneByRef == null)
                        s_UnreadRuneByVal = extensionMethod.CreateStaticDelegate(typeof(UnreadRuneByVal)) as UnreadRuneByVal;
                }
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("SkipSpace");

                if ((object)extensionMethod != null)
                {
                    s_SkipSpaceByRef = extensionMethod.CreateStaticDelegate(typeof(SkipSpaceByRef)) as SkipSpaceByRef;

                    if ((object)s_SkipSpaceByRef == null)
                        s_SkipSpaceByVal = extensionMethod.CreateStaticDelegate(typeof(SkipSpaceByVal)) as SkipSpaceByVal;
                }
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Token");

                if ((object)extensionMethod != null)
                {
                    s_TokenByRef = extensionMethod.CreateStaticDelegate(typeof(TokenByRef)) as TokenByRef;

                    if ((object)s_TokenByRef == null)
                        s_TokenByVal = extensionMethod.CreateStaticDelegate(typeof(TokenByVal)) as TokenByVal;
                }
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Width");

                if ((object)extensionMethod != null)
                {
                    s_WidthByRef = extensionMethod.CreateStaticDelegate(typeof(WidthByRef)) as WidthByRef;

                    if ((object)s_WidthByRef == null)
                        s_WidthByVal = extensionMethod.CreateStaticDelegate(typeof(WidthByVal)) as WidthByVal;
                }
                
                extensionMethod = targetType.GetExtensionMethodSearchingPromotions("Read");

                if ((object)extensionMethod != null)
                {
                    s_ReadByRef = extensionMethod.CreateStaticDelegate(typeof(ReadByRef)) as ReadByRef;

                    if ((object)s_ReadByRef == null)
                        s_ReadByVal = extensionMethod.CreateStaticDelegate(typeof(ReadByVal)) as ReadByVal;
                }
            }

            // Constructors
            public byteReader(NilType _)
            {
                this.ScanState = default;
            }

            public byteReader(fmt.ScanState ScanState = default)
            {
                this.ScanState = ScanState;
            }

            // Enable comparisons between nil and byteReader struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(byteReader value, NilType nil) => value.Equals(default(byteReader));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(byteReader value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, byteReader value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, byteReader value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator byteReader(NilType nil) => default(byteReader);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static byteReader byteReader_cast(dynamic value)
        {
            return new byteReader(value.ScanState);
        }
    }
}}