//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:57:10 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using ast = go.go.ast_package;
using constant = go.go.constant_package;
using token = go.go.token_package;
using types = go.go.types_package;
using sync = go.sync_package;
using typeutil = go.golang.org.x.tools.go.types.typeutil_package;
using go;

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct NamedConst
        {
            // Constructors
            public NamedConst(NilType _)
            {
                this.@object = default;
                this.Value = default;
                this.pkg = default;
            }

            public NamedConst(ref ptr<types.Const> @object = default, ref ptr<Const> Value = default, ref ptr<Package> pkg = default)
            {
                this.@object = @object;
                this.Value = Value;
                this.pkg = pkg;
            }

            // Enable comparisons between nil and NamedConst struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NamedConst value, NilType nil) => value.Equals(default(NamedConst));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NamedConst value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, NamedConst value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, NamedConst value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator NamedConst(NilType nil) => default(NamedConst);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static NamedConst NamedConst_cast(dynamic value)
        {
            return new NamedConst(ref value.@object, ref value.Value, ref value.pkg);
        }
    }
}}}}}