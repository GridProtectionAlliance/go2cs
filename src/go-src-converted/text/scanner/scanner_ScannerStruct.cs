//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:43:17 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using io = go.io_package;
using os = go.os_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace text
{
    public static partial class scanner_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(Position))]
        public partial struct Scanner
        {
            // Position structure promotion - sourced from value copy
            private readonly ptr<Position> m_PositionRef;

            private ref Position Position_val => ref m_PositionRef.Value;

            public ref @string Filename => ref m_PositionRef.Value.Filename;

            public ref nint Offset => ref m_PositionRef.Value.Offset;

            public ref nint Line => ref m_PositionRef.Value.Line;

            public ref nint Column => ref m_PositionRef.Value.Column;

            // Constructors
            public Scanner(NilType _)
            {
                this.src = default;
                this.srcBuf = default;
                this.srcPos = default;
                this.srcEnd = default;
                this.srcBufOffset = default;
                this.line = default;
                this.column = default;
                this.lastLineLen = default;
                this.lastCharLen = default;
                this.tokBuf = default;
                this.tokPos = default;
                this.tokEnd = default;
                this.ch = default;
                this.Error = default;
                this.ErrorCount = default;
                this.Mode = default;
                this.Whitespace = default;
                this.IsIdentRune = default;
                this.m_PositionRef = new ptr<Position>(new Position(nil));
            }

            public Scanner(io.Reader src = default, array<byte> srcBuf = default, nint srcPos = default, nint srcEnd = default, nint srcBufOffset = default, nint line = default, nint column = default, nint lastLineLen = default, nint lastCharLen = default, bytes.Buffer tokBuf = default, nint tokPos = default, nint tokEnd = default, int ch = default, Action<ptr<Scanner>, @string> Error = default, nint ErrorCount = default, nuint Mode = default, ulong Whitespace = default, Func<int, nint, bool> IsIdentRune = default, Position Position = default)
            {
                this.src = src;
                this.srcBuf = srcBuf;
                this.srcPos = srcPos;
                this.srcEnd = srcEnd;
                this.srcBufOffset = srcBufOffset;
                this.line = line;
                this.column = column;
                this.lastLineLen = lastLineLen;
                this.lastCharLen = lastCharLen;
                this.tokBuf = tokBuf;
                this.tokPos = tokPos;
                this.tokEnd = tokEnd;
                this.ch = ch;
                this.Error = Error;
                this.ErrorCount = ErrorCount;
                this.Mode = Mode;
                this.Whitespace = Whitespace;
                this.IsIdentRune = IsIdentRune;
                this.m_PositionRef = new ptr<Position>(Position);
            }

            // Enable comparisons between nil and Scanner struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Scanner value, NilType nil) => value.Equals(default(Scanner));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Scanner value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Scanner value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Scanner value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Scanner(NilType nil) => default(Scanner);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Scanner Scanner_cast(dynamic value)
        {
            return new Scanner(value.src, value.srcBuf, value.srcPos, value.srcEnd, value.srcBufOffset, value.line, value.column, value.lastLineLen, value.lastCharLen, value.tokBuf, value.tokPos, value.tokEnd, value.ch, value.Error, value.ErrorCount, value.Mode, value.Whitespace, value.IsIdentRune, value.Position);
        }
    }
}}