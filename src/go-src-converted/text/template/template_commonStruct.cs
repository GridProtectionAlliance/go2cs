//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:24:44 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using reflect = go.reflect_package;
using sync = go.sync_package;
using parse = go.text.template.parse_package;
using go;

#nullable enable

namespace go {
namespace text
{
    public static partial class template_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct common
        {
            // Constructors
            public common(NilType _)
            {
                this.tmpl = default;
                this.muTmpl = default;
                this.option = default;
                this.muFuncs = default;
                this.parseFuncs = default;
                this.execFuncs = default;
            }

            public common(map<@string, ptr<Template>> tmpl = default, sync.RWMutex muTmpl = default, option option = default, sync.RWMutex muFuncs = default, FuncMap parseFuncs = default, map<@string, reflect.Value> execFuncs = default)
            {
                this.tmpl = tmpl;
                this.muTmpl = muTmpl;
                this.option = option;
                this.muFuncs = muFuncs;
                this.parseFuncs = parseFuncs;
                this.execFuncs = execFuncs;
            }

            // Enable comparisons between nil and common struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(common value, NilType nil) => value.Equals(default(common));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(common value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, common value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, common value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator common(NilType nil) => default(common);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static common common_cast(dynamic value)
        {
            return new common(value.tmpl, value.muTmpl, value.option, value.muFuncs, value.parseFuncs, value.execFuncs);
        }
    }
}}