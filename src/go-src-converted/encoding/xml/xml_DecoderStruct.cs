//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:40:09 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bufio = go.bufio_package;
using bytes = go.bytes_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using go;

#nullable enable

namespace go {
namespace encoding
{
    public static partial class xml_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Decoder
        {
            // Constructors
            public Decoder(NilType _)
            {
                this.Strict = default;
                this.AutoClose = default;
                this.Entity = default;
                this.CharsetReader = default;
                this.DefaultSpace = default;
                this.r = default;
                this.t = default;
                this.buf = default;
                this.saved = default;
                this.stk = default;
                this.free = default;
                this.needClose = default;
                this.toClose = default;
                this.nextToken = default;
                this.nextByte = default;
                this.ns = default;
                this.err = default;
                this.line = default;
                this.offset = default;
                this.unmarshalDepth = default;
            }

            public Decoder(bool Strict = default, slice<@string> AutoClose = default, map<@string, @string> Entity = default, Func<@string, io.Reader, (io.Reader, error)> CharsetReader = default, @string DefaultSpace = default, io.ByteReader r = default, TokenReader t = default, bytes.Buffer buf = default, ref ptr<bytes.Buffer> saved = default, ref ptr<stack> stk = default, ref ptr<stack> free = default, bool needClose = default, Name toClose = default, Token nextToken = default, nint nextByte = default, map<@string, @string> ns = default, error err = default, nint line = default, long offset = default, nint unmarshalDepth = default)
            {
                this.Strict = Strict;
                this.AutoClose = AutoClose;
                this.Entity = Entity;
                this.CharsetReader = CharsetReader;
                this.DefaultSpace = DefaultSpace;
                this.r = r;
                this.t = t;
                this.buf = buf;
                this.saved = saved;
                this.stk = stk;
                this.free = free;
                this.needClose = needClose;
                this.toClose = toClose;
                this.nextToken = nextToken;
                this.nextByte = nextByte;
                this.ns = ns;
                this.err = err;
                this.line = line;
                this.offset = offset;
                this.unmarshalDepth = unmarshalDepth;
            }

            // Enable comparisons between nil and Decoder struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Decoder value, NilType nil) => value.Equals(default(Decoder));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Decoder value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Decoder value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Decoder value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Decoder(NilType nil) => default(Decoder);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Decoder Decoder_cast(dynamic value)
        {
            return new Decoder(value.Strict, value.AutoClose, value.Entity, value.CharsetReader, value.DefaultSpace, value.r, value.t, value.buf, ref value.saved, ref value.stk, ref value.free, value.needClose, value.toClose, value.nextToken, value.nextByte, value.ns, value.err, value.line, value.offset, value.unmarshalDepth);
        }
    }
}}