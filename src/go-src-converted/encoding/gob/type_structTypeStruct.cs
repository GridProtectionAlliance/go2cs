//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:42:45 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using encoding = go.encoding_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using os = go.os_package;
using reflect = go.reflect_package;
using sync = go.sync_package;
using atomic = go.sync.atomic_package;
using unicode = go.unicode_package;
using utf8 = go.unicode.utf8_package;
using go;

namespace go {
namespace encoding
{
    public static partial class gob_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(CommonType))]
        private partial struct structType
        {
            // CommonType structure promotion - sourced from value copy
            private readonly ptr<CommonType> m_CommonTypeRef;

            private ref CommonType CommonType_val => ref m_CommonTypeRef.Value;

            public ref @string Name => ref m_CommonTypeRef.Value.Name;

            public ref typeId Id => ref m_CommonTypeRef.Value.Id;

            // Constructors
            public structType(NilType _)
            {
                this.m_CommonTypeRef = new ptr<CommonType>(new CommonType(nil));
                this.Field = default;
            }

            public structType(CommonType CommonType = default, slice<ptr<fieldType>> Field = default)
            {
                this.m_CommonTypeRef = new ptr<CommonType>(CommonType);
                this.Field = Field;
            }

            // Enable comparisons between nil and structType struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(structType value, NilType nil) => value.Equals(default(structType));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(structType value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, structType value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, structType value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator structType(NilType nil) => default(structType);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static structType structType_cast(dynamic value)
        {
            return new structType(value.CommonType, value.Field);
        }
    }
}}