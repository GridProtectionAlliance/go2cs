//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:39:33 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using encoding = go.encoding_package;
using errors = go.errors_package;
using io = go.io_package;
using math = go.math_package;
using bits = go.math.bits_package;
using reflect = go.reflect_package;
using go;

#nullable enable

namespace go {
namespace encoding
{
    public static partial class gob_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct decInstr
        {
            // Constructors
            public decInstr(NilType _)
            {
                this.op = default;
                this.field = default;
                this.index = default;
                this.ovfl = default;
            }

            public decInstr(decOp op = default, nint field = default, slice<nint> index = default, error ovfl = default)
            {
                this.op = op;
                this.field = field;
                this.index = index;
                this.ovfl = ovfl;
            }

            // Enable comparisons between nil and decInstr struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(decInstr value, NilType nil) => value.Equals(default(decInstr));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(decInstr value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, decInstr value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, decInstr value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator decInstr(NilType nil) => default(decInstr);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static decInstr decInstr_cast(dynamic value)
        {
            return new decInstr(value.op, value.field, value.index, value.ovfl);
        }
    }
}}