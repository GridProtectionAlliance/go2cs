//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:17:01 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using binary = go.encoding.binary_package;
using io = go.io_package;
using strconv = go.strconv_package;
using go;

#nullable enable

namespace go {
namespace encoding
{
    public static partial class base64_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Encoding
        {
            // Constructors
            public Encoding(NilType _)
            {
                this.encode = default;
                this.decodeMap = default;
                this.padChar = default;
                this.strict = default;
            }

            public Encoding(array<byte> encode = default, array<byte> decodeMap = default, int padChar = default, bool strict = default)
            {
                this.encode = encode;
                this.decodeMap = decodeMap;
                this.padChar = padChar;
                this.strict = strict;
            }

            // Enable comparisons between nil and Encoding struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Encoding value, NilType nil) => value.Equals(default(Encoding));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Encoding value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Encoding value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Encoding value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Encoding(NilType nil) => default(Encoding);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Encoding Encoding_cast(dynamic value)
        {
            return new Encoding(value.encode, value.decodeMap, value.padChar, value.strict);
        }
    }
}}