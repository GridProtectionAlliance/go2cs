//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:42:54 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using strconv = go.strconv_package;
using sync = go.sync_package;
using go;

namespace go {
namespace encoding
{
    public static partial class json_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct scanner
        {
            // Constructors
            public scanner(NilType _)
            {
                this.step = default;
                this.endTop = default;
                this.parseState = default;
                this.err = default;
                this.bytes = default;
            }

            public scanner(Func<ptr<scanner>, byte, long> step = default, bool endTop = default, slice<long> parseState = default, error err = default, long bytes = default)
            {
                this.step = step;
                this.endTop = endTop;
                this.parseState = parseState;
                this.err = err;
                this.bytes = bytes;
            }

            // Enable comparisons between nil and scanner struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(scanner value, NilType nil) => value.Equals(default(scanner));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(scanner value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, scanner value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, scanner value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator scanner(NilType nil) => default(scanner);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static scanner scanner_cast(dynamic value)
        {
            return new scanner(value.step, value.endTop, value.parseState, value.err, value.bytes);
        }
    }
}}