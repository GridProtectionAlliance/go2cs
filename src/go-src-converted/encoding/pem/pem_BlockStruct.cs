//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:54:43 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using base64 = go.encoding.base64_package;
using errors = go.errors_package;
using io = go.io_package;
using sort = go.sort_package;
using strings = go.strings_package;
using go;

#nullable enable

namespace go {
namespace encoding
{
    public static partial class pem_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Block
        {
            // Constructors
            public Block(NilType _)
            {
                this.Type = default;
                this.Headers = default;
                this.Bytes = default;
            }

            public Block(@string Type = default, map<@string, @string> Headers = default, slice<byte> Bytes = default)
            {
                this.Type = Type;
                this.Headers = Headers;
                this.Bytes = Bytes;
            }

            // Enable comparisons between nil and Block struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Block value, NilType nil) => value.Equals(default(Block));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Block value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Block value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Block value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Block(NilType nil) => default(Block);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Block Block_cast(dynamic value)
        {
            return new Block(value.Type, value.Headers, value.Bytes);
        }
    }
}}