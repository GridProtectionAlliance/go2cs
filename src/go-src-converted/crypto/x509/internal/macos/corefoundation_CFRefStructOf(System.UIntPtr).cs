//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:36:57 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

namespace go {
namespace crypto {
namespace x509
{
    public static partial class macOS_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct CFRef
        {
            // Value of the CFRef struct
            private readonly System.UIntPtr m_value;

            public CFRef(System.UIntPtr value) => m_value = value;

            // Enable implicit conversions between System.UIntPtr and CFRef struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator CFRef(System.UIntPtr value) => new CFRef(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator System.UIntPtr(CFRef value) => value.m_value;
            
            // Enable comparisons between nil and CFRef struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(CFRef value, NilType nil) => value.Equals(default(CFRef));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(CFRef value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, CFRef value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, CFRef value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator CFRef(NilType nil) => default(CFRef);
        }
    }
}}}
