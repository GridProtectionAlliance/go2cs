//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:54:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace crypto {
namespace x509
{
    public static partial class pkix_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct RDNSequence
        {
            // Value of the RDNSequence struct
            private readonly slice<RelativeDistinguishedNameSET> m_value;

            public RDNSequence(slice<RelativeDistinguishedNameSET> value) => m_value = value;

            // Enable implicit conversions between slice<RelativeDistinguishedNameSET> and RDNSequence struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator RDNSequence(slice<RelativeDistinguishedNameSET> value) => new RDNSequence(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator slice<RelativeDistinguishedNameSET>(RDNSequence value) => value.m_value;
            
            // Enable comparisons between nil and RDNSequence struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(RDNSequence value, NilType nil) => value.Equals(default(RDNSequence));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(RDNSequence value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, RDNSequence value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, RDNSequence value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator RDNSequence(NilType nil) => default(RDNSequence);
        }
    }
}}}
