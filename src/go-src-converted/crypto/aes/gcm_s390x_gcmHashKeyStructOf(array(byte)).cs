//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:18:17 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace crypto
{
    public static partial class aes_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct gcmHashKey : IArray
        {
            // Value of the gcmHashKey struct
            private readonly array<byte> m_value;
            
            public nint Length => ((IArray)m_value).Length;

            object? IArray.this[nint index]
            {
                get => ((IArray)m_value)[index];
                set => ((IArray)m_value)[index] = value;
            }

            public ref byte this[nint index]
            {
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                get => ref m_value[index];
            }

            public IEnumerator GetEnumerator() => ((IEnumerable)m_value).GetEnumerator();

            public object Clone() => ((ICloneable)m_value).Clone();

            public gcmHashKey(array<byte> value) => m_value = value;

            // Enable implicit conversions between array<byte> and gcmHashKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator gcmHashKey(array<byte> value) => new gcmHashKey(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator array<byte>(gcmHashKey value) => value.m_value;
            
            // Enable comparisons between nil and gcmHashKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(gcmHashKey value, NilType nil) => value.Equals(default(gcmHashKey));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(gcmHashKey value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, gcmHashKey value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, gcmHashKey value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator gcmHashKey(NilType nil) => default(gcmHashKey);
        }
    }
}}
