//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:17:24 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using field = go.crypto.ed25519.@internal.edwards25519.field_package;
using errors = go.errors_package;
using go;

#nullable enable

namespace go {
namespace crypto {
namespace ed25519 {
namespace @internal
{
    public static partial class edwards25519_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct affineCached
        {
            // Constructors
            public affineCached(NilType _)
            {
                this.YplusX = default;
                this.YminusX = default;
                this.T2d = default;
            }

            public affineCached(field.Element YplusX = default, field.Element YminusX = default, field.Element T2d = default)
            {
                this.YplusX = YplusX;
                this.YminusX = YminusX;
                this.T2d = T2d;
            }

            // Enable comparisons between nil and affineCached struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(affineCached value, NilType nil) => value.Equals(default(affineCached));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(affineCached value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, affineCached value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, affineCached value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator affineCached(NilType nil) => default(affineCached);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static affineCached affineCached_cast(dynamic value)
        {
            return new affineCached(value.YplusX, value.YminusX, value.T2d);
        }
    }
}}}}