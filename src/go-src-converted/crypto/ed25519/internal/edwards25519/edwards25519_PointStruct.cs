//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:17:24 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using field = go.crypto.ed25519.@internal.edwards25519.field_package;
using errors = go.errors_package;
using go;

#nullable enable

namespace go {
namespace crypto {
namespace ed25519 {
namespace @internal
{
    public static partial class edwards25519_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Point
        {
            // Constructors
            public Point(NilType _)
            {
                this.x = default;
                this.y = default;
                this.z = default;
                this.t = default;
                this._ = default;
            }

            public Point(field.Element x = default, field.Element y = default, field.Element z = default, field.Element t = default, incomparable _ = default)
            {
                this.x = x;
                this.y = y;
                this.z = z;
                this.t = t;
                this._ = _;
            }

            // Enable comparisons between nil and Point struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Point value, NilType nil) => value.Equals(default(Point));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Point value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Point value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Point value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Point(NilType nil) => default(Point);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Point Point_cast(dynamic value)
        {
            return new Point(value.x, value.y, value.z, value.t, value._);
        }
    }
}}}}