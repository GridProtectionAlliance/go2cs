//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:35:55 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using strings = go.strings_package;
using cryptobyte = go.golang.org.x.crypto.cryptobyte_package;
using go;

#nullable enable

namespace go {
namespace crypto
{
    public static partial class tls_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct certificateMsgTLS13
        {
            // Constructors
            public certificateMsgTLS13(NilType _)
            {
                this.raw = default;
                this.certificate = default;
                this.ocspStapling = default;
                this.scts = default;
            }

            public certificateMsgTLS13(slice<byte> raw = default, Certificate certificate = default, bool ocspStapling = default, bool scts = default)
            {
                this.raw = raw;
                this.certificate = certificate;
                this.ocspStapling = ocspStapling;
                this.scts = scts;
            }

            // Enable comparisons between nil and certificateMsgTLS13 struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(certificateMsgTLS13 value, NilType nil) => value.Equals(default(certificateMsgTLS13));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(certificateMsgTLS13 value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, certificateMsgTLS13 value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, certificateMsgTLS13 value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator certificateMsgTLS13(NilType nil) => default(certificateMsgTLS13);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static certificateMsgTLS13 certificateMsgTLS13_cast(dynamic value)
        {
            return new certificateMsgTLS13(value.raw, value.certificate, value.ocspStapling, value.scts);
        }
    }
}}