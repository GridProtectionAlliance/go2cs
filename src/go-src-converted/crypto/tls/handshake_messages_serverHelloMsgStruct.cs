//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 04:55:48 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using strings = go.strings_package;
using cryptobyte = go.golang.org.x.crypto.cryptobyte_package;
using go;

#nullable enable

namespace go {
namespace crypto
{
    public static partial class tls_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct serverHelloMsg
        {
            // Constructors
            public serverHelloMsg(NilType _)
            {
                this.raw = default;
                this.vers = default;
                this.random = default;
                this.sessionId = default;
                this.cipherSuite = default;
                this.compressionMethod = default;
                this.ocspStapling = default;
                this.ticketSupported = default;
                this.secureRenegotiationSupported = default;
                this.secureRenegotiation = default;
                this.alpnProtocol = default;
                this.scts = default;
                this.supportedVersion = default;
                this.serverShare = default;
                this.selectedIdentityPresent = default;
                this.selectedIdentity = default;
                this.supportedPoints = default;
                this.cookie = default;
                this.selectedGroup = default;
            }

            public serverHelloMsg(slice<byte> raw = default, ushort vers = default, slice<byte> random = default, slice<byte> sessionId = default, ushort cipherSuite = default, byte compressionMethod = default, bool ocspStapling = default, bool ticketSupported = default, bool secureRenegotiationSupported = default, slice<byte> secureRenegotiation = default, @string alpnProtocol = default, slice<slice<byte>> scts = default, ushort supportedVersion = default, keyShare serverShare = default, bool selectedIdentityPresent = default, ushort selectedIdentity = default, slice<byte> supportedPoints = default, slice<byte> cookie = default, CurveID selectedGroup = default)
            {
                this.raw = raw;
                this.vers = vers;
                this.random = random;
                this.sessionId = sessionId;
                this.cipherSuite = cipherSuite;
                this.compressionMethod = compressionMethod;
                this.ocspStapling = ocspStapling;
                this.ticketSupported = ticketSupported;
                this.secureRenegotiationSupported = secureRenegotiationSupported;
                this.secureRenegotiation = secureRenegotiation;
                this.alpnProtocol = alpnProtocol;
                this.scts = scts;
                this.supportedVersion = supportedVersion;
                this.serverShare = serverShare;
                this.selectedIdentityPresent = selectedIdentityPresent;
                this.selectedIdentity = selectedIdentity;
                this.supportedPoints = supportedPoints;
                this.cookie = cookie;
                this.selectedGroup = selectedGroup;
            }

            // Enable comparisons between nil and serverHelloMsg struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(serverHelloMsg value, NilType nil) => value.Equals(default(serverHelloMsg));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(serverHelloMsg value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, serverHelloMsg value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, serverHelloMsg value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator serverHelloMsg(NilType nil) => default(serverHelloMsg);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static serverHelloMsg serverHelloMsg_cast(dynamic value)
        {
            return new serverHelloMsg(value.raw, value.vers, value.random, value.sessionId, value.cipherSuite, value.compressionMethod, value.ocspStapling, value.ticketSupported, value.secureRenegotiationSupported, value.secureRenegotiation, value.alpnProtocol, value.scts, value.supportedVersion, value.serverShare, value.selectedIdentityPresent, value.selectedIdentity, value.supportedPoints, value.cookie, value.selectedGroup);
        }
    }
}}