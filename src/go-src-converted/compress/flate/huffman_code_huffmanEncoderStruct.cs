//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:15:05 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using math = go.math_package;
using bits = go.math.bits_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace compress
{
    public static partial class flate_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct huffmanEncoder
        {
            // Constructors
            public huffmanEncoder(NilType _)
            {
                this.codes = default;
                this.freqcache = default;
                this.bitCount = default;
                this.lns = default;
                this.lfs = default;
            }

            public huffmanEncoder(slice<hcode> codes = default, slice<literalNode> freqcache = default, array<int> bitCount = default, byLiteral lns = default, byFreq lfs = default)
            {
                this.codes = codes;
                this.freqcache = freqcache;
                this.bitCount = bitCount;
                this.lns = lns;
                this.lfs = lfs;
            }

            // Enable comparisons between nil and huffmanEncoder struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(huffmanEncoder value, NilType nil) => value.Equals(default(huffmanEncoder));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(huffmanEncoder value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, huffmanEncoder value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, huffmanEncoder value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator huffmanEncoder(NilType nil) => default(huffmanEncoder);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static huffmanEncoder huffmanEncoder_cast(dynamic value)
        {
            return new huffmanEncoder(value.codes, value.freqcache, value.bitCount, value.lns, value.lfs);
        }
    }
}}