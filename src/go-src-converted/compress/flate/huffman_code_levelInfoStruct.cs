//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 05:29:11 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using math = go.math_package;
using bits = go.math.bits_package;
using sort = go.sort_package;
using go;

#nullable enable

namespace go {
namespace compress
{
    public static partial class flate_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct levelInfo
        {
            // Constructors
            public levelInfo(NilType _)
            {
                this.level = default;
                this.lastFreq = default;
                this.nextCharFreq = default;
                this.nextPairFreq = default;
                this.needed = default;
            }

            public levelInfo(int level = default, int lastFreq = default, int nextCharFreq = default, int nextPairFreq = default, int needed = default)
            {
                this.level = level;
                this.lastFreq = lastFreq;
                this.nextCharFreq = nextCharFreq;
                this.nextPairFreq = nextPairFreq;
                this.needed = needed;
            }

            // Enable comparisons between nil and levelInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(levelInfo value, NilType nil) => value.Equals(default(levelInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(levelInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, levelInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, levelInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator levelInfo(NilType nil) => default(levelInfo);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static levelInfo levelInfo_cast(dynamic value)
        {
            return new levelInfo(value.level, value.lastFreq, value.nextCharFreq, value.nextPairFreq, value.needed);
        }
    }
}}