//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:45:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;


namespace go
{
    public static partial class time_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct runtimeTimer
        {
            // Constructors
            public runtimeTimer(NilType _)
            {
                this.pp = default;
                this.when = default;
                this.period = default;
                this.f = default;
                this.seq = default;
                this.nextwhen = default;
                this.status = default;
            }

            public runtimeTimer(System.UIntPtr pp = default, long when = default, long period = default, Action<object, System.UIntPtr> f = default, System.UIntPtr seq = default, long nextwhen = default, uint status = default)
            {
                this.pp = pp;
                this.when = when;
                this.period = period;
                this.f = f;
                this.seq = seq;
                this.nextwhen = nextwhen;
                this.status = status;
            }

            // Enable comparisons between nil and runtimeTimer struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(runtimeTimer value, NilType nil) => value.Equals(default(runtimeTimer));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(runtimeTimer value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, runtimeTimer value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, runtimeTimer value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator runtimeTimer(NilType nil) => default(runtimeTimer);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static runtimeTimer runtimeTimer_cast(dynamic value)
        {
            return new runtimeTimer(value.pp, value.when, value.period, value.f, value.seq, value.nextwhen, value.status);
        }
    }
}