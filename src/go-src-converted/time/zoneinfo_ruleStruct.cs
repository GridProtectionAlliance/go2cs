//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:45:49 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using sync = go.sync_package;
using syscall = go.syscall_package;

namespace go
{
    public static partial class time_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct rule
        {
            // Constructors
            public rule(NilType _)
            {
                this.kind = default;
                this.day = default;
                this.week = default;
                this.mon = default;
                this.time = default;
            }

            public rule(ruleKind kind = default, long day = default, long week = default, long mon = default, long time = default)
            {
                this.kind = kind;
                this.day = day;
                this.week = week;
                this.mon = mon;
                this.time = time;
            }

            // Enable comparisons between nil and rule struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(rule value, NilType nil) => value.Equals(default(rule));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(rule value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, rule value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, rule value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator rule(NilType nil) => default(rule);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static rule rule_cast(dynamic value)
        {
            return new rule(value.kind, value.day, value.week, value.mon, value.time);
        }
    }
}