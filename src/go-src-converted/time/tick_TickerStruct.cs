//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:45:43 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;

namespace go
{
    public static partial class time_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Ticker
        {
            // Constructors
            public Ticker(NilType _)
            {
                this.C = default;
                this.r = default;
            }

            public Ticker(channel<Time> C = default, runtimeTimer r = default)
            {
                this.C = C;
                this.r = r;
            }

            // Enable comparisons between nil and Ticker struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Ticker value, NilType nil) => value.Equals(default(Ticker));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Ticker value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Ticker value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Ticker value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Ticker(NilType nil) => default(Ticker);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Ticker Ticker_cast(dynamic value)
        {
            return new Ticker(value.C, value.r);
        }
    }
}