//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 05:06:11 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using sync = go.sync_package;
using syscall = go.syscall_package;

#nullable enable

namespace go
{
    public static partial class time_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Location
        {
            // Constructors
            public Location(NilType _)
            {
                this.name = default;
                this.zone = default;
                this.tx = default;
                this.extend = default;
                this.cacheStart = default;
                this.cacheEnd = default;
                this.cacheZone = default;
            }

            public Location(@string name = default, slice<zone> zone = default, slice<zoneTrans> tx = default, @string extend = default, long cacheStart = default, long cacheEnd = default, ref ptr<zone> cacheZone = default)
            {
                this.name = name;
                this.zone = zone;
                this.tx = tx;
                this.extend = extend;
                this.cacheStart = cacheStart;
                this.cacheEnd = cacheEnd;
                this.cacheZone = cacheZone;
            }

            // Enable comparisons between nil and Location struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Location value, NilType nil) => value.Equals(default(Location));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Location value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Location value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Location value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Location(NilType nil) => default(Location);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Location Location_cast(dynamic value)
        {
            return new Location(value.name, value.zone, value.tx, value.extend, value.cacheStart, value.cacheEnd, ref value.cacheZone);
        }
    }
}