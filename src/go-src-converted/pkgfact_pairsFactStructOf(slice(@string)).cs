//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:04:07 UTC
// </auto-generated>
//---------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace analysis {
namespace passes
{
    public static partial class pkgfact_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct pairsFact
        {
            // Value of the pairsFact struct
            private readonly slice<@string> m_value;

            public pairsFact(slice<@string> value) => m_value = value;

            // Enable implicit conversions between slice<@string> and pairsFact struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator pairsFact(slice<@string> value) => new pairsFact(value);
            
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator slice<@string>(pairsFact value) => value.m_value;
            
            // Enable comparisons between nil and pairsFact struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(pairsFact value, NilType nil) => value.Equals(default(pairsFact));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(pairsFact value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, pairsFact value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, pairsFact value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator pairsFact(NilType nil) => default(pairsFact);
        }
    }
}}}}}}}
