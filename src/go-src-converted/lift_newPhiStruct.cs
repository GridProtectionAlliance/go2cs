//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:57:01 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using token = go.go.token_package;
using types = go.go.types_package;
using big = go.math.big_package;
using os = go.os_package;
using go;

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct newPhi
        {
            // Constructors
            public newPhi(NilType _)
            {
                this.phi = default;
                this.alloc = default;
            }

            public newPhi(ref ptr<Phi> phi = default, ref ptr<Alloc> alloc = default)
            {
                this.phi = phi;
                this.alloc = alloc;
            }

            // Enable comparisons between nil and newPhi struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(newPhi value, NilType nil) => value.Equals(default(newPhi));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(newPhi value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, newPhi value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, newPhi value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator newPhi(NilType nil) => default(newPhi);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static newPhi newPhi_cast(dynamic value)
        {
            return new newPhi(ref value.phi, ref value.alloc);
        }
    }
}}}}}