//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:03:53 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bytes = go.bytes_package;
using fmt = go.fmt_package;
using token = go.go.token_package;
using types = go.go.types_package;
using ssa = go.golang.org.x.tools.go.ssa_package;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace ssa
{
    public static partial class ssautil_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct ConstCase
        {
            // Constructors
            public ConstCase(NilType _)
            {
                this.Block = default;
                this.Body = default;
                this.Value = default;
            }

            public ConstCase(ref ptr<ssa.BasicBlock> Block = default, ref ptr<ssa.BasicBlock> Body = default, ref ptr<ssa.Const> Value = default)
            {
                this.Block = Block;
                this.Body = Body;
                this.Value = Value;
            }

            // Enable comparisons between nil and ConstCase struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ConstCase value, NilType nil) => value.Equals(default(ConstCase));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ConstCase value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ConstCase value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ConstCase value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ConstCase(NilType nil) => default(ConstCase);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static ConstCase ConstCase_cast(dynamic value)
        {
            return new ConstCase(ref value.Block, ref value.Body, ref value.Value);
        }
    }
}}}}}}