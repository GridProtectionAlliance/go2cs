//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:55:38 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using token = go.go.token_package;
using types = go.go.types_package;
using os = go.os_package;
using go;

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go
{
    public static partial class gcexportdata_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct importer
        {
            // Constructors
            public importer(NilType _)
            {
                this.fset = default;
                this.imports = default;
            }

            public importer(ref ptr<token.FileSet> fset = default, map<@string, ptr<types.Package>> imports = default)
            {
                this.fset = fset;
                this.imports = imports;
            }

            // Enable comparisons between nil and importer struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(importer value, NilType nil) => value.Equals(default(importer));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(importer value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, importer value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, importer value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator importer(NilType nil) => default(importer);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static importer importer_cast(dynamic value)
        {
            return new importer(ref value.fset, value.imports);
        }
    }
}}}}}