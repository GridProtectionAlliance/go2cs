//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:05:47 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using image = go.image_package;
using color = go.image.color_package;
using imageutil = go.image.@internal.imageutil_package;
using go;

#nullable enable

namespace go {
namespace image
{
    public static partial class draw_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct floydSteinberg
        {
            // Constructors
            public floydSteinberg(NilType _)
            {
            }
            // Enable comparisons between nil and floydSteinberg struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(floydSteinberg value, NilType nil) => value.Equals(default(floydSteinberg));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(floydSteinberg value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, floydSteinberg value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, floydSteinberg value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator floydSteinberg(NilType nil) => default(floydSteinberg);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static floydSteinberg floydSteinberg_cast(dynamic value)
        {
            return new floydSteinberg();
        }
    }
}}