//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 09 06:05:48 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using bufio = go.bufio_package;
using lzw = go.compress.lzw_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using image = go.image_package;
using color = go.image.color_package;
using io = go.io_package;
using go;

#nullable enable

namespace go {
namespace image
{
    public static partial class gif_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct GIF
        {
            // Constructors
            public GIF(NilType _)
            {
                this.Image = default;
                this.Delay = default;
                this.LoopCount = default;
                this.Disposal = default;
                this.Config = default;
                this.BackgroundIndex = default;
            }

            public GIF(slice<ptr<image.Paletted>> Image = default, slice<long> Delay = default, long LoopCount = default, slice<byte> Disposal = default, image.Config Config = default, byte BackgroundIndex = default)
            {
                this.Image = Image;
                this.Delay = Delay;
                this.LoopCount = LoopCount;
                this.Disposal = Disposal;
                this.Config = Config;
                this.BackgroundIndex = BackgroundIndex;
            }

            // Enable comparisons between nil and GIF struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(GIF value, NilType nil) => value.Equals(default(GIF));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(GIF value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, GIF value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, GIF value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator GIF(NilType nil) => default(GIF);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static GIF GIF_cast(dynamic value)
        {
            return new GIF(value.Image, value.Delay, value.LoopCount, value.Disposal, value.Config, value.BackgroundIndex);
        }
    }
}}