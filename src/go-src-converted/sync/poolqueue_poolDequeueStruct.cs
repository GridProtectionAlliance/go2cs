//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:18:57 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using atomic = go.sync.atomic_package;
using @unsafe = go.@unsafe_package;

namespace go
{
    public static partial class sync_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct poolDequeue
        {
            // Constructors
            public poolDequeue(NilType _)
            {
                this.headTail = default;
                this.vals = default;
            }

            public poolDequeue(ulong headTail = default, slice<eface> vals = default)
            {
                this.headTail = headTail;
                this.vals = vals;
            }

            // Enable comparisons between nil and poolDequeue struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(poolDequeue value, NilType nil) => value.Equals(default(poolDequeue));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(poolDequeue value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, poolDequeue value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, poolDequeue value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator poolDequeue(NilType nil) => default(poolDequeue);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static poolDequeue poolDequeue_cast(dynamic value)
        {
            return new poolDequeue(value.headTail, value.vals);
        }
    }
}