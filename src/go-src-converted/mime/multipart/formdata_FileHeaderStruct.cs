//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 22:21:09 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using bytes = go.bytes_package;
using errors = go.errors_package;
using io = go.io_package;
using math = go.math_package;
using textproto = go.net.textproto_package;
using os = go.os_package;
using go;

#nullable enable

namespace go {
namespace mime
{
    public static partial class multipart_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct FileHeader
        {
            // Constructors
            public FileHeader(NilType _)
            {
                this.Filename = default;
                this.Header = default;
                this.Size = default;
                this.content = default;
                this.tmpfile = default;
            }

            public FileHeader(@string Filename = default, textproto.MIMEHeader Header = default, long Size = default, slice<byte> content = default, @string tmpfile = default)
            {
                this.Filename = Filename;
                this.Header = Header;
                this.Size = Size;
                this.content = content;
                this.tmpfile = tmpfile;
            }

            // Enable comparisons between nil and FileHeader struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(FileHeader value, NilType nil) => value.Equals(default(FileHeader));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(FileHeader value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, FileHeader value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, FileHeader value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator FileHeader(NilType nil) => default(FileHeader);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static FileHeader FileHeader_cast(dynamic value)
        {
            return new FileHeader(value.Filename, value.Header, value.Size, value.content, value.tmpfile);
        }
    }
}}