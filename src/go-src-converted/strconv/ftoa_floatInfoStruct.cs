//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:48:57 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using math = go.math_package;

namespace go
{
    public static partial class strconv_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct floatInfo
        {
            // Constructors
            public floatInfo(NilType _)
            {
                this.mantbits = default;
                this.expbits = default;
                this.bias = default;
            }

            public floatInfo(ulong mantbits = default, ulong expbits = default, long bias = default)
            {
                this.mantbits = mantbits;
                this.expbits = expbits;
                this.bias = bias;
            }

            // Enable comparisons between nil and floatInfo struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(floatInfo value, NilType nil) => value.Equals(default(floatInfo));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(floatInfo value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, floatInfo value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, floatInfo value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator floatInfo(NilType nil) => default(floatInfo);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static floatInfo floatInfo_cast(dynamic value)
        {
            return new floatInfo(value.mantbits, value.expbits, value.bias);
        }
    }
}