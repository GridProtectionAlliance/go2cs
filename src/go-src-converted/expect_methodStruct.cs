//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:55:52 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using token = go.go.token_package;
using ioutil = go.io.ioutil_package;
using os = go.os_package;
using filepath = go.path.filepath_package;
using reflect = go.reflect_package;
using regexp = go.regexp_package;
using strings = go.strings_package;
using expect = go.golang.org.x.tools.go.expect_package;
using packages = go.golang.org.x.tools.go.packages_package;
using span = go.golang.org.x.tools.@internal.span_package;
using go;

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go {
namespace packages
{
    public static partial class packagestest_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct method
        {
            // Constructors
            public method(NilType _)
            {
                this.f = default;
                this.converters = default;
            }

            public method(reflect.Value f = default, slice<converter> converters = default)
            {
                this.f = f;
                this.converters = converters;
            }

            // Enable comparisons between nil and method struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(method value, NilType nil) => value.Equals(default(method));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(method value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, method value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, method value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator method(NilType nil) => default(method);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static method method_cast(dynamic value)
        {
            return new method(value.f, value.converters);
        }
    }
}}}}}}