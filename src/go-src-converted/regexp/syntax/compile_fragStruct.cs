//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:40:58 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using unicode = go.unicode_package;
using go;

namespace go {
namespace regexp
{
    public static partial class syntax_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct frag
        {
            // Constructors
            public frag(NilType _)
            {
                this.i = default;
                this.@out = default;
            }

            public frag(uint i = default, patchList @out = default)
            {
                this.i = i;
                this.@out = @out;
            }

            // Enable comparisons between nil and frag struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(frag value, NilType nil) => value.Equals(default(frag));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(frag value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, frag value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, frag value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator frag(NilType nil) => default(frag);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static frag frag_cast(dynamic value)
        {
            return new frag(value.i, value.@out);
        }
    }
}}