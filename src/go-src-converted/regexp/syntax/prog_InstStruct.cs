//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 03:41:05 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using strconv = go.strconv_package;
using strings = go.strings_package;
using unicode = go.unicode_package;
using go;

namespace go {
namespace regexp
{
    public static partial class syntax_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct Inst
        {
            // Constructors
            public Inst(NilType _)
            {
                this.Op = default;
                this.Out = default;
                this.Arg = default;
                this.Rune = default;
            }

            public Inst(InstOp Op = default, uint Out = default, uint Arg = default, slice<int> Rune = default)
            {
                this.Op = Op;
                this.Out = Out;
                this.Arg = Arg;
                this.Rune = Rune;
            }

            // Enable comparisons between nil and Inst struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Inst value, NilType nil) => value.Equals(default(Inst));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Inst value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Inst value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Inst value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Inst(NilType nil) => default(Inst);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static Inst Inst_cast(dynamic value)
        {
            return new Inst(value.Op, value.Out, value.Arg, value.Rune);
        }
    }
}}