// Code generated by "stringer -type Op -trimprefix Op"; DO NOT EDIT.

// package syntax -- go2cs converted at 2022 March 13 05:37:55 UTC
// import "regexp/syntax" ==> using syntax = go.regexp.syntax_package
// Original source: C:\Program Files\Go\src\regexp\syntax\op_string.go
namespace go.regexp;

using strconv = strconv_package;

public static partial class syntax_package {

private static readonly @string _Op_name_0 = "NoMatchEmptyMatchLiteralCharClassAnyCharNotNLAnyCharBeginLineEndLineBeginTextEndTextWordBoundaryNoWordBoundaryCaptureStarPlusQuestRepeatConcatAlternate";
private static readonly @string _Op_name_1 = "opPseudo";

private static array<byte> _Op_index_0 = new array<byte>(new byte[] { 0, 7, 17, 24, 33, 45, 52, 61, 68, 77, 84, 96, 110, 117, 121, 125, 130, 136, 142, 151 });

public static @string String(this Op i) {

    if (1 <= i && i <= 19) 
        i -= 1;
        return _Op_name_0[(int)_Op_index_0[i]..(int)_Op_index_0[i + 1]];
    else if (i == 128) 
        return _Op_name_1;
    else 
        return "Op(" + strconv.FormatInt(int64(i), 10) + ")";
    }

} // end syntax_package
