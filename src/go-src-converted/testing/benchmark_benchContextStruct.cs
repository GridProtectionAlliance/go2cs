//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 13 06:43:00 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using flag = go.flag_package;
using fmt = go.fmt_package;
using race = go.@internal.race_package;
using sysinfo = go.@internal.sysinfo_package;
using io = go.io_package;
using math = go.math_package;
using os = go.os_package;
using runtime = go.runtime_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using strings = go.strings_package;
using sync = go.sync_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;
using unicode = go.unicode_package;

#nullable enable

namespace go
{
    public static partial class testing_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        private partial struct benchContext
        {
            // Constructors
            public benchContext(NilType _)
            {
                this.match = default;
                this.maxLen = default;
                this.extLen = default;
            }

            public benchContext(ref ptr<matcher> match = default, nint maxLen = default, nint extLen = default)
            {
                this.match = match;
                this.maxLen = maxLen;
                this.extLen = extLen;
            }

            // Enable comparisons between nil and benchContext struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(benchContext value, NilType nil) => value.Equals(default(benchContext));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(benchContext value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, benchContext value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, benchContext value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator benchContext(NilType nil) => default(benchContext);
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        private static benchContext benchContext_cast(dynamic value)
        {
            return new benchContext(ref value.match, value.maxLen, value.extLen);
        }
    }
}