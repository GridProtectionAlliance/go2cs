//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2020 October 08 04:36:39 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using errors = go.errors_package;
using io = go.io_package;
using go;

namespace go {
namespace testing
{
    public static partial class iotest_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct timeoutReader
        {
            // Constructors
            public timeoutReader(NilType _)
            {
                this.r = default;
                this.count = default;
            }

            public timeoutReader(io.Reader r = default, long count = default)
            {
                this.r = r;
                this.count = count;
            }

            // Enable comparisons between nil and timeoutReader struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(timeoutReader value, NilType nil) => value.Equals(default(timeoutReader));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(timeoutReader value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, timeoutReader value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, timeoutReader value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator timeoutReader(NilType nil) => default(timeoutReader);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static timeoutReader timeoutReader_cast(dynamic value)
        {
            return new timeoutReader(value.r, value.count);
        }
    }
}}