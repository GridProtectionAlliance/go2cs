//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:19:32 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using flag = go.flag_package;
using fmt = go.fmt_package;
using math = go.math_package;
using rand = go.math.rand_package;
using reflect = go.reflect_package;
using strings = go.strings_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace testing
{
    public static partial class quick_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        [PromotedStruct(typeof(CheckError))]
        public partial struct CheckEqualError
        {
            // CheckError structure promotion - sourced from value copy
            private readonly ptr<CheckError> m_CheckErrorRef;

            private ref CheckError CheckError_val => ref m_CheckErrorRef.Value;

            public ref nint Count => ref m_CheckErrorRef.Value.Count;

            public ref slice<object> In => ref m_CheckErrorRef.Value.In;

            // Constructors
            public CheckEqualError(NilType _)
            {
                this.m_CheckErrorRef = new ptr<CheckError>(new CheckError(nil));
                this.Out1 = default;
                this.Out2 = default;
            }

            public CheckEqualError(CheckError CheckError = default, slice<object> Out1 = default, slice<object> Out2 = default)
            {
                this.m_CheckErrorRef = new ptr<CheckError>(CheckError);
                this.Out1 = Out1;
                this.Out2 = Out2;
            }

            // Enable comparisons between nil and CheckEqualError struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(CheckEqualError value, NilType nil) => value.Equals(default(CheckEqualError));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(CheckEqualError value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, CheckEqualError value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, CheckEqualError value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator CheckEqualError(NilType nil) => default(CheckEqualError);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static CheckEqualError CheckEqualError_cast(dynamic value)
        {
            return new CheckEqualError(value.CheckError, value.Out1, value.Out2);
        }
    }
}}