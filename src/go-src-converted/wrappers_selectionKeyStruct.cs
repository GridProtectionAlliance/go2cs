//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:33:29 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using fmt = go.fmt_package;
using types = go.go.types_package;
using go;

#nullable enable

namespace go {
namespace golang.org {
namespace x {
namespace tools {
namespace go
{
    public static partial class ssa_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        private partial struct selectionKey
        {
            // Constructors
            public selectionKey(NilType _)
            {
                this.kind = default;
                this.recv = default;
                this.obj = default;
                this.index = default;
                this.indirect = default;
            }

            public selectionKey(types.SelectionKind kind = default, types.Type recv = default, types.Object obj = default, @string index = default, bool indirect = default)
            {
                this.kind = kind;
                this.recv = recv;
                this.obj = obj;
                this.index = index;
                this.indirect = indirect;
            }

            // Enable comparisons between nil and selectionKey struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(selectionKey value, NilType nil) => value.Equals(default(selectionKey));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(selectionKey value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, selectionKey value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, selectionKey value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator selectionKey(NilType nil) => default(selectionKey);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        private static selectionKey selectionKey_cast(dynamic value)
        {
            return new selectionKey(value.kind, value.recv, value.obj, value.index, value.indirect);
        }
    }
}}}}}