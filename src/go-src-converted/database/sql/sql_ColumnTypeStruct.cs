//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 March 06 23:35:40 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using context = go.context_package;
using driver = go.database.sql.driver_package;
using errors = go.errors_package;
using fmt = go.fmt_package;
using io = go.io_package;
using reflect = go.reflect_package;
using runtime = go.runtime_package;
using sort = go.sort_package;
using strconv = go.strconv_package;
using sync = go.sync_package;
using atomic = go.sync.atomic_package;
using time = go.time_package;
using go;

#nullable enable

namespace go {
namespace database
{
    public static partial class sql_package
    {
        [GeneratedCode("go2cs", "0.1.0.0")]
        public partial struct ColumnType
        {
            // Constructors
            public ColumnType(NilType _)
            {
                this.name = default;
                this.hasNullable = default;
                this.hasLength = default;
                this.hasPrecisionScale = default;
                this.nullable = default;
                this.length = default;
                this.databaseType = default;
                this.precision = default;
                this.scale = default;
                this.scanType = default;
            }

            public ColumnType(@string name = default, bool hasNullable = default, bool hasLength = default, bool hasPrecisionScale = default, bool nullable = default, long length = default, @string databaseType = default, long precision = default, long scale = default, reflect.Type scanType = default)
            {
                this.name = name;
                this.hasNullable = hasNullable;
                this.hasLength = hasLength;
                this.hasPrecisionScale = hasPrecisionScale;
                this.nullable = nullable;
                this.length = length;
                this.databaseType = databaseType;
                this.precision = precision;
                this.scale = scale;
                this.scanType = scanType;
            }

            // Enable comparisons between nil and ColumnType struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(ColumnType value, NilType nil) => value.Equals(default(ColumnType));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(ColumnType value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, ColumnType value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, ColumnType value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator ColumnType(NilType nil) => default(ColumnType);
        }

        [GeneratedCode("go2cs", "0.1.0.0")]
        public static ColumnType ColumnType_cast(dynamic value)
        {
            return new ColumnType(value.name, value.hasNullable, value.hasLength, value.hasPrecisionScale, value.nullable, value.length, value.databaseType, value.precision, value.scale, value.scanType);
        }
    }
}}