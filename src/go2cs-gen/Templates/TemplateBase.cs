using System;
using System.Collections.Generic;
using static go2cs.Common;

namespace go2cs.Templates;

internal abstract class TemplateBase
{
    // Common Template Parameters
    public required string PackageNamespace;
    public required string PackageName;
    public string[]? UsingStatements = null;
    public required string Scope;
    public string? PackageFooter = null;

    private HashSet<string>? m_usings;

    public const string TypeElemIndent = "        ";

    public virtual string Usings => m_usings is null ? 
        string.Empty : 
        string.Join("\r\n", m_usings);

    public virtual string Generate()
    {
        m_usings = new HashSet<string>(UsingStatements ?? [], StringComparer.OrdinalIgnoreCase);

        // Remove any using statements that contain an equals sign
        m_usings.RemoveWhere(item => item.Contains("="));

        if (!string.IsNullOrWhiteSpace(PackageNamespace) && !PackageNamespace.Equals("go"))
            m_usings.Add("using go;");

        // Add a blank line after the usings if any exist
        if (m_usings.Count > 0)
            m_usings.Add(string.Empty);

        return $"{TemplateHeader}{TemplateBody}{TemplateFooter}";
    }

    public virtual string TemplateHeader =>
        $$"""
        {{AutoGeneratedHeader}}
        
        using System;
        using System.CodeDom.Compiler;
        using System.Collections;
        using System.Collections.Generic;
        {{Usings}}
        #nullable enable
        
        namespace {{PackageNamespace}};

        public static partial class {{PackageName}}_package
        {
        
        """;

    public abstract string TemplateBody { get; }

    public virtual string TemplateFooter =>
        $$"""
        
        }
        {{PackageFooter ?? ""}}
        """;
}
