//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.runtime.@internal;

public static partial class sys_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct NotInHeap
    {
        // Promoted Struct References
        // -- NotInHeap has no promoted structs

        // Field References
        internal static ref global::go.runtime.@internal.sys_package.nih Ꮡ_(ref NotInHeap instance) => ref instance._;
        
        // Constructors
        public NotInHeap(NilType _)
        {
            this._ = default!;
        }

        public NotInHeap(global::go.runtime.@internal.sys_package.nih _ = default!)
        {
            this._ = _;
        }
        
        // Handle comparisons between struct 'NotInHeap' instances
        public bool Equals(NotInHeap other) =>
            _ == other._;
        
        public override bool Equals(object? obj) => obj is NotInHeap other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            _);
        
        public static bool operator ==(NotInHeap left, NotInHeap right) => left.Equals(right);
        
        public static bool operator !=(NotInHeap left, NotInHeap right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'NotInHeap'
        public static bool operator ==(NotInHeap value, NilType nil) => value.Equals(default(NotInHeap));

        public static bool operator !=(NotInHeap value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, NotInHeap value) => value == nil;

        public static bool operator !=(NilType nil, NotInHeap value) => value != nil;

        public static implicit operator NotInHeap(NilType nil) => default(NotInHeap);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            _.ToString()
        ]), "}");
    }
}
