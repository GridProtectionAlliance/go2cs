//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.@internal;

public static partial class abi_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct IntArgRegBitmap, IArray<uint8>
    {
        // Value of the struct 'IntArgRegBitmap'
        private readonly array<uint8> m_value;
        
        
        public IntArgRegBitmap(array<uint8> value) => m_value = value;

        public override string ToString() => m_value.ToString();

        public static bool operator ==(IntArgRegBitmap left, IntArgRegBitmap right) => left.Equals(right);

        public static bool operator !=(IntArgRegBitmap left, IntArgRegBitmap right) => !(left == right);

        // Handle implicit conversions between 'array<uint8>' and struct 'IntArgRegBitmap'
        public static implicit operator IntArgRegBitmap(array<uint8> value) => new IntArgRegBitmap(value);
            
        public static implicit operator array<uint8>(IntArgRegBitmap value) => value.m_value;
            
        // Handle comparisons between 'nil' and struct 'IntArgRegBitmap'
        public static bool operator ==(IntArgRegBitmap value, NilType nil) => value.Equals(default(IntArgRegBitmap));

        public static bool operator !=(IntArgRegBitmap value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, IntArgRegBitmap value) => value == nil;

        public static bool operator !=(NilType nil, IntArgRegBitmap value) => value != nil;

        public static implicit operator IntArgRegBitmap(NilType nil) => default(IntArgRegBitmap)!;
    }
}
