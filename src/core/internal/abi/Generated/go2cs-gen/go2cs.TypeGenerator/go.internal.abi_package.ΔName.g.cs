//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.@internal;

public static partial class abi_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct ΔName
    {
        // Promoted Struct References
        // -- ΔName has no promoted structs

        // Field References
        internal static ref global::go.ж<byte> ᏑBytes(ref ΔName instance) => ref instance.Bytes;
        
        // Constructors
        public ΔName(NilType _)
        {
            this.Bytes = default!;
        }

        public ΔName(global::go.ж<byte> Bytes = default!)
        {
            this.Bytes = Bytes;
        }
        
        // Handle comparisons between struct 'ΔName' instances
        public bool Equals(ΔName other) =>
            Bytes == other.Bytes;
        
        public override bool Equals(object? obj) => obj is ΔName other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            Bytes);
        
        public static bool operator ==(ΔName left, ΔName right) => left.Equals(right);
        
        public static bool operator !=(ΔName left, ΔName right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'ΔName'
        public static bool operator ==(ΔName value, NilType nil) => value.Equals(default(ΔName));

        public static bool operator !=(ΔName value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, ΔName value) => value == nil;

        public static bool operator !=(NilType nil, ΔName value) => value != nil;

        public static implicit operator ΔName(NilType nil) => default(ΔName);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            Bytes?.ToString() ?? "<nil>"
        ]), "}");
    }
}
