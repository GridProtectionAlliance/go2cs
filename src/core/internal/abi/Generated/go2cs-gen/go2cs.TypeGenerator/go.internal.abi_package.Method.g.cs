//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.@internal;

public static partial class abi_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct Method
    {
        // Promoted Struct References
        // -- Method has no promoted structs

        // Field References
        public static ref global::go.@internal.abi_package.NameOff ᏑName(ref Method instance) => ref instance.Name;
        public static ref global::go.@internal.abi_package.TypeOff ᏑMtyp(ref Method instance) => ref instance.Mtyp;
        public static ref global::go.@internal.abi_package.TextOff ᏑIfn(ref Method instance) => ref instance.Ifn;
        public static ref global::go.@internal.abi_package.TextOff ᏑTfn(ref Method instance) => ref instance.Tfn;
        
        // Constructors
        public Method(NilType _)
        {
            this.Name = default!;
            this.Mtyp = default!;
            this.Ifn = default!;
            this.Tfn = default!;
        }

        public Method(global::go.@internal.abi_package.NameOff Name = default!, global::go.@internal.abi_package.TypeOff Mtyp = default!, global::go.@internal.abi_package.TextOff Ifn = default!, global::go.@internal.abi_package.TextOff Tfn = default!)
        {
            this.Name = Name;
            this.Mtyp = Mtyp;
            this.Ifn = Ifn;
            this.Tfn = Tfn;
        }
        
        // Handle comparisons between struct 'Method' instances
        public bool Equals(Method other) =>
            Name == other.Name &&
            Mtyp == other.Mtyp &&
            Ifn == other.Ifn &&
            Tfn == other.Tfn;
        
        public override bool Equals(object? obj) => obj is Method other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            Name,
            Mtyp,
            Ifn,
            Tfn);
        
        public static bool operator ==(Method left, Method right) => left.Equals(right);
        
        public static bool operator !=(Method left, Method right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'Method'
        public static bool operator ==(Method value, NilType nil) => value.Equals(default(Method));

        public static bool operator !=(Method value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, Method value) => value == nil;

        public static bool operator !=(NilType nil, Method value) => value != nil;

        public static implicit operator Method(NilType nil) => default(Method);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            Name.ToString(),
            Mtyp.ToString(),
            Ifn.ToString(),
            Tfn.ToString()
        ]), "}");
    }
}
