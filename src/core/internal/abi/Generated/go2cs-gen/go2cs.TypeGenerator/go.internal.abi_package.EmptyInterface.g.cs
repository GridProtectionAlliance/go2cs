//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.@internal;

public static partial class abi_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct EmptyInterface
    {
        // Promoted Struct References
        // -- EmptyInterface has no promoted structs

        // Field References
        public static ref global::go.ж<global::go.@internal.abi_package.Type> ᏑType(ref EmptyInterface instance) => ref instance.Type;
        public static ref global::go.unsafe_package.Pointer ᏑData(ref EmptyInterface instance) => ref instance.Data;
        
        // Constructors
        public EmptyInterface(NilType _)
        {
            this.Type = default!;
            this.Data = default!;
        }

        public EmptyInterface(global::go.ж<global::go.@internal.abi_package.Type> Type = default!, global::go.unsafe_package.Pointer Data = default!)
        {
            this.Type = Type;
            this.Data = Data;
        }
        
        // Handle comparisons between struct 'EmptyInterface' instances
        public bool Equals(EmptyInterface other) =>
            Type == other.Type &&
            Data == other.Data;
        
        public override bool Equals(object? obj) => obj is EmptyInterface other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            Type,
            Data);
        
        public static bool operator ==(EmptyInterface left, EmptyInterface right) => left.Equals(right);
        
        public static bool operator !=(EmptyInterface left, EmptyInterface right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'EmptyInterface'
        public static bool operator ==(EmptyInterface value, NilType nil) => value.Equals(default(EmptyInterface));

        public static bool operator !=(EmptyInterface value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, EmptyInterface value) => value == nil;

        public static bool operator !=(NilType nil, EmptyInterface value) => value != nil;

        public static implicit operator EmptyInterface(NilType nil) => default(EmptyInterface);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            Type?.ToString() ?? "<nil>",
            Data?.ToString() ?? "<nil>"
        ]), "}");
    }
}
