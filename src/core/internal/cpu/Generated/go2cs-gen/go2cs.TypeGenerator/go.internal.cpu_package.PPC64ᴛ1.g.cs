//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.@internal;

public static partial class cpu_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct PPC64ᴛ1
    {
        // Promoted Struct References
        // -- PPC64ᴛ1 has no promoted structs

        // Field References
        public static ref global::go.@internal.cpu_package.CacheLinePad Ꮡ_(ref PPC64ᴛ1 instance) => ref instance._;
        internal static ref bool ᏑHasDARN(ref PPC64ᴛ1 instance) => ref instance.HasDARN;
        internal static ref bool ᏑHasSCV(ref PPC64ᴛ1 instance) => ref instance.HasSCV;
        internal static ref bool ᏑIsPOWER8(ref PPC64ᴛ1 instance) => ref instance.IsPOWER8;
        internal static ref bool ᏑIsPOWER9(ref PPC64ᴛ1 instance) => ref instance.IsPOWER9;
        internal static ref bool ᏑIsPOWER10(ref PPC64ᴛ1 instance) => ref instance.IsPOWER10;
        public static ref global::go.@internal.cpu_package.CacheLinePad Ꮡ_(ref PPC64ᴛ1 instance) => ref instance._;
        
        // Constructors
        public PPC64ᴛ1(NilType _)
        {
            this._ = default!;
            this.HasDARN = default!;
            this.HasSCV = default!;
            this.IsPOWER8 = default!;
            this.IsPOWER9 = default!;
            this.IsPOWER10 = default!;
            this._ = default!;
        }

        public PPC64ᴛ1(global::go.@internal.cpu_package.CacheLinePad _ = default!, bool HasDARN = default!, bool HasSCV = default!, bool IsPOWER8 = default!, bool IsPOWER9 = default!, bool IsPOWER10 = default!, global::go.@internal.cpu_package.CacheLinePad _ = default!)
        {
            this._ = _;
            this.HasDARN = HasDARN;
            this.HasSCV = HasSCV;
            this.IsPOWER8 = IsPOWER8;
            this.IsPOWER9 = IsPOWER9;
            this.IsPOWER10 = IsPOWER10;
            this._ = _;
        }
        
        // Handle comparisons between struct 'PPC64ᴛ1' instances
        public bool Equals(PPC64ᴛ1 other) =>
            _ == other._ &&
            HasDARN == other.HasDARN &&
            HasSCV == other.HasSCV &&
            IsPOWER8 == other.IsPOWER8 &&
            IsPOWER9 == other.IsPOWER9 &&
            IsPOWER10 == other.IsPOWER10 &&
            _ == other._;
        
        public override bool Equals(object? obj) => obj is PPC64ᴛ1 other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            _,
            HasDARN,
            HasSCV,
            IsPOWER8,
            IsPOWER9,
            IsPOWER10,
            _);
        
        public static bool operator ==(PPC64ᴛ1 left, PPC64ᴛ1 right) => left.Equals(right);
        
        public static bool operator !=(PPC64ᴛ1 left, PPC64ᴛ1 right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'PPC64ᴛ1'
        public static bool operator ==(PPC64ᴛ1 value, NilType nil) => value.Equals(default(PPC64ᴛ1));

        public static bool operator !=(PPC64ᴛ1 value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, PPC64ᴛ1 value) => value == nil;

        public static bool operator !=(NilType nil, PPC64ᴛ1 value) => value != nil;

        public static implicit operator PPC64ᴛ1(NilType nil) => default(PPC64ᴛ1);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            _.ToString(),
            HasDARN.ToString(),
            HasSCV.ToString(),
            IsPOWER8.ToString(),
            IsPOWER9.ToString(),
            IsPOWER10.ToString(),
            _.ToString()
        ]), "}");
    }
}
