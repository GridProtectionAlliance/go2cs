//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.@internal;

public static partial class cpu_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct S390Xᴛ1
    {
        // Promoted Struct References
        // -- S390Xᴛ1 has no promoted structs

        // Field References
        public static ref global::go.@internal.cpu_package.CacheLinePad Ꮡ_(ref S390Xᴛ1 instance) => ref instance._;
        internal static ref bool ᏑHasZARCH(ref S390Xᴛ1 instance) => ref instance.HasZARCH;
        internal static ref bool ᏑHasSTFLE(ref S390Xᴛ1 instance) => ref instance.HasSTFLE;
        internal static ref bool ᏑHasLDISP(ref S390Xᴛ1 instance) => ref instance.HasLDISP;
        internal static ref bool ᏑHasEIMM(ref S390Xᴛ1 instance) => ref instance.HasEIMM;
        internal static ref bool ᏑHasDFP(ref S390Xᴛ1 instance) => ref instance.HasDFP;
        internal static ref bool ᏑHasETF3EH(ref S390Xᴛ1 instance) => ref instance.HasETF3EH;
        internal static ref bool ᏑHasMSA(ref S390Xᴛ1 instance) => ref instance.HasMSA;
        internal static ref bool ᏑHasAES(ref S390Xᴛ1 instance) => ref instance.HasAES;
        internal static ref bool ᏑHasAESCBC(ref S390Xᴛ1 instance) => ref instance.HasAESCBC;
        internal static ref bool ᏑHasAESCTR(ref S390Xᴛ1 instance) => ref instance.HasAESCTR;
        internal static ref bool ᏑHasAESGCM(ref S390Xᴛ1 instance) => ref instance.HasAESGCM;
        internal static ref bool ᏑHasGHASH(ref S390Xᴛ1 instance) => ref instance.HasGHASH;
        internal static ref bool ᏑHasSHA1(ref S390Xᴛ1 instance) => ref instance.HasSHA1;
        internal static ref bool ᏑHasSHA256(ref S390Xᴛ1 instance) => ref instance.HasSHA256;
        internal static ref bool ᏑHasSHA512(ref S390Xᴛ1 instance) => ref instance.HasSHA512;
        internal static ref bool ᏑHasSHA3(ref S390Xᴛ1 instance) => ref instance.HasSHA3;
        internal static ref bool ᏑHasVX(ref S390Xᴛ1 instance) => ref instance.HasVX;
        internal static ref bool ᏑHasVXE(ref S390Xᴛ1 instance) => ref instance.HasVXE;
        internal static ref bool ᏑHasKDSA(ref S390Xᴛ1 instance) => ref instance.HasKDSA;
        internal static ref bool ᏑHasECDSA(ref S390Xᴛ1 instance) => ref instance.HasECDSA;
        internal static ref bool ᏑHasEDDSA(ref S390Xᴛ1 instance) => ref instance.HasEDDSA;
        public static ref global::go.@internal.cpu_package.CacheLinePad Ꮡ_(ref S390Xᴛ1 instance) => ref instance._;
        
        // Constructors
        public S390Xᴛ1(NilType _)
        {
            this._ = default!;
            this.HasZARCH = default!;
            this.HasSTFLE = default!;
            this.HasLDISP = default!;
            this.HasEIMM = default!;
            this.HasDFP = default!;
            this.HasETF3EH = default!;
            this.HasMSA = default!;
            this.HasAES = default!;
            this.HasAESCBC = default!;
            this.HasAESCTR = default!;
            this.HasAESGCM = default!;
            this.HasGHASH = default!;
            this.HasSHA1 = default!;
            this.HasSHA256 = default!;
            this.HasSHA512 = default!;
            this.HasSHA3 = default!;
            this.HasVX = default!;
            this.HasVXE = default!;
            this.HasKDSA = default!;
            this.HasECDSA = default!;
            this.HasEDDSA = default!;
            this._ = default!;
        }

        public S390Xᴛ1(global::go.@internal.cpu_package.CacheLinePad _ = default!, bool HasZARCH = default!, bool HasSTFLE = default!, bool HasLDISP = default!, bool HasEIMM = default!, bool HasDFP = default!, bool HasETF3EH = default!, bool HasMSA = default!, bool HasAES = default!, bool HasAESCBC = default!, bool HasAESCTR = default!, bool HasAESGCM = default!, bool HasGHASH = default!, bool HasSHA1 = default!, bool HasSHA256 = default!, bool HasSHA512 = default!, bool HasSHA3 = default!, bool HasVX = default!, bool HasVXE = default!, bool HasKDSA = default!, bool HasECDSA = default!, bool HasEDDSA = default!, global::go.@internal.cpu_package.CacheLinePad _ = default!)
        {
            this._ = _;
            this.HasZARCH = HasZARCH;
            this.HasSTFLE = HasSTFLE;
            this.HasLDISP = HasLDISP;
            this.HasEIMM = HasEIMM;
            this.HasDFP = HasDFP;
            this.HasETF3EH = HasETF3EH;
            this.HasMSA = HasMSA;
            this.HasAES = HasAES;
            this.HasAESCBC = HasAESCBC;
            this.HasAESCTR = HasAESCTR;
            this.HasAESGCM = HasAESGCM;
            this.HasGHASH = HasGHASH;
            this.HasSHA1 = HasSHA1;
            this.HasSHA256 = HasSHA256;
            this.HasSHA512 = HasSHA512;
            this.HasSHA3 = HasSHA3;
            this.HasVX = HasVX;
            this.HasVXE = HasVXE;
            this.HasKDSA = HasKDSA;
            this.HasECDSA = HasECDSA;
            this.HasEDDSA = HasEDDSA;
            this._ = _;
        }
        
        // Handle comparisons between struct 'S390Xᴛ1' instances
        public bool Equals(S390Xᴛ1 other) =>
            _ == other._ &&
            HasZARCH == other.HasZARCH &&
            HasSTFLE == other.HasSTFLE &&
            HasLDISP == other.HasLDISP &&
            HasEIMM == other.HasEIMM &&
            HasDFP == other.HasDFP &&
            HasETF3EH == other.HasETF3EH &&
            HasMSA == other.HasMSA &&
            HasAES == other.HasAES &&
            HasAESCBC == other.HasAESCBC &&
            HasAESCTR == other.HasAESCTR &&
            HasAESGCM == other.HasAESGCM &&
            HasGHASH == other.HasGHASH &&
            HasSHA1 == other.HasSHA1 &&
            HasSHA256 == other.HasSHA256 &&
            HasSHA512 == other.HasSHA512 &&
            HasSHA3 == other.HasSHA3 &&
            HasVX == other.HasVX &&
            HasVXE == other.HasVXE &&
            HasKDSA == other.HasKDSA &&
            HasECDSA == other.HasECDSA &&
            HasEDDSA == other.HasEDDSA &&
            _ == other._;
        
        public override bool Equals(object? obj) => obj is S390Xᴛ1 other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            _,
            HasZARCH,
            HasSTFLE,
            HasLDISP,
            HasEIMM,
            HasDFP,
            HasETF3EH,
            HasMSA,
            HasAES,
            HasAESCBC,
            HasAESCTR,
            HasAESGCM,
            HasGHASH,
            HasSHA1,
            HasSHA256,
            HasSHA512,
            HasSHA3,
            HasVX,
            HasVXE,
            HasKDSA,
            HasECDSA,
            HasEDDSA,
            _);
        
        public static bool operator ==(S390Xᴛ1 left, S390Xᴛ1 right) => left.Equals(right);
        
        public static bool operator !=(S390Xᴛ1 left, S390Xᴛ1 right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'S390Xᴛ1'
        public static bool operator ==(S390Xᴛ1 value, NilType nil) => value.Equals(default(S390Xᴛ1));

        public static bool operator !=(S390Xᴛ1 value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, S390Xᴛ1 value) => value == nil;

        public static bool operator !=(NilType nil, S390Xᴛ1 value) => value != nil;

        public static implicit operator S390Xᴛ1(NilType nil) => default(S390Xᴛ1);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            _.ToString(),
            HasZARCH.ToString(),
            HasSTFLE.ToString(),
            HasLDISP.ToString(),
            HasEIMM.ToString(),
            HasDFP.ToString(),
            HasETF3EH.ToString(),
            HasMSA.ToString(),
            HasAES.ToString(),
            HasAESCBC.ToString(),
            HasAESCTR.ToString(),
            HasAESGCM.ToString(),
            HasGHASH.ToString(),
            HasSHA1.ToString(),
            HasSHA256.ToString(),
            HasSHA512.ToString(),
            HasSHA3.ToString(),
            HasVX.ToString(),
            HasVXE.ToString(),
            HasKDSA.ToString(),
            HasECDSA.ToString(),
            HasEDDSA.ToString(),
            _.ToString()
        ]), "}");
    }
}
