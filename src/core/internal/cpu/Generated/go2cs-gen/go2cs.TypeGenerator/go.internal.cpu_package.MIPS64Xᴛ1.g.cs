//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.@internal;

public static partial class cpu_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct MIPS64Xᴛ1
    {
        // Promoted Struct References
        // -- MIPS64Xᴛ1 has no promoted structs

        // Field References
        public static ref global::go.@internal.cpu_package.CacheLinePad Ꮡ_(ref MIPS64Xᴛ1 instance) => ref instance._;
        internal static ref bool ᏑHasMSA(ref MIPS64Xᴛ1 instance) => ref instance.HasMSA;
        public static ref global::go.@internal.cpu_package.CacheLinePad Ꮡ_(ref MIPS64Xᴛ1 instance) => ref instance._;
        
        // Constructors
        public MIPS64Xᴛ1(NilType _)
        {
            this._ = default!;
            this.HasMSA = default!;
            this._ = default!;
        }

        public MIPS64Xᴛ1(global::go.@internal.cpu_package.CacheLinePad _ = default!, bool HasMSA = default!, global::go.@internal.cpu_package.CacheLinePad _ = default!)
        {
            this._ = _;
            this.HasMSA = HasMSA;
            this._ = _;
        }
        
        // Handle comparisons between struct 'MIPS64Xᴛ1' instances
        public bool Equals(MIPS64Xᴛ1 other) =>
            _ == other._ &&
            HasMSA == other.HasMSA &&
            _ == other._;
        
        public override bool Equals(object? obj) => obj is MIPS64Xᴛ1 other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            _,
            HasMSA,
            _);
        
        public static bool operator ==(MIPS64Xᴛ1 left, MIPS64Xᴛ1 right) => left.Equals(right);
        
        public static bool operator !=(MIPS64Xᴛ1 left, MIPS64Xᴛ1 right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'MIPS64Xᴛ1'
        public static bool operator ==(MIPS64Xᴛ1 value, NilType nil) => value.Equals(default(MIPS64Xᴛ1));

        public static bool operator !=(MIPS64Xᴛ1 value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, MIPS64Xᴛ1 value) => value == nil;

        public static bool operator !=(NilType nil, MIPS64Xᴛ1 value) => value != nil;

        public static implicit operator MIPS64Xᴛ1(NilType nil) => default(MIPS64Xᴛ1);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            _.ToString(),
            HasMSA.ToString(),
            _.ToString()
        ]), "}");
    }
}
