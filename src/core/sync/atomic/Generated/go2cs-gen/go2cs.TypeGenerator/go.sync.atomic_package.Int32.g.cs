//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;
using go;

#nullable enable

namespace go.sync;

public static partial class atomic_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct Int32
    {
        // Promoted Struct References
        // -- Int32 has no promoted structs

        // Field References
        internal static ref global::go.sync.atomic_package.noCopy Ꮡ_(ref Int32 instance) => ref instance._;
        internal static ref int Ꮡv(ref Int32 instance) => ref instance.v;
        
        // Constructors
        public Int32(NilType _)
        {
            this._ = default!;
            this.v = default!;
        }

        public Int32(global::go.sync.atomic_package.noCopy _ = default!)
        {
            this._ = _;
        }

        internal Int32(global::go.sync.atomic_package.noCopy _ = default!, int v = default!)
        {
            this._ = _;
            this.v = v;
        }
        
        // Handle comparisons between struct 'Int32' instances
        public bool Equals(Int32 other) =>
            _ == other._ &&
            v == other.v;
        
        public override bool Equals(object? obj) => obj is Int32 other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            _,
            v);
        
        public static bool operator ==(Int32 left, Int32 right) => left.Equals(right);
        
        public static bool operator !=(Int32 left, Int32 right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'Int32'
        public static bool operator ==(Int32 value, NilType nil) => value.Equals(default(Int32));

        public static bool operator !=(Int32 value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, Int32 value) => value == nil;

        public static bool operator !=(NilType nil, Int32 value) => value != nil;

        public static implicit operator Int32(NilType nil) => default(Int32);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            _.ToString(),
            v.ToString()
        ]), "}");
    }
}
