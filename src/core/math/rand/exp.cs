// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.
namespace go.math;

using math = math_package;

partial class rand_package {

/*
 * Exponential distribution
 *
 * See "The Ziggurat Method for Generating Random Variables"
 * (Marsaglia & Tsang, 2000)
 * https://www.jstatsoft.org/v05/i08/paper [pdf]
 */
internal static readonly UntypedFloat re = /* 7.69711747013104972 */ 7.69712;

// ExpFloat64 returns an exponentially distributed float64 in the range
// (0, +[math.MaxFloat64]] with an exponential distribution whose rate parameter
// (lambda) is 1 and whose mean is 1/lambda (1).
// To produce a distribution with a different rate parameter,
// callers can adjust the output using:
//
//	sample = ExpFloat64() / desiredRateParameter
[GoRecv] public static float64 ExpFloat64(this ref Rand r) {
    while (·êß) {
        var j = r.Uint32();
        var i = (uint32)(j & 255);
        var x = ((float64)j) * ((float64)we[i]);
        if (j < ke[i]) {
            return x;
        }
        if (i == 0) {
            return re - math.Log(r.Float64());
        }
        if (fe[i] + ((float32)r.Float64()) * (fe[i - 1] - fe[i]) < ((float32)math.Exp(-x))) {
            return x;
        }
    }
}

internal static array<uint32> ke = new uint32[]{
    (nint)3801129273L, 0, (nint)2615860924L, (nint)3279400049L, (nint)3571300752L,
    (nint)3733536696L, (nint)3836274812L, (nint)3906990442L, (nint)3958562475L, (nint)3997804264L,
    (nint)4028649213L, (nint)4053523342L, (nint)4074002619L, (nint)4091154507L, (nint)4105727352L,
    (nint)4118261130L, (nint)4129155133L, (nint)4138710916L, (nint)4147160435L, (nint)4154685009L,
    (nint)4161428406L, (nint)4167506077L, (nint)4173011791L, (nint)4178022498L, (nint)4182601930L,
    (nint)4186803325L, (nint)4190671498L, (nint)4194244443L, (nint)4197554582L, (nint)4200629752L,
    (nint)4203493986L, (nint)4206168142L, (nint)4208670408L, (nint)4211016720L, (nint)4213221098L,
    (nint)4215295924L, (nint)4217252177L, (nint)4219099625L, (nint)4220846988L, (nint)4222502074L,
    (nint)4224071896L, (nint)4225562770L, (nint)4226980400L, (nint)4228329951L, (nint)4229616109L,
    (nint)4230843138L, (nint)4232014925L, (nint)4233135020L, (nint)4234206673L, (nint)4235232866L,
    (nint)4236216336L, (nint)4237159604L, (nint)4238064994L, (nint)4238934652L, (nint)4239770563L,
    (nint)4240574564L, (nint)4241348362L, (nint)4242093539L, (nint)4242811568L, (nint)4243503822L,
    (nint)4244171579L, (nint)4244816032L, (nint)4245438297L, (nint)4246039419L, (nint)4246620374L,
    (nint)4247182079L, (nint)4247725394L, (nint)4248251127L, (nint)4248760037L, (nint)4249252839L,
    (nint)4249730206L, (nint)4250192773L, (nint)4250641138L, (nint)4251075867L, (nint)4251497493L,
    (nint)4251906522L, (nint)4252303431L, (nint)4252688672L, (nint)4253062674L, (nint)4253425844L,
    (nint)4253778565L, (nint)4254121205L, (nint)4254454110L, (nint)4254777611L, (nint)4255092022L,
    (nint)4255397640L, (nint)4255694750L, (nint)4255983622L, (nint)4256264513L, (nint)4256537670L,
    (nint)4256803325L, (nint)4257061702L, (nint)4257313014L, (nint)4257557464L, (nint)4257795244L,
    (nint)4258026541L, (nint)4258251531L, (nint)4258470383L, (nint)4258683258L, (nint)4258890309L,
    (nint)4259091685L, (nint)4259287526L, (nint)4259477966L, (nint)4259663135L, (nint)4259843154L,
    (nint)4260018142L, (nint)4260188212L, (nint)4260353470L, (nint)4260514019L, (nint)4260669958L,
    (nint)4260821380L, (nint)4260968374L, (nint)4261111028L, (nint)4261249421L, (nint)4261383632L,
    (nint)4261513736L, (nint)4261639802L, (nint)4261761900L, (nint)4261880092L, (nint)4261994441L,
    (nint)4262105003L, (nint)4262211835L, (nint)4262314988L, (nint)4262414513L, (nint)4262510454L,
    (nint)4262602857L, (nint)4262691764L, (nint)4262777212L, (nint)4262859239L, (nint)4262937878L,
    (nint)4263013162L, (nint)4263085118L, (nint)4263153776L, (nint)4263219158L, (nint)4263281289L,
    (nint)4263340187L, (nint)4263395872L, (nint)4263448358L, (nint)4263497660L, (nint)4263543789L,
    (nint)4263586755L, (nint)4263626565L, (nint)4263663224L, (nint)4263696735L, (nint)4263727099L,
    (nint)4263754314L, (nint)4263778377L, (nint)4263799282L, (nint)4263817020L, (nint)4263831582L,
    (nint)4263842955L, (nint)4263851124L, (nint)4263856071L, (nint)4263857776L, (nint)4263856218L,
    (nint)4263851370L, (nint)4263843206L, (nint)4263831695L, (nint)4263816804L, (nint)4263798497L,
    (nint)4263776735L, (nint)4263751476L, (nint)4263722676L, (nint)4263690284L, (nint)4263654251L,
    (nint)4263614520L, (nint)4263571032L, (nint)4263523724L, (nint)4263472530L, (nint)4263417377L,
    (nint)4263358192L, (nint)4263294892L, (nint)4263227394L, (nint)4263155608L, (nint)4263079437L,
    (nint)4262998781L, (nint)4262913534L, (nint)4262823581L, (nint)4262728804L, (nint)4262629075L,
    (nint)4262524261L, (nint)4262414220L, (nint)4262298801L, (nint)4262177846L, (nint)4262051187L,
    (nint)4261918645L, (nint)4261780032L, (nint)4261635148L, (nint)4261483780L, (nint)4261325704L,
    (nint)4261160681L, (nint)4260988457L, (nint)4260808763L, (nint)4260621313L, (nint)4260425802L,
    (nint)4260221905L, (nint)4260009277L, (nint)4259787550L, (nint)4259556329L, (nint)4259315195L,
    (nint)4259063697L, (nint)4258801357L, (nint)4258527656L, (nint)4258242044L, (nint)4257943926L,
    (nint)4257632664L, (nint)4257307571L, (nint)4256967906L, (nint)4256612870L, (nint)4256241598L,
    (nint)4255853155L, (nint)4255446525L, (nint)4255020608L, (nint)4254574202L, (nint)4254106002L,
    (nint)4253614578L, (nint)4253098370L, (nint)4252555662L, (nint)4251984571L, (nint)4251383021L,
    (nint)4250748722L, (nint)4250079132L, (nint)4249371435L, (nint)4248622490L, (nint)4247828790L,
    (nint)4246986404L, (nint)4246090910L, (nint)4245137315L, (nint)4244119963L, (nint)4243032411L,
    (nint)4241867296L, (nint)4240616155L, (nint)4239269214L, (nint)4237815118L, (nint)4236240596L,
    (nint)4234530035L, (nint)4232664930L, (nint)4230623176L, (nint)4228378137L, (nint)4225897409L,
    (nint)4223141146L, (nint)4220059768L, (nint)4216590757L, (nint)4212654085L, (nint)4208145538L,
    (nint)4202926710L, (nint)4196809522L, (nint)4189531420L, (nint)4180713890L, (nint)4169789475L,
    (nint)4155865042L, (nint)4137444620L, (nint)4111806704L, (nint)4073393724L, (nint)4008685917L,
    (nint)3873074895L
}.array();

internal static array<float32> we = new float32[]{
    2.0249555e-09F, 1.486674e-11F, 2.4409617e-11F, 3.1968806e-11F,
    3.844677e-11F, 4.4228204e-11F, 4.9516443e-11F, 5.443359e-11F,
    5.905944e-11F, 6.344942e-11F, 6.7643814e-11F, 7.1672945e-11F,
    7.556032e-11F, 7.932458e-11F, 8.298079e-11F, 8.654132e-11F,
    9.0016515e-11F, 9.3415074e-11F, 9.674443e-11F, 1.0001099e-10F,
    1.03220314e-10F, 1.06377254e-10F, 1.09486115e-10F, 1.1255068e-10F,
    1.1557435e-10F, 1.1856015e-10F, 1.2151083e-10F, 1.2442886e-10F,
    1.2731648e-10F, 1.3017575e-10F, 1.3300853e-10F, 1.3581657e-10F,
    1.3860142e-10F, 1.4136457e-10F, 1.4410738e-10F, 1.4683108e-10F,
    1.4953687e-10F, 1.5222583e-10F, 1.54899e-10F, 1.5755733e-10F,
    1.6020171e-10F, 1.6283301e-10F, 1.6545203e-10F, 1.6805951e-10F,
    1.7065617e-10F, 1.732427e-10F, 1.7581973e-10F, 1.7838787e-10F,
    1.8094774e-10F, 1.8349985e-10F, 1.8604476e-10F, 1.8858298e-10F,
    1.9111498e-10F, 1.9364126e-10F, 1.9616223e-10F, 1.9867835e-10F,
    2.0119004e-10F, 2.0369768e-10F, 2.0620168e-10F, 2.087024e-10F,
    2.1120022e-10F, 2.136955e-10F, 2.1618855e-10F, 2.1867974e-10F,
    2.2116936e-10F, 2.2365775e-10F, 2.261452e-10F, 2.2863202e-10F,
    2.311185e-10F, 2.3360494e-10F, 2.360916e-10F, 2.3857874e-10F,
    2.4106667e-10F, 2.4355562e-10F, 2.4604588e-10F, 2.485377e-10F,
    2.5103128e-10F, 2.5352695e-10F, 2.560249e-10F, 2.585254e-10F,
    2.6102867e-10F, 2.6353494e-10F, 2.6604446e-10F, 2.6855745e-10F,
    2.7107416e-10F, 2.7359479e-10F, 2.761196e-10F, 2.7864877e-10F,
    2.8118255e-10F, 2.8372119e-10F, 2.8626485e-10F, 2.888138e-10F,
    2.9136826e-10F, 2.939284e-10F, 2.9649452e-10F, 2.9906677e-10F,
    3.016454e-10F, 3.0423064e-10F, 3.0682268e-10F, 3.0942177e-10F,
    3.1202813e-10F, 3.1464195e-10F, 3.1726352e-10F, 3.19893e-10F,
    3.2253064e-10F, 3.251767e-10F, 3.2783135e-10F, 3.3049485e-10F,
    3.3316744e-10F, 3.3584938e-10F, 3.3854083e-10F, 3.4124212e-10F,
    3.4395342e-10F, 3.46675e-10F, 3.4940711e-10F, 3.5215003e-10F,
    3.5490397e-10F, 3.5766917e-10F, 3.6044595e-10F, 3.6323455e-10F,
    3.660352e-10F, 3.6884823e-10F, 3.7167386e-10F, 3.745124e-10F,
    3.773641e-10F, 3.802293e-10F, 3.8310827e-10F, 3.860013e-10F,
    3.8890866e-10F, 3.918307e-10F, 3.9476775e-10F, 3.9772008e-10F,
    4.0068804e-10F, 4.0367196e-10F, 4.0667217e-10F, 4.09689e-10F,
    4.1272286e-10F, 4.1577405e-10F, 4.1884296e-10F, 4.2192994e-10F,
    4.250354e-10F, 4.281597e-10F, 4.313033e-10F, 4.3446652e-10F,
    4.3764986e-10F, 4.408537e-10F, 4.4407847e-10F, 4.4732465e-10F,
    4.5059267e-10F, 4.5388301e-10F, 4.571962e-10F, 4.6053267e-10F,
    4.6389292e-10F, 4.6727755e-10F, 4.70687e-10F, 4.741219e-10F,
    4.7758275e-10F, 4.810702e-10F, 4.845848e-10F, 4.8812715e-10F,
    4.9169796e-10F, 4.9529775e-10F, 4.989273e-10F, 5.0258725e-10F,
    5.0627835e-10F, 5.100013e-10F, 5.1375687e-10F, 5.1754584e-10F,
    5.21369e-10F, 5.2522725e-10F, 5.2912136e-10F, 5.330522e-10F,
    5.370208e-10F, 5.4102806e-10F, 5.45075e-10F, 5.491625e-10F,
    5.532918e-10F, 5.5746385e-10F, 5.616799e-10F, 5.6594107e-10F,
    5.7024857e-10F, 5.746037e-10F, 5.7900773e-10F, 5.834621e-10F,
    5.8796823e-10F, 5.925276e-10F, 5.971417e-10F, 6.018122e-10F,
    6.065408e-10F, 6.113292e-10F, 6.1617933e-10F, 6.2109295e-10F,
    6.260722e-10F, 6.3111916e-10F, 6.3623595e-10F, 6.4142497e-10F,
    6.4668854e-10F, 6.5202926e-10F, 6.5744976e-10F, 6.6295286e-10F,
    6.6854156e-10F, 6.742188e-10F, 6.79988e-10F, 6.858526e-10F,
    6.9181616e-10F, 6.978826e-10F, 7.04056e-10F, 7.103407e-10F,
    7.167412e-10F, 7.2326256e-10F, 7.2990985e-10F, 7.366886e-10F,
    7.4360473e-10F, 7.5066453e-10F, 7.5787476e-10F, 7.6524265e-10F,
    7.7277595e-10F, 7.80483e-10F, 7.883728e-10F, 7.9645507e-10F,
    8.047402e-10F, 8.1323964e-10F, 8.219657e-10F, 8.309319e-10F,
    8.401528e-10F, 8.496445e-10F, 8.594247e-10F, 8.6951274e-10F,
    8.799301e-10F, 8.9070046e-10F, 9.018503e-10F, 9.134092e-10F,
    9.254101e-10F, 9.378904e-10F, 9.508923e-10F, 9.644638e-10F,
    9.786603e-10F, 9.935448e-10F, 1.0091913e-09F, 1.025686e-09F,
    1.0431306e-09F, 1.0616465e-09F, 1.08138e-09F, 1.1025096e-09F,
    1.1252564e-09F, 1.1498986e-09F, 1.1767932e-09F, 1.206409e-09F,
    1.2393786e-09F, 1.276585e-09F, 1.3193139e-09F, 1.3695435e-09F,
    1.4305498e-09F, 1.508365e-09F, 1.6160854e-09F, 1.7921248e-09F
}.array();

internal static array<float32> fe = new float32[]{
    1, 0.9381437F, 0.90046996F, 0.87170434F, 0.8477855F, 0.8269933F,
    0.8084217F, 0.7915276F, 0.77595687F, 0.7614634F, 0.7478686F,
    0.7350381F, 0.72286767F, 0.71127474F, 0.70019263F, 0.6895665F,
    0.67935055F, 0.6695063F, 0.66000086F, 0.65080583F, 0.6418967F,
    0.63325197F, 0.6248527F, 0.6166822F, 0.60872537F, 0.60096896F,
    0.5934009F, 0.58601034F, 0.5787874F, 0.57172304F, 0.5648092F,
    0.5580383F, 0.5514034F, 0.5448982F, 0.5385169F, 0.53225386F,
    0.5261042F, 0.52006316F, 0.5141264F, 0.50828975F, 0.5025495F,
    0.496902F, 0.49134386F, 0.485872F, 0.48048335F, 0.4751752F,
    0.46994483F, 0.46478975F, 0.45970762F, 0.45469615F, 0.44975325F,
    0.44487688F, 0.44006512F, 0.43531612F, 0.43062815F, 0.42599955F,
    0.42142874F, 0.4169142F, 0.41245446F, 0.40804818F, 0.403694F,
    0.3993907F, 0.39513698F, 0.39093173F, 0.38677382F, 0.38266218F,
    0.37859577F, 0.37457356F, 0.37059465F, 0.3666581F, 0.362763F,
    0.35890847F, 0.35509375F, 0.351318F, 0.3475805F, 0.34388044F,
    0.34021714F, 0.3365899F, 0.33299807F, 0.32944095F, 0.32591796F,
    0.3224285F, 0.3189719F, 0.31554767F, 0.31215525F, 0.30879408F,
    0.3054636F, 0.3021634F, 0.29889292F, 0.2956517F, 0.29243928F,
    0.28925523F, 0.28609908F, 0.28297043F, 0.27986884F, 0.27679393F,
    0.2737453F, 0.2707226F, 0.2677254F, 0.26475343F, 0.26180625F,
    0.25888354F, 0.25598502F, 0.2531103F, 0.25025907F, 0.24743107F,
    0.24462597F, 0.24184346F, 0.23908329F, 0.23634516F, 0.23362878F,
    0.23093392F, 0.2282603F, 0.22560766F, 0.22297576F, 0.22036438F,
    0.21777324F, 0.21520215F, 0.21265087F, 0.21011916F, 0.20760682F,
    0.20511365F, 0.20263945F, 0.20018397F, 0.19774707F, 0.19532852F,
    0.19292815F, 0.19054577F, 0.1881812F, 0.18583426F, 0.18350479F,
    0.1811926F, 0.17889754F, 0.17661946F, 0.17435817F, 0.17211354F,
    0.1698854F, 0.16767362F, 0.16547804F, 0.16329853F, 0.16113494F,
    0.15898713F, 0.15685499F, 0.15473837F, 0.15263714F, 0.15055119F,
    0.14848037F, 0.14642459F, 0.14438373F, 0.14235765F, 0.14034624F,
    0.13834943F, 0.13636707F, 0.13439907F, 0.13244532F, 0.13050574F,
    0.1285802F, 0.12666863F, 0.12477092F, 0.12288698F, 0.12101672F,
    0.119160056F, 0.1173169F, 0.115487166F, 0.11367077F, 0.11186763F,
    0.11007768F, 0.10830083F, 0.10653701F, 0.10478614F, 0.10304816F,
    0.101323F, 0.09961058F, 0.09791085F, 0.09622374F, 0.09454919F,
    0.09288713F, 0.091237515F, 0.08960028F, 0.087975375F, 0.08636274F,
    0.08476233F, 0.083174095F, 0.081597984F, 0.08003395F, 0.07848195F,
    0.076941945F, 0.07541389F, 0.07389775F, 0.072393484F, 0.07090106F,
    0.069420435F, 0.06795159F, 0.066494495F, 0.06504912F, 0.063615434F,
    0.062193416F, 0.060783047F, 0.059384305F, 0.057997175F,
    0.05662164F, 0.05525769F, 0.053905312F, 0.052564494F, 0.051235236F,
    0.049917534F, 0.048611384F, 0.047316793F, 0.046033762F, 0.0447623F,
    0.043502413F, 0.042254124F, 0.041017443F, 0.039792392F,
    0.038578995F, 0.037377283F, 0.036187284F, 0.035009038F,
    0.033842582F, 0.032687962F, 0.031545233F, 0.030414443F, 0.02929566F,
    0.02818895F, 0.027094385F, 0.026012046F, 0.024942026F, 0.023884421F,
    0.022839336F, 0.021806888F, 0.020787204F, 0.019780423F, 0.0187867F,
    0.0178062F, 0.016839107F, 0.015885621F, 0.014945968F, 0.014020392F,
    0.013109165F, 0.012212592F, 0.011331013F, 0.01046481F, 0.009614414F,
    0.008780315F, 0.007963077F, 0.0071633533F, 0.006381906F,
    0.0056196423F, 0.0048776558F, 0.004157295F, 0.0034602648F,
    0.0027887989F, 0.0021459677F, 0.0015362998F, 0.0009672693F,
    0.00045413437F
}.array();

} // end rand_package
