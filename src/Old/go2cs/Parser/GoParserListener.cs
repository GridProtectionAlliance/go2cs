//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GoParser.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GoParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IGoParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.sourceFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceFile([NotNull] GoParser.SourceFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.sourceFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceFile([NotNull] GoParser.SourceFileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.topLevelDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevelDecl([NotNull] GoParser.TopLevelDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.topLevelDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevelDecl([NotNull] GoParser.TopLevelDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.packageClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPackageClause([NotNull] GoParser.PackageClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.packageClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPackageClause([NotNull] GoParser.PackageClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.importDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportDecl([NotNull] GoParser.ImportDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.importDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportDecl([NotNull] GoParser.ImportDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.importSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportSpec([NotNull] GoParser.ImportSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.importSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportSpec([NotNull] GoParser.ImportSpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.importPath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportPath([NotNull] GoParser.ImportPathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.importPath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportPath([NotNull] GoParser.ImportPathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] GoParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] GoParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstDecl([NotNull] GoParser.ConstDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.constDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstDecl([NotNull] GoParser.ConstDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.constSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstSpec([NotNull] GoParser.ConstSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.constSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstSpec([NotNull] GoParser.ConstSpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierList([NotNull] GoParser.IdentifierListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierList([NotNull] GoParser.IdentifierListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] GoParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] GoParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDecl([NotNull] GoParser.TypeDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDecl([NotNull] GoParser.TypeDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSpec([NotNull] GoParser.TypeSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSpec([NotNull] GoParser.TypeSpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecl([NotNull] GoParser.FunctionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecl([NotNull] GoParser.FunctionDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDecl([NotNull] GoParser.MethodDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDecl([NotNull] GoParser.MethodDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.receiver"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReceiver([NotNull] GoParser.ReceiverContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.receiver"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReceiver([NotNull] GoParser.ReceiverContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] GoParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] GoParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.varSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarSpec([NotNull] GoParser.VarSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.varSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarSpec([NotNull] GoParser.VarSpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] GoParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] GoParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] GoParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] GoParser.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] GoParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] GoParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.simpleStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleStmt([NotNull] GoParser.SimpleStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.simpleStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleStmt([NotNull] GoParser.SimpleStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.expressionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStmt([NotNull] GoParser.ExpressionStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.expressionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStmt([NotNull] GoParser.ExpressionStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.sendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSendStmt([NotNull] GoParser.SendStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.sendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSendStmt([NotNull] GoParser.SendStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.incDecStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncDecStmt([NotNull] GoParser.IncDecStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.incDecStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncDecStmt([NotNull] GoParser.IncDecStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] GoParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] GoParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.assign_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign_op([NotNull] GoParser.Assign_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.assign_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign_op([NotNull] GoParser.Assign_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.shortVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShortVarDecl([NotNull] GoParser.ShortVarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.shortVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShortVarDecl([NotNull] GoParser.ShortVarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.emptyStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEmptyStmt([NotNull] GoParser.EmptyStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.emptyStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEmptyStmt([NotNull] GoParser.EmptyStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.labeledStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledStmt([NotNull] GoParser.LabeledStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.labeledStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledStmt([NotNull] GoParser.LabeledStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] GoParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] GoParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStmt([NotNull] GoParser.BreakStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStmt([NotNull] GoParser.BreakStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.continueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStmt([NotNull] GoParser.ContinueStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.continueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStmt([NotNull] GoParser.ContinueStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.gotoStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGotoStmt([NotNull] GoParser.GotoStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.gotoStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGotoStmt([NotNull] GoParser.GotoStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.fallthroughStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFallthroughStmt([NotNull] GoParser.FallthroughStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.fallthroughStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFallthroughStmt([NotNull] GoParser.FallthroughStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.deferStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeferStmt([NotNull] GoParser.DeferStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.deferStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeferStmt([NotNull] GoParser.DeferStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] GoParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] GoParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.switchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStmt([NotNull] GoParser.SwitchStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.switchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStmt([NotNull] GoParser.SwitchStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.exprSwitchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprSwitchStmt([NotNull] GoParser.ExprSwitchStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.exprSwitchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprSwitchStmt([NotNull] GoParser.ExprSwitchStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.exprCaseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprCaseClause([NotNull] GoParser.ExprCaseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.exprCaseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprCaseClause([NotNull] GoParser.ExprCaseClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.exprSwitchCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprSwitchCase([NotNull] GoParser.ExprSwitchCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.exprSwitchCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprSwitchCase([NotNull] GoParser.ExprSwitchCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSwitchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSwitchStmt([NotNull] GoParser.TypeSwitchStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSwitchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSwitchStmt([NotNull] GoParser.TypeSwitchStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSwitchGuard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSwitchGuard([NotNull] GoParser.TypeSwitchGuardContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSwitchGuard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSwitchGuard([NotNull] GoParser.TypeSwitchGuardContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeCaseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeCaseClause([NotNull] GoParser.TypeCaseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeCaseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeCaseClause([NotNull] GoParser.TypeCaseClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSwitchCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSwitchCase([NotNull] GoParser.TypeSwitchCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSwitchCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSwitchCase([NotNull] GoParser.TypeSwitchCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeList([NotNull] GoParser.TypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeList([NotNull] GoParser.TypeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.selectStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectStmt([NotNull] GoParser.SelectStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.selectStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectStmt([NotNull] GoParser.SelectStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.commClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommClause([NotNull] GoParser.CommClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.commClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommClause([NotNull] GoParser.CommClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.commCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommCase([NotNull] GoParser.CommCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.commCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommCase([NotNull] GoParser.CommCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.recvStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecvStmt([NotNull] GoParser.RecvStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.recvStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecvStmt([NotNull] GoParser.RecvStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStmt([NotNull] GoParser.ForStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStmt([NotNull] GoParser.ForStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.forClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForClause([NotNull] GoParser.ForClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.forClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForClause([NotNull] GoParser.ForClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.rangeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeClause([NotNull] GoParser.RangeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.rangeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeClause([NotNull] GoParser.RangeClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.goStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoStmt([NotNull] GoParser.GoStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.goStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoStmt([NotNull] GoParser.GoStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType_([NotNull] GoParser.Type_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.type_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType_([NotNull] GoParser.Type_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] GoParser.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] GoParser.TypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeLit([NotNull] GoParser.TypeLitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeLit([NotNull] GoParser.TypeLitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayType([NotNull] GoParser.ArrayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.arrayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayType([NotNull] GoParser.ArrayTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.arrayLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLength([NotNull] GoParser.ArrayLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.arrayLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLength([NotNull] GoParser.ArrayLengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.elementType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementType([NotNull] GoParser.ElementTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.elementType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementType([NotNull] GoParser.ElementTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.pointerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointerType([NotNull] GoParser.PointerTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.pointerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointerType([NotNull] GoParser.PointerTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.interfaceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceType([NotNull] GoParser.InterfaceTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.interfaceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceType([NotNull] GoParser.InterfaceTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.sliceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSliceType([NotNull] GoParser.SliceTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.sliceType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSliceType([NotNull] GoParser.SliceTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.mapType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMapType([NotNull] GoParser.MapTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.mapType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMapType([NotNull] GoParser.MapTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.channelType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChannelType([NotNull] GoParser.ChannelTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.channelType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChannelType([NotNull] GoParser.ChannelTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.methodSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodSpec([NotNull] GoParser.MethodSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.methodSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodSpec([NotNull] GoParser.MethodSpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.functionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionType([NotNull] GoParser.FunctionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.functionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionType([NotNull] GoParser.FunctionTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignature([NotNull] GoParser.SignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignature([NotNull] GoParser.SignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResult([NotNull] GoParser.ResultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResult([NotNull] GoParser.ResultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameters([NotNull] GoParser.ParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameters([NotNull] GoParser.ParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.parameterDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterDecl([NotNull] GoParser.ParameterDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.parameterDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterDecl([NotNull] GoParser.ParameterDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] GoParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] GoParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpr([NotNull] GoParser.PrimaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpr([NotNull] GoParser.PrimaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] GoParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] GoParser.UnaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.conversion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConversion([NotNull] GoParser.ConversionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.conversion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConversion([NotNull] GoParser.ConversionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperand([NotNull] GoParser.OperandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperand([NotNull] GoParser.OperandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] GoParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] GoParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.basicLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicLit([NotNull] GoParser.BasicLitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.basicLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicLit([NotNull] GoParser.BasicLitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] GoParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] GoParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.operandName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperandName([NotNull] GoParser.OperandNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.operandName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperandName([NotNull] GoParser.OperandNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.qualifiedIdent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedIdent([NotNull] GoParser.QualifiedIdentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.qualifiedIdent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedIdent([NotNull] GoParser.QualifiedIdentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.compositeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompositeLit([NotNull] GoParser.CompositeLitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.compositeLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompositeLit([NotNull] GoParser.CompositeLitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.literalType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralType([NotNull] GoParser.LiteralTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.literalType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralType([NotNull] GoParser.LiteralTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.literalValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralValue([NotNull] GoParser.LiteralValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.literalValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralValue([NotNull] GoParser.LiteralValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.elementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementList([NotNull] GoParser.ElementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.elementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementList([NotNull] GoParser.ElementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.keyedElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyedElement([NotNull] GoParser.KeyedElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.keyedElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyedElement([NotNull] GoParser.KeyedElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKey([NotNull] GoParser.KeyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.key"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKey([NotNull] GoParser.KeyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement([NotNull] GoParser.ElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement([NotNull] GoParser.ElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.structType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructType([NotNull] GoParser.StructTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.structType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructType([NotNull] GoParser.StructTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.fieldDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldDecl([NotNull] GoParser.FieldDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.fieldDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldDecl([NotNull] GoParser.FieldDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.string_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_([NotNull] GoParser.String_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.string_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_([NotNull] GoParser.String_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.anonymousField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnonymousField([NotNull] GoParser.AnonymousFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.anonymousField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnonymousField([NotNull] GoParser.AnonymousFieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.functionLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionLit([NotNull] GoParser.FunctionLitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.functionLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionLit([NotNull] GoParser.FunctionLitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex([NotNull] GoParser.IndexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex([NotNull] GoParser.IndexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.slice_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlice_([NotNull] GoParser.Slice_Context context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.slice_"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlice_([NotNull] GoParser.Slice_Context context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeAssertion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAssertion([NotNull] GoParser.TypeAssertionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeAssertion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAssertion([NotNull] GoParser.TypeAssertionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] GoParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] GoParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.methodExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodExpr([NotNull] GoParser.MethodExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.methodExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodExpr([NotNull] GoParser.MethodExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.receiverType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReceiverType([NotNull] GoParser.ReceiverTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.receiverType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReceiverType([NotNull] GoParser.ReceiverTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.eos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEos([NotNull] GoParser.EosContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.eos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEos([NotNull] GoParser.EosContext context);
}
