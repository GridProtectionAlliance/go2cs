//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from GoParser.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGoParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class GoParserBaseListener : IGoParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceFile([NotNull] GoParser.SourceFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceFile([NotNull] GoParser.SourceFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.topLevelDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopLevelDecl([NotNull] GoParser.TopLevelDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.topLevelDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopLevelDecl([NotNull] GoParser.TopLevelDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.packageClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPackageClause([NotNull] GoParser.PackageClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.packageClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPackageClause([NotNull] GoParser.PackageClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.importDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportDecl([NotNull] GoParser.ImportDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.importDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportDecl([NotNull] GoParser.ImportDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.importSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportSpec([NotNull] GoParser.ImportSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.importSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportSpec([NotNull] GoParser.ImportSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.importPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportPath([NotNull] GoParser.ImportPathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.importPath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportPath([NotNull] GoParser.ImportPathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] GoParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] GoParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstDecl([NotNull] GoParser.ConstDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.constDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstDecl([NotNull] GoParser.ConstDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.constSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstSpec([NotNull] GoParser.ConstSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.constSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstSpec([NotNull] GoParser.ConstSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierList([NotNull] GoParser.IdentifierListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.identifierList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierList([NotNull] GoParser.IdentifierListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] GoParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] GoParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDecl([NotNull] GoParser.TypeDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDecl([NotNull] GoParser.TypeDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSpec([NotNull] GoParser.TypeSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSpec([NotNull] GoParser.TypeSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecl([NotNull] GoParser.FunctionDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecl([NotNull] GoParser.FunctionDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDecl([NotNull] GoParser.MethodDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDecl([NotNull] GoParser.MethodDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.receiver"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReceiver([NotNull] GoParser.ReceiverContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.receiver"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReceiver([NotNull] GoParser.ReceiverContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] GoParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] GoParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.varSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarSpec([NotNull] GoParser.VarSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.varSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarSpec([NotNull] GoParser.VarSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] GoParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] GoParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] GoParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] GoParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] GoParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] GoParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.simpleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleStmt([NotNull] GoParser.SimpleStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.simpleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleStmt([NotNull] GoParser.SimpleStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.expressionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStmt([NotNull] GoParser.ExpressionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.expressionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStmt([NotNull] GoParser.ExpressionStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.sendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSendStmt([NotNull] GoParser.SendStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.sendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSendStmt([NotNull] GoParser.SendStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.incDecStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncDecStmt([NotNull] GoParser.IncDecStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.incDecStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncDecStmt([NotNull] GoParser.IncDecStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] GoParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] GoParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.assign_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_op([NotNull] GoParser.Assign_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.assign_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_op([NotNull] GoParser.Assign_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.shortVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortVarDecl([NotNull] GoParser.ShortVarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.shortVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortVarDecl([NotNull] GoParser.ShortVarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.emptyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStmt([NotNull] GoParser.EmptyStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.emptyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStmt([NotNull] GoParser.EmptyStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.labeledStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabeledStmt([NotNull] GoParser.LabeledStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.labeledStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabeledStmt([NotNull] GoParser.LabeledStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] GoParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] GoParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.breakStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStmt([NotNull] GoParser.BreakStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.breakStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStmt([NotNull] GoParser.BreakStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.continueStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStmt([NotNull] GoParser.ContinueStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.continueStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStmt([NotNull] GoParser.ContinueStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.gotoStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStmt([NotNull] GoParser.GotoStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.gotoStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStmt([NotNull] GoParser.GotoStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.fallthroughStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFallthroughStmt([NotNull] GoParser.FallthroughStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.fallthroughStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFallthroughStmt([NotNull] GoParser.FallthroughStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.deferStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeferStmt([NotNull] GoParser.DeferStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.deferStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeferStmt([NotNull] GoParser.DeferStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] GoParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] GoParser.IfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.switchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStmt([NotNull] GoParser.SwitchStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.switchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStmt([NotNull] GoParser.SwitchStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.exprSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprSwitchStmt([NotNull] GoParser.ExprSwitchStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.exprSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprSwitchStmt([NotNull] GoParser.ExprSwitchStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.exprCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprCaseClause([NotNull] GoParser.ExprCaseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.exprCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprCaseClause([NotNull] GoParser.ExprCaseClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.exprSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprSwitchCase([NotNull] GoParser.ExprSwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.exprSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprSwitchCase([NotNull] GoParser.ExprSwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSwitchStmt([NotNull] GoParser.TypeSwitchStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSwitchStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSwitchStmt([NotNull] GoParser.TypeSwitchStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSwitchGuard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSwitchGuard([NotNull] GoParser.TypeSwitchGuardContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSwitchGuard"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSwitchGuard([NotNull] GoParser.TypeSwitchGuardContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeCaseClause([NotNull] GoParser.TypeCaseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeCaseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeCaseClause([NotNull] GoParser.TypeCaseClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSwitchCase([NotNull] GoParser.TypeSwitchCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeSwitchCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSwitchCase([NotNull] GoParser.TypeSwitchCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeList([NotNull] GoParser.TypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeList([NotNull] GoParser.TypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.selectStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectStmt([NotNull] GoParser.SelectStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.selectStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectStmt([NotNull] GoParser.SelectStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.commClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommClause([NotNull] GoParser.CommClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.commClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommClause([NotNull] GoParser.CommClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.commCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommCase([NotNull] GoParser.CommCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.commCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommCase([NotNull] GoParser.CommCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.recvStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecvStmt([NotNull] GoParser.RecvStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.recvStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecvStmt([NotNull] GoParser.RecvStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStmt([NotNull] GoParser.ForStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStmt([NotNull] GoParser.ForStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.forClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForClause([NotNull] GoParser.ForClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.forClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForClause([NotNull] GoParser.ForClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeClause([NotNull] GoParser.RangeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeClause([NotNull] GoParser.RangeClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.goStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoStmt([NotNull] GoParser.GoStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.goStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoStmt([NotNull] GoParser.GoStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_([NotNull] GoParser.Type_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.type_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_([NotNull] GoParser.Type_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeName([NotNull] GoParser.TypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeName([NotNull] GoParser.TypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeLit([NotNull] GoParser.TypeLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeLit([NotNull] GoParser.TypeLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayType([NotNull] GoParser.ArrayTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.arrayType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayType([NotNull] GoParser.ArrayTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.arrayLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLength([NotNull] GoParser.ArrayLengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.arrayLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLength([NotNull] GoParser.ArrayLengthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.elementType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementType([NotNull] GoParser.ElementTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.elementType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementType([NotNull] GoParser.ElementTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerType([NotNull] GoParser.PointerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.pointerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerType([NotNull] GoParser.PointerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.interfaceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceType([NotNull] GoParser.InterfaceTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.interfaceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceType([NotNull] GoParser.InterfaceTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.sliceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceType([NotNull] GoParser.SliceTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.sliceType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceType([NotNull] GoParser.SliceTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.mapType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMapType([NotNull] GoParser.MapTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.mapType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMapType([NotNull] GoParser.MapTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.channelType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChannelType([NotNull] GoParser.ChannelTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.channelType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChannelType([NotNull] GoParser.ChannelTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.methodSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodSpec([NotNull] GoParser.MethodSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.methodSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodSpec([NotNull] GoParser.MethodSpecContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionType([NotNull] GoParser.FunctionTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.functionType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionType([NotNull] GoParser.FunctionTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignature([NotNull] GoParser.SignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignature([NotNull] GoParser.SignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.result"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResult([NotNull] GoParser.ResultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.result"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResult([NotNull] GoParser.ResultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] GoParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] GoParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.parameterDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterDecl([NotNull] GoParser.ParameterDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.parameterDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterDecl([NotNull] GoParser.ParameterDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] GoParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] GoParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpr([NotNull] GoParser.PrimaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.primaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpr([NotNull] GoParser.PrimaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] GoParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] GoParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversion([NotNull] GoParser.ConversionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.conversion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversion([NotNull] GoParser.ConversionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperand([NotNull] GoParser.OperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.operand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperand([NotNull] GoParser.OperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] GoParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] GoParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.basicLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasicLit([NotNull] GoParser.BasicLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.basicLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasicLit([NotNull] GoParser.BasicLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.integer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInteger([NotNull] GoParser.IntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.integer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInteger([NotNull] GoParser.IntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.operandName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperandName([NotNull] GoParser.OperandNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.operandName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperandName([NotNull] GoParser.OperandNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.qualifiedIdent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedIdent([NotNull] GoParser.QualifiedIdentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.qualifiedIdent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedIdent([NotNull] GoParser.QualifiedIdentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.compositeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompositeLit([NotNull] GoParser.CompositeLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.compositeLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompositeLit([NotNull] GoParser.CompositeLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.literalType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralType([NotNull] GoParser.LiteralTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.literalType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralType([NotNull] GoParser.LiteralTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.literalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralValue([NotNull] GoParser.LiteralValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.literalValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralValue([NotNull] GoParser.LiteralValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementList([NotNull] GoParser.ElementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.elementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementList([NotNull] GoParser.ElementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.keyedElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyedElement([NotNull] GoParser.KeyedElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.keyedElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyedElement([NotNull] GoParser.KeyedElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKey([NotNull] GoParser.KeyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.key"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKey([NotNull] GoParser.KeyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement([NotNull] GoParser.ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement([NotNull] GoParser.ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.structType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructType([NotNull] GoParser.StructTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.structType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructType([NotNull] GoParser.StructTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.fieldDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldDecl([NotNull] GoParser.FieldDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.fieldDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldDecl([NotNull] GoParser.FieldDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.string_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_([NotNull] GoParser.String_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.string_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_([NotNull] GoParser.String_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.anonymousField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousField([NotNull] GoParser.AnonymousFieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.anonymousField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousField([NotNull] GoParser.AnonymousFieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.functionLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionLit([NotNull] GoParser.FunctionLitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.functionLit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionLit([NotNull] GoParser.FunctionLitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex([NotNull] GoParser.IndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.index"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex([NotNull] GoParser.IndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.slice_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSlice_([NotNull] GoParser.Slice_Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.slice_"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSlice_([NotNull] GoParser.Slice_Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.typeAssertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAssertion([NotNull] GoParser.TypeAssertionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.typeAssertion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAssertion([NotNull] GoParser.TypeAssertionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] GoParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] GoParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.methodExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodExpr([NotNull] GoParser.MethodExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.methodExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodExpr([NotNull] GoParser.MethodExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.receiverType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReceiverType([NotNull] GoParser.ReceiverTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.receiverType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReceiverType([NotNull] GoParser.ReceiverTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GoParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEos([NotNull] GoParser.EosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GoParser.eos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEos([NotNull] GoParser.EosContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
