//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generated on 2022 November 20 18:37:03 UTC
// </auto-generated>
//---------------------------------------------------------
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using static go.builtin;
using fmt = go.fmt_package;
using sort = go.sort_package;

#nullable enable

namespace go
{
    public static partial class main_package
    {
        [GeneratedCode("go2cs", "0.1.2.0")]
        public partial struct Person
        {
            // Constructors
            public Person(NilType _)
            {
                this.Name = default;
                this.Age = default;
                this.ShoeSize = default;
            }

            public Person(@string Name = default, nint Age = default, float ShoeSize = default)
            {
                this.Name = Name;
                this.Age = Age;
                this.ShoeSize = ShoeSize;
            }

            // Enable comparisons between nil and Person struct
            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(Person value, NilType nil) => value.Equals(default(Person));

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(Person value, NilType nil) => !(value == nil);

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator ==(NilType nil, Person value) => value == nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static bool operator !=(NilType nil, Person value) => value != nil;

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            public static implicit operator Person(NilType nil) => default(Person);

            public override string ToString() => string.Concat("{", string.Join(" ", new[]
            {
                Name.ToString(),
                Age.ToString(),
                ShoeSize.ToString(),
            }), "}");
        }

        [GeneratedCode("go2cs", "0.1.2.0")]
        public static Person Person_cast(dynamic value)
        {
            return new Person(value.Name, value.Age, value.ShoeSize);
        }
    }
}