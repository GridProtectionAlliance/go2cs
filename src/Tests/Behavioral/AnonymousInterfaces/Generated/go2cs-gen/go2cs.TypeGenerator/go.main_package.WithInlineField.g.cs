//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;

#nullable enable

namespace go;

public static partial class main_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct WithInlineField
    {
        // Promoted Struct References
        // -- WithInlineField has no promoted structs

        // Field References
        public static ref global::go.main_package.WithInlineField_R ᏑR(ref WithInlineField instance) => ref instance.R;
        
        // Constructors
        public WithInlineField(NilType _)
        {
            this.R = default!;
        }

        public WithInlineField(global::go.main_package.WithInlineField_R R = default!)
        {
            this.R = R;
        }
        
        // Handle comparisons between struct 'WithInlineField' instances
        public bool Equals(WithInlineField other) =>
            R == other.R;
        
        public override bool Equals(object? obj) => obj is WithInlineField other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            R);
        
        public static bool operator ==(WithInlineField left, WithInlineField right) => left.Equals(right);
        
        public static bool operator !=(WithInlineField left, WithInlineField right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'WithInlineField'
        public static bool operator ==(WithInlineField value, NilType nil) => value.Equals(default(WithInlineField));

        public static bool operator !=(WithInlineField value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, WithInlineField value) => value == nil;

        public static bool operator !=(NilType nil, WithInlineField value) => value != nil;

        public static implicit operator WithInlineField(NilType nil) => default(WithInlineField);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            R?.ToString() ?? "<nil>"
        ]), "}");
    }
}
