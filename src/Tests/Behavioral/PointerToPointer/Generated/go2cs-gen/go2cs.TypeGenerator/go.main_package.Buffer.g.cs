//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;

#nullable enable

namespace go;

public static partial class main_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct Buffer
    {
        // Promoted Struct References
        // -- Buffer has no promoted structs

        // Field References
        internal static ref global::go.slice<byte> Ꮡbuf(ref Buffer instance) => ref instance.buf;
        internal static ref nint Ꮡoff(ref Buffer instance) => ref instance.off;
        internal static ref sbyte ᏑlastRead(ref Buffer instance) => ref instance.lastRead;
        
        // Constructors
        public Buffer(NilType _)
        {
            this.buf = default!;
            this.off = default!;
            this.lastRead = default!;
        }


        internal Buffer(global::go.slice<byte> buf = default!, nint off = default!, sbyte lastRead = default!)
        {
            this.buf = buf;
            this.off = off;
            this.lastRead = lastRead;
        }
        
        // Handle comparisons between struct 'Buffer' instances
        public bool Equals(Buffer other) =>
            buf == other.buf &&
            off == other.off &&
            lastRead == other.lastRead;
        
        public override bool Equals(object? obj) => obj is Buffer other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            buf,
            off,
            lastRead);
        
        public static bool operator ==(Buffer left, Buffer right) => left.Equals(right);
        
        public static bool operator !=(Buffer left, Buffer right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'Buffer'
        public static bool operator ==(Buffer value, NilType nil) => value.Equals(default(Buffer));

        public static bool operator !=(Buffer value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, Buffer value) => value == nil;

        public static bool operator !=(NilType nil, Buffer value) => value != nil;

        public static implicit operator Buffer(NilType nil) => default(Buffer);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            buf.ToString(),
            off.ToString(),
            lastRead.ToString()
        ]), "}");
    }
}
