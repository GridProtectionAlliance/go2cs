//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System;

#nullable enable

namespace go;

public static partial class main_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    internal partial struct main_MyBool
    {
        // Promoted Struct References
        // -- main_MyBool has no promoted structs

        // Field References
        // -- main_MyBool has no defined fields
        
        // Constructors
        public main_MyBool(NilType _)
        {
        }

        public main_MyBool()
        {
        }
        
        // Handle comparisons between struct 'main_MyBool' instances
        public bool Equals(main_MyBool other) =>
            true;
        
        public override bool Equals(object? obj) => obj is main_MyBool other && Equals(other);
        
        public override int GetHashCode() => base.GetHashCode();
        
        public static bool operator ==(main_MyBool left, main_MyBool right) => left.Equals(right);
        
        public static bool operator !=(main_MyBool left, main_MyBool right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'main_MyBool'
        public static bool operator ==(main_MyBool value, NilType nil) => value.Equals(default(main_MyBool));

        public static bool operator !=(main_MyBool value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, main_MyBool value) => value == nil;

        public static bool operator !=(NilType nil, main_MyBool value) => value != nil;

        public static implicit operator main_MyBool(NilType nil) => default(main_MyBool);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            ""
        ]), "}");
    }
}
