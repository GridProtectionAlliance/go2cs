//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;

#nullable enable

namespace go;

public static partial class main_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    public partial struct Uncommon_u
    {
        // Promoted Struct References
        private readonly ж<global::go.main_package.PtrType> ᏑʗPtrType;

        // Promoted Struct Accessors
        public partial ref global::go.main_package.PtrType PtrType => ref ᏑʗPtrType.val;

        // Promoted Struct Field Accessors
        public ref global::go.main_package.Type Type => ref PtrType.Type;
        public ref global::go.ж<global::go.main_package.Type> Elem => ref PtrType.Elem;

        // Promoted Struct Field Accessor References
        public static ref global::go.main_package.Type ᏑType(ref Uncommon_u instance) => ref instance.PtrType.Type;
        public static ref global::go.ж<global::go.main_package.Type> ᏑElem(ref Uncommon_u instance) => ref instance.PtrType.Elem;

        // Field References
        public static ref global::go.main_package.PtrType ᏑPtrType(ref Uncommon_u instance) => ref instance.PtrType;
        public static ref global::go.main_package.UncommonType Ꮡu(ref Uncommon_u instance) => ref instance.u;
        
        // Constructors
        public Uncommon_u(NilType _)
        {
            ᏑʗPtrType = new ж<global::go.main_package.PtrType>(new global::go.main_package.PtrType(nil));
            this.u = default!;
        }

        public Uncommon_u(global::go.main_package.PtrType PtrType = default!)
        {
            ᏑʗPtrType = new ж<global::go.main_package.PtrType>(PtrType);
        }

        internal Uncommon_u(global::go.main_package.PtrType PtrType = default!, global::go.main_package.UncommonType u = default!)
        {
            ᏑʗPtrType = new ж<global::go.main_package.PtrType>(PtrType);
            this.u = u;
        }
        
        // Handle comparisons between struct 'Uncommon_u' instances
        public bool Equals(Uncommon_u other) =>
            PtrType == other.PtrType &&
            u == other.u;
        
        public override bool Equals(object? obj) => obj is Uncommon_u other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            PtrType,
            u);
        
        public static bool operator ==(Uncommon_u left, Uncommon_u right) => left.Equals(right);
        
        public static bool operator !=(Uncommon_u left, Uncommon_u right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'Uncommon_u'
        public static bool operator ==(Uncommon_u value, NilType nil) => value.Equals(default(Uncommon_u));

        public static bool operator !=(Uncommon_u value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, Uncommon_u value) => value == nil;

        public static bool operator !=(NilType nil, Uncommon_u value) => value != nil;

        public static implicit operator Uncommon_u(NilType nil) => default(Uncommon_u);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            PtrType.ToString(),
            u.ToString()
        ]), "}");
    }

    // Promoted Struct Receivers
}
