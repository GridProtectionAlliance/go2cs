//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;

#nullable enable

namespace go;

public static partial class main_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    internal partial struct data
    {
        // Promoted Struct References
        // -- data has no promoted structs

        // Field References
        public static ref global::go.@string Ꮡname(ref data instance) => ref instance.name;
        
        // Constructors
        public data(NilType _)
        {
            this.name = default!;
        }

        public data(global::go.@string name = default!)
        {
            this.name = name;
        }
        
        // Enable comparisons between data struct types
        public bool Equals(data other)
        {
            return 
                name == other.name;
        }
        
        public override bool Equals(object? obj)
        {
            return obj is data other && Equals(other);
        }
        
        public override int GetHashCode()
        {
            return HashCode.Combine(name);
        }
        
        public static bool operator ==(data left, data right) => left.Equals(right);
        
        public static bool operator !=(data left, data right) => !(left == right);

        // Enable comparisons between nil and data struct
        public static bool operator ==(data value, NilType nil) => value.Equals(default(data));

        public static bool operator !=(data value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, data value) => value == nil;

        public static bool operator !=(NilType nil, data value) => value != nil;

        public static implicit operator data(NilType nil) => default(data);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            name.ToString()
        ]), "}");
    }
}
