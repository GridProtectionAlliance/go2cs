//---------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool. Changes to this
//     file may cause incorrect behavior and will be lost
//     if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections;
using System.Collections.Generic;

#nullable enable

namespace go;

public static partial class main_package
{
    [GeneratedCode("go2cs-gen", "0.1.4")]
    internal partial struct main_typeᴛ2
    {
        // Promoted Struct References
        // -- main_typeᴛ2 has no promoted structs

        // Field References
        public static ref global::go.@string ᏑName(ref main_typeᴛ2 instance) => ref instance.Name;
        public static ref nint ᏑAge(ref main_typeᴛ2 instance) => ref instance.Age;
        
        // Constructors
        public main_typeᴛ2(NilType _)
        {
            this.Name = default!;
            this.Age = default!;
        }

        public main_typeᴛ2(global::go.@string Name = default!, nint Age = default!)
        {
            this.Name = Name;
            this.Age = Age;
        }
        
        // Handle comparisons between struct 'main_typeᴛ2' instances
        public bool Equals(main_typeᴛ2 other) =>
            Name == other.Name &&
            Age == other.Age;
        
        public override bool Equals(object? obj) => obj is main_typeᴛ2 other && Equals(other);
        
        public override int GetHashCode() => runtime.HashCode.Combine(
            Name,
            Age);
        
        public static bool operator ==(main_typeᴛ2 left, main_typeᴛ2 right) => left.Equals(right);
        
        public static bool operator !=(main_typeᴛ2 left, main_typeᴛ2 right) => !(left == right);

        // Handle comparisons between 'nil' and struct 'main_typeᴛ2'
        public static bool operator ==(main_typeᴛ2 value, NilType nil) => value.Equals(default(main_typeᴛ2));

        public static bool operator !=(main_typeᴛ2 value, NilType nil) => !(value == nil);

        public static bool operator ==(NilType nil, main_typeᴛ2 value) => value == nil;

        public static bool operator !=(NilType nil, main_typeᴛ2 value) => value != nil;

        public static implicit operator main_typeᴛ2(NilType nil) => default(main_typeᴛ2);

        public override string ToString() => string.Concat("{", string.Join(" ",
        [
            Name.ToString(),
            Age.ToString()
        ]), "}");
    }
}
